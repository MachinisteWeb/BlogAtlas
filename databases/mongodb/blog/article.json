{ "_id" : { "$oid" : "530afe7a31a27642989254ec" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48b9" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "530ef6a6789c1a55e4fde0af" } ], "content" : "En CSS, tout comme avec le librairie JavaScript [jQuery], il faut _utiliser des sélecteurs_ pour _cibler une balise_ ou un ensemble de balise :\n\n- on utilise le **sélecteur #** si l'on désire accéder à l'élément par la valeur de son _attribut id_ ou,\n- on utilise le **sélecteur .** si on désire accéder à l'élément par une des valeurs de son _attribut class_.\n\nEn combinant les deux sélecteurs précédent on peut sélectionner une balise par son _attribut id_ **et** son _attribut class_.\n\nOn peut donc cibler la _balise HTML_ suivante :\n\n```html\n<div id=\"main\" class=\"example\"></div>\n```\n\navec le _sélecteur CSS_ suivant :\n\n```css\ndiv#main.example { /* ... */ }\n```\n\n\n\n\n\n## Comment sélectionner l'id d'une balise si celui-ci contient un point ? ##\n\nIl n'est a première vue pas possible de sélectionner une balise par la valeur de son _attribut id_ si celui-ci contient un point.\n\n\n\n\n> ### Cibler une balise HTML par son id s'il contient un point est impossible ###\n\n> _`Impossible de faire :`_ On ne peut pas cibler la _balise HTML_ suivante :\n\n> ```html\n<div id=\"main.example\">...</div>\n```\n\n> avec le _sélecteur CSS_ suivant :\n\n> ```css\ndiv#main.example { /* ... */ }\n```\n\n> parce que la partie située après le point, à savoir <em>example</em>, est interprétée non pas comme la suite du nom de l'id, mais comme une valeur d'attribut class.\n\n\n\n\n\n## La solution pour les id contenant des points sont le \\ et le \\\\\\ ##\n\nLa solution pour cibler un id ou une classe contenant le caractère `.` est simple, il suffit de l'**échapper avec le caractère \\** en CSS et **les caractères \\\\\\** avec [jQuery].\n\n\n\n\n> ### Cibler une balise HTML par son id s'il contient un point est possible avec le BackSlash ###\n\n> **`Il faut faire :`** On peut cibler la _balise HTML_ suivante,\n\n> ```html\n<div id=\"main.example\">...</div>\n```\n\n> avec le _sélecteur CSS_ suivant :\n\n> ```css\ndiv#main\\.example { /* ... */ }\n```\n\n> ou le _sélecteur [jQuery]_ suivant :\n\n> ```javascript\n$(\"div#main\\\\.example\");\n```\n\nNotez bien qu'en CSS on utilise un BackSlash _\\_ alors qu'avec jQuery il faut également échapper le caractère échappement d'où deux BackSlash** \\\\\\**.\n\n  [jQuery]: http://jquery.com/ (jQuery: The Write Less, Do More, JavaScript Library)", "dates" : { "published" : { "$date" : 1355832720000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Comment <span>cibler</span> un <span>id</span> qui contient un point", "urn" : "comment-cibler-un-id-qui-contient-un-point" }
{ "_id" : { "$oid" : "530f4a3e6f56ae3b67f67204" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48b7" }, { "$oid" : "5310456355dfd5f7698d48b6" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "530cc2f27188099a66e9bcec" } ], "content" : "Beaucoup de design demande que les bordures des cadres de contenu soient des images pour avoir des bords aux motifs complexes ou faire des effets d'ombre. Bien qu'il existe des propriétés CSS3 qui gèrent cela à présent, la compatibilité sur tous les navigateurs ne sera possible que si ceci est réalisé avec du CSS standard et du HTML.\n\n\n\n\n\n\n## Avec un tableau ou la mauvaise façon de faire ##\n\nL'objet HTML presque exclusivement utilisé pour réaliser cela est la balise `<table>` et ses enfants `<tr>` et `<td>`. C'est l'un des rares objets permettant dans sa configuration brute de gérer dynamiquement un cadre qui s'adapte au contenu qu'il contient sans CSS.\n\nCependant, l'usage premier d'une balise `<table>` est d'afficher des données sous forme de tableau **et ne doit** servir qu'à ça.\n\n> Donc se servir de la balise `<table>` pour faire du positionnement de contenu c'est mal et se servir de la balise `<table>` pour faire des cadres en image c'est mal.\n\nUn exemple de ce qui certes fonctionne mais qui n'ai pas à faire ci-dessous :\n\n\n\n\n> ### On ne doit jamais utiliser la balise `<table>` pour autre chose que du contenu de type donnée ###\n\n> _`Mauvaise façon :`_ Avec ce type de structure HTML :\n\n> ```html\n<table class=\"global\">\n    <thead>\n        <tr>\n            <td class=\"top-left\"></td>\n            <td class=\"top\"></td>\n            <td class=\"top-right\"></td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\"></td>\n            <td class=\"content\">{Contenu réel}</td>\n            <td class=\"right\"></td>\n        </tr>\n    </tbody>\n    <tfoot>\n        <tr>\n            <td class=\"bottom-left\"></td>\n            <td class=\"bottom\"></td>\n            <td class=\"bottom-right\"></td>\n        </tr>\n    </tfoot>\n</table>\n```\n\n> ça marche effectivement en collant :\n\n> - des images de type coin en `background-image` des classes `top-left`, `top-right`, `bottom-left`, `bottom-right`,\n> - des images qui se répètent en `repeat-x_`des classes `top` et `bottom` et\n> - des images qui se répètent en `repeat-y` des classes `left` et `right`.\n\n\n\n\n\n## Avec une `div` ou la bonne pratique ##\n\n_Mais alors comment réaliser des bordures en images autour d'un contenu ?_\n\nPar n'importe quel autre moyen possible et imaginable ! Les seuls contraintes seront la compatibilité inter-navigateur.\n\nSachez qu'il est tout à fait possible de faire remplir ce rôle par des `<div>` de façon aussi dynamique que le tableau `<table>`. Les `<div>` divisent l'espace d'affichage et permettent au CSS d'habiller le tout.\n\nEt comme je suis de bonne humeur, je vais livrer ici ma technique qui est compatible tout navigateur ! Quelle chance ;)\n\n\n\n\n> ### Une bonne manière de créer des cadres dynamiques en image sans tableau ###\n\n> **`Bonne façon :`** En utilisant cette structure HTML :\n\n> ```html\n<div class=\"global-width\">\n    <div class=\"top-right\">\n        <div class=\"bottom-right\">\n            <div class=\"bottom-left\">\n                <div class=\"top-left\">\n                    <div class=\"top\"></div>\n                    <div class=\"left\">\n                        <div class=\"right\">\n                            <div class=\"content-height\">\n                                {Contenu réel}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"bottom\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n```\n\n> il suffit d'associer :\n\n> - des images de type coin en background-image des classes `top-left`, `top-right`, `bottom-left`, `bottom-right`,\n> - des images qui se répètent en `repeat-x` des classes `top` et `bottom` et\n> - des images qui se répètent en `repeat-y` des classes `left` et `right`.\n\n> La largeur du tableau ce paramètre avec la classe `global-width` et sa hauteur avec la classe `content-height`.\n\n> > **Attention :** La largeur se calcule en incluant la largeur des bords `left` et `right` alors que la hauteur se calcule en excluant la hauteur des bords `top` et `bottom`.\n\n> Voici un exemple de CSS associé pour notre tableau :\n\n> ```css\ndiv.global-width {\n    width: auto;\n}\n\n> div.content-height {\n    height: auto;\n}\n\n> div.top {\n    margin-left: 23px;\n    margin-right: 23px;\n    height: 23px;\n    background-image: url('top.png');\n    background-repeat: repeat-x;\n}\n\n> div.top-right {\n    background-image: url('top-right.png');\n    background-position: top right;\n    background-repeat: no-repeat;\n}\n\n> div.right {\n    padding-right: 23px;\n    background-image: url('right.png');\n    background-position: right;\n    background-repeat: repeat-y;\n}\n\n> div.bottom-right {\n    background-image: url('bottom-right.png');\n    background-position: bottom right;\n    background-repeat: no-repeat;\n}\n\n> div.bottom {\n    margin-left: 23px;\n    margin-right: 23px;\n    height: 23px;\n    background-image: url('bottom.png');\n    background-repeat: repeat-x;\n}\n\n> div.bottom-left {\n    background-image: url('bottom-left.png');\n    background-position: bottom left;\n    background-repeat: no-repeat;\n}\n\n> div.left {\n    padding-left: 23px;\n    background-image: url('left.png');\n    background-repeat: repeat-y;\n}\n\n> div.top-left {\n    background-image: url('top-left.png');\n    background-repeat: no-repeat;\n}\n```\n\n\n\n\n\n## Autres modèles avec des `<div>` ##\n\nSi vous avez d'autres modèles n'hésitez pas à les laisser dans les commentaires, je les ajouterai ici.\n\n\n\n\n### Structure en semi-tableau ###\n\nVoici une alternative qui vous semble peut-être plus naturelle. Cependant sous **IE7** et **IE8** il y a un décalage de pixel impossible à enlever justement au niveau des flottants,.  À réserver donc si vous ne supportez pas ces navigateurs.\n\n```html\n<div class=\"global-width\">\n    <div>\n        <div class=\"top-left\"></div>\n        <div class=\"top-right\"></div>\n        <div class=\"top\"></div>\n    </div>\n    <div class=\"left\">\n        <div class=\"right\">\n            <div class=\"content-height\">\n                {Contenu réel}\n            </div>\n        </div>\n    </div>\n    <div>\n        <div class=\"bottom-left\"></div>\n        <div class=\"bottom-right\"></div>\n        <div class=\"bottom\"></div>\n    </div>\n</div>\n```\n\nen appliquant :\n\n- à `top-left`, `bottom-left` un `float: left;`,\n- à `top-right`, `bottom-right` un `float: right;` et\n- à `top` et `bottom` un `margin-left: <largeur bord gauche>;` et `margin-right: <largeur bord droit>;`.", "dates" : { "published" : { "$date" : 1358064120000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Faire des <span>bordures</span> en image sans la balise <span>Table</span>", "urn" : "faire-des-bordures-en-image-sans-la-balise-table" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71a4" }, "cache" : { "comment" : { "number" : 1 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48c4" }, { "$oid" : "5310456355dfd5f7698d48bc" } ], "content" : "Vous connaissez tous l'instruction `switch` en _JavaScript_ ; c'est une bonne alternative à la suite d'instruction `if, else if, else if, else if... else` dans le cas de choix multiples. Et si vous vous en débarrassiez pour quelque chose de plus ~~simple~~ concis ?\n\n\n\n\n\n## Les cas d'école ##\n\n\n\n\n### if, else if, encore else if, toujours else if... et else ###\n\nTout d'abord, rappelons la façon la plus ~~simple~~ connue de faire un choix parmi plusieurs valeurs :\n\n```javascript\n// On a la variable \"character\" à tester.\n\nvar description /* = \"Information obtenue d'une input, d'une variable GET/POST ou d'un cookie etc.\" */;\n\nif (character === \"edward\") {\n    description = \"Edward Elric fait 1m57 + 6cm de mèche + 2 cm de talon.\";\n} else if (character === \"alphonse\") {\n    description = \"Alphonse Elric change de voix durant FMA Brotherhood.\";\n} else if (character === \"winry\") {\n    description = \"Winry Rockbell est secrètement amoureuse de R2D2.\";\n} else {\n    description = \"Y a pas mal de personnage.\";\n}\n\n// On récupère la valeur de description.\n```\n\n\n\n\n### Tu as trop de choix, utilise un Switch ! ###\n\nAvec l'instruction `switch`, on peut également produire le même résultat. Et oui, paraît que c'est plus rapide, ça utilise moins de caractères (346 au lieu de 352 !), c'est mieux de faire ça (on me l'a dit), ça sauve plus de chatons prématurés, bref c'est formidable !\n\n```javascript\n// On a encore la variable \"character\" à tester.\n\nvar description /* = \"Information obtenue d'une input, d'une variable GET/POST ou d'un cookie etc...\" */;\n\nswitch (character) {\n    case \"edward\":\n        description = \"Edward Elric fait 1m57 + 6cm de mèche + 2 cm de talon.\";\n        break;\n    case \"alphonse\":\n        description = \"Alphonse Elric change de voix durant FMA Brotherhood.\";\n        break;\n    case \"winry\":\n        description = \"Winry Rockbell est secrètement amoureuse de R2D2.\";\n        break;\n    default : \n        description = \"Y a pas mal de personnage.\";\n}\n\n// On récupère encore la valeur de description.\n```\n\n_Simplement, il y a quelques petites choses qui m'ennuient avec le `switch`_. Non pas que ce soit une mauvaise idée de l'utiliser, mais j'ai du mal avec sa syntaxe (bien que je m'y sois fait) et oublier le mot clé `break` vous envoie droit au bûché. C'est vrai, dans la majorité des cas il est nécessaire : alors ça aurait été sympa qu'il soit implicite, quitte à utiliser un mot-clé pour simuler le fonctionnement d'un `switch` sans `break`.</p>\n\n\n\n\n\n## Ce problème fait l'Objet d'une astuce ##\n\n\n\n\n#### L'alternative au Switch, (et au If) ? ####\n\nLes deux cas ci-dessus peuvent être remplacés élégamment par un parcourt de valeur dans un **litérale JSON** ! Voyez plutôt :\n\n```javascript\n// On a toujours la variable \"character\" à tester.\nvar description /* = \"Information obtenue d'une input, d'une variable GET/POST ou d'un cookie etc...\" */, \n    descriptions;\n\n/* J'associe à une clé, une valeur. Une sorte de dictionnaire. */\ndescriptions = {\n    \"edward\" : \"Edward Elric fait 1m57 + 6cm de mèche + 2 cm de talon.\",\n    \"alphonse\" : \"Alphonse Elric change de voix durant FMA Brotherhood.\",\n    \"winry\" : \"Winry Rockbell est secrètement amoureuse de R2D2.\",\n    \"other\" : \"Y a pas mal de personnage.\"\n}\n\n/* Je cherche la valeur clé dans mon dictionnaire. Si elle n'est pas trouvé,\n'descriptions[character]' renvoi 'undefinded' qui est testé comme 'false' et on prend alors la valeur par défaut 'other'. */\ndescription = descriptions[character] || descriptions[\"other\"];\n\n// On récupère toujours la valeur de description.\n```\n\nCela a l'avantage de séparer la logique (dernière ligne), des données (l'objet JSON) ; ce qui n'est pas le cas de nos précédents exemples.\n\n\n\n\n### Et pour plusieurs instructions ? ###\n\nRien ne vous empêche de vous créer ce genre de \"Switch\" avec un Objet qui fait un calcule avant retour :\n\n```javascript\n// On a toujours la variable \"character\" à tester.\nvar description /* = \"Information obtenue d'une input, d'une variable GET/POST ou d'un cookie etc...\" */, \n    descriptions;\n\ndescriptions = {\n    \"edward\" : function () {\n        // Trucs un peu plus conséquents.\n        return; // Le résultat. \n    },\n    \"alphonse\" : function () {\n        // Trucs un peu plus conséquents.\n        return; // Le résultat. \n    },\n    \"winry\" : function () {\n        // Trucs un peu plus conséquents.\n        return; // Le résultat. \n    },\n    \"other\" : function () {\n        // Trucs un peu plus conséquents.\n        return; // Le résultat. \n    }\n}\n\n// On choisit le bon calcul/résultat à obtenir.\ndescription = descriptions[character] || descriptions[\"other\"];\n\n// Et on l'exécute.\ndescription();\n```\n\nVous pouvez également préparer des traitements différents en fonction de la variable.\n\n```javascript\n// On a toujours la variable \"character\" à tester.\nvar description /* = \"Information obtenue d'une input, d'une variable GET/POST ou d'un cookie etc...\" */, \n    descriptions = {};\n\ndescriptions[\"edward\"] = function () {\n    // Traitement de controle ici.\n};\n\ndescriptions[\"winry\"] = function () {\n    // Traitement de controle ici.\n};\n\ndescriptions[\"edward\"] = function () {\n    // Traitement de controle ici.\n};\n\ndescriptions[\"other\"] = function () {\n    // Traitement de controle ici.\n};\n\n// On choisit la bonne fonction à exécuter.\ndescription = descriptions[character] || descriptions[\"other\"];\n\n// Et on l'exécute.\ndescription();\n```\n\n\n\n\n\n## Le(s) mot(s) de la fin ##\n\nJe ne me risquerais pas à dire que c'est une bonne pratique, mais c'est au moins une bonne astuce que j'utilise régulièrement. Qu'en pensez vous ?", "dates" : { "published" : { "$date" : 1364035440000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Une <span>alternative</span> au <span>Switch</span>, c'est possible en <span>JavaScript</span>", "urn" : "une-alternative-au-switch-c-est-possible-en-javascript" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71a7" }, "cache" : { "comment" : { "number" : 3 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b9" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48c6" }, { "$oid" : "5310456355dfd5f7698d48c1" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48c2" }, { "$oid" : "5310456355dfd5f7698d48c0" } ], "content" : "<p>Alors que certains s'en réjouissent et que d'autres le craignent, le support des vieux navigateurs tel que Internet Explorer 6, Internet Explorer 7 et Internet Explorer 8 est terminé pour jQuery...</p>\r\n\r\n<p>...et cela dès aujourd'hui puisque jQuery 2.0 est arrivé. Alignons quelques faits pour aider à juger l'utilité de la chose.</p>\r\n\r\n<h2>La part des navigateurs en Mars 2013</h2>\r\n\r\n<p>Celle-ci concerne le monde entier :</p>\r\n\r\n<ul>\r\n\t<li>Chrome fait <span class=\"highlighting\">38%</span></li>\r\n\t<li>Firefox fait <span class=\"highlighting\">20%</span></li> \r\n\t<li>Safari fait <span class=\"highlighting\">8%</span></li>\r\n\t<li>Opera fait <span class=\"highlighting\">1%</span></li>\r\n\t<li>IE10 fait <span class=\"highlighting\">2%</span></li>\r\n\t<li>IE9 fait <span class=\"highlighting\">16%</span></li>\r\n\t<li>IE8 fait <span class=\"highlighting\">10%</span></li>\r\n\t<li>IE7 fait <span class=\"highlighting\">0.6%</span></li>\r\n\t<li>IE6 fait <span class=\"highlighting\">0.0...%</span></li>\r\n</ul>\r\n\r\n<p class=\"eye-catching\">\r\n\tSource : <a href=\"http://gs.statcounter.com/#browser_version_partially_combined-ww-monthly-201303-201303-bar\" title=\"Source de la part des navigateurs en Mars 2013\">StatCounter.com</a>\r\n</p>\r\n\r\n<h2>Le support de jQuery</h2>\r\n\r\n<h3>Support et poids de jQuery 1.9.1</h3>\r\n\r\n<p>La version 1.9.1 de jQuery supporte IE6/7/8/9/10, Chrome, Firefox, Safari, Opera. Elle supporte donc <span class=\"highlighting\">95.6%</span> des navigateurs (et surement d'autres).</p>\r\n<p>Elle pèse en production <span class=\"highlighting\">90.4kB</span>.</p>\r\n\r\n<p class=\"eye-catching\">\r\n\tSource : <a href=\"http://code.jquery.com/jquery-1.9.1.min.js\" title=\"Source de la production jQuery1.9.1\">jquery-1.9.1.min.js</a>\r\n</p>\r\n\r\n<h3>Support et poids de jQuery 2.0</h3>\r\n\r\n<p>La version 2.0 supporte IE9/10, Chrome, Firefox, Safari, Opera.\r\nElle supporte donc <span class=\"highlighting\">85%</span> des navigateurs (et surement d'autres en moins).</p>\r\n<p>Elle pèse en production <span class=\"highlighting\">81.1kB</span>.</p>\r\n\r\n<p class=\"eye-catching\">\r\n\tSource : <a href=\"http://code.jquery.com/jquery-2.0.0.min.js\" title=\"Source de la production jQuery2.0\">jquery-2.0.0.min.js</a>\r\n</p>\r\n\r\n<h2>Conparaison poids/support de jQuery 1.9.1 et 2.0</h2>\r\n\r\n<p>La librairie jQuery 2.0 de production est <span class=\"highlighting\">9%</span> (et pas 12%) plus légère que jQuery 1.9.1</p>\r\n<p>La librairie jQuery 2.0 supporte <span class=\"highlighting\">9%</span> d'utilisateurs en moins que jQuery 1.9.1</p>\r\n\r\n<h2>Que faut-il en penser ?</h2>\r\n\r\n<p>Pour ma part, cela soulève trois questions :</p>\r\n\r\n<ul class=\"highlighting\">\r\n\t<li>N'est-il pas encore tôt pour balayer le support IE8 ? (10% des navigateurs)</li>\r\n\t<li>N'est-il pas tant d'arrêter le support IE6 et IE7 ? (moins de 1% des navigateurs)</li>\r\n\t<li>Supporter 9% d'utilisateurs en moins pour être 9% moins lourds est-il justifié ?</li>\r\n</ul>\r\n\r\n<p>Et vous ? Que pensez-vous de l'arrêt du support IE6/7/8 de jQuery ?</p>", "dates" : { "published" : "2013-04-20 11:49:00", "updated" : [ "2013-04-20 11:49:00" ] }, "title" : "<span>jQuery</span> 2.0 ne supporte plus <span>IE6, IE7 et IE8</span>", "urn" : "jquery-2-ne-supporte-plus-ie6-ie7-et-ie8" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71a8" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48c7" }, { "$oid" : "5310456355dfd5f7698d48c8" } ], "content" : "N'avez-vous jamais rêvé de manipuler votre DOM aussi facilement côté serveur que dans votre navigateur ? N'avez-vous jamais cherché un équivalent à jQuery pour PHP ou C# dans l'espoir de manipuler aisément les fragments de DOM de vos moteurs de template avant envoie côté client ? Êtes-vous tombé amoureux de JavaScript ? Ce langage étrange qui semble plat, mais qui est finalement objet, sans type mais finalement typé, procédurale mais finalement événementiel, mono-thread mais finalement multi-traitement asynchrone...\n\nEt si vous réalisiez vos développements Back-end en JavaScript ? C'est possible avec [Node.js](https://nodejs.org/en/) !\n\n\n\n\n\n## Avantages de Node.js ##\n\nNode.js ? Oui mais pourquoi ? Voici une petite liste non-exhaustive des points forts de Node.js.\n\n- Un seul langage Front-end et Back-end. Le langage est connu de tous (au moins des développeurs Front-end) et rien est à réapprendre (peut-être une mise à niveau pour les Back-end).\n- Open Source sous licence MIT.\n- Projet soutenu par de grandes sociétés comme Microsoft et Google.\n- Le gestionnaire de modules NPM performant et très simple.\n- Pas de serveur web lourd (voir plus loin).\n- Mono-thread non bloquant (événementiel/asynchrone) avec de grandes performances.\n- Simplicité de mise en oeuvre (si si) surtout avec le [Framework NodeAtlas](http://node-atlas.js.org/).\n- Gestion fine des interaction HTTP client/serveur avec [Expressjs](http://expressjs.com/) (inclut dans NodeAtlas).\n- Interactions en temps réel pour de vrais applications web grâce à [Socket.IO](http://socket.io/) (inclut dans NodeAtlas).\n- Manipulation de DOM performant simple et côté serveur avec [Cheerio](https://cheerio.js.org/) (jQuery pour serveur, inclut dans NodeAtlas).\n- ...\n\nBref, passons à la suite.\n\n\n\n\n\n## Passer de Apache/PHP à Node.js ##\n\nJe devine déjà quelles sont vos premières interrogations. Comment diable utiliser JavaScript pour faire du développement côté serveur ? Je veux bien mais :\n\n\n\n### Questions existentielles ###\n\n- Comment je fais de la lecture/écriture de fichier ? C'est impossible en JavaScript.\n- Comment je fais de l'inclusion de fichier ? C'est impossible en JavaScript.\n- Comment un setInterval ou un setTimeout peuvent marcher côté serveur ?\n- Comment ça fonctionne avec Apache ? IIS ?\n- Moi je veux bien, mais ça se débogue ?\n- ...\n\nJ'aurais dit la même chose il y a quelques temps. Essayons d'y voir plus clair.\n\nLe JavaScript que vous avez l'habitude de côtoyer dans vos navigateurs, chers intégrateurs, n'est qu'une partie de l'iceberg. Il n'est pas interprété de la même manière en fonction des navigateurs car chacun met à disposition des briques de JavaScript pour le développement web. Cependant tout le monde s'accorde à dire que permettre au JavaScript de manipuler des fichiers coté client ce n'est pas très nette, et tout le monde s'accorde à dire que cibler un noeud HTML avec `document.getElementById` c'est la moindre des choses. \n\nSachez que si l'implémentation de JavaScript est si uniforme entre différents interpréteurs c'est parce qu'ils suivent tous les mêmes directives : celle de ECMA International qui définie les standards du « ECMAScript scripting langage » alias notre bon vieux JavaScript. Vous trouverez rapidement plus de détails sur l'histoire du JavaScript cette [Curious JavaScript Story](https://blog.lesieur.name/apprendre-et-comprendre-javascript-version-es6/#a-curious-javascript-story).\n\nEn résumé le JavaScript est un langage hôte qui a besoin d'un support pour être utilisé. Le support le plus connu est le navigateur web, et la surcouche applicative JavaScript dans les navigateurs (manipulation du DOM) est elle défini par le W3C.\n\n<figure>\n\t<figcaption>Le JavaScript des navigateurs et celui de Node.js</figcaption>\n\t<img class=\"openable\" src=\"http://blog.haeresis.fr/upload/image/js-browser-vs-node.png\" alt=\"Le JavaScript des navigateurs et celui de Node.js\" width=\"618\" height=\"428\" style=\"max-width: 94%;height: auto;\" />\n</figure>\n\nTout en suivant au mieux les directives de [ECMA International](http://www.ecma-international.org/default.htm \"Site de l'ECMA International\"), il est donc tout à fait possible de développer son propre support JavaScript pour une utilisation du langage hors d'un navigateur qui pourrait faire appel à des fichiers, faire des appels HTTP, etc... Cet interpréteur s'appelle [Node.js]. Cependant, Node.js n'a pas réinventé la roue, il utilise comme socle le même interpréteur JavaScript que celui qu'utilise Google Chrome le « [V8 JavaScript Engine](https://code.google.com/p/v8/ \"Site du projet V8 JavaScript Engine\") ». Par exemple, là où la variable mère du socle du moteur « JavaScript V8 Engine » sous Chrome est `window`, celui de [Node.js] (même socle) est `global`.\n\nNode.js, est donc un autre support pour le langage hôte JavaScript dont la surcouche applicative (ouverture de fichier, gestion HTTP) est elle défini par la Node.js Foundation.\n\n\n\n### Architecture web avec Node.js ###\n\nComment faire fonctionner Apache ou IIS avec [Node.js] ? C'est très simple, il suffit de ne pas les faire fonctionner du tout. En fait, avec [Node.js], vous n'en avez pas besoin. Il va falloir re-créer vous-même un serveur web avec l'API HTTP. Hola... il est possible que vous n'ayez jamais mis les mains dans Apache bien que vous ayez quelques notions d'échanges Client/Serveur alors de là à développer votre serveur web... Et bien dite vous que c'est très simple et que ça sera l'occasion de bien comprendre les rôles de PHP, Apache, de vos pages en PHP, etc...\n\nCependant si vous n'avez pas le temps de ré-inventer la roue, bien entendu on l'a déjà fait pour vous :\n- [NodeAtlas](https://node-atlas.js.org/) qui facilite votre développement de site/app pour des réalisations les plus simples aux plus complexes. \n- [forever](https://github.com/nodejitsu/forever) vous permettra de maintenir vos sites en vie sur serveur de production.\n- [bouncy](https://github.com/substack/bouncy), [nginx](http://nginx.com/) and co. feront du reverse proxy pour vos multiples sites.\n- Et même avec [issnode](https://github.com/tjanczuk/iisnode), vous pourrez gérer sur IIS vos site [Node.js] comme s'ils étaient de vrai apps .NET et même [les développer avec Visual Studio](http://nodejstools.codeplex.com/) si ça vous chante.\n\n<figure>\n\t<figcaption>Architecture PHP vs Node.js</figcaption>\n\t<img class=\"openable\" src=\"http://blog.haeresis.fr/upload/image/php-vs-node.png\" alt=\"Architecture PHP vs Node.js\" width=\"618\" height=\"400\" style=\"max-width: 94%;height: auto;\" />\n</figure>\n\n\n\n\n\n## En résumé ##\n\nFinalement [Node.js] n'est qu'un interpréteur JavaScript enrichissant celui-ci avec diverses API (appelées module) qui permet d'exécuter des fichier `.js` (Ca remplace donc aisément des scripts PHP, Ruby, Python, Bash...).\n\nPour faire un site web, la première étape sera donc de créer un serveur web. Mais si on commençait par le commencement ? [Installer et utiliser Node.js sous Windows](http://blog.haeresis.fr/installer-et-utiliser-nodejs-sous-windows/ \"Installer et utiliser Node.js sous Windows\")\n\n  [Node.js]: http://nodejs.org/", "dates" : { "published" : { "$date" : 1366805340000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "<span>Développer</span> en <span>JavaScript</span> côté <span>serveur</span> avec <span>Node.js</span>", "urn" : "developper-en-javascript-cote-serveur-avec-nodejs" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71a9" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48ca" }, { "$oid" : "5310456355dfd5f7698d48c9" }, { "$oid" : "5310456355dfd5f7698d48cb" } ], "content" : "Avez-vous déjà ressenti de la Flemme empathique ? Mais qu'est-ce que c'est au juste la Flemme empathique ou Flemme par empathie. Je ne sais pas réellement le définir ; ça s'apparente à « ne pas vouloir déranger » ou encore ça signifie ce que ça signifie : avoir la flemme à la place de quelqu'un.\n\n\n\n\n\n## Quelques exemples ##\n\nVoici quelques mises en situation pour comprendre le principe :\n\n### La bouteille d'eau ###\n\nVotre collègue passe à côté de vous et voit votre bouteille d'eau vide. Il va à la source remplir la sienne, à l'accueil, à trois portes d'ici dans une fontaine où il faut \"plier\" sa bouteille pour la remplir plus ou moins. Il vous interpelle et vous dit « Je te remplis ta bouteille ? ».\n\nVous ne lui avez rien demandé, ça fait une heure que vous n'avez pas forcément soif mais qu'à la réflexion un peu d'eau ne serait pas de refus.\n\nMais y a ce code à faire marcher, vous y êtes presque. Remplir une bouteille d'eau nécessiterait de se lever, d'ouvrir les portes, de peut-être se faire distraire au passage, de lutter avec la fontaine... bref... « la flemme », ça attendra ; et vous répondez seulement pour je ne sais quelle raison : « Non merci, ça ira ».\n\n**En réalité... vous avez probablement été frappé par la Flemme empathique !** Ça ne dérangeait absolument pas votre collègue de remplir la bouteille, sinon il ne l'aurait pas proposé. Vous, ça ne vous aurait rien coûté, vous aviez juste à continuer ce que vous faisiez. « J'ai pas envie de le déranger ». Ouais... Flemme empathique :)\n\n\n\n\n### La question à 10 sous ###\n\nVous exposez une question à quelqu'un dont vous n'avez pas la réponse. On sait jamais des fois qu'il sache. Au delà de ça, vous savez où trouver la réponse, mais il faut se déplacer quelque part par exemple pour l'obtenir, ou sortir son portable et —avec le réseau du coin— mettre 5 minutes à trouver une réponse qui sera, vu la nature particulière de la question, incomplète. Votre interlocuteur vous dit que justement il va à cet endroit demain pour une raison X, qu'ils ont surement la réponse et vous dit : « Je leur poserai la question pour toi, si tu veux ? ». **Et là... probablement frappé par la Flemme empathique,** vous répondez : « Non, c'est pas grave ne t'embête pas ». Quoi ?! Mais c'était qu'une simple question à poser.</p>\n\n\n\n\n## Palier au problème ##\n\nEn fait on pourrait se dire que c'est dramatique... mais pas vraiment. Dans notre premier cas le collègue à juste à répondre : « Non, mais ça ne me dérange pas, sinon je n'aurai pas demandé » pour obtenir aisément un « Bon, puisque tu insistes ! » et dans notre second cas à dire « Je demanderai quand même car la réponse m'intéresse aussi ».\n\n_Si vous repérez des personnes souffrant de Flemme empathique : **il est de votre devoir d'insister** !_\n\n\n\n\n\n## Attention aux faux-positif ##\n\nIl ne faut cependant pas négliger le cas du faux-positif. Et oui, il est aussi possible que dans notre premier cas la personne ai répondu « Non merci, ça ira » seulement parce qu'elle avait presque corrigé l'erreur dans son algorithme et que son collègue vient de lui faire perdre 10 minutes en la coupant. On pourrait alors qualifier ça de « Psycopathie refoulé ». C'est vrai, il n'aura pourtant pas tué son collègue !", "dates" : { "published" : { "$date" : 1366966800000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "La <span>Flemme</span> empathique ou Flemme par <span>empathie</span>", "urn" : "la-flemme-empathique-ou-flemme-par-empathie" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71aa" }, "cache" : { "comment" : { "number" : 1 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48c0" }, { "$oid" : "5310456355dfd5f7698d48c8" } ], "content" : "Je vous propose à travers cet article de découvrir [Node.js] pour le système d'exploitation Windows 7,  8 et 10. [Node.js] est multi-plateforme et s'exécute tout aussi bien sous Unix que sous Mac. Mais QUID de Windows ? Vous allez voir que c'est assez trivial même si certains modules dépendent de quelques logiciels externes pour compiler ([python27](https://www.python.org/download/releases/2.7/), [msvc2013](https://www.microsoft.com/fr-fr/download/details.aspx?id=40784)). Assez rapidement donc, il vous sera possible de développer des sites web et applications web très interactives et avec une grande vélocité d'exécution le tout avec JavaScript !\n\n\n\n\n\n## Télécharger Node.js pour Windows ##\n\nJe passe les [présentations qui ont déjà été faites dans cet article](./developper-en-javascript-cote-serveur-avec-nodejs/ \"Développer en JavaScript côté serveur avec Node.js\") et ajoute que même si cet article a été réalisé avec des tests parallèles sous Seven, je ne vois pas pourquoi il ne serait pas valable pour Windows 8 ou 10.\n\n\n\n### Le site officiel de Node.js ###\n\nSite du projet : [nodejs.org](https://nodejs.org/ \"Site du projet Node.js\").\n\n<div class=\"center\">\n\t<a href=\"https://nodejs.org/images/logos/nodejs-2560x1440.png\" title=\"Logo Node.js en HD\"><img src=\"https://nodejs.org/static/images/logos/nodejs-1024x768.png\" alt=\"Le logo Node.js\" width=\"1024\" height=\"768\" style=\"max-width: 75%;height: auto;\" /></a>\n</div>\n\nAvant de nous jeter sur la partie « Downloads », jetons un œil aux parties du site que je ne vais pas détailler plus dans cet article. Vous pourrez apprendre à l'accueil (<a href=\"https://nodejs.org/en/\" title=\"node.js\">Home</a>) que Microsoft, Google, Yahoo!, LinkedIn, Ebay... et bien d'autres utilisent d'ores et déjà Node.js, découvrir le projet dans <a href=\"https://nodejs.org/about/\" title=\"node.js\">About</a> et le suivre avec le <a href=\"http://blog.nodejs.org/\" title=\"node.js\">Node.js Blog</a> ainsi que la <a href=\"https://nodejs.org/community/\" title=\"node.js\">Community</a>. Vous pourrez même trouver du travail dans la partie <a href=\"http://jobs.nodejs.org/a/jobs/list/\" title=\"node.js\">Jobs</a>. Pour finir un jolie fond d'écran traine sur la page <a href=\"https://nodejs.org/en/about/resources/\" title=\"node.js\">Logos</a>.\n\n\n\n### Intaller node et npm ###\n\nDepuis l'accueil, vous devriez voir un bouton « Download for Windows (x64) » (si vous êtes sur Windows). Cliquez dessus pour télécharger automatiquement le zip le plus adapté à votre système. Vous pouvez également choisir vous même votre zip dans <a href=\"https://nodejs.org/en/download/\" title=\"node.js\">Download</a> pour obtenir au choix le *Windows Installer (.msi)* et/ou le *Windows Binary (.exe)* en 32/64 bit.</p>\n\n<figure>\n\t<figcaption>Liste des composants de l'installeur Node.js</figcaption>\n\t<img class=\"openable\" src=\"media/images/upload/node-install.png\" alt=\"Liste des composants de l'installeur Node.js\" width=\"495\" height=\"362\" style=\"max-width: 75.2%;height: auto;\" />\n</figure>\n\nExécutez votre fichier, acceptez la licence, déposez-le dans \"Program files\" et ce package va vous installer :\n\n- **L'exécuteur node.js** : le programme permettant d'exécuter des fichiers .js (comme php.exe le ferait avec des .php).\n- **Le module npm (Node Package Manager)** : un gestionnaire de modules qui va vous permettre simplement d'ajouter et retirer les librairies dont vous aurez besoin pour vos applications (pas de surplus, seulement le nécessaire donc).\n- **Un raccourci vers la documentation en ligne**.\n- **Des variables d'environnements** : Ainsi vous pourrez exécuter les commandes `node` et `npm` dans votre invité de commande.\n\n<figure>\n\t<figcaption>Dossier de Node.js après installation</figcaption>\n\t<img class=\"openable\" src=\"media/images/upload/node-folder.png\" alt=\"Dossier de Node.js après installation\" width=\"650\" height=\"274\" style=\"min-width: 98.7%;height: auto;\" />\n</figure>\n\nQuand l'installeur aura fini vous aurez un joli dossier d'environ 12Mo contenant entre autre node.js et npm.cmd qui seront appelables depuis n'importe quel dossier avec les commandes `node` et `npm`.\n\n\n\n\n\n## Un Hello world en Node.js ##\n\nJuste après l'installation, tentons notre premier « Hello World ». Tout d'abord, définissez vous un endroit ou installer vos projets [Node.js]. Pour ma part j'ai décidé de placer tous mes projets dans `C:\\nodejs`. Je vais donc y _**créer un fichier**_ `hello-world.js` accessible à cette adresse sur mon poste : `C:\\nodejs\\hello-world.js`. Rien ne vous empêche de placer ça dans un autre dossier, sur un autre disque dur, dans le workspace de votre IDE ou le repository de votre logiciel de gestion de code source et version.\n\n\n\n### Édition de hello-world.js ###\n\nFaisons la chose la plus simple possible, affichons un message dans une console d'exécution. Ouvrez le fichier `C:\\nodejs\\hello-world.js` que vous venez de créer avec <a href=\"http://notepad-plus-plus.org/fr/\" title=\"Site de Nodepad++\">Nodepad++</a> ou <a href=\"http://www.sublimetext.com/3\" title=\"Site de Sublime Text 3\">Sublime Text 3</a> (ou l'IDE de votre choix) et copier/coller à l'intérieur le code suivant :\n\n```js\nconsole.log(\"Hello World !\"); // Va écrire dans la console \"Hello World !\".\n\nglobal.console.log(\"Hello World !\"); // Va écrire dans la console \"Hello World !\".\n\nwindow.console.log(\"Hello World !\"); // Va faire planter le programme.\n```\n\npuis sauvegardé le.\n\n\n\n### Exécution de script avec node.exe ###\n\nIl y a plusieurs façons d'appeler du code JavaScript avec le programme node.exe.\n\nTout d'abord :\n\n- appuyez/cliquez sur la touche/bouton « Logo Windows » ce qui ouvrira votre « Menu Démarrer » ou vos tuiles,\n- écrivez directement `cmd` ici et cela se tapera dans une barre de recherche,\n- enfin, appuyez sur la touche « Entrer » pour ouvrir votre Console.\n\nEnsuite deux possibilités.\n\n#### Exécution en absolue ####\n\n- Écrivez `node C:\\nodejs\\hello-world.js` (dans la console) puis appuyez sur « Entrer » pour exécuter le script,\n- ou écrivez `node C:\\nodejs\\hello-world` (pas d'extension).\n\n#### Exécution en relatif ####\n\n- Écrivez `cd C:\\nodejs\\` puis appuyez sur « Entrer » pour vous rendre dans le dossier,\n- écrivez `node hello-world.js` puis appuyez sur « Entrer » pour exécuter le script,\n- ou `node hello-world` (pas d'extension).\n\n<figure>\n\t<figcaption>Résultat d'exécution du fichier C:\\nodejs\\hello-world.js</figcaption>\n\t<img class=\"openable\" src=\"media/images/upload/hello-world-crash.png\" alt=\"Résultat d'exécution du fichier C:\\nodejs\\hello-world.js\" width=\"658\" height=\"302\" style=\"max-width: 100%;height: auto;\" />\n</figure>\n\n\n\n### L'équivalent de window est global ###\n\nNotre code plante et c'est normal ! Revenons sur le résultat obtenu (image ci-avant) et voyons se que l'on peut en déduire.\n\n- Les commandes `global.console.log` et `console.log` sont identiques. La base global est donc implicite comme `window.document` et `document` dans les navigateurs.\n- La pile d'exécution nous indique qu'au lancement de node.exe, avant même le traitement du fichier en paramètre, il y a :\n - Lecture du fichier `node.js` et exécution de `startup`.\n - Lecture du fichier `module.js` exécutant la fonction `Function.Module.runMain` exécutant la fonction `Function.Module._load` exécutant la fonction `Module.load` exécutant la fonction `Object.Module._extensions..js` exécutant la fonction `Module._compile`.\nOr, il n'y a pas de fichier node.js ou module.js dans le dossier de node.exe. Ce traitement est donc réalisé par le cœur de Node.js, node.exe.\n\n- `window` n'est pas défini. Il est de type Undefined et renvoi \"undefined\" puisqu'il fait planter le script. `global` remplace donc `window` en Node.js.\n\n\n\n\n\n## La documentation, les modules et le principe ##\n\nEffectivement, notre exemple précédent est loin de servir à quelque chose et même loin de nous permettre de développer un site Internet (mais pas si loin que ça tout de même). Faisons quelque chose de plus conséquent.\n\nEt si nous utilisions un bout de code qui va nous permettre de parcourir l'intégralité d'une arborescence de fichier/dossier de manière asynchrone et de lever des événements à chaque fois que quelque chose est parcouru.\n\nNous allons manipuler le contenu d'un dossier avec le code ci-après. Pour le moment, nous allons nous attacher à la syntaxe du langage.\n\n```\n// Déclaration de plusieurs variables.\nvar\n\tfs = require(\"fs\"), // Instanciation du module natif \"File System\" dans la variable \"fs\".\n\twalk = require(\"walk\"), // Instanciation du module communautaire \"node-walk\" dans la variable \"walk\".\n\tfiles = [], // Instanciation d'un tableau vide dans la variable \"files\".\n\ttargetFolder = process.argv[2] || \"./\", // Instanciation d'une variable avec \"process.argv[2]\". Si process.argv[2] est de type Undefined alors il renvoi \"false\" et targetFolder vaut \"./\";.\n\t\n\t// Appel à la fonction \"walk\" du module \"walk\".\n\twalker = walk.walk(\n\t\ttargetFolder, // Passage d'une \"String\" en premier paramètre.\n\t\t{ followLinks: false } // Passage d'un \"Objet\" JSON en second paramètre.\n\t);\n\t\n\t/* Equivalant du code ci-dessus\n\tvar walk = require(\"walk\");\n\tvar files = [];\n\tvar walker = walk.wa....;\n\tmais moins performant. */\n\n// Appel à la fonction \"on\" du module \"walk\".\nwalker.on(\"file\", function(root, stat, next) { // \"String\" en premier paramètre et \"Function\" en second paramettre.\n    // Ajout d'une entrée dans le tableau \"files\".\n    files.push(root + stat.name);\n\t\n\t// Exécution du paramètre \"next\" de type \"Function\".\n    next();\n});\n\n/* En javascript, les paramètres peuvent être également des fonctions !\nLa fonction de walk \"on\" est probablement défini ainsi : \nfunction on(String, Function) {\n\tvar \n\t\troot = String,\n\t\tstat = ** infos sur le fichier **\n\t\tnext = function () { ** du code ** }\n\n\tFunction(root, stat, next);\n}\n*/\n\n// Appel à la fonction \"end\" du module \"on\".\nwalker.on(\"end\", function() {\n\t// On affiche le contenu du tableau dans la console Windows.\n    console.log(files);\n});\n\n// Affichage de \"Traitement en cours...\" dans l'invité de commande Windows (la console).\nconsole.log(\"Traitement en cours...\");\n```\n\nLe code ci-dessus permet d'afficher tous les fichiers d'un dossier. Si vous êtes familier avec JavaScript il ne vous aura pas échappé que la fonction `require` sort d'un chapeau magique. C'est une fonction spécifique à [Node.js] qui permet d'inclure des fonctions en provenance d'un autre fichier (en l’occurrence du cœur de Node.js pour « File System » et du module `node-walk` pour « walk ».\n\n\n\n### Compiler les modules qui ne sont pas en JavaScript sous Windows ###\n\nSi vous souhaiter pouvoir utiliser l'intégralité des modules de [Node.js] il va falloir être en mesure de tous les compiler. Effectivement, la majorité des modules sont écrit en JavaScript et [Node.js] sait très bien les utiliser. Mais pour ceux qui sont écrit dans un autre langage (pas en JavaScript), voici les deux logiciels qui peuvent couvrir tous les cas de figure : [installer Python et Microsoft Visual Studio](https://blog.lesieur.name/installer-tous-les-modules-npm-sous-windows/).\n\n\n### La documentation de Node.js et de ses modules ###\n\nLe cœur de [Node.js] contient les modules vitaux lui permettant d'écrire dans des fichiers. C'est au développeur, en fonction de ses besoins, de « télécharger » les modules complémentaires qu'y vont lui permettre de réaliser ses développements.</p>\n\n#### Documentation des modules natifs ####\n\nLa documentation des modules natifs de [Node.js] se trouve sur le site officiel dans la partie <a href=\"https://nodejs.org/api/\" title=\"node.js\">Documentation</a>. Vous pourrez vous renseigner sur le fonctionnement des modules incontournables comme « <a href=\"https://nodejs.org/api/fs.html\" title=\"node.js\">File System</a> » ou encore « <a href=\"https://nodejs.org/api/http.html\" title=\"node.js\">http</a> » (pour faire des serveurs web). Vous aurez également des information sur notre fameuse fonction <a href=\"https://nodejs.org/api/all.html#all_require\" title=\"node.js\">require</a></p>\n\n#### Documentation des modules tiers ####\n\nTout un chacun peut développer son propre module Node.js et le mettre à disposition des autres utilisateurs via <a href=\"https://www.github.com/\" title=\"GitHub\">GitHub</a> et à disposition en téléchargement via le NPM de Node.js en l'ajoutant au registre de la page <a href=\"https://npmjs.org/\" title=\"node.js\">NPM Registry</a>.\n\n> Par exemple, pour ma part, je développe [NodeAtlas](https://www.lesieur.name/node-atlas/) qui est un module permettant de créer rapidement de petit site web MVC2, de créer des gros sites interactif ou encore gérer des maquettes HTML.\n- J'héberge les fichiers de développement [Haeresis/NodeAtlas](https://github.com/Haeresis/NodeAtlas/) sur [GitHub](https://www.github.com/),\n- et vous pouvez [télécharger via npm le module node-atlas](https://www.npmjs.org/package/node-atlas).\n\nC'est également le cas du module `node-walk` qui ajoute la fonction walk équivalente à la fonction du même nom en Python mais pour [Node.js]. Ce module est utilisé dans le code précédent et développé par l'utilisateur *coolaj86*. La documentation de `node-walk` se trouve donc sur <a href=\"https://github.com/coolaj86/node-walk\" title=\"Page de node-walk\">la page de son projet GitHub</a> et <a href=\"https://npmjs.org/package/walk\" title=\"Module node-walk\">son module est référencé</a> dans le registre NPM sur <a href=\"https://npmjs.org/package/walk\" title=\"Module node-walk\">cette page</a>.\n\nEn se référent à sa documentation, nous sommes à même de comprendre le code précédent :\n\n```js\nvar\n\tfs = require(\"fs\"),\n\twalk = require(\"walk\"),\n\tfiles = [],\n\t// Récupération du premier paramètre derrière le nom du fichier, sinon dossier d'exécution du fichier.\n\ttargetFolder = process.argv[2] || \"./\",\n\t\n\t// La fonction walk permet de lire de manière asynchrone le contenu d'un fichier mais ne renvoi rien. \n\t// Le code du script va continué à être lu pendant que walk va faire son boulot.\n\twalker = walk.walk(targetFolder, { followLinks: false }); // L'option dit qu'on ne va pas lire les fichiers derrière les raccourcis de dossier.\n\t\n// La fonction \"on\" avec en premier paramètre \"file\" est exécuté quand la fonction assynchrone précédente \"walk\" lit un fichier.\nwalker.on(\"file\", function(root, stat, next) {\n\t//... et le paramètre \"root\" contient le chemin absolue du fichier.\n\t//... et le paramètre \"stat\" contient diverses informations comme le \"name\" du fichier.\n\t//... et le paramètre \"next\" est en réalité une function.\n    files.push(root + stat.name);\n\t\n\t// Différent traitement avec fs (suppression, copy, etc...) sont possible.\n\t\n\t// On valide les actions.\n    next();\n});\n\n// La fonction \"on\" avec en premier paramètre \"end\" est exécuté quand tout le contenu du répertoire à été lu.\nwalker.on(\"end\", function() {\n    console.log(files);\n});\n\n// Va être lu immédiatement après l'exécution de la fonction \"walk\".\n// Si votre walk lit le dossier \"C:\\\", cela preut prendre du temps de tout lire. Mais il ne sera pas bloqué car les fonctions dans \"on\" sont appelés de façon assynchrone.\nconsole.log(\"Traitement en cours...\");\n```\n\n\n\n### npm et le téléchargement de modules ###\n\n#### Téléchargement depuis le registre ####\n\nCopiez-collez le code précédent dans un fichier appelé `list-file.js` (par exemple dans `C:\\nodejs\\routine\\list-file.js`) et exécutez-le.\n\n<figure>\n\t<figcaption>Résultat d'exécution du fichier C:\\nodejs\\routine\\list-file.js</figcaption>\n\t<img class=\"openable\" src=\"media/images/upload/list-file-crash.png\" alt=\"Résultat d'exécution du fichier C:\\nodejs\\routine\\list-file.js\" width=\"658\" height=\"302\" style=\"max-width: 100%;height: auto;\" />\n</figure>\n\nNotre code plante encore et c'est encore normal ! Revenons sur le résultat obtenu (image ci-avant) et voyons ce que l'on peut en déduire.\n\n- L'exécution de ce script est identique au précédent, mais la pile ne s'affiche pas complètement (manque startup et node.js).\n- Quand la fonction `require` est rencontrée, à l'instar de `startup` c'est `require` qui prend la main exécutant la fonction `Function.Module._load` exécutant la fonction `Function.Module._resolveFilename`.\n- Si un module n'a pas été préalablement téléchargé, ça coince (logique).\n\n*Note : les scripts qui plantent arrête le programme [Node.js]. Si votre script ne plante pas, et que vous souhaitez arrêter le programme : au lieu de fermer la console, appuyez simultanément sur « CTRL + C ».*\n\nNous allons donc télécharger le module « node-walk » avec les lignes de commande suivante :\n\n- `cd C:\\nodejs\\routine\\`\n- `npm install walk`\n\n<figure>\n\t<figcaption>Téléchargement du module node-walk avec npm</figcaption>\n\t<img class=\"openable\" src=\"media/images/upload/npm-install-walk.png\" alt=\"Téléchargement du module node-walk avec npm\" width=\"658\" height=\"302\" style=\"min-width: 100%;height: auto;\" />\n</figure>\n\nVous constaterez qu'un dossier « node_modules » est apparu. Les futurs modules que vous téléchargerez via `npm` depuis la racine `C:\\nodejs\\routine\\` seront automatiquement ajoutés dans ce dossier. Les fichiers dont le fichier appelant est exécuté dans cette racine pourront tous bénéficier des modules via la commande « require » directement avec le nom du module en paramètre. Pour utiliser le module d'un autre dossier « node_modules », il ne faudra plus passer le nom du module à `require` mais le chemin d'accès. Pour finir si vous utilisez la commande `npm install` depuis un autre dossier, les modules téléchargés se mettront dans le dossier « node_modules » de cet endroit (ou le créera s'il n'existe pas).\n\nVotre dossier « node_modules » contient le module « walk ». Vous constatez que « walk » lui-même contient un dossier « node_modules » avec le module « forEachAsync » ! C'est une dépendance du module : « walk » à besoin de « forEachAsync » pour fonctionner. Idem dans « forEachAsync » il y a encore un dossier « node_modules » contenant « sequence ».\n\n*Note : vous pouvez également passer l'option `-g` soit `npm install -g walk` qui installera `walk` dans le node_modules global. Vos projets n'auront alors pas besoin d'avoir `walk` dans leur dossier « node_modules » pour fonctionner.*\n\nVous pouvez de nouveau exécuter votre script et constater que \"Traitement en cours...\" s'écrit avant l'affichage des fichiers alors que c'est pourtant la dernière instruction du fichier. Là est le pouvoir de l'asynchrone !\n\n*Note : vous pouvez passer des paramètres à vos scripts avec `process.args[x]` x représentant le xième élément séparé par un espace dans la chaine de commande (`process.args[0]` étant donc le mot `node`). Dans notre exemple `node list-file C:\\` affichera les fichiers de tout le disque dure !</p>\n\n#### Téléchargement depuis le site du module ####\n\nDans notre exemple précédent nous aurions tout aussi bien pu créer nous-même le dossier « node_modules » et y placer le module **node-walk** à la main en <a href=\"https://npmjs.org/package/walk\" title=\"Module node-walk\">l'ayant téléchargé depuis le site GitHub</a>.</p>\n\nSi vous voulez essayer, effacez votre dossier « walk » de « node_modules » et c'est parti !\n\n- Une fois sur <a href=\"https://npmjs.org/package/walk\" title=\"Module node-walk\">la page du projet</a>, cliquez sur « ZIP » pour télécharger l'archive.\n- Placer le dossier « node-walk-master » dans « node_modules » et renommez-le en « walk ».\n- Dans votre nouveau dossier « walk », supprimez tout sauf le dossier « lib ».\n- Remontez le contenu du dossier « lib » dans « walk ». Vous pouvez maintenant supprimer le dossier « lib » qui est vide.\n- Exécutez de nouveau `list-file` et vous aurez l'erreur « Error: cannot find module 'forEachAsync' » (souvenez vous, « walk » dépend de « forEachAsync »).\n- Rendez-vous sur le <a href=\"https://npmjs.org/\" title=\"node.js\">NPM registry</a> et cherchez « forEachAsync » dans « Search Packages ». Cliquez dessus dans la liste et repérez la ligne « Dependencies » : vous voyez bien que ce module est dépendant de\t« sequence ». Repérez ensuite « Homepage » : cliquez sur le lien associé et nous revoilà sur Git. Cliquez de nouveau sur « ZIP » pour télécharger l'archive. Nous trouvons dedans, entre autre, les dossiers « forEachAsync » et « sequence » ! Ça tombe bien.\n- Créez dans « walk » un dossier « node_modules » pour y placer « forEachAsync », puis dans « forEachAsync » vous créez de nouveau un dossier « node_modules » pour y placer « sequence ».\n- Exécutez de nouveau `list-file` et voilà, ça marche !\n\nCette technique à vite ses limites pour les gros modules.\n\n\n\n\n\n## Node.js pour créer des routines ##\n\nPour clore cet article je résumerais en mettant en avant le fait que sans même parler de site Internet, [Node.js] est parfais pour créer des fichiers de maintenance pour effacer des fichiers temporaires, exécuter des actions, etc... comme le ferait des fichiers .php avec php.exe. Il est tout à fait possible de mettre en place des tâches planifiées pour vider les fichiers de plus de un jour dans le répertoire temporaire des fichiers uploadés de votre site par exemple !</p>\n\nBon, maintenant qu'on voit à peut-prêt l'outil pour une utilisation standard et simple, [si on faisait des sites web avec le module NodeAtlas](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/) !\n\n  [Node.js]: https://nodejs.org/", "dates" : { "published" : { "$date" : 1367053200000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "div.center {\n    text-align: center;\n}", "title" : "<span>Installer</span> et <span>utiliser</span> <span>Node.js</span> sous <span>Windows</span>", "urn" : "installer-et-utiliser-nodejs-sous-windows" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71ae" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48cc" }, { "$oid" : "5310456355dfd5f7698d48bb" } ], "content" : "Mais le JavaScript n'est pas typé ? Mais si, il y en a 13 ! Ah non, il y en 7... Bah il me semble qu'il y a `Object`, `Function`, `Array`, `Math`, `String`, `Number`, `Boolean`. Et tu fais quoi de `RegExp` ? Attends, `Function` c'est pas un type, c'est un sous type mais `Null` c'est un type... ? Ho là là...\n\nSi vous faites du jQuery à vos heures ou même pas mal de JavaScript sur vos sites web, il est temps d'apprendre tout ce qu'il y a à savoir sur le typage implicite de JavaScript, car oui : contrairement à ce que certain vous ont dit, JavaScript manipule des éléments typés, on peut même dire que le JavaScript est [faiblement typé et dynamiquement typé](https://fr.wikipedia.org/wiki/Typage_fort#Conditions) si vous voulez tout savoir. Les fonctions (et les instances) `Object`, `Function`, `Array`, `Date`, `String`, `Number`, `Boolean`, `RegExp`, `Error` ou encore les objets globaux, `Math` et `JSON` : tous sont d'un seul et même type, le type `Object`. Pourtant `String`, `Number` et `Boolean` sont eux-mêmes un type à par entière en plus des deux petits spéciaux les type `Null` et `Undefined`.\n\n\nSi vous deviez retenir quelques trucs rapidement à propos du JavaScript et des types ça serait que :\n\n- Le JavaScript n'a que 6 types : **`Object`, `Number`, `String`, `Boolean`, `Null` et `Undefined`**.\n- À part le type `Object` : les **5 autres types** sont dit **des types primitifs**.\n- Les types **`Null` et `Undefined`** sont **des types spéciaux**.\n- La **`Function`** n'est qu'un type `Object` **qui peut être exécuté et instancié** avec « new ».\n- **`Array`, `Date` et `RegExp`** sont des **types Object instanciables** (Function).\n- **`Math`** et **`JSON`** sont simplement un type Object (ne s'instancie pas avec « new »).\n- Bien que **`Number`, `String` et `Boolean`** soient des types primitifs, il existe un **équivalent de type Object** instanciable (Function) **pour chacun d'eux** (à ne pas confondre).\n\n<figure>\n\t<img class=\"openable\" src=\"media/images/upload/6-types-javascript-objet-primitif.png\" alt=\"Les 6 types en JavaScript\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\">\n\t<figcaption>Les 6 types en JavaScript</figcaption>\n</figure>\n\nJe vais dans un premier temps vous proposer la traduction d'un article de Dmitry Baranovskiy —développeur JavaScript expérimenté— qui explique très bien les types en JavaScript. Je lèverai le doute sur le fameux sixième type (Null ou Function). Et je vous fournirai des lignes de code test pour mettre en évidence ce qui a été expliqué.\n\nDans cet article les propos entre [ ... ] sont les miens ainsi que ceux qui ne sont pas entre « ... ».\n\nPour finir, bien que l'auteur vous encourage à lire les [spécifications officielles](http://www.ecma-international.org/publications/standards/Ecma-262.htm) (pour les initiés), je vous encourage pour ma part à lire [JavaScript Eloquent](http://eloquentjavascript.net/) ([disponible en français ici](http://fr.eloquentjavascript.net/)).\n\n\n\n\n\n## Témoignage de Dmitry Baranovskiy, développeur JavaScript ##\n\n[Le billet original en anglais est sur le blogs d'Adobe (editeur de Flash)](http://blogs.adobe.com/webplatform/2012/08/27/javascript-types/)\n\n« J'aime le JavaScript. C'est un langage alliant puissance et flexibilité, mais à condition de bien savoir l'utiliser. Une fois que vous maîtrisez le langage JavaScript, vous pouvez construire pratiquement n'importe quoi, et cela vraiment rapidement et de manière interactive. »\n\n« Si vous pensez que le JavaScript est simple ou primitif, alors vous êtes tombé dans un piège. Vous constaterez qu'il y a pas mal de monde dans ce piège. Les soi-disant développeurs JavaScript du dimanche vous diront qu'un autre langage “X” est supérieur. Ils peuvent même vous dire que vous seriez mieux avec un système qui traduit la langue “X” en JavaScript. Pour sortir du piège et maîtriser JavaScript cela exige un effort et du dévouement. Je le sais parce que, en 1997, j'en étais là. »\n\n« Depuis, j'ai appris en long, en large et en travers le JavaScript moi-même en étudiant les [spécifications officielles](http://www.ecma-international.org/publications/standards/Ecma-262.htm). Vous pouvez apprendre l'intégralité du langage de cette manière. En tout cas, si votre intitulé de poste comprend les mots “développeur JavaScript”, vous devriez. »</p>\n\n\n\n\n### Trouverez vous la réponse ? ###\n\n« Dans ce billet je vais tenter de présenter un petit extrait de programme JavaScript et vous demander de prédire ce qu'il va renvoyer. Si vous êtes un développeur JavaScript, cela sera un jeu d'enfant pour vous. Si vous êtes toujours en train d'apprendre le langage, vous allez avoir quelques soucis et j'espère que vous lirez les explications suivantes. »\n\n« Le code JavaScript suivant va afficher une fenêtre d'alerte. Que va contenir cette fenêtre ? »\n\n```js\nvar five = 5;\nfive.three = 3;\nalert(five + five.three);\n```\n\n« Allez à la fin de cet article pour trouver la réponse. » _[En fait allez plutôt à la fin de cette partie](./les-types-en-javascript-pour-tout-savoir/#demo)._ « Et ci-dessous, je vais laisser une explication pour vous démontrer comment JavaScript arrive à ce résultat. »\n\n\n\n\n### Les six types qui existent en JavaScript ###\n\n« Il n'y a que 6 [types en JavaScript](http://ecma-international.org/ecma-262/5.1/#sec-8) : \n[Object](http://ecma-international.org/ecma-262/5.1/#sec-8.6), \n[Number](http://ecma-international.org/ecma-262/5.1/#sec-8.5), \n[String](http://ecma-international.org/ecma-262/5.1/#sec-8.4), \n[Boolean](http://ecma-international.org/ecma-262/5.1/#sec-8.3), \n[Null](http://ecma-international.org/ecma-262/5.1/#sec-8.2), et \n[Undefined](http://ecma-international.org/ecma-262/5.1/#sec-8.1). »</p>\n\n- « **Object** inclue les tableaux [_Array_], les fonctions [_Function_] et des objets ordinaires [_Object_, _Date_, _RegExp_, _Math_...]. »\n- « **Number** peut être un entier ou un nombre à virgule ou même les valeurs spécifiques _NaN_ et _Infinity_. »\n- « **String** inclue la chaîne vide _\"\"_. » _Ainsi que toute chaîne de caractère._\n- « **Booleans** n'a que deux uniques valeurs : _true_ et _false_. »\n\n« Les deux derniers types primitifs sont un peu déroutants : »\n\n- « La seule valeur du type **Null** est _null_. »\n- « La seule valeur du type **Undefined** est _undefined_. »\n\n_Note : il est important de garder à l'esprit que les types primitifs Number _(0, -10, NaN...)_, String _(\"\", \"coucou\"...)_ et Bool _(true, false)_ ont chacun leur équivalent en Object. Je parle d'équivalence car `(new String(\"\"))` n'est pas la même chose que `\"\"`, le premier est de type `Object` alors que le second de type `String`. Cela s'éclairera peut-être plus loin. Pour finir il est bon de rappeler que les valeurs _0, -10, NaN, \"\", \"coucou\", function() { return; }, { bla: \"\", blu,\"\" }_... sont appelés des expressions ou (opérandes) et _+, -, /, ==, !==_... sont appelés des opérateurs.\n\n« Tous les types à l'exception de Object sont également appelés “primitif”. Le type d'une variable JavaScript n'est pas déclaré explicitement, il est défini par le moteur d'exécution JavaScript. Dans notre exemple, le type de la variable “five” est Number parce que nous lui avons assigné un nombre entier. »\n\n« Exactement comme d'autres langages de programmation, JavaScript va implicitement convertir le type d'une valeur en fonction de l'opérateur qui est appliquée à la valeur. Et à la différence d'autres langages de programmation, JavaScript [insiste lourdement là dessus](http://ecma-international.org/ecma-262/5.1/#sec-9). Par exemple le résultat de `\"5\"` - `\"3\"` est le nombre `2` parce que l'opérateur moins demande la conversion des expressions [\"5\" et \"3\"] en Number. Si un opérateur n'arrive pas à convertir [(trouver une équivalence en Number)] l'un des membres, c'est `NaN` ([Not a Number](http://ecma-international.org/ecma-262/5.1/#sec-4.3.23)) qui est utilisé à la place. Par exemple `\"5\"` - `\"Fred\"` est implicitement converti en `5` - `Nan` ce qui donne `NaN`. »\n\n« L'ensemble complet des règles pour les conversions de types implicites n'est pas compliqué tant que vous savez quel type chaque opérateur exige pour les expressions qu'ils manipulent. »\n\n\n\n\n### Connaître et comprendre les règles de conversion implicite ###\n\n« Les Object et String suivent la règle suivante : [toute valeur doit être convertie en type primitif](http://ecma-international.org/ecma-262/5.1/#sec-9.1) ». »\n\n- Si le type d'une expression doit être [converti en] Number [par l'opérateur], cela signifie que le moteur JavaScript va appeler la méthode `valueOf()` [si l'expression n'est pas de type primitif, donc un type Object] et si le résultat [de la conversion] n'est pas un type primitif, il est converti en type String par la méthode `toString()`. »\n- Si le type de l'opérande doit être String, cela signifie que le moteur JavaScript commence d'abord par appeler la méthode `toString()` et si le résultat n'est pas un type primitif, il est converti avec la méthode `valueOf()`.\n\n« Dans chacun des cas, si le résultat obtenu au final n'est pas un type primitif. une exception est levée. »\n\nVoyons plutôt les conversions :\n\nChaque opérateur demandera la conversion de l'expression en un type primitif bien précis pour fonctionner (\"if (condition)\" demandera la conversion en un type Boolean de \"condition\", \"nombre * 3\" demandera la conversion en un type Number de \"nombre\", etc.).\n\n_Note : L'opérateur `+` est « spécial ». La majorité des opérateurs imposent un type primitif à leur expression pour effectuer leur opération mais pas `+` qui lui, peut imposer soit des types String (concaténation), soit des types Number (addition). La condition est que si au moins une des expressions est de type String initialement, l'opérateur va demander des types String, s'il n'y a pas un seul type String initialement, l'opérateur va réclamer des types Number. Ce n'est pas le seul opérateur « spécial », par exemple l'opérateur `==` est très complexe dans sa réclamation de conversion d'expression.\n\n\n\n#### L'expression doit être transformée en type Number ####\n\n« Si le type de l'expression doit être `Number`, et que son type actuel est : »\n\n- un **Number** : aucune conversion.\n- « un **Object** : la valeur est convertie en un type primitif et si le résultat n'est pas un Number alors l'une des conversions suivantes [les 4 suivantes de cette liste] est appliquée. »\n- « un _String_ : la chaîne est convertie en un nombre conformément aux règles habituelles en JavaScript. » NaN dans la majorité des cas.\n- « un **Boolean** : 1 si la valeur est true, sinon 0. »\n- « un **Null** : 0. »\n- « un **Undefined** : NaN »\n\n\n\n#### L'expression doit être transformée en type String ####\n\n« Si le type de l'expression doit être `String`, et que son type actuel est : »\n\n- un **String** : aucune conversion.\n- « un **Object** : la valeur est convertie en un type primitif et si le résultat n'est pas une chaîne de caractères alors l'une des conversions suivantes est appliquée. »\n- « un **Number** : le nombre sous forme de chaîne, par exemple \"123\" ou \"12.34\". » ou \"NaN\".\n- « un **Boolean** : \"true\" or \"false\". »\n- « un **Null** : \"null\". »\n- « un **Undefined** : \"undefined\". »\n\n\n\n#### L'expression doit être transformée en type Boolean ###\n\n« Si le type de l'expression doit être `Boolean`, et que son type actuel est : »\n\n- un **Boolean** : aucune conversion.\n- « un **Object** : true. »\n- « un **Number** : false si la valeur est zéro [ou NaN], sinon true [même pour Infinity]. »\n- « un **String** : false si la valeur est une chaîne vide, sinon true. »\n- « un **Null** : false. »\n- « un **Undefined** : false. »\n\n_Note : méfier vous ! Regardez l'exemple ci-dessous._\n\n```js\n// A première vue, si on ne cerne pas la différence entre \n// le type String (type primitif) et l'objet String (type Object),\n// et bien on peut penser que ces deux lignes sont équivalentes.\nvar primiveString = \"\";\nvar objectString = new String(\"\");\n\n// Mais la première est un type String.\nif (primiveString) {\n    console.log(\"true\");\n} else {\n    console.log(\"false\"); // On passe ici !\n}\n// Et la conversion en Bool d'un String vide renvoi \"false\".\n\n// Quant à la deuxième, elle est de type Object.\nif (objectString) {\n    console.log(\"true\"); // On passe ici !\n} else {\n    console.log(\"false\");\n}\n// Et la conversion en Bool d'un Object renvoi \"true\" quoi qu'il arrive !\n\n// Mais par contre...\nif (objectString.toString()) {\n    console.log(\"true\");\n} else {\n    console.log(\"false\"); // On passe ici\n}\n//...avec toString(), on renvoi bien \"false\".\n\n// car \"\" et (new String(\"\")).toString() sont eux bien égaux.\n```\n\n\n\n### L'expression doit être transformée en type Object ###\n\n« Si le type de l'expression doit être `Object`, et que son type actuel est : »\n\n- un **Object** : aucune conversion.\n- « un **Number** : la valeur est injecté dans l'objet équivalent à Number : (new Number(value)). »\n- « un **String** : la valeur est injecté dans l'objet équivalent à String : (new String(value)). »\n- « un **Boolean** : la valeur est injecté dans l'objet équivalent à Boolean : (new Boolean(value)). »\n- « un **Null** : Une exception est levé. »\n- « un **Undefined** : Une exception est levé. »\n\n\n\n\n### Et la réponse est ! ###\n\n« Maintenant que les règles de conversions sont claires, retournons à notre exemple du début. »\n\n```js\nvar five = 5;\nfive.three = 3;\nalert(five + five.three);\n```\n\n« Comme expliqué avant, la première ligne crée une variable nommée `five` dont le type est `Number`. »</p>\n\n« Quand l'[assesseur de propriété](http://ecma-international.org/ecma-262/5.1/#sec-11.2.1) lit `five`, il est converti en type `Object`. L'équivalent du type `Number` est le constructeur `Number` [(le type Object)] qui produit un objet [(puisque c'est une fonction)], et pas le type primitif `Number`. La seconde ligne de notre exemple est donc un équivalent [pour le moteur d'exécution dans ce cas précis] de : »\n\n```js\n(new Number(five)).three = 3;\n```\n\n« Comme vous pouvez le constater, aucune référence à une variable n'a été faite pour l'objet `new Number`. Après que cette expression ai été évaluée, la propriété `three` de l'objet `Number` est abandonnée. »\n\n« Le `five.three` de la troisième ligne créée un nouvel objet Number. Comme le nouvel objet n'a pas de propriété `three`, le type spéciale `undefined` (est [affectée et] retournée [et `five.three` est de type `Undefined`]. Le résultat est équivalent à : »\n\n```js\nalert(5 + undefined);\n```\n\n« L'opérateur d'addition converti chacune des deux expressions en type Number. Dans ce cas `undefined` est converti en `NaN` [et 5 reste de type Number] ce qui donne : »\n\n```js\n« alert(5 + NaN); »\n```\n\n<p id=\"demo\">« Ce qui explique pourquoi la fenêtre d'erreur dans notre exemple affiche `NaN`. »</p>\n\n\n\n\n### Pour aller plus loin dans la compréhension ###\n\nQue ce passerai t-il si le constructeur Number (le type Object (qui affiche 'function' testé par typeof)) possédait bel et bien une propriété nommée « three » ?</p>\n\n```js\n// Ajoutons au constructeur de la fonction Number (le type Object) la propriété « three ».\nNumber.prototype.three = 0; // Initialisation la arbitrairement à 0.\n\nvar five = 5;\nfive.three = 3;\nalert(five + five.three);\n```\n\nCette fois la sortie va t-elle être `NaN` ou `8` ?\n\nEt bien en vérité elle sera `5` (défini dans le prototype). Pourquoi ? La réponse est que `five.three` devient bien `(new Number(five)).three` et qu'une propriété three existant bien : à ce moment précis de l'exécution, `(new Number(five)).three` ne vaut plus `0` (prototype) mais bien `3` (assignation). Cependant, une fois l'instruction terminée : le `(new Number(five))` disparait et la valeur `3` de la propriété disparaît avec lui. Passé à l'instruction suivante, `five` est lu en tant que type Number et à `five.three` le moteur JavaScript recommence le processus précédent pour aboutir à `0` (pas d'assignation ici).</p>\n\n\n**Obtenir 8 en forçant la valeur du prototype**\n\nPour obtenir en sortie `8` **sans toucher au code**, la seule solution est de définir le `Number.prototype.three` à `3`\n\n```js\nNumber.prototype.three = 3;\nvar five = 5;\nfive.three = 3;\nalert(five + five.three);\n```\n\n**Obtenir 8 par avec une variable intermédiaire**\n\nPour obtenir en sortie `8` on peut également utiliser une variable intermédiaire pour « conserver » l'état de transformation `(new Number(five)).three.`\n\n```\nNumber.prototype.three = 0;\nvar \n   five = 5,\n   temp = five.three = 3;\nalert(five + temp);\n```\n\n**Obtenir 8 par déclaration Object au lieu de Number**\n\nPour obtenir en sortie `8` on peut également initialiser directement un type Number à partir du constructeur Number.\n\n```js\nNumber.prototype.three = 0;\n\nvar five = new Number(5);\nfive.three = 3;\nalert(five + five.three);\n```\n\n**Obtenir 8 en Bonus**\n\nPour obtenir en sortie `8` on pouvait aussi faire....\n\n```js\nalert(8);\n```\n\n... okay je m'arrête là :) C'était juste, pour finir en vous disant que bien que les tests ci-avant sont « inutiles » : ils sont là uniquement pour vous montrer les différents mécanismes possibles et la richesse de ceux-ci comparés à d'autres langages plus strictes. Après « c'est bien » ou « c'est mal » ; c'est une autre histoire.\n\n\n\n\n\n## Function et Null sont dans un bâteau ##\n\nD'un côté, Dmitry Baranovskiy et moi-même affirmons que les 6 types en JavaScript sont :\n\n- Object, Number, String, Boolean, **Null** et **Undefined**.\n\nEt pourtant, vous pourrez lire, comme dans [JavaScript Eloquent](http://eloquentjavascript.net/) ([ici, ligne 4](http://eloquentjavascript.net/chapter2.html)) que les 6 types de JavaScript sont :\n\n- Object, Number, String, Boolean, **Function** et **Undefined**.\n\nMais alors qui a raison ? S'il y a bien quelqu'un qui a raison ce sont les [spécifications officielles](http://www.ecma-international.org/publications/standards/Ecma-262.htm\" title=\"Standard ECMA-262) qui liste bien que les 6 types sont [Object, Number, String, Boolean, Null et Undefined](http://ecma-international.org/ecma-262/5.1/#sec-8).\n\nMais alors comment des ouvrages professionnels peuvent se tromper ? En réalité il ne se trompe pas réellement, mais ne font pas référence aux types JavaScipt mais [aux valeurs que peut retourner la fonction `typeof`](http://ecma-international.org/ecma-262/5.1/#sec-11.4.3) censé retourner le type d'une expression. En effet la spécification demande explicitement aux moteurs JavaScript de retourner 'function' et non pas 'object' pour une fonction (type Object) et de retourner 'object' plutôt que 'null' pour la valeur null (le type Null). Et bah franchement...\n\n\n\n\n\n## Mémo : les 6 types JavaScript ##\n\nAfin de tester ce qui a été évoqué par **Dmitry Baranovskiy**, voici plusieurs tests.\n\n\n\n\n### Le type Object (et déclinaisons) ###\n\n#### Object ####\n\n```js\n/********************/\n/* Le type Object */\n/********************/\n\n// Objet en JavaScript\nvar objectJS = new Object();\nconsole.log(typeof objectJS); // retourne \"object\"\nconsole.log(typeof Object); // retourne \"function\"\nconsole.log(objectJS instanceof Object); // retourne \"true\"\nconsole.log(objectJS instanceof Array); // retourne \"false\"\nconsole.log(objectJS instanceof Function); // retourne \"false\"\n\n// Objet en JSON\nvar objectJSON = {};\nconsole.log(typeof objectJSON); // retourne \"object\"\nconsole.log(typeof {}); // retourne \"object\" (la même chose que \"new Object()\")\nconsole.log(objectJSON instanceof Object); // retourne \"true\"\nconsole.log(objectJS instanceof Array); // retourne \"false\"\nconsole.log(objectJS instanceof Function); // retourne \"false\"\n```\n\n#### Array ####\n\n```js\n/**************************/\n/* Le type Object : Array */\n/**************************/\n// Tableau en JavaScript\nvar arrayJS = new Array();\nconsole.log(typeof arrayJS); // retourne \"object\"\nconsole.log(typeof Array); // retourne \"function\"\nconsole.log(arrayJS instanceof Object); // retourne \"true\"\nconsole.log(arrayJS instanceof Array); // retourne \"true\"\nconsole.log(arrayJS instanceof Function); // retourne \"false\"\n\n// Tableau en JSON\nvar arrayJSON = [];\nconsole.log(typeof arrayJSON); // retourne \"object\"\nconsole.log(typeof []); // retourne \"object\" (la même chose que \"new Array()\")\nconsole.log(arrayJSON instanceof Object); // retourne \"true\"\nconsole.log(arrayJSON instanceof Array); // retourne \"true\"\nconsole.log(arrayJSON instanceof Function); // retourne \"false\"\n```\n\n\n\n#### Function ####\n\n```js\n/*****************************/\n/* Le type Object : Function */\n/*****************************/\n\n// Fonction en JavaScript\nvar functionJS = function() {};\nconsole.log(typeof functionJS); // retourne \"function\"\nconsole.log(typeof Function); // retourne \"function\"\nconsole.log(functionJS instanceof Object); // retourne \"true\"\nconsole.log(functionJS instanceof Array); // retourne \"false\"\nconsole.log(functionJS instanceof Function); // retourne \"true\"\n```\n\n#### Date, RegExp, Error ####\n\n```js\n/****************************************/\n/* Les autres types Object instanciable */\n/****************************************/\n\n// L'objet Date\nvar date = new Date();\nconsole.log(typeof date); // retourne \"object\"\nconsole.log(typeof Date); // retourne \"function\"\nconsole.log(date instanceof Object); // retourne \"true\"\nconsole.log(date instanceof Date); // retourne \"true\"\nconsole.log(date instanceof Function); // retourne \"false\"\n\n// L'objet RegExp\nvar regex = new RegExp(\" \");\nconsole.log(typeof regex); // retourne \"object\"\nconsole.log(typeof RegExp); // retourne \"function\"\nconsole.log(regex instanceof Object); // retourne \"true\"\nconsole.log(regex instanceof RegExp); // retourne \"true\"\nconsole.log(regex instanceof Function); // retourne \"false\"\n\n// L'objet RegExp court\nvar sRegex = / /;\nconsole.log(typeof sRegex); // retourne \"object\"\nconsole.log(typeof / /); // retourne \"object\" (la même chose que \"new RegExp()\")\nconsole.log(sRegex instanceof Object); // retourne \"true\"\nconsole.log(sRegex instanceof RegExp); // retourne \"true\"\nconsole.log(sRegex instanceof Function); // retourne \"false\"\n\n// L'objet Error\nvar error = new Error();\nconsole.log(typeof error); // retourne \"object\"\nconsole.log(typeof Error); // retourne \"function\"\nconsole.log(error instanceof Object); // retourne \"true\"\nconsole.log(error instanceof Error); // retourne \"true\"\nconsole.log(error instanceof Function); // retourne \"true\"\n```\n\n#### JSON, Math, Global (Window) ####\n\n```js\n/**********************************/\n/* Les autres types Object simple */\n/**********************************/\n\n// L'objet JSON\n//var json = new JSON(); // error\nconsole.log(typeof json); // retourne \"undefined\" (n'existe pas du coup)\nconsole.log(typeof JSON); // retourne \"object\"\n//console.log(json instanceof Object); // error\n//console.log(json instanceof JSON); // error\n//console.log(json instanceof Function); // error\n\n// L'objet Math\n//var math = new Math(); // error\nconsole.log(typeof math); // retourne \"undefined\" (n'existe pas du coup)\nconsole.log(typeof Math); // retourne \"object\"\n//console.log(math instanceof Object); // error\n//console.log(math instanceof Math); // error\n//console.log(math instanceof Function); // error\n\n// L'objet Global (Window dans les navigateurs)\n//var globalVar = new global(); // error\nconsole.log(typeof globalVar); // retourne \"undefined\" (n'existe pas du coup)\nconsole.log(typeof global); // retourne \"object\"\n//console.log(globalVar instanceof Object); // error\n//console.log(globalVar instanceof global); // error\n//console.log(globalVar instanceof Function); // error\n```\n\n\n\n\n### Les types primitifs (et Objets associés) ###\n\n#### Number ####\n\n```js\n/******************/\n/* Le type Number */\n/******************/\n\n// Number primitif\nvar pNumber = 104.56;\nconsole.log(typeof pNumber); // retourne \"number\"\nconsole.log(typeof 104.56); // retourne \"number\"\nconsole.log(pNumber instanceof Object); // retourne \"false\"\nconsole.log(pNumber instanceof Number); // retourne \"false\"\n\n// L'Objet Number\nvar number = new Number(104.56);\nconsole.log(typeof number); // retourne \"object\"\nconsole.log(typeof Number); // retourne \"function\"\nconsole.log(number instanceof Object); // retourne \"true\"\nconsole.log(number instanceof Number); // retourne \"true\"\n\n// Number primitif à 0\nvar pNumber0 = 0;\nconsole.log(typeof pNumber0); // retourne \"number\"\nconsole.log(pNumber0 instanceof Object); // retourne \"false\"\nconsole.log(pNumber0 instanceof Number); // retourne \"false\"\n\n// L'Objet Number à 0\nvar number0 = new Number(0);\nconsole.log(typeof number0); // retourne \"object\"\nconsole.log(number0 instanceof Object); // retourne \"true\"\nconsole.log(number0 instanceof Number); // retourne \"true\"\n\n// Number primitif invalide\nvar pNumberN = NaN;\nconsole.log(typeof pNumberN); // retourne \"number\"\nconsole.log(pNumberN instanceof Object); // retourne \"false\"\nconsole.log(pNumberN instanceof Number); // retourne \"false\"\n\n// L'Objet Number invalide\nvar numberN = new Number(NaN);\nconsole.log(typeof numberN); // retourne \"object\"\nconsole.log(numberN instanceof Object); // retourne \"true\"\nconsole.log(numberN instanceof Number); // retourne \"true\"\n\n// Number primitif infinie\nvar pNumberI = Infinity;\nconsole.log(typeof pNumberI); // retourne \"number\"\nconsole.log(pNumberI instanceof Object); // retourne \"false\"\nconsole.log(pNumberI instanceof Number); // retourne \"false\"\n\n// L'Objet Number infinie\nvar numberI = new Number(Infinity);\nconsole.log(typeof numberI); // retourne \"object\"\nconsole.log(numberI instanceof Object); // retourne \"true\"\nconsole.log(numberI instanceof Number); // retourne \"true\"\n```\n\n#### String ####\n\n```js\n/******************/\n/* Le type String */\n/******************/\n\n// String primitif\nvar pString = \"test\";\nconsole.log(typeof pString); // retourne \"string\"\nconsole.log(typeof \"test\"); // retourne \"string\"\nconsole.log(pString instanceof Object); // retourne \"false\"\nconsole.log(pString instanceof String); // retourne \"false\"\n\n// L'Objet String\nvar string = new String(\"test\");\nconsole.log(typeof string); // retourne \"object\"\nconsole.log(typeof String); // retourne \"function\"\nconsole.log(string instanceof Object); // retourne \"true\"\nconsole.log(string instanceof String); // retourne \"true\"\n\n// String vide primitif\nvar pStringE = \"\";\nconsole.log(typeof pStringE); // retourne \"string\"\nconsole.log(pStringE instanceof Object); // retourne \"false\"\nconsole.log(pStringE instanceof String); // retourne \"false\"\n\n// L'Objet vide String\nvar stringE = new String(\"\");\nconsole.log(typeof stringE); // retourne \"object\"\nconsole.log(stringE instanceof Object); // retourne \"true\"\nconsole.log(stringE instanceof String); // retourne \"true\"\n```\n\n\n\n#### Boolean ####\n\n```js\n/*******************/\n/* Le type Boolean */\n/*******************/\n\n// Boolean primitif à true\nvar pBoolTrue = true;\nconsole.log(typeof pBoolTrue); // retourne \"boolean\"\nconsole.log(typeof true); // retourne \"boolean\"\nconsole.log(pBoolTrue instanceof Object); // retourne \"false\"\nconsole.log(pBoolTrue instanceof Boolean); // retourne \"false\"\n\n// L'Objet Boolean à true\nvar boolTrue = new Boolean(true);\nconsole.log(typeof boolTrue); // retourne \"object\"\nconsole.log(typeof Boolean); // retourne \"function\"\nconsole.log(boolTrue instanceof Object); // retourne \"true\"\nconsole.log(boolTrue instanceof Boolean); // retourne \"true\"\n\n// Boolean primitif à false\nvar pBoolTrue = false;\nconsole.log(typeof pBoolTrue); // retourne \"boolean\"\nconsole.log(pBoolTrue instanceof Object); // retourne \"false\"\nconsole.log(pBoolTrue instanceof Boolean); // retourne \"false\"\n\n// L'Objet Boolean à false\nvar boolTrue = new Boolean(false);\nconsole.log(typeof boolTrue); // retourne \"object\"\nconsole.log(boolTrue instanceof Object); // retourne \"true\"\nconsole.log(boolTrue instanceof Boolean); // retourne \"true\"\n```\n\n\n\n#### Null ####\n\n```js\n/*******************/\n/* Le type Null */\n/*******************/\n\n// Null primitif\nvar pNull = null;\nconsole.log(typeof pNull); // retourne \"object\"\nconsole.log(typeof null); // retourne \"object\"\nconsole.log(typeof Null); // retourne \"undefined\"\nconsole.log(pNull instanceof Object); // retourne \"false\"\n//console.log(pNull instanceof Null); //error\n```\n\n\n\n#### Undefined ####\n\n```js\n/*********************/\n/* Le type Undefined */\n/*********************/\n\n// Undefined primitif\nconsole.log(typeof thisVarDoesntExist); // retourne \"undefined\"\nconsole.log(typeof undefined); // retourne \"undefined\"\nconsole.log(typeof Undefined); // retourne \"undefined\"\n//console.log(thisVarDoesntExist instanceof Object); //error\n//console.log(pNull instanceof Undefined); //error\n```", "dates" : { "published" : { "$date" : 1368793200000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "$(\".openable\").click(function () {\n    window.open($(this).attr(\"src\"));\n});", "stylesheet" : "", "title" : "Les <span>types</span> en <span>JavaScript</span> : pour tout savoir !", "urn" : "les-types-en-javascript-pour-tout-savoir" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71b0" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "5310456355dfd5f7698d48b6" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48ba" } ], "content" : "Je rencontre souvent des personnes se plaignant de problèmes de `z-index` et qui les évitent ou se contente de dire que les `z-index` ça pose problème. Bien souvent le problème vient du fait que le développeur ne s'attend pas à ce que la priorité d'affichage des `z-index` fonctionnent en cascade dans le DOM. Voyez plutôt l'exemple suivant :\n\n\n\n\n\n## Un exemple d'utilisation du z-index problématique ##\n\n<div id=\"ex-global\">\n\t<div id=\"ex-content\">\n\t\tCoucou je suis le contenu principale !<br />\n\t\tz-index: 1;\n\t\t<div id=\"ex-test\">\n\t\t\tCoucou je suis un problème !<br />\n\t\t\tz-index: 7777;\n\t\t</div>\n\t</div>\n\t<div id=\"ex-footer\">\n\t\t<div>\n\t\t\tCoucou je suis le pied de page !<br />\n\t\t\tz-index: 2;\n\t\t</div>\n\t</div>\n</div>\n\nNous observons que la zone avec un z-index de 7777 passe en dessous de la zone avec un z-index de 2. Comment cela est-il possible ? « J'ai des problèmes de z-index ».\n\nRegardons de plus prêt le code :\n\n\n\n### HTML ###\n\n```html\n<div id=\"content\">\n\tCoucou je suis le contenu principale !<br />\n\tz-index: 1;\n\t<div id=\"test\">\n\t\tCoucou je suis un problème !<br />\n\t\tz-index: 7777;\n\t</div>\n</div>\n<div id=\"footer\">\n\t<div>\n\t\tCoucou je suis le pied de page !<br />\n\t\tz-index: 2;\n\t</div>\n</div>\n```\n\n### CSS ###\n\n```css\n#content {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\tz-index: 1; /* Le contenu doit s'afficher en arrière plan */\n}\n#footer  {\n\tpadding-top: 100px;\n\tmargin: 0 auto;\n\twidth: 50%;\n}\n#footer > div {\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n\tz-index: 2; /* Le contenu s'affiche au-dessus de #content */\n}\n#test {\n\tposition: absolute;\n\twidth: 80%;\n\theight: 200px;\n\tz-index: 7777; /* Le contenu ne s'affiche pas au-dessus de #footer comme attendu... */\n\tleft: 10%;\n}\n```\n\n## z-index et priorité d'affichage en cascade dans le DOM ##\n\nTous les éléments dont nous allons parler sont des éléments en `position: relative`, `position: absolute` ou `position: fixed`.\n\n\n\n### Priorité aux éléments frères bas ###\n\nOn part des éléments les plus hauts dans le DOM et de même niveau (frères). C'est l'élément situé en dessous d'un autre dans le code source qui s'affiche par dessus l'autre.\n\n\n\n### Changer les priorités ###\n<p>Pour modifier ce comportement on applique un z-index plus grand aux éléments plus haut pour les forcer à passer par dessus.</p>\n\n### Priorité aux éléments parents ###\n\nQuoi qu'il arrive, et peut importe le `z-index` utilisé, un élément fils d'un élément avec un `z-index` plus faible qu'un de ses frères ne passera jamais au-dessus de ce frère. Il faut se faire une raison...\n\n\n\n\n\n## Mon conseil ##\n\n**Le mieux est de ne pas mélanger l'affichage relatif/absolue/fixe d'éléments fils venant de différent pères eux-mêmes relatifs.**", "dates" : { "published" : { "$date" : 1372435860000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "style" : "#ex-content {\r\n\t-moz-box-sizing: border-box;\r\n\tbox-sizing: border-box;\r\n\tpadding: 8px;\r\n\tcolor: #ffffff;\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: #800000;\r\n\tz-index: 1;\r\n}\r\n#ex-footer  {\r\n\tpadding-top: 100px;\r\n\tmargin: 0 auto;\r\n\twidth: 50%;\r\n\t-moz-box-sizing: border-box;\r\n\tbox-sizing: border-box;\r\n}\r\n#ex-footer > div {\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: #008000;\r\n\tz-index: 2;\r\n\tpadding: 8px;\r\n\t-moz-box-sizing: border-box;\r\n\tbox-sizing: border-box;\r\n\tcolor: #ffffff;\r\n}\r\n#ex-test {\r\n\tposition: absolute;\r\n\twidth: 80%;\r\n\theight: 200px;\r\n\tbackground-color: #000080;\r\n\tz-index: 7777;\r\n\tleft: 10%;\r\n\tpadding: 8px;\r\n\t-moz-box-sizing: border-box;\r\n\tbox-sizing: border-box;\r\n\tcolor: #ffffff;\r\n}\r\n#ex-global {\r\n\theight: 300px;\r\n\tposition: relative;\r\n\tmargin: 16px;\r\n\t-moz-box-sizing: border-box;\r\n\tbox-sizing: border-box;\r\n}", "stylesheet" : "#ex-content {\n\t-moz-box-sizing: border-box;\n\tbox-sizing: border-box;\n\tpadding: 8px;\n\tcolor: #ffffff;\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: #800000;\n\tz-index: 1;\n}\n#ex-footer  {\n\tpadding-top: 100px;\n\tmargin: 0 auto;\n\twidth: 50%;\n\t-moz-box-sizing: border-box;\n\tbox-sizing: border-box;\n}\n#ex-footer > div {\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: #008000;\n\tz-index: 2;\n\tpadding: 8px;\n\t-moz-box-sizing: border-box;\n\tbox-sizing: border-box;\n\tcolor: #ffffff;\n}\n#ex-test {\n\tposition: absolute;\n\twidth: 80%;\n\theight: 200px;\n\tbackground-color: #000080;\n\tz-index: 7777;\n\tleft: 10%;\n\tpadding: 8px;\n\t-moz-box-sizing: border-box;\n\tbox-sizing: border-box;\n\tcolor: #ffffff;\n}\n#ex-global {\n\theight: 300px;\n\tposition: relative;\n\tmargin: 16px;\n\t-moz-box-sizing: border-box;\n\tbox-sizing: border-box;\n}", "title" : "<span>Problème</span> de <span>z-index</span> et <span>priorité</span> d'<span>affichage</span>", "urn" : "probleme-de-z-index-et-priorite-d-affichage" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71b2" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48b7" }, { "$oid" : "5310456355dfd5f7698d48c5" }, { "$oid" : "5310456355dfd5f7698d48b6" }, { "$oid" : "5310456355dfd5f7698d48ce" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48ba" } ], "content" : "C'est suite à plusieurs conversations m'invitant à ne pas utiliser de multiples balises `h1` dans mes intégrations HTML (et plus récemment une demande « insistante » sur le fait de ne pas le faire) que je me vois forcé de marcher sur les pas de <a href=\"http://www.goetter.fr/\" title=\"Site Raphaël Goetter\">Raphaël Goetter</a> -qui avait <a href=\"http://blog.goetter.fr/articles/mythe-h1-unique-html/\" title=\"Le mythe de l’élément H1 unique en HTML\">déjà abordé le sujet</a>- pour expliquer pourquoi : en plus d'être tout à fait valide, cette pratique est bénéfique.\n\nTout document HTML5 dispose de cloison de contenu ([Sectionneur de contenu](http://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#sectioning-content)) que sont `article`, `aside`, `nav` et `section`. Ces zones de contenu peuvent chacune contenir une balise `header` et `footer` (ne cloisonnant pas elles-mêmes le contenu) et de multiple éléments de titrage ([Titre en HTML](http://www.w3.org/TR/html-markup/h1.html)) allant de `h1` à `h6`.\n\nBien que l'utilisation de plus d'une balise `h1` ai pu rationnellement laisser à débattre (même si techniquement les standards ne l'interdise pas), les recommandations et même l'interdiction d'une telle pratique ne sont plus pertinentes et rationnelles à l'heure du HTML5.\n\n\n\n\n\n## La balise h1 et les balises entêtes h2-h6 ##\n\n\n\n### Que dit la référence HTML ###\n\nLe [W3C], sans parler de HTML5, nous explique [ici](http://www.w3.org/TR/html-markup/h1.html) que : « Les éléments h1 à h6 servent de titre pour les sections auxquelles ils sont rattachés. ». Dans les contraintes additionnelles (là où logiquement nous devrions donc trouver notre interdiction de multiple `h1`) il est seulement mentionné que :\n\n- « L'élément h1 ne doit pas être contenu comme élément enfant d'un élément address. »\n- « L'attribut align sur l'élément h1 est obsolète. Utilisez CSS à la place. »\n\nAucune interdiction n'est donc mentionnée dans cette partie. Ces balises sont autorisés dans [les éléments listés ici](http://www.w3.org/TR/html-markup/common-models.html#common.elem.flow).\n\n [W3C]: http://www.w3.org/TR/html-markup/h1.html\n\n\n\n### Que dit la référence HTML5 ###\n\nLe [W3C] nous explique ([ici](http://www.w3.org/TR/2011/WD-html5-20110525/sections.html#the-section-element)) : « L'élément section représente une zone ou une application générique à un document. Une section, dans ce contexte, est un regroupement de contenu avec une même thématique, et de fait avec des balises d'entêtes. ».\n\nLe [W3C] nous explique également [ici](http://www.w3.org/TR/2011/WD-html5-20110525/sections.html#headings-and-sections) que : « Les éléments `h1–h6` et l'élément `hgroup` sont des éléments d'entêtes. ».\n\n## Exemple donné par le W3C ##\n\nAvant de présenter des exemples tous valide, soulignons que le [W3C] explique : « Les sections peuvent contenir des balises d'entête de n'importe quel niveau. Mais l'auteur insiste lourdement sur le fait de n'utiliser que des éléments `h1`, ou d'utiliser les éléments de rang appropriés pour les sections imbriquées à différents niveaux. »\n\n### Exemple valide ###\n\n> ```html\n<body>\n    <h1>Foo</h1>\n    <h2>Bar</h2>\n    <blockquote>\n        <h3>Bla</h3>\n    </blockquote>\n    <p>Baz</p>\n    <h2>Quux</h2>\n    <section>\n        <h3>Thud</h3>\n    </section>\n    <p>Grunt</p>\n</body>\n```\n\n\n\n### Deux exemples valides, mais avec une différence de clarté ###\n\n\n> **Peu lisible** *`ici`*\n```html\n<body>\n    <h4>Apples</h4>\n    <p>Apples are fruit.</p>\n    <section>\n        <h2>Taste</h2>\n        <p>They taste lovely.</p>\n        <h6>Sweet</h6>\n        <p>Red apples are sweeter than green ones.</p>\n        <h1>Color</h1>\n        <p>Apples come in various colors.</p>\n    </section>\n</body>\n```\n\npar contre\n\n> **Plus lisible**\n```html\n<body>\n    <h1>Apples</h1>\n    <p>Apples are fruit.</p>\n    <section>\n        <h2>Taste</h2>\n        <p>They taste lovely.</p>\n        <section>\n            <h3>Sweet</h3>\n            <p>Red apples are sweeter than green ones.</p>\n        </section>\n    </section>\n    <section>\n        <h2>Color</h2>\n        <p>Apples come in various colors.</p>\n    </section>\n</body>\n```\n\n\n\n### Le plus facile à maintenir (les sections peuvent bouger) ###\n\n> **Maintenable** **`ici`** \n```html\n<body>\n    <h1>Apples</h1>\n    <p>Apples are fruit.</p>\n    <section>\n        <h1>Taste</h1>\n        <p>They taste lovely.</p>\n        <section>\n            <h1>Sweet</h1>\n            <p>Red apples are sweeter than green ones.</p>\n        </section>\n    </section>\n    <section>\n        <h1>Color</h1>\n        <p>Apples come in various colors.</p>\n    </section>\n</body>\n```\n\n[Explication approfondie sur une architecture HTML orientée composants](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/).\n\n\n\n\n\n## Les multiples h1 et le SEO ##\n\nEt qu'en dise les moteurs ? Cela est tout à fait pris en compte par les moteurs et heureusement. En se posant deux minutes : on s'aperçoit aisément qu'une architecture sectionné avec plusieurs `h1` est plus facilement maintenable qu'une architecture à plat parsemée de `h1` à `h6`. Un exemple en est fait dans [Conventions HTML et CSS orientés composants](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/).\n\nMais je laisse la parole à [Matt Cutts](http://www.mattcutts.com/blog/), ingénieur chez Google depuis 2000 communiquant énormément via son blog du SEO chez Google :\n\n<div class=\"video\">\n\t<iframe width=\"500\" height=\"330\" src=\"//www.youtube.com/embed/GIn5qJKU8VM\" frameborder=\"0\" allowfullscreen></iframe>\n</div>\n\nLe monsieur nous explique que s'il y a une raison logique à avoir plusieurs sections et plusieurs balises `h1` dans une page, ce n'est pas mauvais de les mettre en place. Il insiste sur le fait qu'une page intégralement remplis de `h1` est problématique en ce qui concerne par exemple un rendu sans CSS (si celle-ci ne se charge pas par exemple) et qu'il est toujours bon d'utiliser les autres balises de niveau. L'important est que les balises h1 restent réservées si possible à la partie entête de chaque section. Mais si elles sont utilisées de manière logique et avec parcimonie il n'y a aucun inconvénient SEO.\n\n## Il est autorisé d'avoir plusieurs h1 dans une page HTML5 ##\n\nEn conclusion utilisés plusieurs balises `h1` dans un document HTML5 est non seulement valide, mais recommandé par le W3C pour respecter une logique de hiérarchie. De plus si deux éléments de premier niveau se valent en importance, il n'y a pas de problème à utiliser deux balises `h1`, le `title` étant l'unique élément pouvant représenter un titre unique pour une page donnée.", "dates" : { "published" : { "$date" : 1375876320000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "style" : ".video {\r\n\tmargin: 8px 0;\r\n}\r\n.video iframe {\r\n\twidth: 100%;\r\n\tmargin: 0 auto;\r\n}\r\n", "stylesheet" : ".video {\n\tmargin: 8px 0;\n}\n.video iframe {\n\twidth: 100%;\n\tmargin: 0 auto;\n}\n", "title" : "Les <span>balises</span> <span>h1</span> multiples autorisées en <span>HTML5</span>", "urn" : "les-balises-h1-multiples-autorisees-en-html5" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71b3" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "5310456355dfd5f7698d48c5" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48c3" } ], "content" : "Le « Responsive Web Design » comme son nom l’indique est le concept de « Responsive Design » adapté au Web. Il est parfois raccourci par le terme  « RWD » ou simplement par « Responsive ».\n\n<figure>\n<img src=\"media/images/upload/responsive-web-design.jpg\" alt=\"Responsive Web Design\">\n<figcaption>Source : www.tridentdesign.com</figcaption>\n</figure>\n\nDans la majorité des cas d’utilisations, il est utilisé comme raccourci pour désigner la version Mobile d’un site web originalement conçu pour un écran d’ordinateur.\n\nLa vérité est que le Responsive Web Design n’est qu’un des nombreux concepts appliqués à un site web pour le rendre « utilisable agréablement » sur mobile tout en sachant qu’il ne se limite pas qu’aux mobiles et qu’il vaut tout aussi bien pour :\n\n- une tablette,\n- une phablette (terminal intermédiaire se situant entre le smartphone et la tablette),\n- un ordinateur et tous ses types d’écrans (HD, 3D, tactile),\n- une télévision numérique,\n- un tableau de bord de voiture,\n- une console de jeu portable,\n- …et tout appareil capable d’afficher un site web par l’intermédiaire d’un navigateur web.\n\nEn plus du fait que Responsive Web Design ne signifie donc pas obligatoirement « version mobile », il est le porte étendard d’une liste de concept comme l’« Adaptative Web Design ». Difficile de comprendre ce dont on parle réellement quand il est question de Responsive Web Design.\n\n\n\n\n\n## Les concepts permettant (entre autre) de faire du web mobile ##\n\nFaisons un petit tour des termes et concepts autour de la réalisation mobile d’une interface web.\n\n\n\n### Adaptatif Web Design ###\n\nL’idée derrière ce terme est que la partie fonctionnelle d’un site web est différente en fonction du périphérique qui réclame la page web. Si je demande une page sur un téléphone, il est probable que je ne fournisse pas la vidéo HD que j’aurais fourni si elle avait été demandée sur un ordinateur. Il est également probable que je ne fournisse pas de carte Google Maps sur mobile mais plutôt un lien ouvrant l’application Google Maps sur le téléphone alors que sur ordinateur, une grande carte interactive aurait été proposée.\n\nCe concept repose donc sur un design fonctionnel (et donc visuel) adapté au périphérique de l’utilisateur. Le cas le plus extrême de ce concept pourrait être de ne pas proposer seulement des fonctionnalités adaptées mais un site dédié complet (un site version ordinateur à une adresse, un site version mobile à une autre).\n\n*__Technique__ : Cela demande d’utiliser du JavaScript côté client et également de communiquer des informations clientes au serveur pour qu’il décide quelles sont les fonctionnalités nécessaires au périphérique. Le serveur peut donc décider de renvoyer certaines fonctionnalités. Dans un cas de site mobile dédié, de renvoyer l’utilisateur sur le site mobile en question.*\n\n\n\n### Responsive Web Design ###\n\nNotre fameux Responsive Web Design, expression fourre-tout dont l’idée originale associée au terme est qu'en fonction de la taille et des interactions utilisateurs possibles (souris ou doigts) le design n’est pas présenté de la même manière.\n\nAussi un affichage sur 3 grandes colonnes côte à côte sur grand écran se résumera à 3 éléments l’un en dessous de l’autre sur mobile. Un menu large vertical se permettant de prendre de la place sur grand écran se résumera à un menu vertical masqué par défaut pour garder de la place visible sur mobile, etc… Il est donc tout à fait possible qu’avec le même périphérique, en fonction qu’il affiche la page en mode portrait ou en mode paysage, le rendu soit différent.</p>\n\nLe Responsive Design adapté au web utilise principalement la technique de « Responsive Layout » (ou Fluid Layout) qui est la fusion de deux concepts sous-jacents. Voici donc (Responsive Layout inclus) les 3 principes responsives.\n\n#### Basic Layout ####\n\nChaque partie du design bouge de manière fluide en fonction de la largeur du périphérique qui l’affiche. On obtient donc des titres sur 1 ligne qui peuvent passer sur 3 et tous les éléments ne font que s’étirer et passer les un sous les autres. Il n’y a aucune disposition spéciale ou changement notable de design entre une basse et une haute résolution, seulement un étirement infini : c’est le concept de « fluidité ». Il est dit basique dans le sens ou le rendu « sans CSS » d’une page web possède ces caractéristiques.\n\nCe concept est utilisé majoritairement pour les sites mobiles dédiés (un autre site web uniquement réservé à l’affichage mobile) permettant éventuellement un affichage sur grand mobile et tablette).\n\n*__Technique__ : La feuille CSS est simple et ne fait pas intervenir de Media Queries. Les tailles sont fournies en % et non en pixel et beaucoup de valeur sont en auto. Les éléments ne prennent qu’une ligne et s’empile les un sous les autres.*\n\n#### Adaptative Layout ####\n\nÀ ne pas confondre avec l’Adaptative Web Design, ce concept défini le fait qu’un même site web revêt une apparence différente en fonction de résolution d’écran défini à l’avance. Il peut donc en résulter un affichage pour bureau et un affichage pour mobile (et même un affichage pour tablette) sur la même application (page web). Cependant le design est donc adapté uniquement pour 2 ou 3 résolution faisant office de « gap ».\n\nIl en découle donc qu’un périphérique dont l’affichage se situe entre deux gaps prendra l’apparence du gap le plus petit et laissera des blancs de part et d’autre de la page. Ce blanc peut être masqué en forçant alors le zoom de l’écran pour qu’ils n’apparaissent plus.\n\n*__Technique__ : La feuille CSS utilise des Media Queries. L’approche « if … else if  …  else » est envisageable dans le sens ou entre les gaps il n’y a aucune modification CSS. Il y a donc un pend mobile, un pend tablette et un pend ordinateur par exemple. L’approche en cascade (on commence par le desktop, puis on écrase les propriétés différentes au fur et à mesure qu’on descend) est tout aussi valide et permet à terme d’évoluer vers du (Limited) Responsive Layout.*\n\n#### Responsive Layout ####\n\nCe concept est un mélange des deux précédentes approches. Il y a toujours des gaps visuels définis à des résolutions précises mais ces gaps, tout en présentant une disposition différente, garde une cohérence en terme de placement permettant « entre les gaps » de faire intervenir le concept de fluidité. Ainsi quel que soit la résolution du périphérique, le design est toujours adapté à l’écran en rendant fluide le gap précédent ou suivant.\n\n\n> #### Limited Responsive Layout ####\n\n> C’est le concept le plus répandu et le plus associé au « Responsive Web Design ». Il est identique au concept du dessus cependant :\n> - en-dessous du plus petit gap le site n’est plus Responsive mais scrollable et/ou\n> - au-dessus du plus grand gap le site n’est plus Responsive mais des zones vides s’étendent de part et d’autre de l’écran.\n\n\n\n### Desktop First ###\n\nCe concept ne portait pas de nom avant l’arrivée du concept de « Mobile First » mais il désigne tout simplement un site qui a été créé pour s’afficher sur un ordinateur en premier lieu. Ce n’est qu’ensuite, avec le concept de « Progressive Enhancement » (Amélioration Progressive) que vient se greffer des gaps visuels pour les versions tablette et mobile (avec éventuellement de la fluidité).\n\nCette approche donne lieu en générale à des sites finaux « Limited Responsive Layout » ou le site original est le gap final du rendu visuel. En générale ce type d’approche permet de supporter des vieux navigateurs comme IE7 et IE8 tout en permettant du « Responsive Web Design » sur les autres. Cette approche à le défaut d’alourdir en poids les fichiers au fur et à mesure qu’on habille des périphériques aux écrans plus petits.\n\n*__En bref__ : Desktop First supporte les vieux navigateurs facilement mais impose un travail spécifique pour les tablettes et mobiles.*\n\n\n\n### Mobile First ###\n\nC’est l’approche se rapprochant le plus de l’idée première du « Responsive Web Design » permettant un affichage Responsive du petit écran vers les écrans très grand. Cette approche consiste à d’abord pensé le site et le design sur petit périphérique comme des mobiles (d’où le nom) puis ensuite d’augmenter le design vers des périphériques plus gros.\n\nCette approche, en plus de permettre une responsivité infinie permet également de s’assurer que ce sont les plus petits périphériques qui chargent le moins de ressources. Cette approche impose cependant le concept de « Fallback Mechanism » (Dégradation élégante) pour ajouter le support de IE8 et/ou IE7 n’étant pas supporté de base dans cette approche (ou ayant alors l’apparence mobile).\n\n*__En bref__ : Supporte les tablettes et mobiles facilement mais également les écrans HD, etc..., impose un travail spécifique pour IE8 et/ou IE7.*\n\n<figure>\n<img src=\"media/images/upload/43-650x487.png\" alt=\"Responsive Web Design\">\n<figcaption>Source : www.bradfrostweb.com</figcaption>\n</figure>\n\n\n\n### Progressive Enhancement ###\n\nL’amélioration progressive est un concept visant à développer une application (dans notre cas un site web) en partant de standard volontairement âgé et encore supporté par les navigateurs les plus récents pour couvrir une compatibilité maximale avec les anciens périphériques, navigateurs, etc... Elle permet notamment un support sans JavaScript ou un support IE7 ou IE8 plus facile à mettre en place mais bride l’accès aux technologies récentes dans le sens ou les mettre en place devient excessivement complexe et couteux puisqu’il faut continuer le support des navigateurs ne permettant pas nativement de tel chose.\n\nS’ajoute comme une nouvelle brique le passage en Responsive Web Design, très chronophage, et demandant bien souvent une refonte profonde du code initiale de manière à l’améliorer. Bien qu’ils conviennent aux sites existant il est parfois bien plus judicieux dans le cas du passage en Responsive d’un site de le refaire avec l’approche qui va suivre.\n\n\n\n### Fallback Mechanism ###\n\nÀ contre-pied de l’amélioration progressive, la dégradation élégante consiste à utiliser des standards à la pointe de la technologie et en phase avec les périphériques de nos temps de manière à offrir une expérience utilisateur la plus agréable possible compte tenu des outils que leur appareil leur offre.\n\nCela permet facilement d’adapter les designs et les fonctionnalités au monde actuel du web. Il va ensuite être question d’ajouter une surcouche pour gérer les anciens périphériques ne disposant pas de quoi utiliser les nouvelles fonctionnalités (comme IE8 ou IE7). Il convient alors de les rendre utilisable sans nécessairement reproduire à l’identique la fonctionnalité ou le visuel. La structure initiale est souvent légère et adaptée pour une approche Responsive et donc pour faire des versions mobiles (même avec une approche Desktop First).\n\n\n\n\n\n## Maintenant que tout le monde se comprend... ##\n\n...Peut-être pourrez-vous plus aisément bien border le périmètre d'action quand vous réalisez un site Responsive Web Design ou plus vulgairement une « Version Mobile ».", "dates" : { "published" : { "$date" : 1378480500000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "style" : "p.eye-catching,\r\n.variation {\r\nmargin-left: 32px;\r\nfont-size: 0.9em;\r\n}", "stylesheet" : "", "title" : "Les <span>concepts</span> autour du <span>Responsive Web Design</span>", "urn" : "les-concepts-autour-du-responsive-web-design" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71b4" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48c8" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48cc" } ], "content" : "On parle souvent de la grande vélocité de Node.js et de son brillant avenir. Mais il n'est pas toujours judicieux de l'utiliser. Pour certains cas d'utilisations, c'est le meilleur choix à faire (application web temps réel). Pour d'autres cas, ça le deviendra mais c'est encore un peu tôt (CMS web). Et pour d'autre il ne sera jamais réellement adapté (intelligence artificielle). Voici [l'adaptation française] d'un article de [Felix Geisendörfer], contributeur Node.js. Il nous explique de manière pragmatique comment raisonnablement et rationnellement il est possible d'utiliser Node.js pour son business.\n\n [l'adaptation française]: http://nodeguide.com/convincing_the_boss.html (Felix's Node.js Convincing the boss guide)\n [Felix Geisendörfer]: http://felixge.de/ (Felix Geisendörfer) \n\n« Maintenant que vous êtes au point sur l'utilisation de Node.js, il est temps de convaincre votre boss. Enfin peut-être. J'ai eu l'occasion de conseiller différente entreprise sur la question : Node.js est la bonne technologie ? Et parfois, la réponse est tout simplement non.\n\nCe guide est ma collection opiniâtre des conseils pour ceux d'entre vous qui veulent savoir si Node.js fait sens pour leur entreprise, et si oui, comment convaincre la direction.\n\n\n\n\n\n## Les mauvais cas d'utilisation ##\n\n### Des applications à forte charge CPU ###\n\nMême si j'adore Node.js, il y a plusieurs cas d'utilisation où ça n'a pas de sens de l'utiliser. Les cas les plus évidents sont ceux des applications avec une importante utilisation du CPU avec peu de communication Entrée/Sortie. Donc, si vous avez l'intention d'écrire un logiciel d'encodage vidéo, d'intelligence artificielle ou un logiciel similaire gourmand en processeur, s'il vous plaît n'utiliser pas Node.js. Alors qu'en Node.js vous allez un peu galérer, vous aurez probablement de meilleurs résultats avec C ou C++.\n\nCela étant dit, Node.js vous permet d'écrire facilement des addons C++, de sorte que vous pourriez l'utiliser comme un moteur de script utilisant lui-même vos algorithmes ultra-secrets.\n\n\n\n\n### Des applications HTML simple (Créer, Lire, Mettre à jour et Effacer) ###\n\nAlors que Node.js devient un outil amusant pour écrire toutes sortes d'applications web, ne vous attendez pas à ce qu'il vous fournisse plus que PHP, Ruby ou Python sur ces points. Oui, votre application sera probablement plus évolutive, mais cependant votre application ne vous permettra pas, magiquement, d'obtenir plus de trafic tout simplement parce que vous l'écrivez en Node.js.\n\nLa vérité est que si nous commençons à regarder du côté de bons frameworks Node.js, il n'y a rien de plus puissant que Rails, CakePHP ou Django sur la scène à l'heure actuelle. Si la plupart de vos applications se contente d'un simple rendu HTML basé sur une base de données précise, s'aider de Node.js ne vous fournira pas beaucoup d'avantages commerciaux tangibles.\n\n\n\n\n### NoSQL + Node.js + Truc qui fait classe mais c'est tout ###\n\nSi l'architecture pour vos prochaines applications contient du NoSQL, arrêtez vous un instant, et lisez ceci :\n\nOui, Redis, CouchDB, MongoDB, Riak, Casandra, etc... ont tous l'air vraiment tentant, mais c'est peut-être la pomme rouge à laquelle Eve n'a pas pu résister. Si vous prenez déjà un risque technologique avec Node.js, vous ne devriez pas les multiplier avec plus de technologie que vous ne comprenez probablement pas encore complètement.\n\nBien sûr, il y a des cas d'utilisation légitimes pour choisir une base de données orientée document. Mais si vous essayez de créer une entreprise basée sur votre logiciel, s'en tenir à la technologie des bonnes vieilles base de données relationnelles (comme postgres ou mysql) pourrait bien être plus pertinent que satisfaire votre esprit de nerd et d'impressionner vos amis.\n\n\n\n\n\n## Les bons cas d'utilisation ##\n\n### Les APIs JSONP ###\n\nConstruire des APIs légère REST / JSON est quelque chose pour laquelle Node.js brille vraiment. Son modèle non-bloquant Entrée/Sortie combiné à JavaScript en font un excellent choix pour emballer d'autres sources de données telles que des bases de données ou des services Web et de les exposer via une interface JSON.\n\n\n\n\n### Applications simple d'une seule page ###\n\nSi vous envisagez d'écrire une application avec une page lourde unique avec AJAX (pensez à Gmail), Node.js répond parfaitement au besoin. La capacité de traiter de nombreuses demandes à la secondes avec un temps de réponse faible, ainsi que le partage des tâches comme la validation d'informations entre le client et le serveur en font un excellent choix pour les applications web modernes qui font beaucoup de traitement sur ​​le client.\n\n\n\n\n### Les lignes de commande des OS ###\n\nAvec Node.js qui est encore jeune, c'est tentant de re-inventer toutes sorte de software pour lui. Cependant, une meilleure approche est de taper dans le vaste univers des lignes de commandes de vos OS. Les capacités de Node permettent de créer des milliers de processus fils et de traiter leurs retours comme un flux permettant de tirer partie des développements existants.\n\n\n\n\n### Flux de données ###\n\nGénéralement les traitements web se limitent aux requêtes et réponses http et aux évènements piochés dans une pile. La vérité est que ces informations font partie d'un flux et les applications Node.js peuvent tirer partie de cela. Le plus gros exemple est celui des uploads en temps réel et également des ponts entre les différentes couches de données.\n\n\n\n\n### Les applications en temps réel ###\n\nUn autre grand aspect de Node.js est la facilité avec laquelle vous pouvez développer des systèmes temps réel souples. Par cela j'entends des trucs comme Twitter, des logiciels de chat, de paris sportifs ou des interfaces avec les réseaux de messageries instantanées.\n\nMais soyez prudent, bien que JavaScript soit un langage dynamique avec garbage collector, votre temps de réponse peut dépendre du temps que mets le garbage collector à faire son ménage (à ce moment votre programme est arrêté). Donc n'essayez pas de créer un system temps réel ultra-précis en Node, cela nécessite des temps de réponses cohérents. Erlang est probablement un meilleurs choix pour ce type d'application.\n\n\n\n\n\n## Convaincre le Boss ##\n\nUne fois que vous avez déterminé que votre cas d'utilisation est parfait pour Node.js, il est temps pour convaincre votre patron ou votre hiérarchie qu'il faut l'utiliser.\n\n\n\n\n### Construction d'un prototype ###\n\nLa meilleure façon de mettre le pied dans la porte, est de suggérer de prendre une semaine pour construire un prototype simple d'une certaine partie de l'application que vous avez à l'esprit. Il est généralement facile d'obtenir le feu vert pour cela, car cela n'implique pas encore un engagement à long terme.\n\n\n\n\n### Trouver des développeurs ###\n\nPensez ce que vous voulez du JavaScript, mais il devient le langage commun à tout les appareils de programmation. Quasiment tous les ordinateurs personnels à un ou plusieurs interpréteurs JavaScript (navigateurs) installés, ce qui signifie qu'il est presque impossible à la plupart des développeurs web de ne pas l'apprendre à un moment donné dans leur carrière.\n\nCela signifie que vous avez un grand pannel de compétences dans vos rangs, et vous avez probablement déjà beaucoup de talent dans votre propre entreprise. Donc, si vous travaillez pour une entreprise en pleine croissance, c'est un solide argument favorisant Node.js.\n\n\n\n\n### Communauté dynamique ###\n\nA ce stade, la communauté Node.js se développe à un rythme fou, attirant certains des développeurs les plus brillants de l'industrie. Cela signifie aussi que l'écosystème de Node augmente chaque jour, et il est également facile d'obtenir un support gratuit et commercial auprès de diverses sources.\n\n\n\n\n### Performance ###\n\nCet argument doit être soigneusement avancé, mais si la performance est un aspect essentiel de votre demande, Node.js a beaucoup à offrir. Avec cinq entreprises (Mozilla, Google, Apple, Microsoft, Opera) en compétition sur la meilleure mise en œuvre JavaScript, l'interprèteur sous-jacente de Node (V8 de Google) est devenu incroyablement rapide, et cela s'améliore de jour en jour.\n\nEn combinant cela avec le modèle non-bloquant de Node en Entrée/Sortie, vous pouvez toujours vous accrocher pour avoir un programme moux. La plupart des applications Node sont facilement capable de gérer des milliers de connexions simultanées, ce qui peut-être considéré comme un standard pour lui.\n\n\n\n\n### Risque pour l'entreprise ###\n\nL'un des risques avec un jeune projet open source est le manque d'engagement à long terme par ses auteurs. Ce n'est pas le cas avec Node.js. Node est actuellement sponsorisé par Joyent, qui a embauché Ryan Dahl et plusieurs autres contributeurs de base, il y a donc une véritable force économique soutenant le développement futur du projet.\n\nEntre autres choses, cela a déjà tenté des sociétés comme Yahoo! et HP (anciennement Palm) qui ont assez de confiance en Node.js pour construire leurs produits de prochaine génération dessus. Votre Boss peut certainement se détendre en lisant leurs témoignages rassurants.\n\n\n\n\n\n## Convaincre un client ##\n\nSi vous êtes une société autonome ou un freelance, convaincre un client d'utiliser Node.js peut-être une autre histoire. Après tout, ils sont généralement très dépendant de votre avis, tout autant que du support continu que vous appportez à leur logiciels.\n\nMon conseil est d'être un peu plus conservateur, et vérifier tout de même si Node est un bon ajustement. Si c'est le cas, assurez-vous que vous avez les ressources et le temps pour soutenir la demande sur le long terme. L'équipe Node.js publie de nouvelles versions à un rythme rapide, et donc vous ne devez jamais attendre plus de 3 à 6 mois pour le mettre à jour vers la dernière version. »", "dates" : { "published" : { "$date" : 1378717860000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Node.js : le <span>guide</span> pour convaincre son Boss", "urn" : "node-js-le-guide-pour-convaincre-son-boss" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71b7" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [], "content" : "<p>Cet article est une adaptation du Google JavaScript Style Guide en FR. La partie ci dessous est spécifique à la manière de travailler de Google et ne constitue pas en soit une manière de procéder absolue, cependant cela peut vous servir de base de travail en groupe. Plusieurs conseils sont d'ailleurs très bon à suivre comme le fait d'attacher explicitement ses contextes d'exécution à une variable faisant office de « namespace » et d'autres discutable comme le nombre d'espace nécéssaire à l'indentation. J'espère que tout ceci pourra vous aiguiller du mieux possible.</p>\n\n<div class=\"correct-practice\">\n\t<div class=\"title highlighting\">Google JavaScript Style Guide en français</div>\n\t<nav class=\"content\">\n\t\t<ol>\n\t\t\t<li><a class=\"highlighting\" href=\"http://blog.haeresis.fr/les-bonnes-pratiques-javascript-selon-google/\" title=\"Les bonnes pratiques JavaScript selon Google\">Les bonnes pratiques JavaScript selon Google</a></li>\n\t\t\t<li><a class=\"highlighting\" href=\"./conventions-et-commentaires-javascript-selon-google/\" title=\"Conventions et commentaires JavaScript selon Google\">Conventions et commentaires JavaScript selon Google</a></li>\n\t\t</ol>\n\t</nav>\n</div>\n\n<h2>Google JavaScript Style Guide en français</h2>\n\n<p>Vous pourrez trouver l'article original <a href=\"http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml\" title=\"Google JavaScript Style Guide\">Google JavaScript Style Guide</a> derrière <a href=\"http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml\" title=\"Google JavaScript Style Guide\">ce lien</a>. Au moment où je réalise cette traduction, le document est en <span class=\"eye-catching\">version 2.93</span>.</p>\n\n<h2>Avant-propos</h2>\n\n<p>JavaScript est le principal langage de programmation de la partie cliente d'un navigateur web utilisé par beaucoup de projets Google open-source. Ce guide de style représente la liste des bonnes et des mauvaises pratiques lors d'un développement JavaScript.</p>\n\n<h2>Règles du langage JavaScript</h2>\n\n<p>Lire mon précédent article : <a class=\"highlighting\" href=\"./les-bonnes-pratiques-javascript-selon-google/\" title=\"Les bonnes pratiques JavaScript selon Google\">Les bonnes pratiques JavaScript selon Google</a>.</p>\n\n<h2>Conventions pour le JavaScript</h2>\n\n<h3>Nommage</h3>\n\n<p>\n\tEn générale, nommé \n\tles fonctions <samp>functionNamesLikeThis</samp>, \n\tles variables <samp>variableNamesLikeThis</samp>,\n\tles classes (constructeur) <samp>ClassNamesLikeThis</samp>,\n\tles énumérations <samp>EnumNamesLikeThis</samp>,\n\tles méthodes <samp>methodNamesLikeThis</samp>,\n\tles constantes <samp>CONSTANT_VALUES_LIKE_THIS</samp>,\n\tles propriétés <samp>foo.namespaceNamesLikeThis.bar</samp> et\n\tles noms de fichier <samp>filenameslikethis.js</samp>.\n\t- <span class=\"eye-catching a-like toggle-more\">En savoir plus</span>\n</p>\n\n<div class=\"toggle-content\">\n\n\t<h4>Propriétés et méthodes</h4>\n\n\t<ul>\n\t\t<li>Les propriétés et méthodes privées (Private) doivent commencé par un underscore.</li>\n\t\t<li>Les propriétés et méthodes protégées (Protected) doivent être nommée sans commencé par un underscore (comme les publiques).</li>\n\t</ul>\n\n\t<p>\n\t\tPour plus d'informations sur <samp>private</samp> et <samp>protected</samp>, rendez-vous à la section ««««««««««««««visibilité»»»»»»»»»»»».\n\t</p>\n\n\t<h4>Paramètres de fonctions et de méthodes</h4>\n\n\t<p>\n\t\tLes arguments de fonction optionnelle doivent commencé par <samp>opt_</samp>.\n\t</p>\n\n\t<p>\n\t\tLes fonctions pouvant prendre un nombre variable d'arguments en entrée doivent avoir un dernier argument nommé <samp>var_args</samp>. Vous ne devez, dans votre code, non plus faire référence à <samp>var_args</samp> ; utilisez un tableau d'arguments.\n\t</p>\n\n\t<p>\n\t\tLes arguments optionnelles peuvent également prendre l'annotation <samp>@param</samp> en commentaire. Comme les deux conventions sont accepté par les compilateurs, utiliser les deux est préférable.\n\t</p>\n\n\t<h4>Accesseurs Get et Set</h4>\n\n\t<p>\n\t\tNous vous décourageons d'utiliser les accesseurs EcmaScript 5 pour rendre accessible les propriétés. Cependant, s'ils douvent être utilisés, les getteurs ne montre aucan signe d'utilité.\n\t</p>\n\n\t<div class=\"worst-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">/**\n * MAUVAIS -- Ne faites PAS ça.\n */\nvar foo = { get next() { return this.nextId++; } };</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<h4>Des fonctions comme accesseurs</h4>\n\n\t<p>\n\t\tLes méthodes de Get ou de Set pour les propriétés ne sont pas requis. Cependant s'ils doivent être utilisés, les Getters doivent être nommés <samp>getFoo()</samp> et les Setters doivent être nommés <samp>setFoo(value)</samp> (Pour les booléen, <samp>isFoo()</samp> est également possible, et souvent cela sonne mieux).\n\t</p>\n\n\t<h4>Les espaces de nom (Namespaces)</h4>\n\n\t<p>\n\t\tJavaScript n'a pas de base de système de package et d'espace de nom.\n\t</p>\n\n\t<p>\n\t\tLes conflits de nom de Variables Globales sont difficile à débogguer, et cause des problèmes insolubles quand deux projets essaient d'être intégrés ensemble. Dans l'optique de rendre du code JavaScript commun partageable, nous avons adopté une convention pour prévenir les conflits. \n\t</p>\n\n\t<p><span class=\"highlighting\">Utilisation de namespaces pour le code global</span></p>\n\n\t<p>\n\t\tTOUJOURS préfixer une variable dans le champ lexical global avec un espace de nom relatif au projet ou à la librairie. Si vous travaillez sur « Project Sloth », un nom possible serait le namespace <samp>sloth.*</samp>\n\t</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">var sloth = {};\n\nsloth.sleep = function() {\n  ...\n};</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p>\n\t\tBeaucoup de librairie JavaScript, tout comme <a href=\"http://code.google.com/closure/library/\" title=\"the Closure Library\">the Closure Library</a> et <a href=\"http://www.dojotoolkit.org/\" title=\"Dojo toolkit\">Dojo toolkit</a> vous fournissent des fonctions de hauts niveaux pour déclarer vos espaces de nom.\n\t</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">goog.provide('sloth');\n\nsloth.sleep = function() {\n  ...\n};</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p><span class=\"highlighting\">Respecter la paternité d'espace de nom</span></p>\n\n\t<p>Quand vous choisissez de créer un espace de nom enfant, assurez-vous que les propriétaire de l'espace de nom parent en sont informés. Si vous démarrez un projet qui créé des « hats » pour les « sloths », soyez sure que l'équipe en charge de <samp>sloth</samp> sait que vous utilisez <samp>sloth.hats</samp>.</p>\n\n\t<p><span class=\"highlighting\">Utiliser des espaces de nom différent pour le code externe et le code interne</span></p>\n\n\t<p>« Un code externe » est un code qui vient de l'extérieur de la base de code, et il est compilé indépendemment. Les espaces de nom externe et interne doivent être strictement séparé. Si vous utilisez une librairie externe vous donnant accès à <samp>foo.hats.*</samp>, votre code interne ne doit pas être défini dans <samp>foo.hats.*</samp>, car cela pourrait poser problème à d'autre équipe voulant ajouter des espaces de nom au votre (qui ne vous appartient pas).</p>\n\n\t<div class=\"worst-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">foo.require('foo.hats');\n\n/**\n * MAUVAIS -- Ne faites PAS ça.\n * @constructor\n * @extends {foo.hats.RoundHat}\n */\nfoo.hats.BowlerHat = function() {\n};</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p>\n\t\tSi vous avez besoin de définir de nouvelles APIs dans un espace de nom externe, vous allez devoir exporter explicitement ces fonctions. Votre code appelera des APIs internes par leurs espaces de nom internes, ceci pour la robustesse et une optimisation du code par le compileur.\n\t</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">foo.provide('googleyhats.BowlerHat');\n\nfoo.require('foo.hats');\n\n/**\n * @constructor\n * @extends {foo.hats.RoundHat}\n */\ngoogleyhats.BowlerHat = function() {\n  ...\n};\n\ngoog.exportSymbol('foo.hats.BowlerHat', googleyhats.BowlerHat);</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p><span class=\"highlighting\">Créer des alias pour les longs espace de nom facilite la lecture</span></p>\n\n\t<p>Utilisez des alias locals sur les variables pour augmenter la lisibilité de votre code. Le nom pourra concorder avec le dernier nom de variable de la chaine d'espace de nom.</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">/**\n * @constructor\n */\nsome.long.namespace.MyClass = function() {\n};\n\n/**\n * @param {some.long.namespace.MyClass} a\n */\nsome.long.namespace.MyClass.staticHelper = function(a) {\n  ...\n};\n\nmyapp.main = function() {\n  var MyClass = some.long.namespace.MyClass;\n  var staticHelper = some.long.namespace.MyClass.staticHelper;\n  staticHelper(new MyClass());\n};</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p>Ne créer pas d'alias sur les espaces de nom. Les alias d'espace de nom doivent uniquement être créé en utilisant «««««««««««««««««««««««««goog.scope »»»»»»»»»»»»»»»»»»»»»»»»».</p>\n\n\t<div class=\"worst-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">myapp.main = function() {\n  var namespace = some.long.namespace;\n  namespace.MyClass.staticHelper(new namespace.MyClass());\n};</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p>\n\t\tIl est donc interdit d'accéder à une propriété d'un alias, sauf si c'est un enumérateur.\n\t</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">/** @enum {string} */\nsome.long.namespace.Fruit = {\n  APPLE: 'a',\n  BANANA: 'b'\n};\n\nmyapp.main = function() {\n  var Fruit = some.long.namespace.Fruit;\n  switch (fruit) {\n    case Fruit.APPLE:\n      ...\n    case Fruit.BANANA:\n      ...\n  }\n};</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<div class=\"worst-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">myapp.main = function() {\n  var MyClass = some.long.namespace.MyClass;\n  MyClass.staticHelper(null);\n};</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p>Ne jamais créer d'alias dans le champ lexical global. Utilisez-les uniquement dans des contextes d'exécution interne.</p>\n\n\t<h4>Nom de fichier</h4>\n\n\t<p>Les noms de fichier doivent être écris uniquement avec des minuscules en vu d'enrayer la confusion sur les plateformes sensibles à la casse. Les nom de fichier doivent finir par <samp>.js</samp>, et ne doivent contenir aucune ponctuation excepté pour - ou _ (préferrez - à _).</p>\n</div>\n\n<h3>Méthodes toString() personnalisées</h3>\n\n<p>\nDoit toujours marcher sans effets de bord.\n- <span class=\"eye-catching a-like toggle-more\">En savoir plus</span>\n</p>\n\n<div class=\"toggle-content\">\n\t<p>\n\t\tVous pouvez contrôler la manière dont un objet ce retourne sous forme de chaine de caractère en définissant une méthode <samp>toString()</samp> personnalisée. Cela est bien, mais vous devez vous assurer que votre méthode (1) fontionne dans tous les cas et (2) qu'elle n'a pas d'effets de bord. Si votre méthode ne possède pas ces critères, vous irez droit à la catastrophe. Par exemple, si <samp>toString()</samp> appelle une méthode qui doit faire une assertion, l'assertion peut se solder par le retour du nom de l'objet qui l'a fait rater, ce qui bien sur requier d'appeler <samp>toString()</samp>.\n\t</p>\n</div>\n\n<h3>Initialisation différée</h3>\n\n<p>\nOK.\n- <span class=\"eye-catching a-like toggle-more\">En savoir plus</span>\n</p>\n\n<div class=\"toggle-content\">\n\t<p>\n\t\tIl n'est pas toujours possible d'initialiser une variable au moment ou elle est déclarée, en ce sens l'initialisation différée est une bonne chose.\n\t</p>\n</div>\n\n<h3>Champ lexical explicite (contexte d'execution / scope)</h3>\n\n<p>\nToujours.\n- <span class=\"eye-catching a-like toggle-more\">En savoir plus</span>\n</p>\n\n<div class=\"toggle-content\">\n\t<p>\n\t\tUtilisez toujours un champ lexical explicite - cela améliore la portabilité et la clarté. Par exemple, n'attaché pas implicitement un ensemble de variable à l'objet <samp>window</samp>. Il est possible ainsi d'utiliser votre code dans un autre programme ou l'objet <samp>window</samp> n'existerrait pas.\n\t</p>\n</div>\n\n<h3>Formattage de code</h3>\n\n<p>\nDéplier pour plus d'informations.\n- <span class=\"eye-catching a-like toggle-more\">En savoir plus</span>\n</p>\n\n<div class=\"toggle-content\">\n\t<p>\n\t\tNous suivons (chez Google) <a href=\"http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml#Formatting\" title=\"Règle de formatage C++\">les règles de formatage C++</a> dans l'idée, avec des clarifications additionnelles.\n\t</p>\n\n\t<h4>Accolades</h4>\n\n\t<p>À cause des insertions de points virgules, toujours ouvrir ceux-ci sur la même ligne que ce qui demande l'ouverture d'une accolade. Par example :</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">if (something) {\n\t// ...\n} else {\n\t// ...\n}</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<h4>Initialisation d'objet et de tableau</h4>\n\n\t<p>L'initialisation ce fait sur une seule ligne autant que possible.</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">var arr = [1, 2, 3]; // Pas d'espace aprés [ ni avant ].\nvar obj = {a: 1, b: 2, c: 3}; // Pas d'espace aprés { ni avant }.</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p>Les tableaux et objets initialisés sur plusieurs lignes sont indentés de deux espaces, avec l'accolade ouvrante sur la même ligne :</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">// Initialisation d'objet.\nvar inset = {\n  top: 10,\n  right: 20,\n  bottom: 15,\n  left: 12\n};\n\n// Initialisation de tableau.\nthis.rows_ = [\n  '\"Slartibartfast\" &lt;fjordmaster@magrathea.com&gt;',\n  '\"Zaphod Beeblebrox\" &lt;theprez@universe.gov&gt;',\n  '\"Ford Prefect\" &lt;ford@theguide.com&gt;',\n  '\"Arthur Dent\" &lt;has.no.tea@gmail.com&gt;',\n  '\"Marvin the Paranoid Android\" &lt;marv@googlemail.com&gt;',\n  'the.mice@magrathea.com'\n];\n\n// Utilisé en paramètre de méthode.\ngoog.dom.createDom(goog.dom.TagName.DIV, {\n  id: 'foo',\n  className: 'some-css-class',\n  style: 'display:none'\n}, 'Hello, world!');</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p>Les longs attributs ou valeurs presentent des problèmes dans une liste d'initialisation, aussi préférrez toujours une initialisation non alignée. Par exemple :</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">CORRECT_Object.prototype = {\n  a: 0,\n  b: 1,\n  lengthyName: 2\n};</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p>Mais pas comme ça :</p>\n\n\t<div class=\"worst-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">WRONG_Object.prototype = {\n  a          : 0,\n  b          : 1,\n  lengthyName: 2\n};</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<h4>Paramètres de fonctions</h4>\n\n\t<p>Quand cela est possible, touts les paramètres de fonctions doivent être écrits sur la même ligne. S'il dépasse 80 caractères, les paramètres doivent être renvoyé à la ligne de manière lisible. Pour gagner de la place, vous pouvez les aligner par groupe de 80 caractères ou le cas échéant em mettre un par ligne pour augmenter la lisibilité. L'indentation doit être faites de 4 espaces, ou être alignée avec la paranthèse ouvrante. Ci-dessous vous trouverrez les exemples les plus commun de mise en groupe et retour à la ligne des arguments :</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">// Quatre espace, par groupe de 80. Marche avec les longs nom de fonctions.\n// Par groupe de 80, prend peu de place.\ngoog.foo.bar.doThingThatIsVeryDifficultToExplain = function(\n    veryDescriptiveArgumentNumberOne, veryDescriptiveArgumentTwo,\n    tableModelEventHandlerProxy, artichokeDescriptorAdapterIterator) {\n  // ...\n};\n\n// Quatre espace, un paramètre par ligne. Marche avec les longs nom de fonctions,\n// Gardez le nom, et mettez en avant chaque paramètres.\ngoog.foo.bar.doThingThatIsVeryDifficultToExplain = function(\n    veryDescriptiveArgumentNumberOne,\n    veryDescriptiveArgumentTwo,\n    tableModelEventHandlerProxy,\n    artichokeDescriptorAdapterIterator) {\n  // ...\n};\n\n// Indentation alignée à la paranthèse, par groupe de 80.\n// Prend peu de place.\nfunction foo(veryDescriptiveArgumentNumberOne, veryDescriptiveArgumentTwo,\n             tableModelEventHandlerProxy, artichokeDescriptorAdapterIterator) {\n  // ...\n}\n\n// Indentation alignée à la paranthèse, un paramètre par ligne.\n// Gardez le nom, et mettez en avant chaque paramètres.\nfunction bar(veryDescriptiveArgumentNumberOne,\n             veryDescriptiveArgumentTwo,\n             tableModelEventHandlerProxy,\n             artichokeDescriptorAdapterIterator) {\n  // ...\n}</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p>Quand une fonction appelée est elle même indenté vis à vis de son parent, vous êtes libre d'indenter les paramètres par rapport à l'indentation du parent. Ceux qui suit est un exemple d'indentation acceptable.</p>\n\t\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">if (veryLongFunctionNameA(\n        veryLongArgumentName) ||\n    veryLongFunctionNameB(\n        veryLongArgumentName)) {\n  veryLongFunctionNameC(veryLongFunctionNameD(\n      veryLongFunctioNameE(\n          veryLongFunctionNameF)));\n}</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<h4>Passage de fonction anonymes</h4>\n\n\t<p>Quand vous déclarez une fonction anonyme dans une liste de paramètre d'appel d'une fonction, le corps de la fonction doit être indenté de deux espaces vis à vis de la ligne d'ouverture de la fonction, ou de deux espace par rapport au mot-clé <samp>function</samp>. Ceci dans le but de rendre le corps de la fonction anonyme plus facile à lire (c'est-à-dire pas écrasé à droite de votre éditeur).</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">prefix.something.reallyLongFunctionName('whatever', function(a1, a2) {\n  if (a1.equals(a2)) {\n    someOtherLongFunctionName(a1);\n  } else {\n    andNowForSomethingCompletelyDifferent(a2.parrot);\n  }\n});\n\nvar names = prefix.something.myExcellentMapFunction(\n    verboselyNamedCollectionOfItems,\n    function(item) {\n      return item.name;\n    });</code></pre>\n\n\t\t</div>\n\t</div>\n\n \t<h4>Créer des alias avec goog.scope</h4>\n\n \t<p><samp><a href=\"https://docs.google.com/document/pub?id=1ETFAuh2kaXMVL-vafUYhaWlhl6b5D9TOvboVg7Zl68Y\" title=\"Créer des alias avec goog.scope\">goog.scope</a></samp> peut être utilisé pour racourcir les références à un espace de nom (namespace) dans les programmes en utilisant la librairie <a href=\"http://code.google.com/closure/library/\" title=\"the Closure Library\">the Closure Library</a>.</p>\n\n\t<p>Seulement un <samp>goog.scope</samp> peut être invoqué par fichier. Toujours placé dans le contexte d'exécution global.</p>\n\n\t<p>L'ouverture <samp>goog.scope (function () {</samp> doit être exactement précédée par un saut de ligne et être à la suite de l'utilisation des <samp>goog.provide</samp>, des <samp>goog.require</samp>, ou des commentaires de haut de fichiers. La fermeture doit se faire à la dernière ligne du fichier. Ajoutez <samp>// goog.scope</samp> à la suite de la ferneture. Séparrez le commentaire du point-virgule de deux espaces.</p>\n\n\t<p>De la même manière qu'avec les espaces de nom en C++, n'indentez pas après l'utilisation de <samp>goog.scope</samp>. À la place, continuez au caractère 0 de la ligne.</p>\n\n\t<p>Les alias de nom ne pourront pas être ré-assignés à d'autres objets (ex : la plupard des constructeurs, les enumérateurs ou même les espaces de nom). Ne faites pas ça (voir plus loin comment réassigné un alias à un constructeur) :</p>\n\n\t<div class=\"worst-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">goog.scope(function() {\nvar Button = goog.ui.Button;\n\nButton = function() { ... };\n...</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p>Les noms doivent être les mêmes que la dernière propriété du contexte global qui en faisait un alias.</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">goog.provide('my.module.SomeType');\n\ngoog.require('goog.dom');\ngoog.require('goog.ui.Button');\n\ngoog.scope(function() {\nvar Button = goog.ui.Button;\nvar dom = goog.dom;\n\n// Faire un nouvel alias juste après la déclaration d'un constructeur.\nmy.module.SomeType = function() { ... };\nvar SomeType = my.module.SomeType;\n\n// Déclarer une méthode sur le prototype comme à l'accoutumé.\nSomeType.prototype.findButton = function() {\n  // Button as été défini comme alias plus haut.\n  this.button = new Button(dom.getElement('my-button'));\n};\n...\n});  // goog.scope</code></pre>\n\n\t\t</div>\n\t</div>\n\n \t<h4>Indentation des retours à la ligne</h4>\n\n \t<p>À l'exception de l'?????????????écriture litéral des tableaux ou objets????????????</a>, ainsi que les fonctions anonymes, tous les retours à la ligne doivent être indenté alignée à côté de l'expression du dessus, de quatre espaces (pas de deux) de manière plus marquée que l'expression parente (Ici « à côté de l'expression du dessus » et « expression parente » font référence aux parenthèses du niveau courant).</p>\n\n\t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">someWonderfulHtml = '' +\n                    getEvenMoreHtml(someReallyInterestingValues, moreValues,\n                                    evenMoreParams, 'a duck', true, 72,\n                                    slightlyMoreMonkeys(0xfff)) +\n                    '';\n\nthisIsAVeryLongVariableName =\n    hereIsAnEvenLongerOtherFunctionNameThatWillNotFitOnPrevLine();\n\nthisIsAVeryLongVariableName = siblingOne + siblingTwo + siblingThree +\n    siblingFour + siblingFive + siblingSix + siblingSeven +\n    moreSiblingExpressions + allAtTheSameIndentationLevel;\n\nthisIsAVeryLongVariableName = operandOne + operandTwo + operandThree +\n    operandFour + operandFive * (\n        aNestedChildExpression + shouldBeIndentedMore);\n\nsomeValue = this.foo(\n    shortArg,\n    'Some really long string arg - this is a pretty common case, actually.',\n    shorty2,\n    this.bar());\n\nif (searchableCollection(allYourStuff).contains(theStuffYouWant) &&\n    !ambientNotification.isActive() && (client.isAmbientSupported() ||\n                                        client.alwaysTryAmbientAnyways())) {\n  ambientNotification.activate();\n}</code></pre>\n\n\t\t</div>\n\t</div>\n\n \t<h4>Saut de ligne</h4>\n\n \t<p>Utilisez les sauts de ligne pour grouper de façon logique les portions de code. Par example :</p>\n\n \t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">doSomethingTo(x);\ndoSomethingElseTo(x);\nandThen(x);\n\nnowDoSomethingWith(y);\n\nandNowWith(z);</code></pre>\n\n\t\t</div>\n\t</div>\n\n \t<h4>Opérateurs binaires et ternaires</h4>\n\n \t<p>Toujours mettre l'opérateur sur la ligne précédente. Sinon, les sauts de ligne et l'indentation suivent les mêmes règles que dans d'autres guides de style Google. Ce placement de l'opérateur a été initialement convenu rapport à l'insertion de point-virgule automatique. En fait, l'insertion de point-virgule ne peut pas se produire avant un opérateur binaire, tout nouveau code devrait s'en tenir à ce style pour être parfait.</p>\n\n  \t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">var x = a ? b : c;  // Tout sur la même ligne est correcte.\n\n// Indentation +4 est OK.\nvar y = a ?\n    longButSimpleOperandB : longButSimpleOperandC;\n\n// indenté avec le premier opérateur est également OK.\nvar z = a ?\n        moreComplicatedB :\n        moreComplicatedC;</code></pre>\n\n\t\t</div>\n\t</div>\n\n\t<p>Ceci inclut également l'opérateur « point ».</p>\n\n  \t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">var x = foo.bar().\n    doSomething().\n    doSomethingElse();</code></pre>\n\n\t\t</div>\n\t</div>\n</div>\n\n<h3>Parenthèses</h3>\n\n<p>\nSeulement si elles sont nécéssaire.\n- <span class=\"eye-catching a-like toggle-more\">En savoir plus</span>\n</p>\n\n<div class=\"toggle-content\">\n\t<p>À utiliser avec parciemonie et uniquement quand la sémantique ou la syntaxe les réclames.</p>\n\t<p>Ne jamais utiliser de parenthèse pour les opérateurs unaires comme <samp>delete</samp>, <samp>typeof</samp> et <samp>void</samp> ou tout autre mot-clé comme <samp>return</samp>, <samp>throw</samp> ou tout autres (<samp>case</samp>, <samp>in</samp> ou <samp>new</samp>).</p>\n</div>\n\n<h3>Chaînes de caractères</h3>\n\n<p>\nPréférrez ' plutôt que \".\n- <span class=\"eye-catching a-like toggle-more\">En savoir plus</span>\n</p>\n\n<div class=\"toggle-content\">\n\t<p>Pour une meilleurs lisibilités l'apostrophe (') est préférée aux guillemets (\"). Cela est d'autant plus pratique quand on créer une chaine avec du HTML :</p>\n\n  \t<div class=\"best-practice\">\n\t\t<div class=\"content\">\n\n<pre class=\"prettyprint linenums\"><code class=\"language-js\">var msg = 'This is some HTML';</code></pre>\n\n\t\t</div>\n\t</div>\n</div>", "dates" : { "published" : { "$date" : 1478688780000 }, "updated" : [] }, "others" : { "markdown" : false, "published" : false }, "script" : "$(\".toggle-more\").click(function () {\n\t$(this).parents(\"p\").next(\"div\").toggle('fast');\n});", "style" : ".toggle-content {\r\n\tdisplay: none;\r\n}", "stylesheet" : "", "title" : "<span>Conventions</span> et <span>commentaires</span> <span>JavaScript</span> selon <span>Google</span>", "urn" : "conventions-et-commentaires-javascript-selon-google" }
{ "_id" : { "$oid" : "530f5f63620731fe86cb71b9" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [], "content" : "Je remplirai cette partie à la fin de l'article.\n\n## Limit ##\n\n\n\n", "dates" : { "published" : { "$date" : 1478723100000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : false }, "script" : "", "stylesheet" : "", "title" : "<span>Composant</span> <span>JavaScript</span> <span>responsive</span> sans !<span>important</span> en <span>CSS</span>", "urn" : "composant-javascript-responsive-sans-important-en-css" }
{ "__v" : 0, "_id" : { "$oid" : "537236809c8e1b22535cb6b6" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "53746e72eb856da96ba3f8a3" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48ba" } ], "content" : "J'ai évoqué [pourquoi je n'utilisais pas Bootstrap](https://blog.lesieur.name/bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite/). Cependant, l'un des pré-requis pour un nouveau projet est de l'utilisé aussi j'ai retroussé mes manches pour approfondir la philosophie et j'ai déjà commencé à me casser les dents !\n\nAligner un texte à gauche sur _version mobile_ puis à droite sur  _version desktop_ est chose aisé en CSS avec les [Media Queries](http://www.alsacreations.com/article/lire/930-css3-media-queries.html). [Gérer le fait que deux colonnes côte à côte sur _version desktop_ passe l'une sous l'autre sur _version mobile_ l'est également avec Bootstrap](http://getbootstrap.com/css/). Pourtant aligner un texte à gauche sur _version mobile_ puis à droite sur _version desktop_ aussi facilement que la gestion des colonnes n'est pas possible...\n\nJe vais vous présenter un petit pan de code remédiant à cela.\n\n\n\n\n\n## Comment gérer des alignements différents en fonction de la taille ? ##\n\n### Philosophie des grilles ###\n\nLa philosophie utilisé pour gérer différemment les colonnes d'une grille avec Bootstrap en fonction de la taille du périphérique est de jouer avec les 4 préfixes suivant :\n\n- **xs** : défini un comportement à partir de la taille minimal d'un mobile jusqu'à l'infini en grande taille.\n- **sm** : défini un comportement à partir d'une taille type tablette jusqu'à l'infini en grande taille.\n- **md** : défini un comportement à partir d'une taille type desktop jusqu'à l'infini en grande taille.\n- **lg** : défini un comportement à partir d'une taille type grand desktop jusqu'à l'infini en grande taille.\n\nAinsi dans l'exemple ci-dessous notre élément va prendre 12 colonne sur _version mobile_ puis 8 sur _version tablette_ puis 6 sur _version desktop_ et enfin 4 sur _version grand desktop_ sur une base de 12 colonnes.\n\n```html\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-8 col-md-6 col-lg-4\">Contenu</div>\n    </div>\n</div>\n```\n\n\n\n\n### Étendre la philosophie aux alignements de texte ###\n\nAlors quel ne fut pas ma déception quand j'ai essayé de faire ceci en espérant aligner une image à gauche sur mobile et à droite sur plus grand écran :\n\n```html\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"text-left-xs text-right-md\">Contenu</div>\n    </div>\n</div>\n```\n\n**Le code ci-dessus ne marche pas**. Afin de le rendre fonctionnel, il va falloir ajouter à votre Bootstrap ceci :\n\n```css\n/* Comportement par défaut */,\n.text-left-sm,\n.text-left-md,\n.text-left-lg,\n.text-center-sm,\n.text-center-md,\n.text-center-lg,\n.text-right-sm,\n.text-right-md,\n.text-right-lg,\n.text-justify-sm,\n.text-justify-md,\n.text-justify-lg { \n\ttext-align: inherit; \n}\n\n/* Style par défaut */\n.text-left-xs { \n\ttext-align: left; \n}\n.text-center-xs { \n\ttext-align: center; \n}\n.text-right-xs { \n\ttext-align: right;\n}\n.text-justify-xs { \n\ttext-align: justify; \n}\n\n/* Style pour tablette */\n@media (min-width: 768px) {\n\t.text-left-sm, \n\t.text-left-xs { \n\t\ttext-align: left; \n\t}\n\t.text-center-sm, \n\t.text-center-xs { \n\t\ttext-align: center; \n\t}\n\t.text-right-sm, \n\t.text-right-xs { \n\t\ttext-align: right; \n\t}\n\t.text-justify-sm, \n\t.text-justify-xs { \n\t\ttext-align: justify; \n\t}\n}\n\n/* Style pour desktop */\n@media (min-width: 992px) {\n  \t.text-left-md, \n  \t.text-left-sm, \n  \t.text-left-xs { \n  \t\ttext-align: left; \n  \t}\n  \t.text-center-md, \n  \t.text-center-sm, \n  \t.text-center-xs { \n  \t\ttext-align: center; \n  \t}\n\t.text-right-md, \n\t.text-right-sm, \n\t.text-right-xs { \n\t\ttext-align: right;\n\t}\n\t.text-justify-md, \n\t.text-justify-sm, \n\t.text-justify-xs { \n\t\ttext-align: justify;\n\t}\n}\n\n/* Style pour grand desktop */\n@media (min-width: 1200px) {\n\t.text-left-lg, \n\t.text-left-md, \n\t.text-left-sm, \n\t.text-left-xs {\n\t\ttext-align: left;\n\t}\n\t.text-center-lg, \n\t.text-center-md, \n\t.text-center-sm, \n\t.text-center-xs {\n\t\ttext-align: center;\n\t}\n\t.text-right-lg, \n\t.text-right-md, \n\t.text-right-sm, \n\t.text-right-xs {\n\t\ttext-align: right;\n\t}\n\t.text-justify-lg, \n\t.text-justify-md, \n\t.text-justify-sm, \n\t.text-justify-xs {\n\t\ttext-align: justify;\n\t}\n}\n```\n\net le tour est joué.\n\n\n\n\n## Et pour le reste ? ##\n\nJ'imagine que ce n'est pas le seul cas de figure ou j'aurai besoin d'ajouter ce type de comportement. Donc si cela arrive avec d'autres propriétés existantes sans préfixe, suivez juste le même schéma.\n\nEt vous ? Quelles sont vos surcharges utiles ? ", "dates" : { "published" : { "$date" : 1400062680000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Alignement de texte Responsive avec Bootstrap", "urn" : "alignement-de-texte-responsive-avec-bootstrap" }
{ "__v" : 0, "_id" : { "$oid" : "5374aba4a48cab530ff13478" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "530ef6a6789c1a55e4fde0af" } ], "content" : "La balise HTML script permet de définir quand le code JavaScript dans votre page est exécuté. Les attributs HTML5 async et defer sont à présent supportés par Firefox, Chrome, Safari et Internet Explorer 10+ (sinon ils sont ignorés) et permettent de modifier le comportement de chargement des scripts. Voici de courtes explications sur les différences de chaque appel.\n\n\n\n\n\n## Tableau Explicatif ##\n\n<table class=\"parsing-html-demo\">\n    <tbody><tr>\n        <th class=\"type\" rowspan=\"3\"><samp>&lt;script&gt;</samp></th>\n        <td class=\"hidden\">-</td><td class=\"hidden\">-</td><td class=\"hidden\">-</td><td class=\"hidden\">-</td><td class=\"hidden\">-</td>\n    </tr>\n    <tr>\n        <td class=\"parse\">Analyse HTML</td>\n        <td class=\"load\">Chargement...</td>\n        <td class=\"exec\">Exécution JS</td>\n        <td colspan=\"2\" class=\"parse\">Analyse HTML</td>\n    </tr>\n    <tr class=\"hidden separator\"><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr>\n\n    <tr>\n        <th class=\"type\" rowspan=\"3\"><samp>&lt;script defer&gt;</samp></th>\n        <td class=\"hidden\">-</td><td class=\"hidden\">-</td><td class=\"hidden\">-</td><td class=\"hidden\">-</td><td class=\"hidden\">-</td>\n    </tr>\n    <tr>\n        <td class=\"parse\">Analyse HTML</td>\n        <td class=\"parse load\"><span>Analyse</span> + Chargement...</td>\n        <td colspan=\"2\" class=\"parse\">Analyse HTML</td>\n        <td class=\"exec\">Exécution JS</td>\n    </tr>\n    <tr class=\"hidden separator\"><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr>\n\n    <tr>\n        <th class=\"type\" rowspan=\"3\"><samp>&lt;script async&gt;</samp></th>\n        <td class=\"hidden\">-</td><td class=\"hidden\">-</td><td class=\"hidden\">-</td><td class=\"hidden\">-</td><td class=\"hidden\">-</td>\n    </tr>\n    <tr>\n        <td class=\"parse\">Analyse HTML</td>\n        <td class=\"parse load\"><span>Analyse</span> + Chargement...</td>\n        <td class=\"exec\">Exécution JS</td>\n        <td colspan=\"2\" class=\"parse\">Analyse HTML</td>\n    </tr>\n    <tr class=\"hidden\"><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr>\n</tbody></table>\n\n\n<div class=\"parsing-html-demo\">\n    Legend :\n    <ul>\n         <li class=\"load\">Chargement...</li>\n         <li class=\"exec\">Exécution JS</li>\n         <li class=\"parse\">Analyse HTML</li>\n    </ul>\n</div>\n\n\n\n\n\n## Pour les scripts externes ##\n\n### L'exécution normal ###\n\n`<script src=\"\"></script>`\n\nC'est le comportement standard de l'élément script. L'analyse du code HTML est mise en pause le temps que le script soit exécuté. Pour les serveurs lents et les scripts lourds (en temps d'exécution et poids) cela signifie que l'affichage de la page va mettre du temps.\n\n\n\n\n### L'exécution différée ###\n\n`<script defer src=\"\"></script>`\n\nCela revient à exécuter vos scripts dans l'ordre où ils ont été rencontrés mais seulement à la fin de l'analyse HTML. Cela est la même chose que de mettre vos scripts en pied de page juste avant la fermeture du body mais de tout de même les placer physiquement dans le DOM dans le `header`. En réalité defer existe depuis _IE6_ mais ne garantie pas l'ordre d'exécution avant _IE10_.\n\n\n\n\n### L'exécution asynchrone ###\n\n`<script async src=\"\"></script>`\n\nAucune importance de savoir quand le script sera disponible ? L'asynchrone est votre ami. Le code JavaScript sera exécuté aussitôt qu'il sera disponible. Parfait pour des scripts comme les boutons sociaux ou **Modernizr** (si vous gérez élégamment les phénomènes de [FOUC](http://fr.wikipedia.org/wiki/FOUC)).\n\n\n\n\n\n## Pour les scripts inline ##\n\nLà, async et defer ne servent à rien, ils sont simplement ignorés. Sous Chrome et Safari tous les scripts inline bloque le rendu quelque soit le mot-clé employé et sous Firefox et IE de l'[analyse spéculative](http://web.developpez.com/tutoriels/web/how-browsers-work/#L3-4-2) est faites.\n\n\n\n\n\n## Fallback ##\n\nPour les navigateurs ne supportant pas defer et async comme il se doit vous pouvez utiliser la fallback [async_defer_script.js](https://gist.github.com/fearphage/881274) comme ceci :\n\n```html\n<head>\n     ...\n     <!--[if lt IE 10]><script src=\"async_defer_script.js\"></script><![endif]-->\n     ...\n</head>\n```", "dates" : { "published" : { "$date" : 1398335400000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "div.parsing-html-demo {\n\tdisplay: none;\n}table.parsing-html-demo {\n    border-collapse:collapse;\n    width: 100%;\n    text-align: center;\n    border-top: dashed 1px #000;  \n    border-bottom: dashed 1px #000;    \n}.parsing-html-demo .separator {\n    border-bottom: dashed 1px #000;    \n}.parsing-html-demo .parse {\n    border-bottom: solid 2px #080;\n    color: #080;\n}.parsing-html-demo span {\n    color: #080;\n}.parsing-html-demo .load {\n    border-top: solid 2px #008;\n    color: #008;\n}.parsing-html-demo .exec {\n    border-top: solid 2px #800;\n    color: #800;\n}.parsing-html-demo .type {\n    vertical-align: middle;\n    width: 20%;\n    font-weight: bold;\n}.parsing-html-demo .hidden {\n    text-indent: -7777px;\n}\n@media (max-width: 460px) {\n\t.parsing-html-demo td {\n\t\ttext-indent: -7777px;\n\t\tletter-spacing: -10px;\n\t}\n\tdiv.parsing-html-demo {\n\t\tdisplay: block;\n\t}\n}", "title" : "<span>Différences</span> entre <span>async</span> et <span>defer</span> en <span>HTML5</span>", "urn" : "differences-entre-async-et-defer-en-html5" }
{ "__v" : 0, "_id" : { "$oid" : "5374d4054e21003a10eaa99f" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48c0" } ], "content" : "Récemment, pour travailler avec mes collègues du Back-end C#, j'ai du « abandonner » Sublim Text 3, mes plugins tel que [Hayaku](https://github.com/hayaku/hayaku) ou [Emmet](https://github.com/sergeche/emmet-sublime) et tout un tas de raccourcis me privant d'une productivité non négligeable.\n\nJ'ai bien cru que cela était fini quand je devais travailler sur leurs projets dans leurs environnements mais heureusement il n'en n'est rien ! Suivez-le guide, je vais vous expliquer.\n\n\n\n\n\n## Étape 1 ##\n\nOuvrez Visual Studio, rendez-vous dans « **Tools** » et sélectionnez « **External Tools**... » :\n\n<div class=\"img\"><img class=\"step-1\" src=\"media/images/upload/XapFz.png\" alt=\"Tools > External Tools...\"></div>\n\n\n\n\n\n## Étape 2 ##\n\nCliquez sur « *Add* ». Affectez dans _Title:_ « _Open in Sublim Text_ », rendez-vous dans le dossier d'installation de _Sublim Text_ et affectez dans _Command:_ « `<chemin_installation>/sublim_text.exe` ». Pour la partie _Arguments:_ affectez la valeur « **$(ItemPath):$(CurLine):$(CurCol)** » : Cela dit à Sublim de s'ouvrir dans le bon fichier, à la bonne ligne. Appliquez à _Initial directory:_ la valeur « **$(ItemDir)** ».\n\n<div class=\"img\"><img class=\"step-2\" src=\"media/images/upload/7EO1r.png\" alt=\"Paramètres...\"></div>\n\n\n\n\n\n## Étape 3 ##\n\nMaintenant si vous allez dans « **Menu > Tools** » vous trouverez votre nouvelle commande « _Open in Sublim Text_ ». Et si on lançait maintenant Sublim Text via un raccourci clavier !\n\n\n\n\n\n## Étape 4 ##\n\nRendez-vous dans « **Menu > Tools > Options** », dans « **Environment** » sélectionnez « **Keyboard** ». Dans le champ _Show command containing:_, cherchez « **externalCommand** » et sélectionnez le numéro correspondant à votre item dans la liste des « Externa tools... ». Positionnez-vous ensuite dans _Press shortcut keys:_ et tapez votre combinaison de touche. Cliquez ensuite sur « **Assign** ».\n\nÉvitez les combinaisons déjà existantes.\n\n<div class=\"img\"><img class=\"step-4\" src=\"media/images/upload/Mo2dB.png\" alt=\"Keybord Shortcut\"></div>\n\n\n\n\n\n## Et c'est fait ! ##\n\nSublim Text est maintenant utilisable rapidement ! Une fois vos modifications faites, fermez ou switchez d'application et Visual Studio mettra à jour vos modifications.\n\n\n\n\n\nSource images : [StackOverflow](http://stackoverflow.com/questions/18450402/moving-from-visual-studio-to-sublime-text)", "dates" : { "published" : { "$date" : 1400168520000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : ".article .img {\n    text-align: center;\n}\n\n@media (max-width: 378px) {\n    .article img.step-1 {\n        width: 100%;\n        height: auto;\n    }\n}\n\n@media (max-width: 495px) {\n    .article img.step-2 {\n        width: 100%;\n        height: auto;\n    }\n}\n\n@media (min-width: 780px) and (max-width: 860px) {\n    .article img.step-2 {\n        width: 100%;\n        height: auto;\n    }\n}\n\n.article img.step-4 {\n    width: 100%;\n    height: auto;\n}\n", "title" : "<span>Utiliser</span> <span>Sublim Text</span> avec <span>Visual Studio</span>", "urn" : "utiliser-sublim-text-avec-visual-studio" }
{ "__v" : 0, "_id" : { "$oid" : "53772e8525b3faa72aba6590" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "53746e72eb856da96ba3f8a3" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48c5" }, { "$oid" : "5310456355dfd5f7698d48b7" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48ba" } ], "content" : "Pourquoi je n'utilise pas [Bootstrap] ? Cela peut sembler une « évolution » de nos méthodes de travail Front-end, mais gare au loup et attention de ne pas tomber dans un travers que le W3C tente d'enrayer au fur et à mesure des évolutions HTML et CSS.\n\nCommençons par le commencement. Qu'est-ce que [Bootstrap] ? Comme pleins d'autres « Librairie » ou « Framework » CSS dans la même veine, [Bootstrap] est un outil permettant d'augmenter la productivité des développeurs Front-end le maîtrisant, dans le but de fournir le plus rapidement possible un rendu visuel ergonomique et si possible responsive.\n\nMon problème ne vient pas tant de sa finalité qui est louable, mais belle et bien de la mise en œuvre technique qui permet d'atteindre cette finalité. Pour être concis avant de développer : **l'utilisation faites de [Bootstrap] est une régression pour un travail Front-end de qualité**.\n\nJe ne compte persuader personne, et à défaut de convaincre, je vais au moins vous expliquer mon point de vue.\n\n\n\n\n\n## Les deux approches possibles pour de l'intégration Front-end ##\n\n### L'approche Sémantique/Visuelle (ou celle du [W3C](http://www.w3.org/)) ###\n\nCette approche considère que dans un fichier HTML, les balises doivent avoir du sens et être complétées (que ce soit par leurs genres, leurs noms, leurs ids ou leurs classes) de manière sémantique de façon à donner du sens au document.\n\n> #### Exemple ####\n> Si j'ai deux éléments qui se suivent : le premier pourrait porter l'attribut `class=\"main\"` et le second l'attribut `class=\"aside\"`.\n\n**L'attribut `class` est donc dans cette approche une extension de l'attribut `id` (mais en version multiple) et le HTML garde un unique rôle : le rôle de structure sémantique (que ce soit pour les moteurs de recherche mais également pour les développeurs ; qu'ils s'y connaissent ou non en design).**\n\n\n\n\n### L'approche « Tout en un » (ou celle de [Bootstrap] &amp; cie) ###\n\nCette approche considère que dans un fichier HTML, les balises doivent représenter un visuel et être complétées de manière à laisser transparaître rapidement le résultat visuel.\n\n> #### Exemple #### \n> Si j'ai deux éléments qui se suivent : le premier pourrait porter l'attribut `class=\"column-sm-4 text-left\"` et le second l'attribut `class=\"column-sm-8 text-right\"`.\n\n**L'attribut `class` est donc dans cette approche une extension de l'attribut `style` (mais une sorte de raccourci) où il n'est pas nécessaire de lister les directives CSS en inline mais dans un fichier CSS séparé.**\n\n*Note: Quoi qu'il arrive, le texte sera toujours à gauche pour la première partie et toujours à droite pour la seconde quelque soit le contexte dans lequel ces portions de HTML se retrouverons.*\n\n\n\n\n\n## Comparaison de code des deux approches ##\n\nPour les plus curieux, voici techniquement la différence entres les codes :\n\n\n\n\n### Sémantique et visuel séparé ###\n\n**HTML :**\n\n```html\n<header>\n    <h1>Le titre</h1>\n    <nav>\n        <ul>\n            <li>menu</li>\n            <li>menu</li>\n            <li>menu</li>\n            <li>menu</li>\n        </ul>\n    </nav>\n</header>\n<section>\n    <article>\n        <p>Le contenu<br>\n        Le contenu<br>\n        Le contenu</p>\n    </article>\n    <aside>Les à cotés</aside>\n</section>\n```\n\n**CSS :**\n\n```css\n/* Entrer le padding dans le calcul interne */\nh1,\nnav,\narticle,\naside {\n    box-sizing: border-box;\n}\n\n/* Mettre le titre en gras */\nh1 {\n    font-weight: bold;   \n}\n\n/* Centrer les textes du menu */\nnav {\n    text-align: center;\n}\n\n/* Retrait du comportement de liste standard */\nnav ul {\n    padding-left: 0;\n}\nnav li {\n    list-style-type: none;\n}\n\n/* À partir d'une tablette */\n@media (min-width: 768px) {\n\n    /* Empêcher les écoulements de flottants */\n    header:after,\n    section:after {\n        content: \"\";\n        display: block;\n        clear: both;\n    }\n\n    /* Flotter à gauche en 50% */\n    h1,\n    aside {\n        float: left;\n        width: 50%;\n    }\n\n    /* Flotter à droite en 50% */\n    h1,\n    article {\n        float: right;\n        width: 50%;\n    }\n\n    /* Remettre les menus en alignement standard */\n    nav {\n        text-align: left;\n    }\n\n    /* Mettre le menu en ligne */\n    nav li {\n        display: inline-block;\n    }\n\n    /* Placer le titre à droite */\n    h1 {\n        text-align: right;\n    }\n    \n}\n```\n\n**Rendu**\n\n> \n<div class=\"example-header\">\n    <div class=\"example-logo\"><p>Le logo</p></div>\n    <div class=\"example-menu\">\n        <ul>\n            <li>menu</li>\n            <li>menu</li>\n            <li>menu</li>\n            <li>menu</li>\n        </ul>   \n    </div>\n</div>\n<div class=\"example-content\">\n    <div class=\"example-main\">\n        <p>Le contenu<br>\n        Le contenu<br>\n        Le contenu</p>\n    </div>\n    <div class=\"example-aside\"><p>Les à coté</p></div>\n</div>\n\n_Note : vous pouvez rétrécir votre fenêtre sur périphérique desktop pour voir le résultat mobile._\n\n\n\n\n### Framework CSS comme Bootstrap ###\n\n**HTML :**\n\n```html\n<header class=\"container\">\n    <div class=\"row\">\n        <h1 class=\"col-sm-6 col-sm-push-6 text-right-sm\">\n            <strong>Le titre</strong>\n        </h1>\n        <nav class=\"col-sm-6 col-sm-pull-6 text-center-xs text-left-sm\">\n            <div class=\"navbar-collapse collapse in\">\n                <ul class=\"nav navbar-nav\">\n                    <li>Menu</li>\n                    <li>Menu</li>\n                    <li>Menu</li>\n                    <li>Menu</li>\n                </ul>\n            </div>\n        </nav>\n    </div>\n</header>\n\n<section class=\"container\">\n    <div class=\"row\">\n        <article class=\"col-sm-6 col-sm-push-6\">\n            <p>Le contenu<br>\n               Le contenu<br>\n               Le contenu</p>\n        </article>\n        <aside class=\"col-sm-6 col-sm-pull-6\">Les à coté</aside>\n    </div>\n</section>\n```\n\n**CSS :**\n\n```html\n<!-- État de boite noire, ça marche tel que la doc l'explique -->\n<link rel=\"stylesheet\" href=\"//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css\">\n```\n\n```css\n/* Parce que Bootstrap ne réalise pas tout ce que \nl'on souhaite faire, on surcharge ensuite avec sa \npropre CSS en essayant de conserver \nla philosophie Bootstrap (pas simple) */\n\n/* Comportement par défaut */,\n\n.text-center-sm,\n.text-center-md,\n.text-center-lg,\n.text-right-sm,\n.text-right-md,\n.text-right-lg { \n    text-align: inherit; \n}\n\n/* Style par défaut */\n.text-center-xs { \n    text-align: center; \n}\n.text-right-xs { \n    text-align: right;\n}\n\n/* Style pour tablette */\n@media (min-width: 768px) {\n    .text-center-sm, \n    .text-center-xs { \n        text-align: center; \n    }\n    .text-right-sm, \n    .text-right-xs { \n        text-align: right; \n    }\n}\n\n/* Style pour desktop */\n@media (min-width: 992px) {\n    .text-center-md, \n    .text-center-sm, \n    .text-center-xs { \n        text-align: center; \n    }\n    .text-right-md, \n    .text-right-sm, \n    .text-right-xs { \n        text-align: right;\n    }\n}\n\n/* Style pour grand desktop */\n@media (min-width: 1200px) {\n    .text-center-lg, \n    .text-center-md, \n    .text-center-sm, \n    .text-center-xs {\n        text-align: center;\n    }\n    .text-right-lg, \n    .text-right-md, \n    .text-right-sm, \n    .text-right-xs {\n        text-align: right;\n    }\n}\n```\n\n_Note : une autre approche est de dupliquer un objet que [Bootstrap] ne saurait pas facilement afficher dans des états différents en fonction de la taille du périphérique afin de n'en afficher qu'un des deux à la fois. Ce qui créé du contenu dupliqué, ce qui, en plus d'être un problème SEO pose un problème de maintenance._\n\n**Rendu**\n\n> \n<div class=\"example-header\">\n    <div class=\"example-logo\"><p>Le logo</p></div>\n    <div class=\"example-menu\"><p>menu menu menu menu</p></div>\n</div>\n<div class=\"example-content\">\n    <div class=\"example-main\">\n        <p>Le contenu<br>\n        Le contenu<br>\n        Le contenu</p>\n    </div>\n    <div class=\"example-aside\"><p>Les à coté</p></div>\n</div>\n\n_Note : vous pouvez rétrécir votre fenêtre sur périphérique desktop pour voir le résultat mobile._\n\n\n\n\n\n## Pourquoi l'approche sémantique est la meilleure (selon moi) ##\n\n### La raison historique de la séparation du fond et de la forme ###\n\nLe W3C améliore les normes de structures HTML dans un but de séparation de la structure et du rendu. Voyons ça plus en détail :\n\n#### D'abord HTML ####\n\nLe HTML dans ses débuts embarquait des balises permettant de créer du fond (ou de structurer) tel que `<div>`, `<span>`, `<table>`, etc. et des balises permettant de créer de la forme (ou du rendu) tel que `<font>`, `<i>`, `<b>`, `<center>`, etc. Les deux étaient mélangés et c'est bien dans le fichier HTML, au travers de sa structure que l'on décidait qu'un texte devrait être rouge, centré et avoir une taille de 20 pixel.\n\n#### Puis le xHTML ####\n\nUne évolution logique a donc été de supprimer (ou déprécier) les balises porteuses d'un rendu visuel et de leur préférer un sens sémantique (tout en accordant une grande importance au CSS pour l'habillage). Ainsi un texte centré ou rouge se créé via une feuille CSS et on ne considère plus un texte important comme `<b>` (bold) mais plutôt ayant un sens `<strong>` (fort). C'est au développeur de choisir si finalement `<strong>` n'a pas plutôt un rendu italique et souligné via CSS ([à noter que `<i>` et `<b>` n'ont pas été remplacées comme on le pense trop souvent](https://blog.lesieur.name/icon-ou-la-balise-html-semantique-qui-n-existait-pas/)).\n\nIl y a donc une volonté du Web de séparer la structure et le rendu. Ce que je trouve assez logique.\n\n#### On continue avec le HTML5 ####\n\nToujours dans ce soucis de structure sémantique, les balises en elles-mêmes se voit rajoutée du sens et c'est pour cela que `<header>`, `<footer>`, `<section>`, `<article>`, `<aside>`, `<figure>`... font leur apparition.\n\nCela signifie que l'approche de [Bootstrap] prend le contre-pied de cette idée de séparation et instaure selon moi une approche plus liée qui n'est pas en accord avec la philosophie que je partage avec le W3C.\n\n\n\n\n\n## Les raisons techniques ##\n\n### La taille du fichier HTML généré ###\n\nAjouter des classes à outrance pour habiller visuellement sa structure HTML surcharge anormalement le DOM d'au moins trois manières :\n\n- Obligation d'imbriquer des éléments pour qu'ils fonctionnent tels que [Bootstrap] l'a prévu.\n- Multiplication du nombre de classes dans l'attribut `class`.\n- Duplication de contenu pour afficher/masquer simplement en fonction de la taille du périphérique.\n\nCela défère le poids de la CSS vers le HTML. Or, autant les fichiers CSS peuvent être mis en cache, autant la structure HTML peut difficilement l'être étant donné sa nature changeante en fonction du contrôleur qui la génère. Heureusement le transfert gzip allège ce soucis, encore faut t-il qu'il y ai un maximum de redondance en terme de naming dans les classes utilisée par [Bootstrap] ([ce qui est le cas dans un habillage orienté composant](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/)).\n\n\n\n### La surcharge CSS ###\n\n[Bootstrap] n'est pas négligeable en taille. Cela impose un pré-chargement plus lourds au premier chargement de page (en supposant qu'ensuite le fichier soit mis en cache). De manière assez amusante, plus Bootstrap \"supporte\" des périphériques petits avec de faibles débits à l'utilisation (ajout de fichiers CSS et JS), plus il est lourd en poids... (idem pour le support « Right to Left »).\n\n\n\n### La maîtrise de l'outil ###\n\nL'avantage offert par [Bootstrap] est perdu dès l'instant ou l'outil est utilisé par des personnes ne le connaissant pas (rapidité d'intégration). Pire encore, cela expose l'intégration par de multiples personnes à mélanger l'approche [Bootstrap] à une approche sémantique sans distinguer l'un de l'autre. Vous me direz que l'outil est simple d'utilisation tel qu'il est abordé dans la documentation, mais [une utilisation propre de celui ci est un peu plus compliquée](https://blog.lesieur.name/bootstrap-lisibilite-proprete-performance-optimisation-c-est-possible/).\n\n\n\n### Maintenance de code et changement de design ###\n\nLa structure étant intimement liée au Framework [Bootstrap] et au visuel soumis, le code HTML est bon à revoir dans son architecture pour un changement de design. La structure étant liée aux contrôleurs, car créée par eux, c'est le Back-end qui se retrouve impacté par un changement de design là ou seulement les CSS et les JS auraient du bouger (sans que le Back soit touché par du changement de design).\n\n\n\n### Ne pas rendre service au Front-end apprenant ###\n\nL'approche « tout en un » masque le plus important : les mécanismes de fonctionnement des classes en elles-mêmes. Pourquoi —pour réaliser telles rendus— elles utilisent ces attributs précisément ? Si cet état de boîte noire peut s'avérer intéressant pour des débutants et un gain de temps pour les experts : cela maintient l'écart entre les deux. Et, les seuls apprenant réellement à utiliser les nouveautés du CSS en comprenant les mécanismes sous-jacent sont ceux qui maintiennent [Bootstrap] (ou équivalent) ou ceux qui ne l'utilisent pas.\n\n\n\n### Un problème de SEO ou de performance ? ###\n\nDupliquer du contenu de manière identique dans le DOM dans le seul but de l'afficher à deux endroits différents de la grille [Bootstrap] créer du contenu dupliqué au sein d'une même page. Bien entendu, on peut éviter cela en laissant dans le DOM source le code destiné au mobile et en dupliquant en JavaScript celui-ci pour l'afficher sur Desktop en sacrifiant un peu de ressource JavaScript, en ajoutant une complexité à la maintenance et en masquant tant bien que mal le phénomène de [FOUC](http://fr.wikipedia.org/wiki/FOUC).\n\n\n\n\n## Pourquoi utiliser Bootstrap alors ? ##\n\n### À utiliser pour : ###\n\n- Développer des « Proof of Concept » ou remplacer la création PSD par une création temps réel de façon rapide. C'est donc un outil formidable pour remplacer Photoshop dans [l'ère Post PSD](http://davidl.fr/blog/fin-psd.html).\n- Faire des sites à la pelle et avec de très petits budgets où le résultat en performance et en qualité reste un problème, mais où l'argent fournit pour la réalisation manque (discutable tout de même).\n- Habiller un Back-office personnalisé (ou une application web) qui n'a pas fait l'objet d'une création et que l'on espère « user friendly » rapidement et simplement (une création purement fonctionnelle sans problèmes de performances à grande échelle ou de soucis de SEO).\n- Créer des tutos autours de Framework dont l'habillage HTML/CSS n'est pas le centre du sujet pour obtenir un résultat descend visuellement.\n- Permettre aux rédacteurs de contenu web de faire de la mise en forme en exploitant quelques Pattern fort utile qui n'ont donc ici pas vocation à faire partie de la structure même de la page. Au préalable il serait intéressant de vider toutes balises inutile de [Bootstrap], ou de ce [créer ses propres Patterns](https://blog.lesieur.name/bootstrap-lisibilite-proprete-performance-optimisation-c-est-possible/). \n\n\n\n### À ne pas utiliser pour : ###\n\n- Des petits sites, car cela augmente bien souvent de 90% le poids du site, il vaut donc mieux ne pas le faire et perdre un peu de temps pour un gain en performance maintenance et sémantique.\n- De grosses structures, car cela leurs font perdre la flexibilité du changement d'UI sans impacter le Back-end, impose la formation de toutes les ressources Front-end travaillant sur le projet à Bootstrap et il résulte de la construction même des pages un impact SEO non négligeable due au poids du HTML, sa sémantique limitée et plus globalement au temps de chargement des pages. D'un point de vu conception et maintenance, cela empêche toute [possibilité d'architecture orienté composant](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/) que ce soit dans le HTML ou dans la CSS.\n\n\n\n\n\n## Mélanger les deux approches pour en garder les avantages ? ##\n\nSi l'on extrait les problèmes majeurs en considérant que nos ressources seront formées à utiliser [Bootstrap] nous nous retrouvons avec les deux points suivants.\n\n\n\n\n### La lourdeur de la librairie ###\n\nQue ce soit pour [Bootstrap] ou pour une autre librairie, le premier chargement sera laborieux (avant que le fichier n'ai été téléchargé une fois et mis en cache). On peut palier à ce problème en utilisant une version du script hébergé sur des serveurs comme c'est le cas pour jQuery par exemple. Ainsi pour Bootstrap, on peut se faire servir par <a href=\"http://www.bootstrapcdn.com/\" title=\"CDN for Bootstrap\">http://www.bootstrapcdn.com/</a>. L'avantage est que tous les sites utilisant le chargement par CDN Bootsrap participe à mettre en cache pour vous le fichier. Cela signifie que ce n'est plus nécessairement votre première page ouverte qui ralentira le chargement du visiteur mais peut-être celle d'un autre site.\n\n\n\n\n### Remettre les classes « tout en un » de nouveau dans la CSS ###\n\nFinalement, ce qu'il nous faudrait pour résoudre notre soucis et remettre la sémantique à l'ordre du jour, c'est d'adresser dans la feuille CSS (et non dans la page HTML elle-même) notre suite de classe. Si nous pouvions par exemple transformer ceci :\n\n```html\n<header class=\"clr\">\n    <nav class=\"left hidden boxsizing w50\">\n        Le menu\n    </nav>\n</nav>\n```\n\nen ceci\n\n```html\n<header class=\"header\">\n    <nav class=\"header--nav\">\n        Le menu\n    </nav>\n</header>\n```\n\n```css\n/* Fichier partiel type Bootstrap uniquement avec ce dont on à besoin. */\n.header {\n\t.clr;\n}\n.header--nav {\n\t.left; \n\t.hidden; \n\t.boxsizing; \n\t.w50;\n}\n```\n\nle tour serait joué.\n\nC'est exactement ce que permettent des approches comme <a href=\"http://sass-lang.com/\" title=\"Sass - Syntactically Awesome Stylesheets\">SASS</a> ou <a href=\"http://lesscss.org/\" title=\"LESS &laquo; The Dynamic Stylesheet language\">LESS</a>. Elles permettent d'écrire de manière intuitive et non redondante des suites de sélecteurs CSS pour au final générer le fichier CSS qui va bien. Vous pouvez lire l'article « [Utilisation optimisée de Framework CSS comme Bootstrap avec Less](https://blog.lesieur.name/utilisation-optimisee-de-framework-css-comme-bootstrap-avec-less/) » pour comprendre comment cela fonctionne et de cette manière vous pourrez remplir vos classes HTML de manière sémantique tout en conservant vos habitudes d'intégration avec [Bootstrap] par exemple.\n\n> ### Bonne utilisation de Bootstrap and Cie.###\n> **`Best Practice` Vous devriez parvenir à une utilisation de [Bootstrap] vidé de tous les problèmes précédemment cités en vu de maintenir un site orienté composant en lisant les article « [Bootstrap, lisibilité, propreté, performance, optimisation ; c'est possible !](https://blog.lesieur.name/bootstrap-lisibilite-proprete-performance-optimisation-c-est-possible/) » et « [Conventions HTML et CSS orientés composants](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/) ».**\n\n\n\n\n\n## Mon retour rapide sur l'utilisation Bootstrap ##\n\nJe trouve que les types de sites réalisés avec Bootstrap se ressemble tous et qu'il devient difficile de faire quelque chose s'en éloignant sans finalement perdre du temps. Bootstrap devient ici plus contraignant pour la patte créative également et on en vient parfois même à blâmer les agences de création digital car leurs créations ne sont pas « compliant » Bootstrap.\n\nPour exemple voici des variations de design pour un HTML identique en CSS-driven :\n\n**[Exemple rapide sur CodePen](http://codepen.io/Haeresis/pen/bdXymY)**\n\n*[Site de Nicolas Hoffmann](http://www.nicolas-hoffmann.net/)*\n\n- [ND Mobi First](http://www.nicolas-hoffmann.net/source/changer_skin.php?theme=ND_mobfirst)\n- [ND New Green](http://www.nicolas-hoffmann.net/source/changer_skin.php?theme=ND_new_green)\n- [ND](http://www.nicolas-hoffmann.net/source/changer_skin.php?theme=ND)\n- [Firefox](http://www.nicolas-hoffmann.net/source/changer_skin.php?theme=firefox)\n\net la même chose pour un HTML identique avec Bootstrap\n\n*[Template pour documentation JSDoc](https://github.com/terryweiss/docstrap)*\n\n- [Amelia](http://terryweiss.github.io/docstrap/themes/amelia/)\n- [Cyborg](http://terryweiss.github.io/docstrap/themes/cyborg/)\n- [Readable](http://terryweiss.github.io/docstrap/themes/readable/)\n- [DocStrap](http://terryweiss.github.io/docstrap/themes/superhero/)\n\nC. Q. F. D.\n\n [Bootstrap]: http://getbootstrap.com/ (Le framework de développement Front-end responsive et mobile first le plus populaire du web)", "dates" : { "published" : { "$date" : 1400348400000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : " /* Entrer le padding dans le calcul interne */\n.example-logo,\n.example-menu,\n.example-main,\n.example-aside {\n    box-sizing: border-box;\n}\n\n/* Mettre le titre en gras */\n.example-logo {\n    font-weight: bold;   \n}\n\n/* Centrer les textes du menu */\n.example-menu {\n    text-align: center;\n}\n\n/* Retrait du comportement de liste standard */\n.example-menu ul {\n    padding-left: 0;\n}\n.example-menu li {\n    list-style-type: none;\n}\n\n/* A partir d'une tablette. */\n@media (min-width: 768px) {\n     /* Empècher les écoulements de flottants */\n    .example-header:after,\n    .example-content:after {\n        content: \"\";\n        display: block;\n        clear: both;\n    }   \n\n    /* Flotter à gauche en 50% */\n    .example-menu,\n    .example-aside {\n        float: left;\n        width: 50%;\n    }\n\n    /* Flotter à droite en 50% */\n    .example-logo,\n    .example-main {\n        float: right;\n        width: 50%;\n    }\n\n    /* Remettre les menus en alignement standard */\n    .example-menu {\n        text-align: left;\n    }\n\n    /* Mettre le menu en ligne */\n    .example-menu li {\n        display: inline-block;\n    }\n\n    /* Placer le titre à droite */\n    .example-logo {\n        text-align: right;\n    }\n}", "title" : "<span>Bootstrap</span> est une régression pour un <span>développement</span> <span>Front-end</span> de <span>qualité</span>", "urn" : "bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite" }
{ "__v" : 0, "_id" : { "$oid" : "537b2d0406b95d3a0a73cb01" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "530ef6a6789c1a55e4fde0af" } ], "content" : "On me demande souvent quelle est la structure JavaScript que j'utilise pour développer mes sites web. C'est une question à laquelle je ne sais jamais si un simple « [jQuery] » suffit ou si l'on s'attend à m'entendre répondre « [Backbone] », « [Knockout] », « [AngularJS] », « [Aurelia] » ou encore, « [RequireJS] » ou je ne sais quelle autre composant/librairie/framework JavaScript Front-end extraordinaire !\n\n [jQuery]: http://jquery.com/ (jQuery JavaScript Library)\n [RequireJS]: http://requirejs.org/ (RequireJS Components Loader)\n [Backbone]: http://backbonejs.org/ (Backbone JavaScript Framework)\n [Knockout]: http://knockoutjs.com/ (Knockout JavaScript Framework)\n [AngularJs]: http://angularjs.org/ (AngularJs JavaScript Framework)\n [Aurelia]: http://aurelia.io/ (Aurelia JavaScript Framework)\n\nAu delà du fait que l'utilisation de ses ressources précédemment citées dépend du fait que l'on souhaite réaliser un site web ou un outil web ou une application web etc. je finis toujours par expliquer que j'utilise ma propre architecture JavaScript à travers toutes les différentes pages d'un site web et qu'au cas par cas, je charge les javascript dont j'ai besoin (parfois il est plus judicieux de charger de manière asynchrone un [ckeditor] sur l'unique page ou il est utile que de ce le trimbaler partout sur le site !).\n\n [ckeditor]: http://ckeditor.com/ (The best web text editor for everyone)\n\nJe vais donc vous livrer à travers cet article une architecture JavaScript pas à pas, page par page. Il existe également [une approche plutôt orienté composant que j'aborde ici](https://blog.lesieur.name/eviter-les-multiples-jquery-document-ready-dans-vos-pages-web/).\n\nAfin de la comprendre pas à pas, j'utiliserai comme fil conducteur la réalisation d'un site vitrine. Ma façon de structurer le JavaScript client n'est pas absolue mais elle vous permettra de comprendre la logique derrière certains de mes sites dont vous trouverez les sources sur GitHub ([comme pour ce blog](https://github.com/Haeresis/BlogAtlas/blob/master/assets/javascript/common.js)) ou même la logique du moteur de site [node.js] : [NodeAtlas].\n\n [Node.js]: http://nodejs.org/ (Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications)\n [NodeAtlas]: http://haeresis.github.io/NodeAtlas/ (NodeAtlas vous permet de créer et maintenir des Assets HTML ou sites multilingues simplement en Node.js)\n\n\n\n\n\n## Architecture JavaScript d'un site web ##\n\nPour commencer, j'estime qu'il y a quatre zones de JavaScript par page que je nomme **Boot**, **Framework**, **Common** et **Specific**. Aucune ligne JavaScript ne doit se trouver en dehors de ces quatre zones. Ces quatre zones, dans un site en production sont matérialisées par quatre (au maximum) fichiers.\n\nEn voici l'exemple sur une page d'accueil :\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page d'accueil</title>\n        <!-- Meta / Feuilles de style -->\n        <script type=\"text/javascript\" src=\"javascript/boot.min.js\"></script>\n    </head>\n    <body class=\"home\">\n        <!-- Contenu de la page -->\n        <script type=\"text/javascript\" src=\"javascript/framework.min.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/home.min.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/common.min.js\"></script>\n    </body>\n</html>\n```\n\n\n\n\n### La zone de Boot ###\n\nCette zone est facultative. Elle est la seule à ralentir le chargement de la page car les fichiers JavaScript de cette zone sont chargés et exécutés avant le rendu visuel final de la page, avant même que la balise `body` ne soit chargée. C'est pour cela que les bonnes pratiques demandent au maximum de charger les fichiers en pied de page et que ce qui sera chargé dans le `head` fasse un poids minimal en taille de fichier et en temps d'exécution JavaScript. Le type de script qui se trouve ici est celui qui va modifier la structure HTML au dessus du body à savoir sur l'élément `html` ou dans le `head`. Cela en vu d'éviter le phénomène de [FOUC](http://fr.wikipedia.org/wiki/FOUC).\n\nOn retrouve donc ici, avant minification et rassemblement des JavaScript, des scripts comme « [Modernizr] » ou « [HTMLShiv] » qui vont impacter le rendu des balises avec les feuilles CSS. C'est ici qu'on laissera une ligne de code pour injecter par exemple une classe `js` dans la balise `html` afin d'avertir les futurs scripts ou les sélecteurs CSS que JavaScript est activé. Si aucun de ces scripts ne vous intéressent pour votre site, la zone de Boot peut donc être ignorée.\n\n [Modernizr]: \"http://modernizr.com/\" (An indispensable tool)\n [HTMLShiv]: \"https://code.google.com/p/html5shiv/\" (HTML5 IE enabling script)\n\n\n\n\n### La zone de Framework ###\n\nC'est ici que vont se trouver le chargement de toutes vos librairies/frameworks JavaScript utile à l'intégralité du site. Vous chargerez également des plugins pour vos librairies ou même vos propres fonctions JavaScript. Bref, ici c'est tout ce que vous utilisez Cross-site.\n\nCela peut ressembler à ça dans un environnement de développement :\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <!-- Titre / Meta / Feuilles de style -->\n    </head>\n    <body class=\"home\">\n        <!-- Contenu de la page -->\n        <script type=\"text/javascript\" src=\"javascript/jquery/date.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/jquery/string.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/jquery/jquery-2.1.0.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/jquery/jquery.ba-hashchange.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/jquery-ui/jquery-ui-1.10.4.js\"></script>\n        \n        <script type=\"text/javascript\" src=\"javascript/ckeditor/ckeditor.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/ckeditor/config.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/ckeditor/lang/fr.js\"></script>\n        <!-- Autres JavaScript -->\n    </body>\n</html>\n```\n\n\n\n\n### La zone Common ###\n\nC'est la première des deux zones que nous allons décortiquer plus bas dans cette article (les zones précédentes étant dans 95% des cas du code générique). Ici, tout va être dédié à l'interaction des scripts de la zone Framework avec le DOM du site. Cependant, ce fichier unique en version de développement (dans la majorité des cas) comme en version de production sera chargé sur toutes les pages du site comme les deux premières zones. Ne sera donc déclarées ici que les fonctions qui seront appelées sur plus d'une page.\n\n\n\n\n### La zone Specific ###\n\nCette dernière zone est facultative et _spécifique_ à chaque page. Elle se matérialise par un fichier portant le nom du template de page associé à lui. Sur la page d'accueil ce fichier est donc `home.js` tandis que sur la page de contact il s'appelle `contact-us.js`. Il ne doit contenir **que** du code unique à la page courante.\n\nSi le code de cette zone pour un template spécifique donne un fichier bien trop petit en poids pour qu'il soit négligeable à côté du `common.js`, il peut être intéressant de mettre quelques lignes normalement spécifique dans la partie commune. Nous verrons cela plus loin.\n\n\n\n\n\n## Site web de fil rouge ##\n\nPour commencer, nous allons imaginer un petit site web embarquant diverses zones HTML (des composants) qui auront chacune des fonctions JavaScript propres à travers différentes pages. Voici sans plus attendre les différents types de pages embarquant nos divers composants :\n\n### Liste des templates de page ###\n\n#### La page d'accueil ####\n\n- Le composant _Menu principal_\n- Le composant _Aperçu des pages_\n- Le composant _Aperçu des produits_\n- Le composant _Formulaire d'inscription à la newsletter_\n- Le composant _Retour en haut de page_\n\n_Contenu de **home.htm**_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page d'accueil</title>\n    </head>\n    <body class=\"home\">\n        <nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n        <nav class=\"page-overview\"><!-- Zone Aperçu des pages --></nav>\n        <nav class=\"product-overview\"><!-- Zone Aperçu des produits --></nav>\n        <form class=\"newsletter-form\"><!-- Zone Formulaire d'inscription à la newsletter --></form>\n        <nav class=\"back-to-top\"><!-- Zone Retour en haut de page --></nav>\n    </body>\n</html>\n```\n\n\n\n#### Les pages de produits ####\n\n- Le composant _Menu principal_\n- Le composant _Aperçu des produits_\n- Le composant _Description d'un produit_\n\n_Contenu de **products/`<name-of-product>`.htm**_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page de produit</title>\n    </head>\n    <body class=\"product\">\n        <nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n        <nav class=\"product-overview\"><!-- Zone Aperçu des produits --></nav>\n        <article class=\"product-content\"><!-- Zone Description d'un produit --></article>\n    </body>\n</html>\n```\n\n\n\n#### Les page d'articles ####\n\n- Le composant _Menu principal_\n- Le composant _Aperçu des articles_\n- Le composant _Contenu d'un article_\n- Le composant _Retour en haut de page_\n\n_Contenu de **articles/`<title-of-article>`.htm**_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page d'article</title>\n    </head>\n    <body class=\"article\">\n        <nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n        <nav class=\"article-overview\"><!-- Zone Aperçu des articles --></nav>\n        <article class=\"article-content\"><!-- Zone Contenu d'un article --></article>\n        <nav class=\"back-to-top\"><!-- Zone Retour en haut de page --></nav>\n    </body>\n</html>\n```\n\n\n\n#### La page F.A.Q. ####\n\n- Le composant _Menu principal_\n- Le composant _Liste de Question/Réponse_\n- Le composant _Retour en haut de page_\n\n_Contenu de **faq**.htm_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<title>La page de la faq</title>\n\t</head>\n\t<body class=\"faq\">\n\t\t<nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n\t\t<section class=\"questions-answers-list\"><!-- Zone Liste de Question/Réponse --></section>\n\t\t<nav class=\"back-to-top\"><!-- Zone Retour en haut de page --></nav>\n\t</body>\n</html>\n```\n#### La page de contact ####\n\n- Le composant _Menu principal_\n- Le composant _Formulaire d'envoi d'un email_\n\n_Contenu de **contact-us.htm**_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page de contact</title>\n    </head>\n    <body class=\"contact-us\">\n        <nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n        <form class=\"contact-us-form\"><!-- Zone Formulaire d'envoi d'un email --></form>\n    </body>\n</html>\n```\n\n\n\n\n\n### Liste des composants ###\n\nOn peut donc repérer un certain nombre de composant sur lesquels nous allons appliquer des interactions JavaScript.\n\n#### Le composant _Menu principal_ ####\n\n- Celui-ci à des sous-menus qui ne s'affichent qu'avec des interactions par clique qui vont nécessiter du JavaScript. Il dispose également d'une barre de recherche pour trouver une page dans le site qui nécessitera également du JavaScript.\n\n#### Le composant _Aperçu des pages_ ####\n\nCelui-ci sera un slider complet (flèches, swipe tactile, barre de progression) avec effets de transition qui va nécésiter du JavaScript.\n\n#### Le composant _Aperçu des produits_ ####\n\n- Celui-ci sera un slider affichant une liste d'éléments en ligne qui partent en overflow horizontal. Ceci va nécessiter du JavaScript.\n\n#### Le composant _Formulaire d'inscription à la newsletter_ ####\n\n- Celui-ci collectera les informations du formulaire pour ensuite les envoyer en AJAX si il passe les tests de validation. Ceci va nécessiter du JavaScript.\n\n#### Le composant _Retour en haut de page_ ####\n\n- Celui-ci renverra en haut de page avec un effet de défilement doux qui nécessitera du JavaScript.\n\n#### Le composant _Description d'un produit_ ####\n\n- Celui-ci sera découpé en trois parties, chacune cachées derrière des onglets. Passer d'une partie à l'autre nécessitera du JavaScript.\n\n#### Le composant _Aperçu des articles_ ####\n\n- Même comportement que pour Aperçu des produits.\n\n#### Le composant _Contenu d'un article_ ####\n\n- Pas de JavaScript prévu pour ce composant.\n\n#### Le composant _Liste de Question/Réponse_ ####\n\n- Celui-ci comportera une liste de question/réponse dont la réponse sera initialement cachée. Afficher les réponses nécessitera du JavaScript.\n\n#### Le composant _Formulaire d'envoi d'un email_ ####\n\n- Celui-ci collectera les informations du formulaire pour ensuite les envoyer en AJAX s'il passe les tests de validation. Ceci va nécessiter du JavaScript.\n\n\n\n\n\n## Aménager le fichier Common et les fichiers Specific ##\n\nLe plus simple en terme de structure serait de faire un fichier à plat contenant l'intégralité de notre JavaScript. Il nous faudra de quoi parcourir le DOM aisément aussi j'utiliserai [jQuery] (ce qui pour la structure final n'est pas obligatoire, mais aidera à la compréhension tout au long de l'article).\n\nCette structure ne tiendra pas la route si le site doit grandir, mais c'est une base que je vais vous exposer pour vous expliquer la suite (qui elle tiendra la route !).\n\n_Contenu de **javascript/common.js**_\n\n```js\nvar temp;\nvar timer;\n\nfunction openMenu() { /* Code... */ }\n\nfunction launchSearch() { /* Code... */ }\n\n$(\".main-nav\" /* handler */).bind(/* event */, function () {\n    openMenu();\n    /* ... */\n});\n\n$(\".main-nav\" /* handler */).bind(/* event */, function () { \n    launchSearch();\n    /* ... */\n});\n\n/* ... */\n\n\n/* Aperçu des page */\n\nfunction createSlider() { /* ... */ }\nfunction changeStepSlider() { /* ... */ }\nfunction startAutoSlider() { /* ... */ }\n\ncreateSlider();\nchangeStepSlider();\nstartAutoSlider();\n\n/* ... */\n```\n\nLa plupart des variables se retrouvent dans le contexte d'exécution global ce qui peut faire des conflits. Si vous souhaitez enlever des fonctionnalités, il faut mettre sous commentaire. Segmenter votre code revient à lire entre les lignes etc. Bref ça manque d'une structure.\n\n\n\n\n### Un namespace commun et par page ###\n\nPour commencer, il faut absolument isoler les parties de code pour éviter les conflits, pouvoir utiliser du JavaScript en _Strict Mode_ là où ça nous chante et pouvoir rapidement repérer du code en fonction de sur quelle page il doit intervenir.\n\n\n\n#### Isolation et exécution ####\n\nPour isoler du code en JavaScript, il faut le faire tourner dans des contextes d'exécution différents. Les contextes d'exécution sont créer uniquement à l'intérieur des fonctions. Il va donc falloir créer des fonctions d'isolation mais tout de même organisées à travers un système de namespace de manière à ce que n'importe quelle fonction soit accessible n'importe où dans le code, et sans conflit.\n\n_Contenu de **javascript/common.js** (changement 1)_\n\n```js\n// Création d'un objet unique accessible de partout.\nvar website = website || {}; // Si « website » a déjà été crée dans un précédent fichier on le reprend. Sinon on le créer.\n\n// Création d'un context d'execution isolant.\n// Ce contexte d'exécution représente le code exécuté sur toutes les pages du site.\n(function (publics) { // Tout ce qui devra être accessible en dehors de ce contexte d'execution sera accroché à « publics » et accessible via « website ».\n    \"use strict\"; // Mode Strict pour ce contexte d'execution.\n\n    var privates = {}; // Tout ce qui ne devra pas quitter le contexte d'execution sera accroché à « privates » et accessible uniquement via « privates ».\n\n    /* Attributs / Fonctions privées */\n\n    /* Attributs / Fonctions publiques */\n    \n    publics.init = function () {\n        // Le code ici sera exécutable via « website.init() ».\n    };\n}(website));\n\n// On exécute le code commun sur la page courante.\nwebsite.init();\n```\n\nÀ partir de notre site exemple, créons les fonctionnalités qui seront appelées sur le template home.\n\n\n\n#### Structure publique / privée ####\n\nVoici par exemple ce que pourrait contenir le fichier `common.js` pour notre site s'il n'était composé que de la page au template _home_ et de rien d'autre.\n\n_Contenu de **javascript/common.js** (changement 2)_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* Menu principal */\n    publics.openMenu = function () {\n        // Permet d'ouvrir les sous menus.\n        // ...\n    };\n    publics.search = function () {\n        // Permet de lancer une recherche.\n        // ...\n    };\n    \n    /* Aperçu des pages */\n    privates.initSlider = function () {\n        // Transforme le DOM pour convenir au mécanirme.\n        // Création de barre de progression, de flèches, etc...\n        // ...\n    };\n    privates.changeSlider = function () {\n        // Permet de changer de slide.\n        // ...\n    };\n    privates.manageSliderArrows = function () {\n        // Permet de gérer les flèches.\n        // ...\n    };\n    privates.manageSliderProgressDot = function () {\n        // Permet de gérer la barre d'état.\n        // ...\n    };\n    privates.startSlider = function () {\n        // Permet de faire tourner le slider.\n        // ...\n        privates.timerSlider = setInterval(/* fonction */, 5000);\n        // ...\n    };\n    privates.stopSlider = function () {\n        // Permet d'arrêter le slider.\n        // ...\n        clearInterval(privates.timerSlider);\n        // ...\n    };\n    publics.slider = function () {\n        // Permet de générer le slider.\n        privates.initSlider();\n        privates.manageSliderArrows();\n        privates.manageSliderProgressDot();\n        privates.startSlider();\n    };\n    \n    /* Aperçu des produits */\n    privates.initOverview = function ($component) {\n        // Transforme le DOM pour convenir au mécanirme.\n        // Création de flèches.\n        // ...\n    };\n    privates.defilOverview = function ($component) {\n        // Permet de faire défiler les items.\n        // ...\n    };\n    privates.manageOverviewArrows = function ($component) {\n        // Permet de gérer les flèches.\n        // ...\n    };\n\n    // Ici on spécifie un paramètre « component » car la fonction « overview » est destinée \n    // à fonctionner avec plusieurs composants à savoir les composants « Aperçu des produits » \n    // et « Aperçu des articles » qui ont le même comportement. C'est à l'appel de la fonction\n    // que l'on passera la bonne structure.\n\n    publics.overview = function ($component) {\n        // Permet de générer le slider.\n        privates.initOverview($component);\n        privates.defilOverview($component);\n        privates.manageOverviewArrows($component);\n    };\n\n    /* Formulaire d'inscription à la newsletter */\n    private.validateForm = function (/* formulaire */, callback) {\n        // Permet de vérifier les erreurs du formulaire.\n        // ...\n        callback();\n    };\n    publics.newsletterRegistration = function () {\n        // Enregistre une nouvelle personne à la newsletter.\n        private.validateForm(/* formulaire */, function () {\n            // ...\n        });\n    };\n\n    /* Retour en haut de page */\n    publics.backToTop = function () {\n        // Retour en haut de page.\n        // ...\n    };\n\n    // On initialise les fonction que l'on souhaite utiliser.\n    publics.init = function () {\n        website.openMenu();\n        website.search();\n        website.slider();\n        website.overview();\n        publics.newsletterRegistration();\n        website.backToTop();\n    };\n}(website));\n\n// On execute le code commun sur la page courante.\nwebsite.init();\n```\n\n\n\n\n#### Segmentation ####\n\nSi votre partie common est trop grande, rien ne vous empêche de la scinder en plusieurs parties. Vous pouvez également décrocher une grosse partie de fonction commune à un mécanisme pour en faire un fichier volant plus facilement réutilisable tel quel dans un autre site.\n\n_Contenu de **javascript/common.js** (changement 3)_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var privates = {};\n\n    /* Menu principal */\n    publics.openMenu = function () { /* ... */ };\n    publics.search = function () { /* ... */ };\n\n    /* Aperçu des produits */\n    privates.initOverview = function ($component) { /* ... */ };\n    privates.defilOverview = function ($component) { /* ... */ };\n    privates.manageOverviewArrows = function ($component) { /* ... */ };\n    publics.overview = function ($component) { /* ... */ };\n    \n    /* Formulaire d'inscription à la newsletter */\n    private.validateForm = function (/* formulaire */, callback) { /* ... */ };\n    publics.newsletterRegistration = function () { /* ... */ };\n\n    /* Retour en haut de page */\n    publics.backToTop = function () { /* ... */ };\n}(website));\n```\n\n_Contenu de **javascript/slider.js**_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var privates = {};\n\n    /* Aperçu des pages */\n    privates.initSlider = function () { /* ... */ };\n    privates.changeSlider = function () { /* ... */ };\n    privates.manageSliderArrows = function () { /* ... */ };\n    privates.manageSliderProgressDot = function () { /* ... */ };\n    privates.startSlider = function () { /* ... */ };\n    privates.stopSlider = function () { /* ... */ };\n    publics.slider = function () { /* ... */ };\n}(website));\n```\n\n_Contenu de **javascript/run.js**_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    // On initialise les fonction que l'on souhaite utiliser.\n    publics.init = function () {\n        website.openMenu();\n        website.search();\n        website.slider();\n        website.overview();\n        publics.newsletterRegistration();\n        website.backToTop();\n    }\n}(website));\n\n// On execute le code commun sur la page courante.\nwebsite.init();\n```\n\nVous remarquerez par la même occasion que slider.js ressemble étrangement à une sorte de « plugin ». Effectivement il serait possible d'utiliser un plugin [jQuery] à la place de notre propre slider. Bien entendu dans ce cas il serrait rattaché à `$` et non plus à `website`.\n\n\n\n\n### Common vs Specific ###\n\n#### Dans des fichiers séparés ####\n\nNous allons continuer avec un **common** unique et mettre en place le fichier _spécifique_ du template de page `home`.\n\n_Contenu de **javascript/common.js** (changement 4)_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* Menu principal */\n    publics.openMenu = function () { /* ... */ };\n    publics.search = function () { /* ... */ };\n    \n\n    // Aperçu des pages étant uniquement sur la home, il part dans le fichier spécifique home.js.\n\n\n    /* Aperçu des produits */\n    privates.initOverview = function ($component) { /* ... */ };\n    privates.defilOverview = function ($component) { /* ... */ };\n    privates.manageOverviewArrows = function ($component) { /* ... */ };\n    publics.overview = function ($component) { /* ... */ };\n    \n\n    // Le validateur de formulaire va nous resservir pour la page de contact. Il est donc commun à tout le site.\n    // Cependant le JavaScript spécifique à la newsletter est déporté dans « home.js ».\n    // Pour que « validateForm » soit accessible maintenant en dehors de la zone commune, il passe publique.\n    \n    /* Validateur de formulaire */\n    publics.validateForm = function (/* formulaire */, callback) { /* ... */ };\n\n\n    /* Retour en haut de page */\n    publics.backToTop = function () { /* ... */ };\n\n    // On initialise les fonction que l'on souhaite utiliser.\n    publics.init = function () { \n        website.openMenu();\n        website.search();\n    };\n}(website));\n\n// On execute le code commun sur la page courante.\nwebsite.init();\n```\n\nPour le JavaScript spécifique de **home**, on va déporter l'ensemble des fonction dans `website.home`.\n\n_Contenu de **javascript/home.js**_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* Aperçu des pages */\n    privates.initSlider = function () { /* ... */ };\n    privates.changeSlider = function () { /* ... */ };\n    privates.manageSliderArrows = function () { /* ... */ };\n    privates.manageSliderProgressDot = function () { /* ... */ };\n    privates.startSlider = function () { /* ... */ };\n    privates.stopSlider = function () { /* ... */ };\n    publics.slider = function () { /* ... */ };\n\n    /* Formulaire d'inscription à la newsletter */\n    publics.newsletterRegistration = function () {\n        // Enregistre une nouvelle personne à la newsletter.\n        website.validateForm(/* formulaire */, function () {\n            // ...\n        });\n    };\n\n    // On initialise les fonction que l'on souhaite utiliser.\n    publics.init = function () {\n        website.overview($(\".product-overview\"));\n        website.backToTop();\n        website.home.slider();\n        website.home.newsletterRegistration();\n    };\n\n}(website.home = {})); // On accroche le JavaScript de la home dans un namespace (attribut) spécifique.\n\n// On execute le code destiné à la page home.\nwebsite.home.init();\n```\n\nEt la page du template **home** serait alors :\n\n_Contenu de **home.htm** (Changement 1)_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page d'accueil</title>\n\n        <!-- Script de Boot -->\n    </head>\n    <body class=\"home\">\n        <nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n        <nav class=\"page-overview\"><!-- Zone Aperçu des pages --></nav>\n        <nav class=\"product-overview\"><!-- Zone Aperçu des produits --></nav>\n        <form class=\"newsletter-form\"><!-- Zone Formulaire d'inscription à la newsletter --></form>\n        <nav class=\"back-to-top\"><!-- Zone Retour en haut de page --></nav>\n\n        <!-- Scripts de Framework -->\n        <script type=\"text/javascript\" src=\"javascript/home.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/common.js\"></script>\n    </body>\n</html>\n```\n\nImaginons à présent que nous nous penchions sur le JavaScript spécifique du template des pages article dans le namespace de `website.article`. Nous remarquons vite qu'à part de l'initialisation, cette page ne possède pas de code spécifique pour sa page contrairement à **home**. Voyez plutôt :\n\n_Contenu de **javascript/article.js**_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    \"use strict\";\n\n    // On initialise les fonctions que l'on souhaite utiliser.\n    publics.init = function () {\n        website.overview($(\".article-overview\"));\n        website.backToTop();\n    };\n\n}(website.article = {})); // On accroche le JavaScript de article dans un namespace (attribut) spécifique.\n\n// On execute le code destiné à la page article.\nwebsite.article.init();\n```\n\nCe template ressemblerait alors à ceci :\n\n_Contenu de **articles/`<title-of-article>`.htm** (Changement 1)_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page d'article</title>\n        ><!-- Script de Boot --></nav>\n    </head>\n    <body class=\"article\">\n        <nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n        <nav class=\"article-overview\"><!-- Zone Aperçu des articles --></nav>\n        <article class=\"article-content\"><!-- Zone Contenu d'un article --></article>\n        <nav class=\"back-to-top\"><!-- Zone Retour en haut de page --></nav>\n        <!-- Scripts de Framework -->\n        <script type=\"text/javascript\" src=\"javascript/article.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/common.js\"></script>\n    </body>\n</html>\n```\n\n\n\n#### Dans le fichier common ####\n\nComme vu avec le template **article**, le code est tellement pauvre qu'il peut être placé dans `common.js`, ce qui donnerait quelque chose comme :\n\n_Contenu de **javascript/common.js** (changement 5)_\n\n```js\nvar website = website || {};\n\n// Partie Commune\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* ... */\n\n    /* ... */\n\n    publics.init = function () { /* ... */ };\n}(website));\n\n// Partie article tellement petite qu'il vaut mieux l'inclure dans common.\n(function (publics) {\n    \"use strict\";\n\n    publics.init = function () { /* ... */ };\n}(website.article = {}));\n\n// Lancement des deux parties.\nwebsite.init();\nwebsite.article.init();\n```\n\n**Cependant cela signifirait que le code `website.article.init()` serait exécuté sur toutes les pages alors qu'il n'aurait besoin que d'être exécuté sur article. C'est là que nous allons créer un lanceur de init() conditionnel au template de page qui appel les scripts !**\n\n\n\n\n### Exécution conditionnelle au template ###\n\nQuand le contenu des fichiers spécifiques est séparé et appelé uniquement sur le template de page auquel il est destiné, on est sur que l'exécution de code dans ce fichier ne se ferra pas sur d'autres pages (puisqu'il ne seront pas inclus). Hors ce n'est pas le cas, comme vous pouvez le constater, avec le code spécifique de la page article qui a été inclus dans le fichier de code commun (pour des questions de performance). Il suffit simplement de conditionner l'exécution de tous les `init()` des fichiers spécifiques avec la présence ou non d'une classe associée au template sur lequel il sont sensé s'exécuter. `common.js` deviendrait donc :\n\n_Contenu de **javascript/common.js** (changement 6)_\n\n```js\nvar website = website || {};\n\n// Partie Commune\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* ... */\n\n    /* ... */\n\n    publics.init = function () { /* ... */ };\n}(website));\n\n\n// Partie article tellement petite qu'il vaut mieux l'inclure dans common.\n(function (publics) {\n    \"use strict\";\n\n    publics.init = function () { /* ... */ };\n}(website.article = {}));\n\n\n// On permet de placer les fichiers dans n'importe qu'elle ordre.\n// Cette zone est l'unique zone ou l'on exécutera l'intégralité du JavaScript de tout le site.\n$(function () {\n    \"use strict\";\n\n    // On vérifie quel est le template courant\n    // en vérifiant le nom de la première classe du body.\n    // Effectivement chaque body de chaque template de page à\n    // sa classe qui lui est propre.\n\n    var specific = $(\"body\") // On réclame le body.\n        .attr(\"class\") // On lit ses classes.\n        .split(\" \")[0] // On récupère la première.\n        .replace(/-/g, \"\"); // On la formate en une chaine identique au namespace !\n\n    // Pour la page home, « var specific = \"home\" » et le namespace est « website.home ».\n    // Pour la page article, « var specific = \"article\" » et le namespace est « website.article ».\n    // Pour la page contact-us, « var specific = \"contactus\" » et le namespace est « website.contactus ».\n    \n    // On lance le code commun quoi qu'il arrive.\n    website.init();\n\n    // Ici on lance le code spécifique si un namespace correspondant existe.\n    if (website[specific] !== undefined) {\n        website[specific].init();\n    }\n});\n```\n\nTous les autres `init()` disparaissent des autres fichiers et seul `common.js` est alors habilité à exécuter du code spécifique en fonction du template ou il est appelé.\n\n\n\n\n\n## Structure JavaScript du fil rouge ##\n\nNous y sommes : voici la structure JavaScript utilisée pour le site fil rouge de la partie **Site web de fil rouge** avec les spécificités évoquées dans la partie **Amennager le fichier Common et les fichiers Specific**. Voici ce que nous imaginons ; tous les scripts sont assez petits pour être dans `common.js` sauf `home.js` et `contact-us.js` qui seront des fichiers séparés.\n\nGardez à l'esprit que vous pouvez toujours très bien garder vos JavaScript dans des fichiers séparés peu importe leurs taille et de les associer dans les mêmes fichiers au besoin uniquement pour les versions minifiées.\n\n\n\n\n### common, product, faq, article, run ###\n\n_Contenu de **javascript/common.js** (changement final)_\n\n```js\nvar website = website || {};\n\n/***********/\n/* website */\n/***********/\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* Menu principal */\n    publics.openMenu = function () { /* ... */ };\n    publics.search = function () { /* ... */ };\n    \n    /* Aperçu des produits */\n    privates.initOverview = function ($component) { /* ... */ };\n    privates.defilOverview = function ($component) { /* ... */ };\n    privates.manageOverviewArrows = function ($component) { /* ... */ };\n    publics.overview = function ($component) { /* ... */ };\n\n    /* Validateur de formulaire */\n    publics.validateForm = function (/* formulaire */, callback) { /* ... */ };\n\n    /* Retour en haut de page */\n    publics.backToTop = function () { /* ... */ };\n\n    publics.init = function () { \n        website.openMenu();\n        website.search();\n    };\n}(website));\n\n\n\n/*******************/\n/* website.product */\n/*******************/\n(function (publics) {\n    \"use strict\";\n\n    /* Description d'un produit */\n    publics.switchTab = function () { /* ... */ };\n\n    publics.init = function () {\n        website.overview($(\".product-overview\"));\n        website.product.switchTab();\n    };\n}(website.product = {}));\n\n\n\n/***************/\n/* website.faq */\n/***************/\n(function (publics) {\n    \"use strict\";\n\n    /* Liste de Question/Réponse */\n    publics.slideDown = function () { /* ... */ };\n\n    publics.init = function () {\n        website.faq.slideDown();\n        website.backToTop();\n    };\n}(website.faq = {}));\n\n\n\n/*******************/\n/* website.article */\n/*******************/\n(function (publics) {\n    \"use strict\";\n\n    publics.init = function () {\n        website.overview($(\".article-overview\"));\n        website.backToTop();\n    };\n}(website.article = {}));\n\n\n\n/*******/\n/* Run */\n/*******/\n$(function () {\n    \"use strict\";\n\n    var specific = $(\"body\").attr(\"class\").split(\" \")[0].replace(/-/g, \"\");\n\n    website.init();\n\n    if (website[specific] !== undefined) {\n        website[specific].init();\n    }\n});\n```\n\n_Contenu de **products/`<name-of-product>`.htm** (Changement final)_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page de produit</title>\n\n        <!-- Script de Boot -->\n    </head>\n    <body class=\"product\">\n        <nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n        <nav class=\"product-overview\"><!-- Zone Aperçu des produits --></nav>\n        <article class=\"product-content\"><!-- Zone Description d'un produit --></article>\n\n        <!-- Scripts de Framework -->\n        <script type=\"text/javascript\" src=\"javascript/common.js\"></script>\n    </body>\n</html>\n```\n\n_Contenu de **articles/`<title-of-article>`.htm** (Changement final)_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page d'article</title>\n\n        <!-- Script de Boot -->\n    </head>\n    <body class=\"article\">\n        <nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n        <nav class=\"article-overview\"><!-- Zone Aperçu des articles --></nav>\n        <article class=\"article-content\"><!-- Zone Contenu d'un article --></article>\n        <nav class=\"back-to-top\"><!-- Zone Retour en haut de page --></nav>\n\n        <!-- Scripts de Framework -->\n        <script type=\"text/javascript\" src=\"javascript/common.js\"></script>\n    </body>\n</html>\n```\n\n_Contenu de **faq.htm** (Changement final)_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page de la faq</title>\n\n        <!-- Script de Boot -->\n    </head>\n    <body class=\"faq\">\n        <nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n        <section class=\"questions-answers-list\"><!-- Zone Liste de Question/Réponse --></section>\n        <nav class=\"back-to-top\"><!-- Zone Retour en haut de page --></nav>\n\n        <!-- Scripts de Framework -->\n        <script type=\"text/javascript\" src=\"javascript/common.js\"></script>\n    </body>\n</html>\n```\n\n\n\n\n### Home ###\n\n_Contenu de **javascript/home.js**_\n\n```js\nvar website = website || {};\n\n/****************/\n/* website.home */\n/****************/\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* Aperçu des pages */\n    privates.initSlider = function () { /* ... */ };\n    privates.changeSlider = function () { /* ... */ };\n    privates.manageSliderArrows = function () { /* ... */ };\n    privates.manageSliderProgressDot = function () { /* ... */ };\n    privates.startSlider = function () { /* ... */ };\n    privates.stopSlider = function () { /* ... */ };\n    publics.slider = function () { /* ... */ };\n\n    /* Formulaire d'inscription à la newsletter */\n    publics.newsletterRegistration = function () {\n        website.validateForm(/* formulaire */, function () { /* ... */ });\n    };\n    \n    publics.init = function () {\n        website.overview($(\".product-overview\"));\n        website.backToTop();\n        website.home.slider();\n        website.home.newsletterRegistration();\n    };\n}(website.home = {}));\n```\n\n_Contenu de **home.htm** (Changement final)_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page d'accueil</title>\n\n        <!-- Script de Boot -->\n    </head>\n    <body class=\"home\">\n        <nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n        <nav class=\"page-overview\"><!-- Zone Aperçu des pages --></nav>\n        <nav class=\"product-overview\"><!-- Zone Aperçu des produits --></nav>\n        <form class=\"newsletter-form\"><!-- Zone Formulaire d'inscription à la newsletter --></form>\n        <nav class=\"back-to-top\"><!-- Zone Retour en haut de page --></nav>\n        \n        <!-- Scripts de Framework -->\n        <script type=\"text/javascript\" src=\"javascript/home.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/common.js\"></script>\n    </body>\n</html>\n```\n\n\n\n\n### contact-us ###\n\n_Contenu de **javascript/contact-us.js**_\n\n```js\nvar website = website || {};\n\n/*********************/\n/* website.contactus */\n/*********************/\n(function (publics) {\n    \"use strict\";\n\n    /* Formulaire d'inscription à la newsletter */\n    publics.sendAMessage = function () {\n        website.validateForm(/* formulaire */, function () { /* ... */ });\n    };\n    \n    publics.init = function () {\n        website.backToTop();\n        website.contactus.sendAMessage();\n    };\n}(website.contactus = {}));\n```\n\n_Contenu de **contact-us.htm** (Changement final)_\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>La page de contact</title>\n        \n        ><!-- Script de Boot --></nav>\n    </head>\n    <body class=\"contact-us\">\n        <nav class=\"main-nav\"><!-- Zone Menu principal --></nav>\n        <form class=\"contact-us-form\"><!-- Zone Formulaire d'envoi d'un email --></form>\n\n        <!-- Scripts de Framework -->\n        <script type=\"text/javascript\" src=\"javascript/contact-us.js\"></script>\n        <script type=\"text/javascript\" src=\"javascript/common.js\"></script>\n    </body>\n</html>\n```", "dates" : { "published" : { "$date" : 1397661780000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "<span>Structurer</span> le <span>JavaScript</span> de son <span>site</span> avec ou sans <span>Framework</span>", "urn" : "structurer-le-javascript-de-son-site-avec-ou-sans-framework" }
{ "__v" : 0, "_id" : { "$oid" : "537dc9a011b6ff1424354acd" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48c5" }, { "$oid" : "5310456355dfd5f7698d48cf" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48b6" }, { "$oid" : "5310456355dfd5f7698d48b7" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48c3" } ], "content" : "Il y a des solutions simples pour gérer avec une feuille CSS l'affichage de différentes langues. Vous vous êtes peut-être déjà confronté à un problème similaire : votre super menu s'affichant en ligne est parfait dans la langue des Vulcains avec une taille de caractère mais malheureusement ne l'ai plus avec la langue des Na'vis. \n\nQuand votre site sera déployé pour des localisations différentes, les feuilles CSS ne pourront alors pas être les mêmes et vous allez maintenir autant de fichiers différents que de localisation ? C'est ce que vous ferriez en faisant un très mauvais choix. Arrêtons-nous 5 minutes pour explorer une piste bien pratique pour assurer la maintenance d'une feuille CSS et de ces différentes localisations.\n\n\n\n\n\n## Oubliez les multiples variantes d'une même feuille CSS ##\n\nUne idée rapide serait de créer une feuille CSS initiale basée sur le rendu de texte « Lorem Ipsum » et de vérifier que son affichage se passe sans accroche. Il conviendrait ensuite de dupliquer cette CSS de base une fois finie et de modifier toutes les propriétés CSS qui divergent pour une autre langue de manière à ce que tout se passe bien également.\n\nMais QUID de la maintenance ? Si maintenant je dois modifier la feuille CSS de base à partir de laquelle mes 30 variantes par localisations ont été crées : je vais devoir réinjecter localisation par localisation toutes les nouvelles modifications en prenant soin de ne pas écraser dans chacune les lignes qui varies en fonction de la langue. Je ne vous parle même pas des conflits.\n\nIl y a également de fortes chances pour qu'au final, prise par groupe, les variantes pour 30 localisations ne soient qu'au nombre de 3 (petits mots, mots moyens et grands mots). Ça fait beaucoup de fichiers inutiles, car redondant, tout ça.\n\n\n\n\n\n## Une feuille CSS unique pour toutes les localisations ##\n\nEt si plutôt que d'éparpiller le code de manière redondante dans autant de fichier qu'il y a de localisation, nous gérions la localisation dans un seul et unique fichier ? Vous allez me dire que chaque localisation aurait alors des lignes qui ne la concerne pas et souffrirait d'un poids de page inutilement élevé ? Vous avez raison, mais faisons abstraction de ce point pour le moment.\n\n\n\n\n### Création avec comme base l'anglais ###\n\nTout commence de la même manière : on crée sa feuille CSS en se basant sur la langue anglaise qui a été fournie comme référence pour la création. Après plusieurs lignes, notre design est fini et les textes s'affichent comme suit :\n\n**HTML5 en anglais**\n\n```html\n<!DOCTYPE html>\n<html lang=\"en-us\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>Localisation example</title>\n    </head>\n    <body>\n        <div class=\"logo\">\n            <h1><a href=\"javascript:;\" title=\"Return to Home\">Title</a></h1>\n        </div>\n        <nav class=\"main-nav\">\n            <ul>\n                <li><a href=\"javascript:;\" title=\"Home\">Home</a></li>\n                <li><a href=\"javascript:;\" title=\"Products\">Products</a></li>\n                <li><a href=\"javascript:;\" title=\"Care and Advice\">Care and Advice</a></li>\n                <li><a href=\"javascript:;\" title=\"Fun and Games\">Fun and Games</a></li>\n                <li><a href=\"javascript:;\" title=\"News\">News</a></li>\n            </ul>\n        </nav>\n    </body>\n</html>\n```\n\n**CSS3 sans localisation**\n\n```css\n/* Séparateurs haut et bas de l'exemple */\nbody {\n     border-bottom: 1px solid #aaa;\n     border-top: 1px solid #aaa;\n     padding: 8px 0;\n}\n\n/* Maintenir le titre à gauche */\n.logo {\n    position: absolute;\n    font-size: 1.7em;\n    font-weight: bold;\n    padding: 0 16px;\n}\n\n/* Placer la zone menu à droite */\n.main-nav {\n    float: right;\n}\n\n/* Rendre le ul « transparent » */\n.main-nav ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\n/* Permettre aux items d'êtres en ligne */\n.main-nav li {\n    display: inline-block;\n    padding-left: 0;\n}\n\n/* Inclure de l'espace à gauche de tous les items sauf le premier */\n.main-nav li + li {\n    padding: 8px 0 8px 11px;\n}\n\n/* Créer un séparateur entre chaque item */\n.main-nav li + li:before {\n    margin-right: 13px;\n    content: \"|\";\n}\n```\n\n**Rendu**\n\n<div class=\"example\">\n\t<div class=\"elogo\">\n\t\t<div class=\"h1\"><a href=\"javascript:;\" title=\"Return to Home\">Title</a></div>\n\t</div>\n\t<div class=\"emain-nav\">\n\t\t<ul>\n\t\t\t<li><a href=\"javascript:;\" title=\"Home\">Home</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"Products\">Products</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"Care and Advice\">Care and Advice</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"Fun and Games\">Fun and Games</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"News\">News</a></li>\n\t\t</ul>\n\t</div>\n</div>\n\n\n\n\n### Localisation en français et problèmes ###\n\nLe marché français souhaite une version du site dans sa langue et fournit donc les traductions pour la localisation. Après injection, notre code HTML ressemble à ça :\n\n**HTML5 en français**\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr-fr\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>Exemple de localisation</title>\n    </head>\n    <body>\n        <div class=\"logo\">\n            <h1><a href=\"javascript:;\" title=\"Retour à l'accueil\">Titre</a></h1>\n        </div>\n        <nav class=\"main-nav\">\n            <ul>\n                <li><a href=\"javascript:;\" title=\"Accueil\">Accueil</a></li>\n                <li><a href=\"javascript:;\" title=\"Produits\">Produits</a></li>\n                <li><a href=\"javascript:;\" title=\"Soins et Conseils\">Soins et Conseils</a></li>\n                <li><a href=\"javascript:;\" title=\"Divertissements et Jeux\">Divertissements et Jeux</a></li>\n                <li><a href=\"javascript:;\" title=\"Actualités\">Actualités</a></li>\n            </ul>\n        </nav>\n    </body>\n</html>\n```\n\n**et CSS3 identique à la précédente feuille**\n\n**Rendu**\n\n<div class=\"example\">\n\t<div class=\"elogo\">\n\t\t<div class=\"h1\"><a href=\"javascript:;\" title=\"Retour à l'accueil\">Titre</a></div>\n\t</div>\n\t<div class=\"emain-nav\">\n\t\t<ul>\n\t\t\t<li><a href=\"javascript:;\" title=\"Accueil\">Accueil</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"Produits\">Produits</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"Soins et Conseils\">Soins et Conseils</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"Divertissements et Jeux\">Divertissements et Jeux</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"Actualités\">Actualités</a></li>\n\t\t</ul>\n\t</div>\n</div>\n\nEt là votre mise en page est mise à mal. Une première solution serait de forcer la traduction à ne pas avoir de caractères en plus que la version anglaise. Parfois c'est envisageable... et parfois pour certaine langue c'est impossible.\n\n> _Note : j'ai volontairement forcé la largeur du composant à 560px (désactivation de la responsivité) pour que vous puissiez constater le problème quelque soit votre périphérique d'affichage._\n\n\n\n\n### Localisation de la feuille CSS ###\n\nC'est là que vous vous demandez s'il ne va pas falloir maintenir une feuille différente qui sera chargée ou non sur la page en fonction de la localisation. Le problème est que vous allez par exemple faire une feuille différente pour la localisation française et espagnole alors que pour un peu les ajustements seront identiques pour ces deux localisations. Puis, par la suite, le texte va changer et vous ferez la chasse aux ajustements à travers tous vos fichiers.\n\nPour ma part, je vous propose de gérer toutes les localisations dans les CSS initiales ; par exemple tout en bas. Effectivement, quand le site sera affiché dans telle ou telle langue il y aura des instructions chargées inutilement. Mais dans la masse de propriétés « non localisée » la taille devient négligeable.\n\nModifions donc notre feuille CSS initiale :\n\n```css\n/*-------------------*\\\n    $SOMMAIRE\n\\*-------------------*/\n\n/**\n * SOMMAIRE..........c'est moi !\n * STANDARD..........les propriétés CSS de la page.\n * LOCALISATION......les propriétés variants en fonction de la langue.\n */\n\n\n\n\n\n/*-------------------*\\\n    $STANDARD\n\\*-------------------*/\n\n/* Séparateurs haut et bas de l'exemple */\nbody {\n     border-bottom: 1px solid #aaa;\n     border-top: 1px solid #aaa;\n     padding: 8px 0;\n}\n\n/* Maintenir le titre à gauche */\n.logo {\n    position: absolute;\n    font-size: 1.7em;\n    font-weight: bold;\n    padding: 0 16px;\n}\n\n/* Placer la zone menu à droite */\n.main-nav {\n    float: right;\n}\n\n/* Rendre le ul « transparent » */\n.main-nav ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\n/* Permettre aux items d'êtres en ligne */\n.main-nav li {\n    display: inline-block;\n    padding-left: 0;\n}\n\n/* Inclure de l'espace à gauche de tous les items sauf le premier */\n.main-nav li + li { /*** localisé ***/\n    padding: 8px 0 8px;\n    padding-left: 11px; /* Propriété sortie pour être surchargée seule plus loin */\n}\n\n/* Créer un séparateur entre chaque item */\n.main-nav li + li:before {\n    margin-right: 13px;\n    content: \"|\";\n}\n\n\n\n\n/*-------------------*\\\n    $LOCALISATION\n\\*-------------------*/\n.main-nav li + li:lang(fr) {\n    padding-left: 4px;\n}\n.main-nav li + li:before:lang(fr) {\n    margin-right: 6px;\n}\n```\n\n**Rendu**\n\n<div class=\"example fr\">\n\t<div class=\"elogo\">\n\t\t<div class=\"h1\"><a href=\"javascript:;\" title=\"Retour à l'accueil\">Titre</a></div>\n\t</div>\n\t<div class=\"emain-nav\">\n\t\t<ul>\n\t\t\t<li><a href=\"javascript:;\" title=\"Accueil\">Accueil</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"Produits\">Produits</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"Soins et Conseils\">Soins et Conseils</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"Divertissements et Jeux\">Divertissements et Jeux</a></li>\n\t\t\t<li><a href=\"javascript:;\" title=\"Actualités\">Actualités</a></li>\n\t\t</ul>\n\t</div>\n</div>\n\n\n\n\n\n### La pseudo-classe `:lang()` et l'attribut `lang` ###\n\nGrâce à la pseudo-classe `:lang()` vous pouvez conditionnellement appliquer du style à un élément HTML en HTML5 en fonction du contenu de l'attribut `lang` de la balise `<html>`.\n\nDans le cas de figure ci-dessous :\n\n```html\n<html lang=\"fr-fr\">\n    ...\n    <div class=\"content\">Texte</div>\n    ...\n</html>\n```\n\nles sélecteurs 1 et 2 ci-après seront appliqués, mais pas le 3 :\n\n```css\n.content:lang(fr-fr) {\n    color: #ccc;\n}\n\n.content:lang(fr) {\n    font-weight: bold;\n}\n\n.content:lang(en-us) {\n    color: #f00;\n}\n```\n\n\n\n## Support xHTML/HTML4 ou CSS 2.1 ##\n\nCette technique peut également être utilisée sans la pseudo-classe `:lang()` qui a l'avantage de matcher avec « fr-fr » si on spécifie simplement « fr » mais de ne pas fonctionner tout cours avec les navigateurs les plus ~~inutiles~~ vieux.\n\n### Seulement avec du CSS 2.1 ###\n\nIl convient de remplacer `:lang(fr-fr)` en fin d'instruction par `[lang=fr-fr]` en début. Ainsi le code précédent devient :\n\n```css\n[lang=fr-fr] .content {\n    color: #ccc;\n}\n\n[lang=fr-fr] .content {\n    font-weight: bold;\n}\n\n[lang=en-us] .content {\n    color: #f00;\n}\n```\n\n\n\n### Sans HTML5 ###\n\nL'idée est ici de remplacer `<html lang=\"fr-fr\">` qui n'est pas valide xHTML/HTML4 par `<html class=\"fr-fr\">` et de manager côté Back-end la présence ou non de cette classe en fonction de la langue. Le code CSS devient alors :\n\n```css\n.fr-fr .content {\n    color: #ccc;\n}\n\n.fr-fr .content {\n    font-weight: bold;\n}\n\n.en-us .content {\n    color: #f00;\n}\n```\n\n> _Note : n'hésitez pas, même en HTML5, à ajouter cette classe pour améliorer les performances de vos sélecteurs._\n\n\n\n\n\n## Gérer la localisation avec le remplissage de contenu ##\n\nIl est également possible de ne pas piéger les règles dans les fichiers CSS et de laisser vos remplisseurs de contenu se charger de gérer les problèmes CSS liés à la taille du contenu.\n\nDans ce cas il suffit d'ajouter une balise `<style></style>` en début de contenu et de changer le comportement avec celui-ci, ainsi les modifications de design liée au contenu son attaché à celui-ci.\n\n**Gérer par les Front-end Developper**\n\n```css\np {\n    width: 50%;\n}\n```\n\n**Gérer par les Content Filler**\n\n```html\n<style>\n.on-the-fly-behavior {\n    width: 60%;\n}\n</style>\n<p class=\"on-the-fly-behavior\">Je suis un peu trop large pour tenir sur une ligne</p>\n```\n\nQuand le texte est chargés depuis une autre langue, c'est une autre instruction qui vient avec la balise `<style>`, il n'est donc même plus nécessaire d'ajouter à ses sélecteurs HTML `:lang()`.\n\n\n\n## Le mot de la fin ##\n\nAu final vous maintiendrez beaucoup moins de fichier et pourrez gérer les différentes tailles de contenu par groupe de pays !\n\n```css\n.header:lang(es),\n.header:lang(de),\n.header:lang(fr) {\n    /* Propriété communes */\n}\n.header:lang(us) {\n    /* Propriété communes */\n}\n.content:lang(de),\n.content:lang(fr) {\n    /* Propriété communes */\n}\n.content:lang(es),\n.content:lang(us) {\n    /* Propriété communes */\n}\n.footer:lang(fr) {\n    /* Propriété communes */\n}\n.footer:lang(de),\n.footer:lang(es),\n.footer:lang(us) {\n    /* Propriété communes */\n}\n```", "dates" : { "published" : { "$date" : 1383230820000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : ".example {\npadding: 8px 0;\nborder-top: 1px solid #aaa;\nborder-bottom: 1px solid #aaa;\nbackground-color: #fff;\n}\n.example .h1 {\nfont-size: 28px;\nfont-size: 2.8rem;\nmargin-top: 8px;\nfont-family: Lato,\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n}\n.dark .example {\nbackground-color: #000;\n}\n.example:after {\nclear: both;\ncontent: \"\";\ndisplay: block;\n}\n.example .elogo {\nposition: absolute;\nfont-size: 1.7em;\nfont-weight: bold;\npadding: 0 16px;\n}\n.example .emain-nav {\nfloat: right;\n}\n.example .emain-nav ul {\nlist-style: none;\nmargin: 0;\npadding: 0;\n}\n.example .emain-nav li {\ndisplay: inline-block;\npadding-left: 0;\n}\n.example .emain-nav li + li {\npadding: 8px 0 8px;\npadding-left: 11px;\n}\n.example .emain-nav li + li:before {\nmargin-right: 13px;\ncontent: \"|\";\n}\n.fr.example .emain-nav li + li:before {\nmargin-right: 6px;\n}\n.fr.example .emain-nav li + li {\npadding-left: 4px;\n}\n\n/*@media (max-width: 950px) {\n\t.example .emain-nav li:nth-child(6),\n\t.example .emain-nav li:nth-child(5),\n\t.example .emain-nav li:nth-child(3) {\n\t\tdisplay:none;\n\t}\n\t.example {\n\t\twidth: 360px;\n\t}\n}*/\n\n.example {\n\twidth: 560px;\n}", "title" : "Bien <span>gérer</span> la <span>localisation</span> des sites en <span>CSS3</span> et <span>HTML5</span>", "urn" : "bien-gerer-la-localisation-des-sites-en-css3-et-html5" }
{ "__v" : 0, "_id" : { "$oid" : "537f05c76012d1b53d2bdba9" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "5310456355dfd5f7698d48c1" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "530ef6a6789c1a55e4fde0af" } ], "content" : "Quand une page web est chargée, les éléments externes à celle-ci sont appelés tout au long de son chargement pour permettre au navigateur d'afficher le résultat visuel final. Cela prend du temps, et certains chargements bloquent le rendu alors que d'autres non. D'autres encore sont ignorés tant qu'une action de la part de l'utilisateur n'a pas été effectuée.\n\nPour bien comprendre et manager ses chargements de page, je vous propose de comprendre une liste de comportement au chargement des ressources pour Chrome, Safari, Firefox, IE et Opera.\n\n\n\n\n\n## Les images ##\n\n> Est-ce qu'une image dans la balise `<img>` qui ne doit pas apparaître au rendu déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n<div style=\"display: none\">\n    <img src=\"image.png\" alt\"Image\">\n</div>\n```\n\n> **`Oui.`** Les navigateurs téléchargent les images indépendamment des styles CSS appliqués, [cela fait parti de la spécification HTML](http://www.whatwg.org/specs/web-apps/current-work/multipage/edits.html#the-img-element).\n\n> Ce comportement est la bête noire de pas mal d'implémentation JavaScript pour adapter les images, car l'image est demandée avant même que le JavaScript n'est le temps d'en appeler une autre via la propriété `src` ou même d'en obtenir sa taille.\n\n\n-----\n\n\n## Les backgrounds ##\n\n### Inclues dans un élément non affiché ###\n\n> Est-ce qu'un élément possédant une image de background et inclus dans un élément invisible déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```html\n<div style=\"display: none\">\n    <div style=\"background: url('image.png')\"></div>\n</div>\n```\n\n> *`Non.`* Les images de background en CSS diffèrent des balises `img`, elles ne sont pas réclamées au moment ou le code HTML est analysé.\n\n> Si un élément est en `display: none`, calculer les styles des éléments enfant est une perte de temps car il n'y aura aucun impact sur le rendu du document, ainsi les images de background pour les éléments enfants cachés ne sont jamais calculées, ni même téléchargées.\n\n\n\n### Sur un élément non affiché ###\n\n> Est-ce qu'un élément possédant une image de background et non visible déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | **Non** | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n<div style=\"background: url('image.png'); display: none\"></div>\n```\n\n> **`Pas tout le temps.`** Les navigateurs font parfois des choses différentes les un des autres !\n\n> Donc ici la `<div>` n'est pas rendu, mais il est nécessaire que le style soit analysé pour s'en apercevoir. IE, Safari, Opera et Chrome lance la demande en file d'attente aussitôt qu'ils ont analysé les styles CSS.\n\n\n\n### Sur un élément transparent ###\n\n> Est-ce qu'un élément possédant une image de background et transparent déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n<div style=\"background: url('image.png'); visibility: hidden\"></div>\n```\n\n> **`Oui.`** Les éléments avec un `visibility: hidden` prennent toujours de la place sur la page, pour que cela soit possible, cette place à besoin d'être calculée. Et ce mécanisme lance une requête de chargement.\n\n\n\n### Inclus dans un élément transparent ###\n\n> Est-ce qu'un élément possédant une image de background et inclus dans un élément transparent déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n<div style=\"visibility: hidden\">\n    <div style=\"background: url('image.png')\"></div>\n</div>\n```\n\n> **`Oui.`** Même punition que l'élément du dessus.\n\n\n-----\n\n\n## Les images via JavaScript ##\n\n> Créer une balise image et lui affecter une valeur dans sa source déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```javascript\nvar img = document.createElement('img');\nimg.src = 'image.png';\n```\n\n> **`Oui.`** L'élément `img` n'attend tout simplement pas pour faire ses requêtes.\n\n> La source d'une `img` est [téléchargée aussitôt que l'attribut `src` est (re)défini](http://www.whatwg.org/specs/web-apps/current-work/multipage/edits.html#the-img-element). Il n'y a pas besoin pour cela que l'image soit insérée dans le document.\n\n> Si vous avez besoin de déclencher rapidement une requête http et que vous vous moquez de la réponse le plus rapide est de faire `new Image().src = <url>;`.\n\n\n-----\n\n\n## Les backgrounds via JavaScript ##\n\n### Création simple ###\n\n> Créer une balise et lui affecter une valeur de background dans son style déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```javascript\nvar div = document.createElement('div');\ndiv.style.background = \"url('image.png')\";\n```\n\n> *`Non.`* De la même manière que dans le document HTML, les images de background ne sont pas téléchargées tant que leurs styles ne sont pas résolu. Cela n'arrive pas tant que l'image n'est pas insérée dans le document.\n\n\n\n### Injection puis retrait ###\n\n> Créer une balise et lui affecter une valeur de background dans son style, puis l'ajouter au DOM et le retirer, déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```javascript\nvar div = document.createElement('div');\ndiv.style.background = \"url('image.png')\";\ndocument.body.appendChild(div);\n/* ... du code ... */\ndocument.body.removeChild(div);\n```\n\n> *`Non.`* En effet, la nature mono-thread de JavaScript et du DOM signifie qu'un élément est ajouté et retiré avant même que le navigateur n'ai besoin de se soucier d'en faire le rendu.\n\n> *Note : Le code ci-dessous déclenche quand même une requête HTTP sous IE à cause de* `div.innerHTML`*.*\n\n> ```js\nvar div = document.createElement('div');\ndiv.style.background = \"url('image.png')\";\ndocument.body.appendChild(div);\n/* ... du code ... */\ndiv.innerHTML;\n/* ... du code ... */\ndocument.body.removeChild(div);\n```\n\n\n\n### Injection puis retrait avec certaines fonctions ###\n\n> Créer une balise et lui affecter une valeur de background dans son style, puis l'ajouter au DOM et le retirer tout en demandant entre les deux une information sur la balise, déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```js\nvar div = document.createElement('div');\ndiv.style.background = \"url('image.png')\";\ndocument.body.appendChild(div);\n/* ... du code ... */\ndiv.offsetWidth;\n/* ... du code ... */\ndocument.body.removeChild(div);\n```\n\n> **`Oui.`** Pour récupérer la taille d'un élément dans le navigateur, il faut résoudre ses styles et calculer leurs affichages. Comme vu précédemment, cela induit une requête.\n\n\n-----\n\n\n## Les scripts ##\n\n### Avec un type inconnu ###\n\n> Est-ce qu'un fichier dans la balise `<script>` avec un type MIME inconnu déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE      | Safari | Opera |\n|:------:|:-------:|:-------:|:------:|:-----:|\n| Non    | **Oui** | **Oui** | Non    | Non   |\n\n**Exemple :**\n\n```js\n<script src=\"script.js\" type=\"foo/bar\"></script>\n```\n\n> *`Pas toujours.`* Cela induit une requête dans Firefox et IE. Aucun des navigateurs n'est censé exécuter des scripts dont le type est inconnu, mais Firefox et IE vont télécharger le script indépendamment de son type.\n\n> [La specification HTML](http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#script-processing-prepare) dit aux navigateurs d'ignorer les scripts avec un type non supporté.\n\n> *Note : Bien que le type* `text/html` *soit supporté par les navigateurs, cela n'est pas le cas via la balise* `<script>`*.*\n\n> *Note 2 : l'attribut ancien* `language` *suit le même procéder dans les 5 navigateurs.*\n\n\n\n### Sans type ###\n\n> Est-ce qu'un fichier dans la balise `<script>` sans type MIME déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```js\n<script src=\"script.js\"></script>\n```\n\n> **`Oui.`** Si un script n'a pas d'attribut `type` ou `language`, `text/javascript` est utilisé. C'est un comportement commun des navigateurs [qui fait parti de la specification HTML](http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#script-processing-prepare).\n\n\n-----\n\n\n## Chargement dynamique de scripts ##\n\n### Création simple ###\n\n> Créer un script et lui affecter un fichier déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE      | Safari | Opera |\n|:------:|:-------:|:-------:|:------:|:-----:|\n| Non    | Non     | **Oui** | Non    | Non   |\n\n**Exemple :**\n\n```js\nvar script = document.createElement('script');\nscript.src = 'script.js';\n```\n\n> *`Pas toujours.`* Ce que dit [la specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#dfnReturnLink-0) :\n\n> > Quand un élément script... rencontre l'un des événements listés... celui-ci doit être synchronisé quand l'élément sera inséré dans le document...\n\n> IE ne suit pas les règles en effectuant la requête avant que le script ne soit inséré dans le document, bien que cela permette de télécharger un script et l'analyser de manière séparé.\n\n\n\n### Injection puis retrait ###\n\n> Créer un script et lui affecter un fichier, puis l'ajouter au DOM et le retirer, déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```js\nvar script = document.createElement('script');\nscript.src = 'script.js';\ndocument.body.appendChild(script);\ndocument.body.removeChild(script);\n```\n\n> **`Oui.`** Regardons de nouveau [la specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#dfnReturnLink-0) :\n\n> > Quand un élément script... rencontre l'un des événement listé... celui-ci doit être synchronisé quand l'élément sera inséré dans le document...\n\n> La préparation du script est synchrone, elle n'attend pas la fin de l'exécution du code.\n\n\n-----\n\n\n## Chargement dynamique de fichiers ##\n\n### Création simple ###\n\n> Créer une balise `link` et lui affecter un fichier déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```js\nvar link = document.createElement('link');\nlink.rel = 'stylesheet';\nlink.href = 'style.css';\n```\n\n> *`Non.`* Pas de requête cette fois ci, en accord avec [la specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#link-type-stylesheet) :\n\n> > Le moment approprié pour obtenir une ressource externe via un `link` créé est le moment où celui-ci est inséré dans le document...\n\n> ...donc on ne s'attend pas à voir partir une requête tant que l'élément n'est pas inséré dans le DOM.\n\n\n\n### Injection puis retrait ###\n\n> Créer une balise `link` et lui affecter un fichier, puis l'ajouter au DOM et le retirer, déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```js\nvar link = document.createElement('link');\nlink.rel = 'stylesheet';\nlink.href = 'style.css';\ndocument.body.appendChild(link);\ndocument.body.removeChild(link);\n```\n\n> **`Oui.`** Le style par défaut donné à une ressource `link` est `text/css` donc ne pas mettre de `type` n’empêche pas la requête d'être faites.\n\n> Aussi, comme pour les scripts, les stylesheets requièrent une action synchrone. Retirer l'élément juste après n’empêche pas la requête d'être faites.\n\n\n\n### Avec un mauvais type ###\n\n> Créer une balise `link` avec un mauvais type MIME et lui affecter un fichier déclenche une requête HTTP ?\n\n| Chrome  | Firefox | IE  | Safari  | Opera   |\n|:-------:|:-------:|:---:|:-------:|:-------:|\n| **Oui** | Non     | Non | **Oui** | **Oui** |\n\n**Exemple :**\n\n```js\nvar link = document.createElement('link');\nlink.rel = 'stylesheet';\nlink.href = 'style.css';\nlink.type = 'text/javascript';\ndocument.body.appendChild(link);\n```\n\n> *`Pas toujours.`* La spécification ne couvre pas ce qui arrive quand un content-type non supporté par `link` est mentionné. Chrome, Opera et Safari font tout de même la requête ici, bien qu'ils n'analysent même pas le style...\n\n\n-----\n\n\n## Les iframes ##\n\n### Sans rien ###\n\n> Est-ce qu'une balise `<iframe>` déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera   |\n|:------:|:-------:|:---:|:------:|:-------:|\n| Non    | Non     | Non | Non    | **Oui** |\n\n**Exemple :**\n\n```html\n<iframe></iframe>\n```\n\n> *`Pas toujours.`* La [specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/the-iframe-element.html#process-the-iframe-attributes) dit à propos d'une iframe sans `src` :\n\n> > Si un élément n'a pas d'attribut `src` de spécifié... simplement levé un événement nommé « load » sur l'élément iframe.\n\n> Seul Opera lance une requête sur la page « about:blank ».\n\n\n\n#### Avec une source vide ####\n\n> Est-ce qu'une balise `<iframe>` avec une source vide déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera   |\n|:------:|:-------:|:---:|:------:|:-------:|\n| Non    | Non     | Non | Non    | **Oui** |\n\n**Exemple :**\n\n```html\n<iframe src=\"\"></iframe>\n```\n\n> *`Pas toujours.`* Continuons avec la [specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/the-iframe-element.html#process-the-iframe-attributes) :\n\n> > De plus si la valeur de l'attribut est une string vide l'url sera `about:blank`.\n\n> Aucune requête n'est faites, sauf pour Opera.\n\n\n\n### Avec un identificateur de fragment (hash) ###\n\n> Est-ce qu'une balise `<iframe>` avec un identificateur de fragment déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE      | Safari | Opera |\n|:------:|:-------:|:-------:|:------:|:-----:|\n| Oui    | **Non** | **Non** | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n<iframe src=\"#\"></iframe>\n```\n\n> **`Pas toujours.`** Lisons encore plus de [specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/the-iframe-element.html#process-the-iframe-attributes) :\n\n> > De plus, résoudre la valeur de la source relativement à la source de l'iframe parent.\n\n> On s'attend donc à une requête, cependant...\n\n> > Si il existe un ancêtre dans le contexte du document actif à cette adresse il faut ignorer l'identificateur de fragment.\n\n> Et donc il ne devrait pas y avoir de requête à cet endroit. Finalement personne ne fait ce qu'il faut sur ce point.\n\n\n\n### Avec une chaîne GET ###\n\n> Est-ce qu'une balise `<iframe>` avec une chaîne GET déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n<iframe src=\"?\"></iframe>\n```\n\n> **`Oui.`** `?` est ure url différente aussi cela lève une requête.\n\n\n-----\n\n\n## Changer le DOM avec `document.write` ##\n\n### Commentaires ###\n\n> Ne pas ouvrir un commentaire directement mais l'écrire en script autour d'une balise image déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE      | Safari | Opera |\n|:------:|:-------:|:-------:|:------:|:-----:|\n| Non    | **Oui** | **Oui** | Non    | Non   |\n\n**Exemple :**\n\n```html\n<script>document.write('<'+'!--')</script>\n<img src=\"image.png\">\n-->\n```\n\n> *`Pas toujours.`* Si un commentaire HTML est écrit, le `img` à l'intérieur n'est jamais analysé et donc il n'y a aucune requête. Cependant, plusieurs navigateurs améliore leur performances en regardant plus en avant. Si ils tombent sur un script inline, au lieu de s'arrêter ils continuent afin de gagner en temps, quitte à faire de l'affichage inutile (car inhibé par le script précédent). On appel cela de l'[analyse spéculative](https://developer.mozilla.org/en-US/docs/HTML/Optimizing_Your_Pages_for_Speculative_Parsing).\n\nFirefox et IE continue d'analyser le document pendant que le script est en cours d'exécution. Ils vont donc lancer une requête en rencontrant l'image. Quand le script à fini son analyse il va inhiber la balise `img` car un commentaire HTML se sera inséré entre temps. Malheureusement la requête aura déjà été faites.\n\nChrome fait également de l'analyse spéculative pour les scripts externes mais pas dans le cas de script inline.\n\n\n\n### Commentaires asynchrones ###\n\n> Ne pas ouvrir un commentaire directement mais l'écrire en script asynchrone autour d'une balise image déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE      | Safari | Opera |\n|:------:|:-------:|:-------:|:------:|:-----:|\n| Non    | **Oui** | **Oui** | Non    | Non   |\n\n**Exemple :**\n\n```html\n<script async>document.write('<'+'!--')</script>\n<img src=\"image.png\">\n-->\n```\n\n> *`Pas toujours.`* Même en `async` les scripts inline sont bloquant comme je l'ai déjà [expliqué dans un précédent billet](https://blog.lesieur.name/differences-entre-async-et-defer-en-html5/#pour-les-scripts-inline).\n\n> *Note 2 : cela est la même chose en ce qui concerne l'attribut * `defer`*.*\n\n\n-----\n\n\n## Recalcule d'affichage de page ##\n\n#### Avec un disperseur d’événement ####\n\nRetailler la fenêtre avec une demande de rechargement par dispersement au redimensionnement déclenche une requête HTTP ?\n\n| Chrome  | Firefox | IE      | Safari  | Opera   |\n|:-------:|:-------:|:-------:|:-------:|:-------:|\n| **Oui** | Non     | **Oui** | **Oui** | **Oui** |\n\n**Exemple :**\n\n```javascript\nwindow.onresize = function() {\n  window.location.reload();\n};\nvar event = document.createEvent('Event');\nevent.initEvent('resize', false, false);\nwindow.dispatchEvent(event);\n```\n\n> *`Pas toujours.`* Disperser l’événement `resize` déclenche un rechargement de page ? Non, cela est une [violation de la specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#dom-location-reload).\n\n> > Quand une méthode `reload()` est invoquée... Si l'exécution courante est un événement dispersé de redimensionnement... abandonner cette étape.\n\n> Tout le monde à faux sauf Firefox cette fois.\n\n> *Note : Le code ci-dessous déclenche bien une requête chez tout le monde.*\n\n> ```js\nwindow.onresize = function() {\n  window.location.reload();\n};\nwindow.onresize();\n```\n\n\n-----\n\n\n## Chargement de police ##\n\n### Seulement avec `@font-face` ###\n\nLa simple déclaration d'une police déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```html\n<style>\n  @font-face {\n    font-family: 'myfont';\n    src: url('font.woff');\n    unicode-range: U+61-7A; /* lowercase a-z */\n  }\n</style>\n```\n\n> *`Non.`* Pas de requête si on ne fait que la déclarer.\n\n\n\n### Avec application CSS ###\n\nLa déclaration d'une police appelé depuis un sélecteur CSS déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```html\n<style>\n  @font-face {\n    font-family: 'myfont';\n    src: url('font.woff');\n    unicode-range: U+61-7A; /* lowercase a-z */\n  }\n  p { font-family: myfont, sans-serif; }\n</style>\n```\n\n> *`Non.`* Pas de requête si on ne fait que la déclarer et l'associer.\n\n\n\n### Avec présence d'une balise ###\n\nLa déclaration d'une police appelé depuis un sélecteur CSS sur une balise présente déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n<style>\n  @font-face {\n    font-family: 'myfont';\n    src: url('font.woff');\n    unicode-range: U+61-7A; /* lowercase a-z */\n  }\n  p { font-family: myfont, sans-serif; }\n</style>\n<p></p>\n```\n\n> **`Oui.`** Effectivement si une balise vide a une police d'appliquée, une requête est lancée même si visuellement elle ne rend rien.\n\n\n-----\n\n\n## Conclusion ##\n\nCe qu'il ressort c'est que l'on ne peut pas se fier aux spécifications pour prévoir avec certitude le comportement de chaque navigateur, mais ça, ça n'étonne personne ! Dans le domaine des requêtes HTTP il n'y a aucun bon élève.", "dates" : { "published" : { "$date" : 1403177400000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : ".text table {\nwidth: 100%\n}", "title" : "<span>Maîtriser</span> les <span>requêtes</span> au <span>chargement</span> d'une page <span>web</span>", "urn" : "maitriser-les-requetes-au-chargement-d-une-page-web" }
{ "__v" : 0, "_id" : { "$oid" : "53a44667252cf3af329c2664" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48ca" } ], "content" : "Il y a quelque temps, j'expliquais qu'il était difficile d'obtenir [un travail Front-end de qualité avec des Frameworks CSS](https://blog.lesieur.name/bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite/) HTML-Driven. Le gros reproche que je fais à ces Frameworks est de prendre le contre pied de l'approche du W3C qui met tout en œuvre avec HTML5 et CSS3 pour complètement effacer toute trace de design dans l'architecture HTML et la rendre structurellement sémantique.\n\nUn Framework CSS c'est vraiment pratique pour ne pas trop se mouiller et gagner du temps parait-il. On me dit d'ailleurs souvent que les systèmes de Grid c'est bien pratique. Ce que j'en pense pour ma part c'est qu'on ne peut jamais sortir des chemins battu d'un Framework lourd à moins de parfaitement connaître les mécanismes de celui-ci pour le contrer. Et dès lors qu'on est assez aguerrit pour comprendre des mécanismes menant à des « [abstractions qui fuient](http://french.joelonsoftware.com/Articles/LeakyAbstractions.html) », on est alors assez aguerrit pour s'en passer.\n\n**Sachez que l'on peut facilement se passer de Framework pour gérer une grille Responsive Web Design propre et maintenable en évitant ainsi d'horribles codes comme `<div class=\"header col-xs-12 col-sm-6 col-sm-push-6 text-right-sm bg-info\">` tout en restant maître de ce que l'on fait.** [Cette page CodePen en est un exemple](http://codepen.io/Haeresis/pen/wkIiq).\n\nSuivez-moi, je vais vous montrer !\n\n\n\n\n\n## Création d'une structure HTML ##\n\nEntrons dans le vif du sujet. Pour commencer, nous allons nous attacher à comprendre comment manager facilement notre grille via une feuille CSS, aussi la structure sera pour le moment plate et non sémantique. Là voici :\n\n**HTML**\n\n```html\n<html>\n    <head>\n        <title>Responsive and Semantic CSS Grid CSS-Driven</title>\n        <link rel=\"stylesheet\" href=\"common.css\">\n    </head>\n    <body>\n        <div class=\"page\">\n            <div class=\"brand\"></div>\n            <div class=\"slogan\"></div>\n            <div class=\"title\"></div>\n            <div class=\"main-nav\"></div>\n            <div class=\"overview\"></div>\n            <div class=\"anchor-nav\"></div>\n            <div class=\"main\"></div>\n            <div class=\"call-to-action\"></div>\n            <div class=\"call-to-action\"></div>\n            <div class=\"call-to-action\"></div>\n            <div class=\"call-to-action\"></div>\n            <div class=\"call-to-action\"></div>\n            <div class=\"call-to-action\"></div>\n            <div class=\"secondary-nav\"></div>\n            <div class=\"utils\"></div>\n            <div class=\"legals\"></div>\n        </div>\n    </body>\n</html>\n```\n\n\n\n\n\n## Mise en place de la grille CSS ##\n\nComme vous pouvez le constater pour le moment, la structure HTML est vide de contenu. Nous allons l'injecter pendant nos tests unitaires via la CSS.\n\n\n\n### Tests visuels ###\n\nNous allons commencer par habiller l'exemple précédent avec un style de test pour bien vérifier que la construction de la grille se fait sans soucis. C'est une étape non nécessaire mais qui aidera grandement à commenter l'architecture de la page facilement. Injectons ce code voué à être commenté en dernier lieu :\n\n**CSS (dans common.css)**\n\n```css\n.brand:before,\n.slogan:before,\n.title:before,\n.main-nav:before,\n.overview:before,\n.anchor-nav:before,\n.main:before,\n.call-to-action:before,\n.secondary-nav:before,\n.legals:before,\n.utils:before {\n   width: 100%;\n   display: inline-block;\n}\n\n.brand:before {\n    content: \"Brand\";\n   background-color: rgba(0, 0, 150, 0.5);\n}\n.slogan:before {\n   content: \"Slogan\";\n   background-color: rgba(150, 150, 0, 0.5);\n}\n.title:before {\n   content: \"Title\";\n   background-color: rgba(255, 0, 0, 0.2);\n}\n.main-nav:before {\n   content: \"Nav\";\n   background-color: rgba(0, 255, 0, 0.2);\n}\n.overview:before {\n   content: \"Overview\";\n   background-color: rgba(150, 0, 0, 0.5);\n}\n.anchor-nav:before {\n   content: \"Anchor nav\";\n   background-color: rgba(0, 0, 255, 0.2);\n}\n.main:before {\n   content: \"Main\";\n   background-color: rgba(255, 255, 0, 0.2);\n}\n.call-to-action:before {\n   content: \"Call to action\";\n   background-color: rgba(255, 0, 255, 0.2);\n}\n.secondary-nav:before {\n   content: \"Secondary nav\";\n   background-color: rgba(0, 150, 0, 0.5);\n}\n.legals:before {\n   content: \"Legals\";\n   background-color: rgba(0, 255, 255, 0.2);\n}\n.utils:before {\n   content: \"Utils\";\n   background-color: rgba(150, 0, 150, 0.5);\n}\n```\n\n\n\n### Grille de base ###\n\nC'est ici que nous allons définir notre ensemble de grilles existantes sur le site web. Pour notre exemple nous n'allons créer qu'une grille de 12 colonnes.\n\n\n#### Rappel d'une grille dans un Framework CSS ####\n\nLa grille consiste a diviser l'espace alloué à l'affichage du site en 12 colonnes dans notre exemple. Chaque partie de la grille pourra donc être large de un douzième (1/12) de la taille d'affichage à douze douzième (12/12). Si un composant fait 8 colonnes et que celui qui le suit en fait 4, ils tiendront l'un à côté de l'autre. Par contre, si le second en fais 8 également, il s'affichera à la ligne, car ne pouvant pas rentrer à côté.\n\n#### À vos calculatrices ####\n\nSi on estime qu'une colonne faisant 100% de la ligne vaut 12 unités alors :\n\n- 1 unité = (1 * 100) / 12 = 8.33333333%\n- 2 unités = (2 * 100) / 12 = 16.66666667%\n- 3 unités = (3 * 100) / 12 = 25%\n- 4 unités = (4 * 100) / 12 = 33.33333333%\n- 5 unités = (5 * 100) / 12 = 41.66666667%\n- 6 unités = (6 * 100) / 12 = 50%\n- 7 unités = (7 * 100) / 12 = 58.33333333%\n- 8 unités = (8 * 100) / 12 = 66.66666667%\n- 9 unités = (9 * 100) / 12 = 75%\n- 10 unités = (10 * 100) / 12 = 83.33333333%\n- 11 unités = (11 * 100) / 12 = 91.66666667%\n- 12 unités = (12 * 100) / 12 = 100%\n\nce qui nous donnerais une grille de référence dans un Framework comme celle-ci :\n\n**CSS (dans common.css)**\n\n*Espace pris par les 12 tailles de colonne possible*\n\n```css\n/*\n.span12-12 { width: 100%; }\n.span12-11 { width: 91.66666667%; }\n.span12-10 { width: 83.33333333%; }\n.span12-9 { width: 75%; }\n.span12-8 { width: 66.66666667%; }\n.span12-7 { width: 58.33333333%; }\n.span12-6 { width: 50%; }\n.span12-5 { width: 41.66666667%; }\n.span12-4 { width: 33.33333333%; }\n.span12-3 { width: 25%; }\n.span12-2 { width: 16.66666667%; }\n.span12-1 { width: 8.33333333%; }\n*/\n```\n\n*Espace vers la gauche nécessaire pour générer une colonne vide*\n\n```css\n/*\n.prepend12-12 { margin-left: 100%; }\n.prepend12-11 { margin-left: 91.66666667%; }\n.prepend12-10 { margin-left: 83.33333333%; }\n.prepend12-9 { margin-left: 75%; }\n.prepend12-8 { margin-left: 66.66666667%; }\n.prepend12-7 { margin-left: 58.33333333%; }\n.prepend12-6 { margin-left: 50%; }\n.prepend12-5 { margin-left: 41.66666667%; }\n.prepend12-4 { margin-left: 33.33333333%; }\n.prepend12-3 { margin-left: 25%; }\n.prepend12-2 { margin-left: 16.66666667%; }\n.prepend12-1 { margin-left: 8.33333333%; }\n.prepend12-0 { margin-left: 0; }\n*/\n```\n\n*Espace vers la droite nécessaire pour générer une colonne vide*\n\n```css\n/*\n.append12-12 { margin-right: 100%; }\n.append12-11 { margin-right: 91.66666667%; }\n.append12-10 { margin-right: 83.33333333%; }\n.append12-9 { margin-right: 75%; }\n.append12-8 { margin-right: 66.66666667%; }\n.append12-7 { margin-right: 58.33333333%; }\n.append12-6 { margin-right: 50%; }\n.append12-5 { margin-right: 41.66666667%; }\n.append12-4 { margin-right: 33.33333333%; }\n.append12-3 { margin-right: 25%; }\n.append12-2 { margin-right: 16.66666667%; }\n.append12-1 { margin-right: 8.33333333%; }\n.append12-0 { margin-right: 0; }\n*/\n```\n\n*Décalage vers la gauche nécessaire pour reculer les colonnes dans la grille en vue de les intervertir*\n\n```css\n/*\n.pull12-12 { right: 100%; }\n.pull12-11 { right: 91.66666667%; }\n.pull12-10 { right: 83.33333333%; }\n.pull12-9 { right: 75%; }\n.pull12-8 { right: 66.66666667%; }\n.pull12-7 { right: 58.33333333%; }\n.pull12-6 { right: 50%; }\n.pull12-5 { right: 41.66666667%; }\n.pull12-4 { right: 33.33333333%; }\n.pull12-3 { right: 25%; }\n.pull12-2 { right: 16.66666667%; }\n.pull12-1 { right: 8.33333333%; }\n.pull12-0 { right: 0; }\n*/\n```\n\n*Décalage vers la droite nécessaire pour avancer les colonnes dans la grille en vue de les intervertir*\n\n```css\n/*\n.push12-12 { left: 100%; }\n.push12-11 { left: 91.66666667%; }\n.push12-10 { left: 83.33333333%; }\n.push12-9 { left: 75%; }\n.push12-8 { left: 66.66666667%; }\n.push12-7 { left: 58.33333333%; }\n.push12-6 { left: 50%; }\n.push12-5 { left: 41.66666667%; }\n.push12-4 { left: 33.33333333%; }\n.push12-3 { left: 25%; }\n.push12-2 { left: 16.66666667%; }\n.push12-1 { left: 8.33333333%; }\n.push12-0 { left: 0; }\n*/\n```\n\n*Propriété pour permettre le déplacement de colonne et les gouttières inter colonne (arbitrairement placé à 16px)*\n\n```css\n/*\n.pull-push { position: relative; }\n.gutter { padding-left: 16px; padding-right: 16px; }\n.pull-push-reset { position: static; }\n.gutter-reset { padding-left: 0; padding-right: 0; }\n*/\n```\n\n\n#### La grille et le Responsive Web Design ####\n\nPour commencer nous allons initialiser la grille et les colonnes qui la compose.\n\nNotre site sera habillé en Mobile First, nous allons également définir nos gaps de responsivité. [Vous pouvez lire cet article pour plus de compréhension sur le Responsive Web Design, le Mobile First et les gaps de responsivité](https://blog.lesieur.name/les-concepts-autour-du-responsive-web-design/).\n\n**CSS (dans common.css)**\n\n*Propriété pour manager les colonnes*\n\n```css\n    .page:after,\n.grid:after {\n    content: \"\";\n    clear: both;\n    display: block;\n}\n\n    .brand,\n    .slogan,\n    .title,\n    .main-nav,\n    .overview,\n    .anchor-nav,\n    .main,\n    .call-to-action,\n    .secondary-nav,\n    .utils,\n    .legals,\n.column {\n    float: left;\n    width: 100%;\n}\n```\n\nPour faire fonctionner ce mécanisme de colonnes côte à côte qui passe à la ligne si elles manquent de place nous utiliserons des balises flottantes. L'idée est de nommer la zone avec la classe « .column » mais ne jamais l'utiliser dans le code HTML. À la place, c'est les éléments HTML de type « column » qui seront empilé au dessus.\n\nDe la même manière vous constaterez que l'élément `.page:after` est référencé comme se comportant comme l'élément `.grid:after`.\n\n*Media Queries pour gérer le comportement de chaque colonne en fonction de la taille d'affichage*\n\n```css\n/* Mobile / Small tablet */\n\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n}\n\n/* Desktop */\n@media (min-width: 992px) {\n}\n\n/* Large desktop */\n@media (min-width: 1200px) {\n}\n```\n\nAvant de vous expliquer les étapes pour rapidement manager votre grille voici à quoi doit ressembler votre feuille CSS, et ce qu'elle donne appliquée sur notre structure HTML exemple.\n\n> **`L'`** **Exemple :**\n\n> - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/jtDEm)\n> - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/jtDEm)\n\n\n\n\n\n## Manager ses Grilles ##\n\nPour notre exemple nous n'utilisons qu'une grille. Mais il est tout à fait possible d'en avoir plusieurs (12 colonnes, 16 colonnes, etc.) et d'en changer en fonction du template de page (ou pour les grilles imbriquées différentes).\n\n\n\n### Étape 1 : Importer les règles ###\n\nLe rendu ci-dessus étant déjà celui-sur Mobile, nous allons alimenter le rendu pour Tablette et plus.\n\n> À partir de 768px, je souhaite que la partie « Brand » occupe 2 colonnes. Je place donc mon curseur dans mon fichier à cette ligne dans mon exemple de grille mise en commentaire :\n\n> ```css\n.span12-2 { width: 16.66666667%; }\n```\n\n> et avec le raccourci de duplication rapide de ligne (sur Sublim Text celui-ci est `Ctrl + Shift + D`) j'obtiens une duplication de celle-ci :\n\n> ```css\n.span12-2 { width: 16.66666667%; }\n.span12-2 { width: 16.66666667%; }\n```\n\n> avec mon raccourci d’interversion rapide de ligne, je vais aller placer la propriété dupliquée dans la bonne Media Query (sur Sublim Text celui-ci est `Ctrl + Shift + Flèche du bas` pour descendre une ligne ou Ctrl + Shift + Flèche du haut` pour la monter). Cela nous donne alors :\n\n> ```css\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n.span12-2 { width: 16.66666667%; }\n}\n```\n\n\n### Étape 2 : Associer la balise ###\n\nContinuons.\n\n> Puisque je souhaite que « Brand » fasse deux colonnes, je place mon curseur sur la ligne ou je l'ai référencé comme étant de type colonne (attaché à « .column »),\n\n> ```css\n    .brand,\n```\n\n> je duplique la ligne,\n\n> ```css\n    .brand,\n    .brand,\n```\n\n> et je place le duplicata sur la règle de deux colonnes que j'ai créé plus tôt :\n\n> ```css\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n    .brand,\n.span12-2 { width: 16.66666667%; }\n}\n```\n\n\n\n### Étape 3 : Recommencer pour toute la grille Tablette ###\n\nIl nous reste à présent à faire de même pour les autres colonnes.\n\n> Je souhaite que Title fasse également 2 colonnes sur 12 :\n\n> ```css\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n  .brand,\n  .title,\n.span12-2 { width: 16.66666667%; }\n}\n```\n\n> Je souhaite que Anchor nav et Utils fasse également 3 colonnes sur 12 :\n\n> ```css\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n  .brand,\n  .title,\n.span12-2 { width: 16.66666667%; }\n  .anchor-nav,\n  .utils,\n.span12-3 { width: 25%; }\n}\n```\n\n> Je souhaite que les Call to Action fassent 6 colonnes sur 12, que Legals et Main en fassent 9 et que Main nav et Slogan en fasse 10 :\n\n> ```css\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n  .brand,\n  .title,\n.span12-2 { width: 16.66666667%; }\n  .anchor-nav,\n  .utils,\n.span12-3 { width: 25%; }\n  .call-to-action,\n.span12-6 { width: 50%; }\n  .legals,\n  .main,\n.span12-9 { width: 75%; }\n  .main-nav,\n  .slogan,\n.span12-10 { width: 83.33333333%; }\n}\n```\n\nEt notre grille commence à prendre forme !\n\n> **`L'`** **Exemple :**\n\n> - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/kfdsp)\n> - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/kfdsp)\n\n_**N'hésitez pas à retailler la fenêtre de votre navigateur pour constater les différences en fonction de votre périphérique d'affichage.**_\n\n\n\n### Étape 4 : Faire de même pour d'autres règles ###\n\nSur le même principe, nous allons ajouter des gouttières à nos colonnes pour les espacer les une des autres.\n\n> Nous allons donc récupérer toutes les colonnes sur lesquels nous souhaitons appliquer des gouttières. Comme nous les voulons pour toutes les différentes tailles nous allons les attacher dans la partie Mobile :\n\n```css\n/* Mobile / Small tablet */\n  .brand,\n  .slogan,\n  .title,\n  .main-nav,\n  .overview,\n  .anchor-nav,\n  .main,\n  .call-to-action,\n  .secondary-nav,\n  .utils,\n  .legals,\n.gutter { padding-left: 16px; padding-right: 16px; }\n```\n\nCe qui donne :\n\n> **`L'`** **Exemple :**\n\n> - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/dAKch)\n> - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/dAKch)\n\nNous allons à présent intervertir à partir de l'affichage mobile les Brand et Slogan.\n\n> Pour cela nous allons poussez Brand de 10 colonnes et reculer Slogan de 2 colonnes. Nous allons passer les colonnes en relative.\n\n> Nous allons donc importer les règles,\n\n> ```css\n.pull-push { position: relative; }\n```\n\n> ```css\n.push12-10 { left: 83.33333333%; }\n```\n\n> ```css\n.pull12-2 { right: 16.66666667%; }\n```\n\n> et attacher\n\n> ```css\n  .brand,\n```\n\n> ```css\n  .slogan,\n```\n\n> dans l'affichage Tablette. Idem pour Legals et Utils avec 9 colonnes en avant et 3 colonnes en arrière :\n\n> ```css\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n  .brand,\n  .title,\n.span12-2 { width: 16.66666667%; }\n  .anchor-nav,\n  .utils,\n.span12-3 { width: 25%; }  \n  .call-to-action,\n.span12-6 { width: 50%; }\n  .legals,\n  .main,\n.span12-9 { width: 75%; }\n  .main-nav,\n  .slogan,\n.span12-10 { width: 83.33333333%; }\n/**/\n  .utils,\n  .legals,\n  .brand,\n  .slogan,\n.pull-push { position: relative; }\n/**/\n  .utils,\n.push12-9 { left: 75%; }\n  .brand,\n.push12-10 { left: 83.33333333%; }\n  .slogan,\n.pull12-2 { right: 16.66666667%; }\n  .legals,\n.pull12-3 { right: 25%; }\n}\n```\n\nCe qui donne :\n\n> **`L'`** **Exemple :**\n\n> - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/KyGcs)\n> - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/KyGcs)\n\n\n\n### Étape 5 : Alimenter toutes les tailles de périphérique ###\n\nIl est à présent temps de faire de même pour Desktop et Large Desktop. Cela va vous faire importer de nouvelles règles ou en écraser des précédentes.\n\n> Par exemple avec cette configuration Desktop : Anchor nav, les Call to Action et Main vont changer de comportement :\n\n> ```css\n/* Desktop */\n@media (min-width: 992px) {\n  .anchor-nav,  \n  .call-to-action,\n.span12-4 { width: 33.33333333%; }\n  .main,\n.span12-8 { width: 66.66666667%; }\n}\n```\n\nNous allons en profiter pour introduire les colonnes invisibles avec le Large Desktop :\n\n> Nous allons importer les règles :\n\n> ```css\n.prepend12-2 { margin-left: 16.66666667%; }\n```\n\n> et\n\n> ```css\n.append12-2 { margin-right: 16.66666667%; }\n```\n\n> Pour créer des colonnes inexistantes de part et d'autres de nos Call to Action. Nous allons les cibler avec la propriété CSS3 `:nth-child()` :\n\n> ```css\n/* Large desktop */\n@media (min-width: 1200px) {\n  .anchor-nav,\n.span12-3 { width: 25%; }\n  .call-to-action\n.span12-4 { width: 33.33333333%; }\n  .main,\n.span12-9 { width: 75%; }\n/**/\n  .call-to-action:nth-child(8),\n  .call-to-action:nth-child(10),\n  .call-to-action:nth-child(12),\n.prepend12-2 { margin-left: 16.66666667%; }\n/**/\n  .call-to-action:nth-child(9),\n  .call-to-action:nth-child(11),\n  .call-to-action:nth-child(13),\n.append12-2 { margin-right: 16.66666667%; }\n}\n```\n\nCe qui donne :\n\n> **`L'`** **Exemple :**\n\n> - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/kKHuy)\n> - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/kKHuy)\n\n\n\n\n\n## Grille CSS Sémantique ##\n\nMaintenant que nous avons vu que la grille fonctionne avec un empilement de `div` tout ce qu'il y a de plus classique, offrons à notre structure un petit côté sémantique et observons que cela n'affecte en rien le fonctionnement de la grille. C'est même bien plus pratique dans le cas de composant en liste comme pour les Call to Action !\n\n\n\n### Nouvelle structure ###\n\nVoici une structure HTML fonctionnelle avec nos grilles.\n\n**HTML**\n\n```html\n<html>\n    <head>\n        <title>Responsive and Semantic CSS Grid CSS-Driven</title>\n        <link rel=\"stylesheet\" href=\"common.css\">      \n    </head>\n    <body>\n        <header>\n            <div class=\"brand\"></div>\n            <div class=\"slogan\"></div>\n            <div class=\"title\"></div>\n            <nav class=\"main-nav\"></nav>\n        </header>\n        <div class=\"content\">\n            <section class=\"overview\"></section>\n            <nav class=\"anchor-nav\"></nav>\n            <article class=\"main\"></article>\n            <ul class=\"call-to-action-list\">\n                <li class=\"call-to-action\"></li>\n                <li class=\"call-to-action\"></li>\n                <li class=\"call-to-action\"></li>\n                <li class=\"call-to-action\"></li>\n                <li class=\"call-to-action\"></li>\n                <li class=\"call-to-action\"></li>\n            </ul>\n        </div>\n        <footer>\n            <nav class=\"secondary-nav\"></nav>\n            <div class=\"utils\"></div>\n            <div class=\"legals\"></div>\n        </footer>\n    </body>\n</html>\n```\n\n\n\n### Ajustement CSS ###\n\nComme la structure a légèrement changé, nous allons également légèrement changer nos associations.\n\n> ```css\n    .page:after,\n.grid:after {\n    content: \"\";\n    clear: both;\n    display: block;\n}\n```\n\n> devient\n\n> ```css\n  body > header:after,\n  body > footer:after,\n  .content:after,\n.grid:after {\n  content: \"\";\n  clear: both;\n  display: block;\n}\n```\n\nCréation d'un annulateur de liste dans la grille pour les balises comme `.call-to-action-list`.\n\n> ```css\n.list-reset { margin: 0;padding: 0;list-style-type: none; }\n```\n\n> Association dans la partie Mobile et plus :\n\n> ```css\n  .call-to-action-list,\n.list-reset { margin: 0;padding: 0;list-style-type: none; }\n```\n\nEt facilitation du ciblage des Call to Action devenu des listes :\n\n> ```css\n  .call-to-action:nth-child(8),\n  .call-to-action:nth-child(10),\n  .call-to-action:nth-child(12),\n.prepend12-2 { margin-left: 16.66666667%; }\n/**/\n  .call-to-action:nth-child(9),\n  .call-to-action:nth-child(11),\n  .call-to-action:nth-child(13),\n.append12-2 { margin-right: 16.66666667%; }\n```\n\n> devient\n\n> ```css\n  .call-to-action:nth-child(odd),\n.prepend12-2 { margin-left: 16.66666667%; }\n/**/\n  .call-to-action:nth-child(even),\n.append12-2 { margin-right: 16.66666667%; }\n```\n\nCe qui donne :\n\n> **`L'`** **Exemple :**\n\n> - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/Lshcj)\n> - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/Lshcj)\n\n\n\n\n\n## Grille imbriquée ##\n\nLe système de grille peut ensuite s'appliquer à l'intérieur même des colonnes. En fonction de ce que vous souhaitez faire, il peut être intéressant de retirer les gouttières d'un élément parent pour les appliquer à la sous grille.\n\nVoici la zone Main rempli avec une sous grille. Main fait alors office de `.grid`, Article et Steps office de `.column`\n\n**HTML**\n\n```html\n<!-- ... header ... -->\n\n<div class=\"content\">\n  <section class=\"overview\"></section>\n  <nav class=\"anchor-nav\"></nav>\n\n\n  <article class=\"main\">\n    <div class=\"article\"></div>\n    <ol class=\"step-list\">\n      <li class=\"step\"></li>\n      <li class=\"step\"></li>\n      <li class=\"step\"></li>\n    </ol>\n  </article>\n\n\n  <ul class=\"call-to-action-list\">\n    <li class=\"call-to-action\"></li>\n    <li class=\"call-to-action\"></li>\n    <li class=\"call-to-action\"></li>\n    <li class=\"call-to-action\"></li>\n    <li class=\"call-to-action\"></li>\n    <li class=\"call-to-action\"></li>\n  </ul>\n</div>\n\n<!-- ... footer ... -->\n```\n\nNous allons donc améliorer nos CSS de test en rajoutant,\n\n```css\n.main:before {\n  content: none;\n}\n.article:before {\n  content: \"Article\";\n  background-color: rgba(255, 255, 0, 0.2);\n  width: 100%;\n  display: inline-block;\n}\n.step:before {\n  content: \"Steps\";\n  background-color: rgba(0, 255, 0, 0.2);\n  width: 100%;\n  display: inline-block;\n}\n\n```\n\nen rajoutant les listes ordonnées sans style pour la grille,\n\n```css\n    .step-list,\n    .call-to-action-list,\n.list-reset { margin: 0;padding: 0;list-style-type: none; }\n```\n\nen retirant les gouttières des « .column » faisant office de « .grid » et\n\n```css\n/* Mobile / Small tablet */\n    .brand,\n    .slogan,\n    .title,\n    .main-nav,\n    .overview,\n    .anchor-nav,\n    .call-to-action,\n    .secondary-nav,\n    .utils,\n    .legals,\n.gutter { padding-left: 16px; padding-right: 16px; }\n```\n\nen abonnant `.step-list` et `.step` aux `.grid`, `.column` et `gutter`\n\n```css\n    .brand,\n    .slogan,\n    .title,\n    .main-nav,\n    .overview,\n    .anchor-nav,\n    .main,\n    .article,\n    .step,\n    .call-to-action,\n    .secondary-nav,\n    .utils,\n    .legals,\n.column {\n    float: left;\n    width: 100%;\n}\n\n/* Mobile / Small tablet */\n    .brand,\n    .slogan,\n    .title,\n    .main-nav,\n    .overview,\n    .anchor-nav,\n    .article,\n    .step,\n    .call-to-action,\n    .secondary-nav,\n    .utils,\n    .legals,\n.gutter { padding-left: 16px; padding-right: 16px; }\n```\n\nIl ne nous reste plus qu'à manager le comportement des colonnes en fonction des périphériques :\n\n```css\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n    .brand,\n    .title,\n.span12-2 { width: 16.66666667%; }\n    .anchor-nav,\n    .utils,\n.span12-3 { width: 25%; }\n    .step,\n.span12-4 { width: 33.33333333%; }    \n    .call-to-action,\n.span12-6 { width: 50%; }\n    .legals,\n    .main,\n.span12-9 { width: 75%; }\n    .main-nav,\n    .slogan,\n.span12-10 { width: 83.33333333%; }\n\n    .utils,\n    .legals,\n    .brand,\n    .slogan,\n.pull-push { position: relative; }\n\n    .utils,\n.push12-9 { left: 75%; }\n    .brand,\n.push12-10 { left: 83.33333333%; }\n    .slogan,\n.pull12-2 { right: 16.66666667%; }\n    .legals,\n.pull12-3 { right: 25%; }\n}\n```\n\n> **`L'`** **Exemple :**\n\n> - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/hcGib)\n> - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/hcGib)\n\n\n\n\n\n## Équivalent d'un clearfix ##\n\nEn remplissant notre architecture avec du contenu on s'aperçoit qu'il y a des problèmes de chevauchement.\n\nC'est le cas avec la zone Title dans l'exemple ci-après :\n\n> **`L'`** **Exemple :**\n\n> - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/aJKkd)\n> - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/aJKkd)\n\nPour résoudre cela, il suffit de créer une règle CSS `clearfix` et d'associer la zone Title.\n\n```css\n    .title,\n.clearfix { clear: both; }\n```\n\n*Note : J'en profite également pour empêcher le site d'être plus large que 1200px*\n\n> **`L'`** **Exemple :**\n\n> - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/emwIv)\n> - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/emwIv)\n\n\n\n\n\n## Pour aller plus loin ##\n\n### Alignement ###\n\nIl est tout à fait possible de reproduire ce type de fonctionnement pour autre chose que la grille. Par exemple pour l'alignement des textes, images, etc.\n\nCréons par exemple les règles exemples suivantes :\n\n```css\n/*------------------------------------*\\\n    $ALIGMENT\n\\*------------------------------------*/\n\n/*\n.text-left { text-align: left; }\n.text-center { text-align: center; }\n.text-right { text-align: right; }\n.text-justify { text-align: justify; }\n*/\n```\n\net appliquons la CSS sur les zones de la manière suivante :\n\n```css\n/* Mobile / Small tablet */\n    .utils,\n.text-center { text-align: center; }\n\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n     .brand,\n     .utils,\n.text-right { text-align: right; }\n}\n```\n\n> **`L'`** **Exemple :**\n\n> - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/lyqir)\n> - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/lyqir)\n\n\n\n### Afficher / Masquer ###\n\nDe la même manière il est possible d'afficher ou de masquer certaines zones en fonction de la résolution d'affichage.\n\n```css\n/*------------------------------------*\\\n    $VISTIBLE / HIDDEN\n\\*------------------------------------*/\n\n/*\n.display-block, visible { display: block; }\n.display-inline { display: inline-block; }\n.display-inline-block { display: inline-block; }\n...\n.display-none, hidden { display: none; }\n*/\n```\n\nN'affichons que 2 des 3 Call to Action en Tablette et en Large Desktop et les Step seulement à partir de Tablette :\n\n```css\n/* Mobile / Small tablet */\n    .step,\n.display-none, hidden { display: none; }\n\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n    .step,\n.display-block, visible { display: block; }\n    .call-to-action:nth-child(n + 3),\n.display-none, hidden { display: none; }\n}\n\n/* Desktop */\n@media (min-width: 992px) {\n    .call-to-action:nth-child(n + 3),\n.display-block, visible { display: block; }\n}\n\n/* Large desktop */\n@media (min-width: 1200px) {\n    .call-to-action:nth-child(n + 3),\n.display-none, hidden { display: none; }\n}\n```\n\n> **`L'`** **Exemple :**\n\n> - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/kvcBg)\n> - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/kvcBg)\n\n\n\n\n\n## Pour finir ##\n\nLa rapidité d’adressage et la maintenance du code CSS est tout aussi aisé sinon plus rapide avec un bon éditeur de texte. La perte de temps réside dans la préparation des classes possibles avant affectation mais rien ne vous empêche d'aller les piocher dans les divers Frameworks CSS existant et de faire vos mélanges !", "dates" : { "published" : { "$date" : 1403530500000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "<span>Grille</span> <span>CSS</span> <span>Responsive</span> et <span>Sémantique</span> sans <span>Framework</span>", "urn" : "grille-css-responsive-et-semantique-sans-framework" }
{ "__v" : 0, "_id" : { "$oid" : "53ae894483fce724706bdf36" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "5310456355dfd5f7698d48c0" }, { "$oid" : "53aec7ad17ee9f4db5874c66" }, { "$oid" : "5310456355dfd5f7698d48c9" }, { "$oid" : "5310456355dfd5f7698d48c1" } ], "content" : "Connaissez vous les langages Markdown ? Mais si, il est probable que vous en connaissiez sans même savoir qu'ils pouvaient être nommé. Vous avez déjà écris un texte sur un [Wiki](http://www.mediawiki.org/wiki/MediaWiki/fr) ? Rédiger une carte sur [Trello](https://trello.com/) ? Rédigé un Readme sur [GitHub](https://github.com/) ou sur [BitBucket](https://bitbucket.org/) ? Un commentaire sur [CodePen](https://codepen.io/) ? Vous les avez déjà croisé ces `.md` rarement reconnus de base par les Bloc-notes.\n\n<figure>\n<img src=\"media/images/upload/stack-edit.jpg\" alt=\"Responsive Web Design\">\n<figcaption>Source : lh4.googleusercontent.com</figcaption>\n</figure>\n\nNon ? Si cela ne vous parle pas, sachez que Markdown pourrait devenir votre meilleur ami pour écrire des spécifications précises ou vagues sur vos projets, seul ou avec vos collègues avec un minimum d'efforts grâce à [StackEdit.io]. Vous pourriez même au final écrire toutes sortes de choses facilement !\n\n\n\n\n## Qu'est-ce que le langage Markdown ##\n\nJe me suis peut être emballé en disant « les langages Markdown ». En fait, ce langage n'a jamais été formellement standardisé bien que tous s'accordent à dire qu'il [suit ses règles ci](http://fr.wikipedia.org/wiki/Markdown).\n\n> **Wikipedia** : Markdown est un langage de balisage léger créé par John Gruber et Aaron Swartz en 2004. Son but est d'offrir une syntaxe facile à lire et à écrire. Un document formaté selon Markdown devrait pouvoir être publié comme tel, en texte, sans donner l’impression qu’il a été marqué par des balises ou des instructions de formatage.\n\nC'est à dire que les balises Wikipedia ne sont pas les mêmes que le langage Markdown mais sont un langage de « type Markdown » dans le sens où, hors d'une visionneuse de formatage, le texte reste parfaitement compréhensible de tous (contrairement par exemple au formatage HTML qui en mode `source` peut sembler compliqué pour qui ne le connaît pas).\n\n\n\n\n## StackEdit.io, le super éditeur Markdown en ligne ##\n\n[StackEdit.io] est un logiciel embarqué via navigateur, accessible en ligne et hors ligne ! Il fonctionne parfaitement avec Google Chrome par exemple, surtout en mode « Applications » (Menu > Outils > Créer des raccourcis vers les applications...).\n\nVous managez vos documents dans l'application, (création / suppression) et vous les enregistrez dans le Cloud de manière définitive via des plateformes de stockage tierces (Google Drive, DropBox, ...).\n\nVous pouvez même rédiger vos documents en temps réel à plusieurs.\n\nTout cela dans le but de publier vos documentations dans vos repositories internes sous forme de Readme, ou de fournir des spécifications fonctionnelles au format PDF ou HTML facilement. De créer du contenu pour vos cartes Trellos, bref... De rédiger en Markdown.\n\n\n\n\n## Testez-le ! ##\n\nPour tester [StackEdit.io], rendez vous sur [https://stackedit.io/](https://stackedit.io/).\n\n> **`une`** **Note** : [StackEdit.io] est également une très bonne visionneuse Markdown en ligne. Vous pouvez donc lui fournir n'importe qu'elle url de fichier `.md` et envoyer le lien de lecture à quelqu'un ! Par exemple, voici :\n\n> - ### [La version française du document de bienvenue StackEdit.io](https://stackedit.io/viewer#!provider=gist&gistId=eeb7bdac530e3b4e9502&filename=document-bienvenue-stackedit-fr) ###\n\n  [StackEdit.io]: https://stackedit.io/", "dates" : { "published" : { "$date" : 1403947320000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "StackEdit.io, l'éditeur Markdown en ligne par excellence !", "urn" : "stackeditio-l-editeur-markdown-en-ligne-par-excellence" }
{ "__v" : 0, "_id" : { "$oid" : "53e38776a8f05c9a1dbb971d" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48bf" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48b9" }, { "$oid" : "5310456355dfd5f7698d48bd" } ], "content" : "S'il y a bien une action redondante et qui nécessite de passer par la case JavaScript, c'est bien la validation des formulaires ! Mais sachez qu'il est possible de les valider sans utiliser une seule ligne de code ! J'avoue, je triche un peu quand je dis ça. En réalité il n'y a rien de magique et il faudra tout de même inclure trois scripts pour réaliser cela, mais il ne sera pas nécessaire que **vous** écriviez du JavaScript.\n\nVoyons ici quel sont ces scripts et parcourons les différents cas de figure pour valider des champs vides, vérifier qu'un email est bien formé ou encore qu'une confirmation de mot de passe correspond bien au mot de passe initialement tapé. Par exemple, pour vérifier qu'un champ « Pseudo » est bien remplis et indiquer la place de son message d'erreur, il suffirait de le déclarer dans un formulaire comme ceci :\n\n```html\n<label for=\"pseudo\">Pseudo</label>\n<input type=\"text\" name=\"pseudo\" id=\"pseudo\" placeholder=\"Haeresis\"\n       data-rule-required=\"true\"\n       data-msg-required=\"Le champ Pseudo est requis.\" />\n<span data-valmsg-for=\"pseudo\" data-valmsg-replace=\"true\"></span>\n```\n\nC'est donc parti pour :\n\n1. Trouver votre bonheur dans l'exemple complet suivant : [http://codepen.io/Haeresis/pen/AzJgF/](http://codepen.io/Haeresis/pen/AzJgF/)\n\n2. Ou/Et lire la suite de ce billet pour en apprendre un peu plus sur le jQuery Validation Unobstrusive Plugin.\n\n\n\n\n\n## Les 3 Scripts Magiques ##\n\n### jQuery ###\n\nLe premier des trois scripts est l'incontournable [jQuery](http://jqueryvalidation.org/). Celui-ci va servir aux deux suivants pour cibler les champs à valider de manière simple sur tous les types de navigateur, mais ça, vous le saviez probablement déjà.\n\n\n\n### jQuery Validate Plugin ###\n\nLe deuxième script est le de plus en plus populaire [jQuery Validate Plugin](http://jqueryvalidation.org/) qui avec un ensemble d'instructions JavaScript permet de manager la manière dont le formulaire doit se comporter lors de la validation post soumission. C'est là généralement (même si vous utilisez habituellement un autre script que ce plugin) que vous répéter toujours le même code JavaScript redondant pour assigner vos messages d'erreur à vos inputs.\n\n\n\n### jQuery Validation Unobstrusive Plugin ###\n\nVoici le troisième script magique qui va vous permettre de pré-valider votre formulaire côté client sans utiliser une seule ligne de JavaScript sur votre page ! Si vous n'y connaissez rien, et bien c'est le moment de jouer un peu avec votre DOM... uniquement à la main depuis le code HTML !\n\n> Note : le plus gros défaut de ce plugin est qu'il doit être utilisé dans un cadre de travail Microsoft. Dans tous autres cas, Microsoft ce réserve le droit de vous en interdire l'utilisation. Vous voilà donc prévenu :)\n\n\n\n\n## Mise en place rapide ##\n\nVoici un petit formulaire sans prétention qui va fonctionner...\n\n**Partie utile placée dans Body**\n\n```html\n<form action=\"\" method=\"post\">\n    <div class=\"field\">\n        <label for=\"pseudo\">Pseudo</label>\n\n        <!-- Ajout de data-rule-required et data-msg-required -->\n        <input type=\"text\" id=\"pseudo\" name=\"pseudo\" placeholder=\"Haeresis\"\n               data-rule-required=\"true\"\n               data-msg-required=\"Le champ Pseudo est requis.\"\n        />\n\n        <!-- Placement du message d'erreur dédié spécifiquement. -->\n        <span data-valmsg-for=\"pseudo\" data-valmsg-replace=\"true\"></span>\n    </div>\n\n    <!-- Ajout de la liste total des messages d'erreur pour information. -->\n    <div class=\"validation-summary-valid\" data-valmsg-summary=\"true\">\n        <ul>\n            <li style=\"display:none\"></li>\n        </ul>\n    </div>\n\n    <div class=\"submit\">\n        <input type=\"submit\" value=\"Valider\" />\n    </div>\n</form>\n```\n\n...une fois nos trois scripts mis en place.\n\n**Appel des trois scripts, de préférence en pied de Body**\n\n```html\n<!-- jQuery -->\n<script src='//code.jquery.com/jquery-2.1.4.min.js'></script>\n<!-- jQuery Validate Plugin -->\n<script src='//cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js'></script>\n<!-- jQuery Validation Unobstrusive Plugin -->\n<script src='//ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.min.js'></script>\n```\n\nIl ne reste alors plus qu'a styler les messages d'erreur...\n\n**CSS pour styler les messages d'erreur**\n\n```css\n/* Couleur des messages d'erreur totaux */\n.validation-summary-errors,\n/* Couleur des messages d'erreur spécifiques */\n.field-validation-error {\n  color: #f00;\n}\n\n/* Couleur des bord des champs spécifiques */\n.input-validation-error {\n  border: 1px solid #f00;\n}\n```\n\n## Voir tous les types de champs ! ##\n\nVous pouvez consulter ici tous les autres types de champs et fonctionnement custom avec quelques lignes de JavaScript.\n\n<script async src=\"//codepen.io/assets/embed/ei.js\"></script>\n\n<div class=\"codepen\"><p data-height=\"600\" data-theme-id=\"0\" data-slug-hash=\"AzJgF\" data-default-tab=\"html\" class='codepen'>See the Pen <a href='http://codepen.io/Haeresis/pen/AzJgF/'>Validation de formulaire Inline sans JavaScript</a> by Bruno Lesieur (<a href='http://codepen.io/Haeresis'>@Haeresis</a>) on <a href='http://codepen.io'>CodePen</a>.</p></div>", "dates" : { "published" : { "$date" : 1407423840000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : ".codepen {\n    margin-top: 8px;\n}", "title" : "<span>Valider</span> les <span>formulaires</span> simplement, et sans <span>JavaScript</span>", "urn" : "valider-les-formulaires-simplement-et-sans-javascript" }
{ "__v" : 0, "_id" : { "$oid" : "54265d082634df6329891daf" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "530cc2f27188099a66e9bcec" } ], "content" : "## Habiller son interface avec et sans JavaScript ##\n\n## Différencier les types Layout, Component et Pattern ##\n\n## Manager les grilles Responsive Web Design en CSS-Driven ##\n\n\n\n## Images Responsive ##\n\nLe comportement est simple : l'image s'affiche à sa taille standard s'il y a assez de place pour l'afficher sinon elle s'affiche à 100% de la taille de son container.\n\n**Exemple CSS**\n\n```css\nimg.responsive {\n    max-width: 100%;\n    height: auto;\n}\n.text-center {\n    text-align: center;\n}\nimg.center {\n    display: block;\n    margin-left:auto;\n    margin-right:auto;\n}\nimg.left{\n    display: block;\n    margin-right:auto;\n}\nimg.right {\n    display: block;\n    margin-left:auto;\n}\n```\n\n**Exemple HTML**\n\n```html\n<p>\n    <img class=\"responsive center\" src=\"media/images/upload/tumblr_n3s8i3yPih1s9y3qio2_500.jpg\">\n</p>\n<p class=\"text-center\">\n    <img class=\"responsive\" src=\"media/images/upload/1008447.jpg\">\n    <img class=\"responsive\" src=\"media/images/upload/1008104.jpg\">\n</p\n```\n\n**Rendu**\n\n<p>\n    <img class=\"responsive center\" src=\"media/images/upload/tumblr_n3s8i3yPih1s9y3qio2_500.jpg\">\n</p>\n<p class=\"text-center\">\n    <img class=\"responsive\" src=\"media/images/upload/1008447.jpg\">\n    <img class=\"responsive\" src=\"media/images/upload/1008104.jpg\">\n</p>\n\n*Note : retaillez votre fenêtre pour voir les effets de responsivité.*\n\n## Empècher l'écoulement des flottants ##\n\n## Éviter le débordement de marge ##\n\n## Gérer l'overflow horizontal ##\n\n## Before et After pour la décoration ##\n\n## Description par classes Sémantique ##\n\n\n\n\n\n\n\n\n\n\n\nImpossible de mute le son sur iPhone/iPad (impossible donc de pré-loadé le son en le lisant) : http://stackoverflow.com/questions/10214315/htmlaudioelement-wont-mute-properly-in-safari-on-ipod-touch-5-0-1\n- https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Using_HTML5_Audio_Video.pdf\nImpossible de pré-charger le son sir iPhone/iPad (impossible donc de pré-loadé le son à l'ouverture de page) : http://stackoverflow.com/questions/9811429/html5-audio-tag-on-safari-has-a-delay\n- http://developer.apple.com/library/safari/#documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW1\n\nhttp://www.ibm.com/developerworks/library/wa-ioshtml5/\n\n\n\n\n\n\n\n\n\n", "dates" : { "published" : { "$date" : 1478655900000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : false }, "script" : "", "stylesheet" : "img.responsive {\n    max-width: 100%;\n    height: auto;\n}\n.text-center {\n    text-align: center;\n}\nimg.center {\n    display: block;\n    margin-left:auto;\n    margin-right:auto;\n}\nimg.left{\n    display: block;\n    margin-right:auto;\n}\nimg.right {\n    display: block;\n    margin-left:auto;\n}", "title" : "1 <span>astuces</span> avec les <span>classes</span> <span>CSS</span> et <span>JS</span>", "urn" : "astuces-avec-les-classes-css-et-js" }
{ "__v" : 0, "_id" : { "$oid" : "542bc5069fe4c08c340c83e7" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "5310456355dfd5f7698d48c3" } ], "content" : "Une solution rapide et qui fonctionne sur tous les navigateurs à partir de IE9 est le centrage vertical avec la valeur CSS3 `translateY` de la propriété `transform`.\n\nPour mettre cela en place, trois simples propriétés :\n\n1. On place l'élément en relatif pour le repositionner par rapport à son élément parent avec `position: relative;`.\n\n2. On déplace l'élément de la moitié de la hauteur de l'élément parent avec `top: 50%;`, la référence de déplacement étant actuellement son bord haut.\n\n3. On re-centre l'élément non plus à partir de son bord haut mais de son centre vertical avec `transform: translateY(-50%);`\n\nEt voilà !\n\n\n\n\n\n\n## Exemple de code minimal ##\n\nVoici ce que cela donne avec les préfixes propriétaires :\n\n```css\n.vertical-align {\n    position: relative;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n       -moz-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n         -o-transform: translateY(-50%);\n            transform: translateY(-50%);\n}\n```\n\n*Note : si votre élément est de type inline, il faudra ajouter la propriété `display: inline-block;` pour que la transformation soit valide dans tous les cas de figures sur tous les navigateurs supportant `translateY` :*\n\n```css\n.inline-block {\n    display: inline-block\n}\n```\n\n*Note : si le centrage affiche l'élément sur un demi-pixel, celui-ci peut paraître flou. Pour empêcher cela, il suffit de munir un élément parent de `transform-style: preserve-3d;` :*\n\n```css\n.preserve-3d {\n    -webkit-transform-style: preserve-3d;\n       -moz-transform-style: preserve-3d;\n            transform-style: preserve-3d;\n}\n```\n\n\n\n\n\n## Exemple concret d'utilisation ##\n\n### Texte en Hover sur image ###\n\n_Passez votre souris sur l'image :_\n\n<div class=\"example\">\n\t<img src=\"http://blog.haeresis.fr/upload/image/the_moment_by_dzsurnik.jpg\" alt=\"The Moment by Dzsurnik\">\n\t<a href=\"http://blog.haeresis.fr/upload/image/the_moment_by_dzsurnik.jpg\" target=\"_blank\">\n\t\t<span>Voir l'image en grand format</span>\n\t</a>\n</div>\n\n*Note : Vous pouvez retailler la fenêtre pour voir le résultat en Responsive Web Design*\n\n-----\n\n__HTML__\n\n```html\n<div class=\"example\">\n\t<img src=\"http://fc08.deviantart.net/fs70/i/2012/309/9/1/the_moment_by_dzsurnik-d5k2le2.jpg\" alt=\"The Moment by Dzsurnik\">\n\t<a href=\"http://fc08.deviantart.net/fs70/i/2012/309/9/1/the_moment_by_dzsurnik-d5k2le2.jpg\" target=\"_blank\">\n\t\t<span>Voir l'image en grand format</span>\n\t</a>\n</div>\n```\n\n__CSS__\n```css\n.example {\n    /* Permettre à `a` d'être bien placer en absolue */\n    position: relative;\n    /* Éviter les rendus flous */\n    -webkit-transform-style: preserve-3d;\n       -moz-transform-style: preserve-3d;\n            transform-style: preserve-3d;\n}\n.example img {\n    /* Rendre l'image Responsive */\n    display: block;\n    max-width: 100%;\n    /* Centrer l'image */\n    margin-left: auto;\n    margin-right: auto;\n}\n.example a {\n    /* Cacher le lien si la zone n'est pas survolée */\n    display: none;\n    /* Couvrir l'intégralité de `.example` */\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    /* Être transparent pour voir l'image */\n    background-color: rgba(255, 255, 255, 0.8);\n    /* Centrer horizontalement le texte */\t\n    text-align: center;\n    /* Styler le texte */\n    font-weight: bold;\n    font-size: 1.6em;\n    line-height: 1.3;\n}\n.example a:hover {\n    /* Désactiver visuellement le comportement `:hover` sur le lien */\n    color: #48739E;\n    text-decoration: none;\n}\n.example:hover a {\n    /* Afficher `a` au survole de `.example` */\n    display: block;\n}\n.example span {\n    /* Centrage vertical automatique pour le texte */\n    position: relative;\n    display: inline-block;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n       -moz-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n         -o-transform: translateY(-50%);\n            transform: translateY(-50%);\n}\n```\n\n### Centrer une Popup ###\n\n<a class=\"example-link\" href=\"javascript:;\">Cliquez sur ce lien pour ouvrir une popup</a>\n<div class=\"example-2\">\n    <figure>\n        <img src=\"http://blog.haeresis.fr/upload/image/devon_jade_dubstep_themed_edit_2_by_matthewjendrasiak.jpg\" alt=\"Devon Jade Dubstep Themed Edit 2 by Matthew Jendrasiak\">\n        <figcaption>Cliquez n'importe où pour fermer</figcaption>\n    </figure>\n</div>\n\n-----\n\n__HTML__\n\n```html\n<a class=\"example-link\" href=\"javascript:;\">Cliquez sur ce lien pour ouvrir une popup</a>\n<div class=\"example-2\">\n    <figure>\n        <img src=\"http://fc07.deviantart.net/fs71/i/2013/265/1/9/devon_jade__dubstep_themed_edit__2_by_matthewjendrasiak-d6ngt26.jpg\" alt=\"Devon Jade Dubstep Themed Edit 2 by Matthew Jendrasiak\">\n        <figcaption>Cliquez n'importe où pour fermer</figcaption>\n    </figure>\n</div>\n```\n\n__CSS__\n```css\n.example-2 {\n    /* Par défaut notre popup est fermée */\n    display: none;\n    /* Zone de popup prenant toute la place */\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n}\n.example-2.opened {\n    /* Avec la classe opened, la popup est visible */\n    display: block;\n}\n.example-2:before {\n    /* Rendre visible le background */\n    content: \"\";\n    position: absolute;\n    z-index: 1;\n    background-color: rgba(0, 0, 0, 0.8);\n    width: 100%;\n    height: 100%;\n}\n.example-2 figure {\n    /* Mise en forme du contenu */\n    background-color: #FFF;\n    margin: 0;\n    /* Le contenu prend de base toute la largeur */\n    width: 100%;\n    /* Popup par dessus le background */\n    z-index: 2;\n    /* Centrage vertical automatique pour le contenu */\n    position: absolute;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n       -moz-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n         -o-transform: translateY(-50%);\n            transform: translateY(-50%);\n}\n@media (min-width: 768px) {\n    .example-2 figure {\n        /* Taille fixe pour la popup à partir de 768px... */\n        width: 764px;\n        /* ...et centrage vertical et horizontal automatique pour le contenu */\n        top: 50%;\n        left: 50%;\n        -webkit-transform: translateX(-50%) translateY(-50%);\n           -moz-transform: translateX(-50%) translateY(-50%);\n            -ms-transform: translateX(-50%) translateY(-50%);\n             -o-transform: translateX(-50%) translateY(-50%);\n                transform: translateX(-50%) translateY(-50%);\n    }\n}\n.example-2 figcaption {\n    /* Mise en forme figcaption */\n    text-align: center;\n    padding: 16px;\n}\n.example-2 img {\n    /* Image responsive */\n    max-width: 100%;\n}\n```\n\n__JS__\n```javascript\n// Ouverture et fermeture de popup.\n$(\".example-link, .example-2\").click(function () {\n    $(\".example-2\").toggleClass(\"opened\");\n});\n```\n*Note : `$` est une instance de la librairie [jQuery](http://jquery.com/).*", "dates" : { "published" : { "$date" : 1413280800000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "$(\".example-link, .example-2\").click(function () {\n    $(\".example-2\").toggleClass(\"opened\");\n});", "stylesheet" : ".example {\n    position: relative;\n    -webkit-transform-style: preserve-3d;\n       -moz-transform-style: preserve-3d;\n            transform-style: preserve-3d;\n}\n.example img {\n    display: block;\n    max-width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n}\n.example a {\n    display: none;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(255, 255, 255, 0.8);\n    text-align: center;\n    font-weight: bold;\n    font-size: 1.6em;\n    line-height: 1.3;\n}\n.example a:hover {\n    color: #48739E;\n    text-decoration: none;\n}\n.example:hover a {\n    display: block;\n}\n.example span {\n    position: relative;\n    display: inline-block;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n       -moz-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n         -o-transform: translateY(-50%);\n            transform: translateY(-50%);\n}\n\n.example-2 {\n    display: none;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n}\n.example-2 img {\n    margin-top: 0;\n    max-width: 100%;\n}\n.example-2.opened {\n    display: block;\n}\n.example-2:before {\n    content: \"\";\n    position: absolute;\n    z-index: 1;\n    background-color: rgba(0, 0, 0, 0.8);\n    width: 100%;\n    height: 100%;\n}\n.example-2 figure {\n    background-color: #FFF;\n    position: absolute;\n    z-index: 2;\n    margin: 0;\n    width: 100%;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n       -moz-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n         -o-transform: translateY(-50%);\n            transform: translateY(-50%);\n}\n\n@media (min-width: 768px) {\n    .example-2 figure {\n        top: 50%;\n        left: 50%;\n    width: 764px;\n    -webkit-transform: translateX(-50%) translateY(-50%);\n       -moz-transform: translateX(-50%) translateY(-50%);\n        -ms-transform: translateX(-50%) translateY(-50%);\n         -o-transform: translateX(-50%) translateY(-50%);\n            transform: translateX(-50%) translateY(-50%);\n    }\n}\n.example-2 figcaption {\n    /* Mise en forme figcaption */\n    text-align: center;\n    padding: 16px;\n    margin-top: -5px;\n}\n\n\n.article {\n    position: relative;\n    z-index: 4;\n}\n.example-link {\n    font-weight: bold;\n    font-size: 1.6em;\n    display: block;\n    text-align: center;\n    margin-top: 32px;\n    margin-bottom: 32px;\n}", "title" : "<span>Centrer</span> <span>verticalement</span> n'importe quel élément en quelques lignes <span>CSS</span>", "urn" : "centrer-verticalement-n-importe-quel-element-en-quelques-lignes-css" }
{ "__v" : 0, "_id" : { "$oid" : "542c24e6ac53204337fa2e08" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48ca" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48be" } ], "content" : "Une chose qui me gène avec la `$(document).ready()` de la librairie [jQuery], c'est que c'est une magnifique porte ouverte aux mauvaises pratiques JavaScript. Elle empèche les développeurs web en herbe de se pauser les bonnes questions et pire encore, comme j'ai pu le constater récemment, aux développeurs à priori chevronnés d'en faire de même...\n\nOui, le `$(document).ready()` *peut* être utilisé plus d'une fois dans un ensemble de fichier et oui, il *peut* être placé n'importe où dans une page HTML __mais non, ce n'est absolument pas vous rendre service que de faire cela !__ Ce n'est pas parce que l'on peut, que l'on doit.\n\nMettre ces déclarations un peu partout rend plus difficile la relecture et le debug du code en empêchant de savoir qui s'exécute avant qui sans regarder l'ordre d'appel des fichiers. Effectivement, si cela semble simple et pratique quand 3 fichiers se battent en duel, cela peut rapidement devenir complexe. De plus, si une exception est levé dans l'un des `$(document).ready()`, aucun des autres n’exécutera plus rien du tout. Pour finir, le code est ralenti lors de l'appel de plusieurs `$(document).ready()` contre un seul, ou contre aucun d'ailleurs.\n\n<figure>\n<img src=\"media/images/upload/jquery-document-ready-zzzz.jpg\" alt=\"$(document).ready() ZzzZz\">\n<figcaption><a href=\"http://encosia.com/dont-let-jquerys-document-ready-slow-you-down/\" title=\"Don’t let jQuery’s $(document).ready() slow you down\">Don’t let jQuery’s $(document).ready() slow you down</a></figcaption>\n</figure>\n\nDans cet article nous allons voir l'une des dizaines de façon de vous passer de `$(document).ready()` dans vos pages web. Le maître mot ? Un seul point d'entré pour l'ensemble du code exécuté sur une page. [Vous trouverez également un exemple de la méthode décrite dans cet article dans ce repository GitHub](https://github.com/Haeresis/SimpleAtlas).\n\n  [jQuery]: http://jquery.com/\n\n\n\n\n\n## Être composant orienté avec jQuery ##\n\n### JavaScript en vrac ###\n\nAdmettons que dans une page on trouve deux composants de Carrousel avec en pied de page un appel à la libraire [jQuery], à l'extension jQuery [OWL Carousel](http://owlgraphic.com/owlcarousel/) pour gérer des carrousels, et un fichier pour écrire notre code JavaScript.\n\n```html\n<!-- Ici une image pleine, slidable -->\n<div class=\"one-item-carousel\">\n    <div class=\"carousel\">\n        <div class=\"item\"><img src=\"assets/fullimage1.jpg\" alt=\"The Last of us\"></div>\n        <div class=\"item\"><img src=\"assets/fullimage2.jpg\" alt=\"GTA V\"></div>\n        <div class=\"item\"><img src=\"assets/fullimage3.jpg\" alt=\"Mirror Edge\"></div>\n    </div>\n</div>\n\n<!-- Ici plusieurs petites images qui défilent -->\n<div class=\"multiple-item-carousel\">\n    <div class=\"carousel\">\n        <div class=\"item\"><img src=\"assets/fullimage1.jpg\" alt=\"The Last of us\"></div>\n        <div class=\"item\"><img src=\"assets/fullimage2.jpg\" alt=\"GTA V\"></div>\n        <div class=\"item\"><img src=\"assets/fullimage3.jpg\" alt=\"Mirror Edge\"></div>\n    </div>\n</div>\n\n<!-- ... -->\n\n<!-- En pied de page, l'appel aux scripts -->\n<script src=\"jquery.js\"></script>\n<script src=\"owl.carousel.js\"></script>\n<script src=\"common.js\"></script>\n```\n\nLe fichier `common.js` pourrait alors ressembler à cela :\n\n```js\n$(document).ready(function() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n});\n\n$(document).ready(function() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n});\n```\n\net une découpe en composant des fichiers pourrait être celle-ci :\n\n*component.one-item-carousel.js*\n\n```js\n$(document).ready(function() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n});\n```\n\n*component.multiple-item-carousel.js*\n\n```\n$(document).ready(function() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n});\n```\n\n\n\n### Exécution en retour AJAX après que le document soit `ready` impossible ###\n\nQue ce passerait t-il si `.one-item-carousel` était déjà dans le code source HTML de la page mais que `.multiple-item-carousel` était rapatrié par chargement AJAX ou Websocket ?\n\n```js\n$(document).ready(function() {\n    $.ajax(\"multiple-item-carousel.html\", function() {\n        // Rapatriement du code HTML de `.multiple-item-carousel` et injection dans la page.\n    });\n});\n\n$(document).ready(function() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n});\n\n$(document).ready(function() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        items : 10,\n        itemsDesktop : [1000,5],\n        itemsDesktopSmall : [900,3],\n        itemsTablet: [600,2],\n        itemsMobile : false\n    });\n});\n```\n\nEt bien `.one-item-carousel .carousel` serait bien exécuté mais pas `.multiple-item-carousel .carousel` car aucun élément ne serait ciblé quand le « document serait ready ». Et selon la rapidité de votre machine ou du réseau, peut-être que finalement ça passerait... Pire, votre seul moyen de ré-exécuter le code dans vos `$(document).ready()` est de supprimer et ré-injecter le script dans le HTML. \n\n\n\n### Appels de fonctions ###\n\n« Mais c'est très simple ! Il suffit alors de déporter les appels dans des fonctions et d'en exécuter une en retour d'AJAX ! »\n\n```js\nfunction loadOneItemCarousel() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n}\n\nfunction loadMultipleItemCarousel();() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        items : 10,\n        itemsDesktop : [1000,5],\n        itemsDesktopSmall : [900,3],\n        itemsTablet: [600,2],\n        itemsMobile : false\n    });\n}\n\n$(document).ready(function() {\n    $.ajax(\"multiple-item-carousel.html\", function() {\n        // Rapatriement du code HTML de `.multiple-item-carousel` et injection dans la page.\n        // Après rapatriement, on exécute le code JavaScript.\n        loadMultipleItemCarousel();\n    });\n});\n\n$(document).ready(function() {\n    loadOneItemCarousel();\n});\n\n$(document).ready(function() {\n    loadMultipleItemCarousel();\n});\n```\n\n\n\n### Inutilité de plusieurs `$(document).ready()` ###\n\nOn peut alors aisément transformer le code précédent en celui-ci et par la même occasion se débarrasser des multiples `$(document).ready()` :\n\n```js\nfunction loadOneItemCarousel() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n}\n\nfunction loadMultipleItemCarousel() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        items : 10,\n        itemsDesktop : [1000,5],\n        itemsDesktopSmall : [900,3],\n        itemsTablet: [600,2],\n        itemsMobile : false\n    });\n}\n\n$(document).ready(function() {\n    $.ajax(\"multiple-item-carousel.html\", function() {\n        // Rapatriement du code HTML de `.multiple-item-carousel` et injection dans la page.\n        // Après rapatriement, on exécute le code JavaScript.\n        loadMultipleItemCarousel(); \n    });\n\n    loadOneItemCarousel();\n    loadMultipleItemCarousel();\n});\n```\n\n\n\n### Namespace pour ses fonctions ###\n\nC'est un bon début mais que va t'il se passer s'il y a des milliers de fonctions et de composants ? \n\n```js\nfunction loadOneItemCarousel() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n}\n\nfunction playOneItemCarousel() {\n    $(\".one-item-carousel .carousel\").trigger('owl.play', 1000);\n}\n\nfunction loadMultipleItemCarousel() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        items : 10,\n        itemsDesktop : [1000,5],\n        itemsDesktopSmall : [900,3],\n        itemsTablet: [600,2],\n        itemsMobile : false\n    });\n}\n\nfunction playMultipleItemCarousel() {\n    $(\".multiple-item-carousel .carousel\").trigger('owl.play', 1000);\n}\n\n$(document).ready(function() {\n    $.ajax(\"multiple-item-carousel.html\", function() {\n        // Rapatriement du code HTML de `.multiple-item-carousel` et injection dans la page.\n        // Après rapatriement, on exécute le code JavaScript.\n        loadMultipleItemCarousel(); \n    });\n\n    loadOneItemCarousel();\n    loadMultipleItemCarousel();\n});\n```\n\nVos nom de fonction vont se télescoper ou alors ils vont être très long. C'est le moment de les rassembler dans les mêmes objets.\n\n\n```js\nvar website = {},\n    website.components = {};\n\n\n\n// Composant one-item-carousel.\nwebsite.components[\"one-item-carousel\"] = {};\nwebsite.components[\"one-item-carousel\"].load = function () {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n};\nwebsite.components[\"one-item-carousel\"].play = function () {\n    $(\".one-item-carousel .carousel\").trigger('owl.play', 1000);\n};\nwebsite.components[\"one-item-carousel\"] = function () {\n    website.components[\"one-item-carousel\"].load();\n    website.components[\"one-item-carousel\"].play();\n};\n\n\n\n// Composant multiple-item-carousel.\nwebsite.components[\"multiple-item-carousel\"] = {};\nwebsite.components[\"multiple-item-carousel\"].load = function () {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        items : 10,\n        itemsDesktop : [1000,5],\n        itemsDesktopSmall : [900,3],\n        itemsTablet: [600,2],\n        itemsMobile : false\n    });\n}\n};\nwebsite.components[\"multiple-item-carousel\"].play = function () {\n    $(\".multiple-item-carousel .carousel\").trigger('owl.play', 1000);\n};\nwebsite.components[\"multiple-item-carousel\"] = function () {\n    website.components[\"multiple-item-carousel\"].load();\n    website.components[\"multiple-item-carousel\"].play();\n};\n\n\n\n// Controller de page.\nwebsite.ajax = function () {\n    $.ajax(\"multiple-item-carousel.html\", function() {\n        website.components[\"multiple-item-carousel\"]();\n    });\n};\nwebsite = function () {\n    // Lancement Controller.\n    website.ajax();\n\n    // Lancement Composant.\n    website.components[\"one-item-carousel\"]();\n    website.components[\"multiple-item-carousel\"](); \n};\n\n\n\n// Le fameux Document Ready.\n$(document).ready(function() {\n    website.init();\n});\n```\n\n\n\n### Du code moins verbeux, du cloisonnement ###\n\nOn voit facilement qu'il y a redondance d'appel et que le code est toujours alimenter depuis le champ lexical global contrairement à un appel dans `$(document).ready()` qui à le mérite de cloisonner l'exécution de code. Allégeons tout ça, et créons de vrai cloisons sans `$(document).ready()`. \n\n```js\nvar website = {};\n\n\n\n// Composant one-item-carousel.\n(function (publics) {\n    var name = \"one-item-carousel\",\n        privates = {};\n\n    publics.components = publics.components || {};\n\n    privates.load = function () {\n        $(\".\" + name + \" .carousel\").owlCarousel({\n            navigation : true,\n            slideSpeed : 300,\n            paginationSpeed : 400,\n            singleItem:true \n        });\n    };\n    privates.play = function () {\n        $(\".\" + name + \" .carousel\").trigger('owl.play', 1000);\n    };\n    privates = function () {\n        privates.load();\n        privates.play();\n    };\n\n    publics.components[name] = function () {\n        privates();\n    };\n}(website));\n\n\n\n// Composant multiple-item-carousel.\n(function (publics) {\n    var name = \"multiple-item-carousel\",\n        privates = {};\n\n    publics.components = publics.components || {};\n\n    privates.load = function () {\n        $(\".\" + name + \" .carousel\").owlCarousel({\n            items : 10,\n            itemsDesktop : [1000,5],\n            itemsDesktopSmall : [900,3],\n            itemsTablet: [600,2],\n            itemsMobile : false\n        });\n    };\n    privates.play = function () {\n        $(\".\" + name + \" .carousel\").trigger('owl.play', 1000);\n    };\n    privates = function () {\n        privates.load();\n        privates.play();\n    };\n\n    publics.components[name] = function () {\n        privates();\n    };\n}(website));\n\n\n\n// Controller de page.\n(function (publics) {\n    var privates = {};\n\n    privates.ajax = function () {\n        $.ajax(\"multiple-item-carousel.html\", function() {\n            publics.components[\"multiple-item-carousel\"]();\n        });\n    };\n    publics.init = function () {\n        privates.ajax();\n\n        // Lancement Composant.\n        publics.components[\"one-item-carousel\"]();\n        publics.components[\"multiple-item-carousel\"]();\n    };\n}(website));\n\n\n\n// Le fameux Document Ready.\n$(document).ready(function() {\n    website.init();\n});\n```\n\nNote : Vous pourrez mieux comprendre cet exemple, notamment la différence entre `publics` et `privates` avec l'article [Structurer le JavaScript de son site avec ou sans Framework](https://blog.lesieur.name/structurer-le-javascript-de-son-site-avec-ou-sans-framework/)\n\n\n\n## Composant orienté, sans $(document).ready() ##\n\nIl est aisé à présent de découper notre code dans ces trois fichiers par exemple :\n\n```html\n        <!-- ... -->\n\n        <script src=\"component.one-item-carousel.js\"></script>\n        <script src=\"component.multiple-item-carousel.js\"></script>\n        <script src=\"common.js\"></script>\n    </body>\n</html>\n```\n\n*component.one-item-carousel.js*\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var name = \"one-item-carousel\",\n        privates = {};\n\n    publics.components = publics.components || {};\n\n    privates.load = function () {\n        $(\".\" + name + \" .carousel\").owlCarousel({\n            navigation : true,\n            slideSpeed : 300,\n            paginationSpeed : 400,\n            singleItem:true \n        });\n    };\n    privates.play = function () {\n        $(\".\" + name + \" .carousel\").trigger('owl.play', 1000);\n    };\n    privates = function () {\n        privates.load();\n        privates.play();\n    };\n\n    publics.components[name] = function () {\n        privates();\n    };\n}(website));\n```\n\n*component.multiple-item-carousel.js*\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var name = \"multiple-item-carousel\",\n        privates = {};\n\n    publics.components = publics.components || {};\n\n    privates.load = function () {\n        $(\".\" + name + \" .carousel\").owlCarousel({\n            items : 10,\n            itemsDesktop : [1000,5],\n            itemsDesktopSmall : [900,3],\n            itemsTablet: [600,2],\n            itemsMobile : false\n        });\n    };\n    privates.play = function () {\n        $(\".\" + name + \" .carousel\").trigger('owl.play', 1000);\n    };\n    privates = function () {\n        privates.load();\n        privates.play();\n    };\n\n    publics.components[name] = function () {\n        privates();\n    };\n}(website));\n```\n\nEt de faire sauter le dernier `$(document).ready()` qui ne sert à rien puisque `common.js` est le dernier fichier appelé sur la page.\n\n*common.js*\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var privates = {};\n\n    privates.ajax = function () {\n        $.ajax(\"multiple-item-carousel.html\", function() {\n            publics.components[\"multiple-item-carousel\"]();\n        });\n    };\n    publics.init = function () {\n        privates.ajax();\n\n        // Lancement Composant.\n        publics.components[\"one-item-carousel\"]();\n        publics.components[\"multiple-item-carousel\"]();\n    };\n}(website));\n\n\n\n// Le fameux Document Ready disparait.\n//$(document).ready(function() {\n    website.init();\n//});\n```\n\n\n\n## Charger automatiquement les composants présent dans la page ##\n\nC'est vrai que notre petit exercice nous permet de moduler l'appel des fonctions indépendamment de l'état du DOM mais elles ne se chargent plus automatiquement au chargement...\n\nCe petit ajustement de `common.js` répondra à cette problématique\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var privates = {};\n\n    privates.ajax = function () {\n        $.ajax(\"multiple-item-carousel.html\", function() {\n            publics.components[\"multiple-item-carousel\"]();\n        });\n    };\n\n    // Chargement automatique des composants présent dans la page.\n    privates.loadComponents = function () {\n        for (var i in publics.components) {\n            // Sont t-il bien présent ?\n            if ($(\".\" + i).length > 0) {\n                publics.components[i]();\n            }\n        }\n    };\n\n    publics.init = function () {\n        privates.ajax();\n\n        // Lancement Composant.\n        privates.loadComponents();\n    };\n}(website));\n\nwebsite.init();\n```\n\n\n\n### Déjà exécuté ? ###\n\nAvec une petite classe, il est même possible de taguer les composants comme déjà exécutés pour ne pas les ré-exécuter une autre fois lors d'un rapatriement via AJAX ou Websocket.\n\n\n\n### Arrêter le cas par cas ###\n\nVous pouvez également en retour d'AJAX ou Websocket exécuté `website.loadComponents()` au lieu de `website.components[\"multiple-item-carousel\"]()` par exemple (à condition d'accrocher `loadComponents()` à `publics`) pour ne plus vous préoccuper des composants renvoyé par les sources AJAX.\n\n\n\n## Exemple complet sur GitHub ##\n\n[Vous pouvez tester un exemple similaire à ce petit exercice dans le projet GitHub « ComponentAutoLoadTemplate »](https://github.com/Haeresis/SimpleAtlas).", "dates" : { "published" : { "$date" : 1413992400000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Éviter les multiples $(document).ready() dans vos pages web", "urn" : "eviter-les-multiples-jquery-document-ready-dans-vos-pages-web" }
{ "__v" : 0, "_id" : { "$oid" : "5434dd2bac53204337fa2e0a" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5810c54a889f9b4bb0ece04f" }, { "$oid" : "5310456355dfd5f7698d48c8" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "5310456355dfd5f7698d48c3" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48ca" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48bc" } ], "content" : "Depuis que le [Responsive Web Design] a commencé son invasion, beaucoup de site ne possède plus qu'une unique version qui gère :\n- un affichage complet pour écrans larges de type écran d'ordinateur (Desktop) et\n- un affichage léger et partiellement complet pour les écrans de type mobiles/tablettes.\n\nCela revient souvent à inhiber des fonctionnements jugés peu utiles par les développeurs ou ergonomiquement trop instables pour être présentés sur les petits appareils et empêche alors : \n- d'afficher la version Desktop sur les mobiles/tablettes ou \n- d'afficher la version Desktop dans une fenêtre de navigateur rétréci.\n\nJe vous propose, à travers des exemples [CSS-Driven](https://blog.lesieur.name/grille-css-responsive-et-semantique-sans-framework/), de vous expliquer comment gérer deux versions d'affichage de vos pages avec comme toujours [une seule structure HTML sémantique](https://blog.lesieur.name/grille-css-responsive-et-semantique-sans-framework/).\n\n\n\n\n\n## En [Desktop First] ##\n\nLe [Desktop First] consiste à penser en priorité l'affichage maximal pour grand écran d'un site web puis ensuite d'ajouter des instructions pour des versions plus petites. En générale ce n'est pas une approche choisi consciemment mais utilisée sur des sites déjà existant qui n'ont pas initialement fait l'objet d'une version Mobile.\n\nVoici donc un site créer pour un affichage fixe :\n\n**CSS du site version Desktop**\n\n```css\nbody {\n    /* Le site est taillé pour un affichage 1024px */\n    width: 1024px;\n}\n\n```\n\nUne fois la version Mobile ajouté au code existant, le site s'affiche en version [Responsive Web Design] sur tous les petits périphériques ou dans les fenêtres de navigateurs rétrécis :\n\n**CSS addon pour version Mobile**\n\n```css\nbody {\n    width: 1024px;\n}\n@media (max-width: 1023px) {\n    /* Cependant, si l'écran est inférieur à 1024px... */\n    /* ...alors on applique la propriété suivante */\n    body {\n        width: auto;\n    }\n}\n\n```\n\nAvec cette modification, il n'est plus possible d'afficher la version Desktop sur mobiles/tablettes ou fenêtre rétrécis.\n\nVoici une manière simple d'ajouter un affichage [Responsive Web Design] (version Mobile) tout en conservant l'affichage, si souhaité, de la version Desktop pour mobiles/tablettes en [Desktop First]. Il faut pour cela :\n\n1. Se servir d'une classe conditionnelle `.rwd` (pour « Responsive Web Design ») que l'on va placer dans `<html class=\"rwd\">` pour rendre notre site [Responsive Web Design].\n\n2. Préfixer tous les sélecteurs CSS destinés à habiller des affichages inférieurs à la version Desktop (la plus large) par `.rwd` :\n\n    **Ajout de .rwd**\n\n    ```css\nbody {\n    /* Le site est taillé pour un affichage 1024px */\n    width: 1024px;\n}\n@media (max-width: 1023px) {\n    /* Cependant, si l'écran est inférieur à 1024px... */\n    /* ...et uniquement si le site est en mode RWD (c'est le cas par defaut)... */\n    /* ...alors on applique la propriété suivante */\n    .rwd body {\n        width: auto;\n    }\n}\n```\n\n3. Ajouter un lien *Version Desktop* qui ne s'affiche que si le site possède la classe `.rwd` et n'est pas dans sa taille maximale et ajouter un lien *Version Mobile* qui ne s'affiche que si la classe `.rwd` n'est pas là.\n\n   **Ajout de liens de switch**\n\n   ```css\n/* On force à ne pas proposer l'affichage Desktop... */\na.ask-for-display-desktop {\n    display: none;\n}\n@media (max-width: 1023px) {\n    /* ...sauf si le site est en RWD et est... */\n    /* ...en version inférieur à la version maximale */\n    .rwd a.ask-for-display-desktop {\n        display: inline;\n    }\n}\n/* Par défaut la demande de passer en version RWD est là... */\n/* ...et si on est déjà en RWD on ne l'affiche pas */\n.rwd a.ask-for-display-responsive {\n    display: none;\n}\n```\n\nÀ présent il suffit du côté Back-end :\n\n- d'injecter la classe `.rwd` ainsi que la meta `name=\"viewport\"` pour la version [Responsive Web Design] dans la page délivrée.\n\n   ```html\n<!DOCTYPE html>\n<html lang=\"en\" class=\"rwd\">\n    <head>\n        <!-- Title, Meta, etc. -->\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\">\n    </head>\n    <!-- Body -->\n</html>\n```\n\n- de ne pas le faire pour la version Desktop\n\n   ```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <!-- Title, Meta, etc. -->\n    </head>\n    <!-- Body -->\n</html>\n```\n\n\n\n### Exemple live ###\n\n> **<a href=\"http://blog.haeresis.fr/examples/desktop-support/desktop-first_mobile-and-desktop-version.html\" target=\"_blank\">Vous pouvez tester ici un exemple de site inter-changeable entre version Desktop et version Mobile (Responsive) avec la technique Desktop First.</a>**\n\n> - Si vous venez d'un grand écran, pensez à rétrécir la fenêtre de votre navigateur pour faire apparaître en pied de page le lien de la version non Responsive.\n> - Si vous venez d'un(e) mobile/tablette, cliquez juste sur le lien de pied de page.\n\n> *[Le code source est là](http://codepen.io/Haeresis/pen/aBmIj)*\n\n\n\n### Recharger la meta viewport sans recharger la page ##\n\nComme votre structure HTML et CSS est identique quelque soit la version, vous n'êtes pas obligé de rafraîchir le navigateur pour passer d'une version à l'autre. L'astuce pour forcer les appareils à prendre en compte les modifications de la `<meta name=\"viewport\">` est, plutôt que de la mettre et la retirer, de la laisser en permanence et simplement remplir (ou non) son attribut `content`. Voici un exemple de code jQuery :\n\n```js\n$(\"a.ask-for-display-desktop\").click(function (e) {\n    e.preventDefault();\n    $(\"html\")\n        .removeClass(\"rwd\");\n    $(\"meta[name=viewport]\").attr('content','');\n    $.ajax(/* prévenez le Back-end que le site sera dorénavant affiché en Desktop */);\n});\n$(\"a.ask-for-display-responsive\").click(function (e) {\n    e.preventDefault();\n    $(\"html\")\n        .addClass(\"rwd\");\n    $(\"meta[name=viewport]\").attr('content','width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no');\n    $.ajax(/* prévenez le Back-end que le site sera dorénavant affiché en Mobile */);\n});\n```\n\navec dans votre fichier html :\n\n```html\n<!-- ... -->\n<a class=\"display-desktop\" href=\"desktop-first_desktop-version.html\">Afficher version Bureau</a>\n<!-- ... -->\n<a class=\"display-responsive\" href=\"desktop-first_mobile-version.html\">Afficher version Mobile/Tablette</a>\n<!-- ... -->\n```\n\n\n\n\n\n## En [Mobile First] ##\n\nSi en [Desktop First] cela se révèle être un jeu d'enfant, il en est tout autrement pour le [Mobile First]. Effectivement, cette aproche fait qu'en réalité, notre site ne possède pas « réellement » de version Desktop mais seulement un affichage le plus large possible. Il n'a donc initialement pas été convenu d'une version Desktop dont l'utilité est cette fois plus discutable qu'en [Desktop First].\n\nVoyons en quoi cela pause problème avec ces 4 fichiers :\n\n**Fichier common-xs.css**\n\n```css\n/* Fichier pour mobile */\nbody {\n    width: auto;\n}\n```\n\n**Fichier common-sm.css**\n\n```css\n/* Fichier pour grand mobile ou petite tablette */\n@media (min-width: 768px) {\n    body {\n        width: 768px;\n    }\n}\n```\n\n**Fichier common-md.css**\n\n```css\n/* Fichier pour grande tablette ou petit écran */\n@media (min-width: 992px) {\n    body {\n        width: 992px;\n    }\n}\n```\n\n**Fichier common-lg.css**\n\n```css\n/* Fichier pour grand écrann */\n@media (min-width: 1200px) {\n    body {\n        width: 1200px;\n    }\n}\n```\n\nComprenez bien que si en [Desktop First], ce qui se trouve dans la partie `@media (max-width: 1023px)` est interprété sur écran mobiles/tablettes (et inhibé sans `.rwd` pour afficher la version Desktop) ; ici jamais les instructions du fichier `common-lg.css` censés s'occuper de l'affichage Desktop ne seront interprétés sur un périphérique plus petit que 1200px. Donc quoi qu'il arrive : il ne peut exister de version Desktop affichable sur mobile/tablette.\n\nVoyons tout de même deux types d'implémentations [Mobile First] qui pallie à ce problème.\n\n\n\n### Implémentation en plusieurs fichiers ###\n\nLes 4 fichiers précédents peuvent être appelés de manière minifiés par 4 balises comme suit :\n\n```html\n<!-- ... -->\n<head>\n    <!-- ... -->\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\">\n    <link rel=\"stylesheet\" href=\"common-xs.css\" media=\"screen\">\n    <link rel=\"stylesheet\" href=\"common-sm.css\" media=\"screen and (min-width: 768px)\">\n    <link rel=\"stylesheet\" href=\"common-md.css\" media=\"screen and (min-width: 992px)\">\n    <link rel=\"stylesheet\" href=\"common-lg.css\" media=\"screen and (min-width: 1200px)\">\n    <!-- ... -->\n</head>\n<!-- ... -->\n```\n\n- _Avantage_ : chargement priorisé,\n\n  - si je réclame la page sur grand écran, on arrête le traitement de la page HTML le temps de charger les 4 fichiers mais,\n  - si je réclame la page sur mobile, on arrête le traitement de la page HTML le temps de charger le premier fichier, la page est alors rendu complètement, puis les 3 autres fichiers sont chargés à la fin. Si l'écran est un peu plus grand que 768px alors ce seront les 2 premiers fichiers puis les deux autres à la fin, etc.\n\n- _Inconvénient_ : plus de requêtes HTTP.\n\nPour que cette configuration fonctionne, il faut dans un premier temps retirer les Media Queries des fichiers CSS eux-mêmes. Cela n'impacte en rien le rendu puisque les Media Queries sont gérées au niveau de la page HTML dans la propriété `media` :\n\n```css\n/* Fichier pour mobile */\nbody {\n    width: auto;\n}\n```\n\n**Fichier common-sm.css**\n\n```css\n/* Fichier pour grand mobile ou petite tablette */\nbody {\n    width: 768px;\n}\n```\n\n**Fichier common-md.css**\n\n```css\n/* Fichier pour grande tablette ou petit écran */\nbody {\n    width: 992px;\n}\n```\n\n**Fichier common-lg.css**\n\n```css\n/* Fichier pour grand écrann */\nbody {\n    width: 1200px;\n}\n```\n\nÀ présent quand le site est réclamé en version Desktop via un lien spécifique il faut : \n\n- ne pas injecter les Media Queries dans l'attribut `media` des balises `link` de la page délivrée et de retirer la `<meta name=\"viewport\">`\n\n   ```html\n<!-- ... -->\n<head>\n    <!-- ... -->\n    <link rel=\"stylesheet\" href=\"common-xs.css\" media=\"screen\">\n    <link rel=\"stylesheet\" href=\"common-sm.css\" media=\"screen\">\n    <link rel=\"stylesheet\" href=\"common-md.css\" media=\"screen\">\n    <link rel=\"stylesheet\" href=\"common-lg.css\" media=\"screen\">\n    <!-- ... -->\n</head>\n<!-- ... -->\n```\n\n\n\n### Implémentation en un seul fichier ###\n\nPour reproduire une équivalence du [Mobile First] en respectant l'ordre d'appel des propriétés CSS (de l'affichage le plus petit au plus grand) tout en permettant un fonctionnement comme dans la partie [Desktop First] de cet article il va falloir :\n\n1. Rassembler les éléments en un seul fichier.\n\n   ```css\n/* Fichier pour mobile */\nbody {\n    width: auto;\n}\n/* Fichier pour grand mobile ou petite tablette */\n@media (min-width: 768px) {\n    body {\n        width: 768px;\n    }\n}\n/* Fichier pour grande tablette ou petit écran */\n@media (min-width: 992px) {\n    body {\n        width: 992px;\n    }\n}\n/* Fichier pour grand écrann */\n@media (min-width: 1200px) {\n    body {\n        width: 1200px;\n    }\n}\n```\n\n2. Empiler les sections par pallier maximal avec Media Queries et traiter les propriétés de la partie large Desktop sans Media Queries :\n\n   ```css\n/* Fichier pour mobile */\n@media (max-width: 767px) {\n    body {\n        width: auto;\n    }\n}\n/* Fichier pour grand mobile ou petite tablette */\n@media (max-width: 991px) {\n    body {\n        width: 768px;\n    }\n}\n/* Fichier pour grande tablette ou petit écran */\n@media (max-width: 1199px) {\n    body {\n        width: 992px;\n    }\n}\n/* Fichier pour grand écrann */\nbody {\n    width: 1200px;\n}\n```\n\n3. Et intégrer une classe `.rwd` que l'on va placer dans `<html class=\"rwd\">` sur chacune des propriétés dans les Media Queries :\n\n   ```css\n/* Fichier pour mobile */\n@media (max-width: 767px) {\n    .rwd body {\n        width: auto;\n    }\n}\n/* Fichier pour grand mobile ou petite tablette */\n@media (max-width: 991px) {\n    .rwd body {\n        width: 768px;\n    }\n}\n/* Fichier pour grande tablette ou petit écran */\n@media (max-width: 1199px) {\n    .rwd body {\n        width: 992px;\n    }\n}\n/* Fichier pour grand écrann */\nbody {\n    width: 1200px;\n}\n```\n\nÀ présent il suffit du côté Back-end :\n\n- d'injecter la classe `.rwd` ainsi que la meta `name=\"viewport\"` pour la version [Responsive Web Design] dans la page délivrée.\n\n   ```html\n<!DOCTYPE html>\n<html lang=\"en\" class=\"rwd\">\n    <head>\n        <!-- Title, Meta, etc. -->\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\">\n    </head>\n    <!-- Body -->\n</html>\n```\n\n- de ne pas le faire pour la version Desktop\n\n   ```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <!-- Title, Meta, etc. -->\n    </head>\n    <!-- Body -->\n</html>\n```\n\n\n\n\n\n## Scénario de cas d'utilisation ##\n\n**[Dans cet exemple](http://blog.haeresis.fr/examples/desktop-support/desktop-first_mobile-and-desktop-version.html)**, l'utilisateur n'a pas accès aux trois zones vertes « Step » en pied de la zone « Article » s'il visite le site sur mobile.\n\nC'est un utilisateur qui va quasiment toujours sur le site sur son PC de bureau. Cependant, quand il se rend sur son site préféré depuis son mobile afin justement d'aller consulter les informations dans ces zones « Step », il ne les trouve pas. Il aurait juré qu'elles étaient là sur son PC, mais là, il ne voit rien. De plus, avant la version mobile n'existait pas.\n\nC'est ennuyant car sont mobile à un très bon écran et gère le zoom à merveille. Alors il va cocher le paramètre proposé par son navigateur mobile qui s'appelle « Voir version ordinateur » mais rien... toujours pas de « Step », pourquoi diable ne peut-il pas afficher cette @!#$? de version Desktop !\n\n**Le problème de notre utilisateur est résolu grâce a cet article car, comme bon nombre de sites qui on une version Desktop et une version Mobile dédiée, il y a heureusement un lien « Afficher version bureau » ! Ce que notre utilisateur ne sait pas, c'est que ça version Desktop est au « .rwd » prêt la même page !**\n\n  [Responsive Web Design]: ./les-concepts-autour-du-responsive-web-design/\n  [Mobile First]: ./les-concepts-autour-du-responsive-web-design/#mobile-first\n  [Desktop First]: ./les-concepts-autour-du-responsive-web-design/#desktop-first\n\n\n\n\n\n## Et côté serveur ? ##\n\nNous avons vu comment gérer côté client l'affichage « Responsive Web Design » ou « Desktop ». Nous allons voir un exemple permettant côté serveur de maintenir la version que le client réclame. Pour cela nous allons faire appel à un cookie de session. En PHP par exemple, cela reviendrait à stocker la version d'affichage dans la variable `$_SESSION` afin de connaître la version d'affichage demandé par l'utilisateur. Il nous reste ensuite a :\n- Tester la valeur de la session pour savoir s'il faut mettre la classe `rwd` sur la balise `html` et\n- Créer une méthode AJAX permettant de mettre à jour la valeur de la session auprès du serveur si l'utilisateur demande un changement.\n\n### Exemple Node.js avec NodeAtlas ###\n\nIci, nous traitons exclusivement du HTML, CSS ou JavaScript, aussi je vous propose un petit exemple en [Node.js](https://nodejs.org/en/) avec le framework [NodeAtlas](https://node-atlas.js.org/).\n\nNous allons donc utiliser la valeur `request.session` qui représente le cookie de session et faire des échanges client-serveur avec des Websockets.\n\n> La source de cette exemple est [disponible sur ce dépôt Github](https://github.com/NodeAtlas/TestAtlas/tree/master/session).\n\n**Installer NodeAtlas**\n\n```bash\nnpm install -g node-atlas\n```\n\n**Créer l'arborescence**\n\n```\n├─ controllers/\n│ └─ index.htm\n├─ views/\n│ └─ index.htm\n└─ webconfig.json\n```\n\n**Contenu des fichiers**\n\n*views/index.htm*\n\n```htm\n<!DOCTYPE html>\n\t<html lang=\"en\"<?- (designVersion) ? ' class=\"' + designVersion + '\"': \"\" ?>>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Version Mobile/Desktop</title>\n\t\t<style>\n\t\t\t/* Je suis la version desktop */\n\t\t\tbody {\n\t\t\t\tbackground-color: red;\n\t\t\t}\n\t\t\t.responsive {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t.desktop {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\n\t\t\t/* Je suis la version responsive web design */\n\t\t\t.rwd body {\n\t\t\t\tbackground-color: blue;\n\t\t\t}\n\t\t\t.rwd .responsive {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t\t.rwd .desktop {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<p>Je suis la version \n\t\t<span class=\"responsive\">Responsive Web Design</span>\n\t\t<span class=\"desktop\">Desktop</span></p>\n\t\t<button>Changer de version</button>\n\t</body>\n\t<script src=\"socket.io/socket.io.js\"></script>\n\t<script src=\"node-atlas/socket.io.js\"></script>\n\t<script>\n\t\t/* Si on clique sur le bouton. */\n\t\tdocument.getElementsByTagName(\"button\")[0].addEventListener(\"click\", function () {\n\t\t\tvar html = document.getElementsByTagName(\"html\")[0];\n\n\t\t\t/* on prévient le serveur pour « maintenir » cet état pour toutes les pages. */\n\t\t\tNA.socket.emit(\"change-version\", {\n\t\t\t\tdesignVersion: html.getAttribute(\"class\")\n\t\t\t});\n\n\t\t\t/* et on change la version de la page courante. */\n\t\t\thtml.classList.toggle(\"rwd\");\n\t\t});\n\t</script>\n</html>\n```\n\n*controllers/index.htm*\n\n```js\nexports.changeVariations = function (next, locals, request) {\n\n\t// On affecte au valeur utilisable dans la view `designVersion`.\n\t// Par défaut on est en RWD.\n\tlocals.designVersion = (request.session.designVersion !== undefined) ? request.session.designVersion : \"rwd\";\n\n    next();\n};\n\nexports.setSockets = function () {\n\tvar NA = this,\n\t\tio = NA.io;\n\n\t// Dès qu'on a un lien valide entre le client et notre serveur...\n    io.sockets.on(\"connection\", function (socket) {\n\n        // ...rester à l'écoute de la demande « change-version »...\n        socket.on(\"change-version\", function (data) {\n            var session = socket.request.session;\n\n            // Si data vaut \"rwd\" (existe)...\n            if (data.designVersion) {\n            \t// on le passe à rien\n            \tsession.designVersion = \"\";\n            } else {\n            \t// sinon on le passe à \"rwd\"\n            \tsession.designVersion = \"rwd\";\n            }\n\n            // On sauvegarde le nouvel état de session.\n            session.touch().save();\n        });\n    });\n};\n```\n\n*webconfig.json*\n\n```json\n{\n\t\"routes\": {\n\t\t\"/\": {\n\t\t\t\"view\": \"index.htm\",\n\t\t\t\"controller\": \"index.js\"\n\t\t}\n\t}\n}\n```\n\n**Lancer le site**\n\n```bash\nnode-atlas --browse\n```", "dates" : { "published" : { "$date" : 1412764980000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Conserver un affichage Desktop sur mobile avec une version Responsive Web Design", "urn" : "conserver-une-version-desktop-avec-une-version-mobile-sur-le-meme-site-web" }
{ "__v" : 0, "_id" : { "$oid" : "54369e88ac53204337fa2e0c" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48ca" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "53746e72eb856da96ba3f8a3" }, { "$oid" : "5310456355dfd5f7698d48ba" } ], "content" : "Afin d'apporter un cadre à l'équipe et parce que créer nos propres UI Kit n'est pas à l'ordre du jour, nous avons pris le partie d'utiliser Bootstrap 3 [non sans chagrin](./bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite/).\n\nL'idée finale derrière cette utilisation est de pouvoir créer facilement des composants et de pouvoir les déplacer n'importe ou dans un layout ou dans un composant lui-même.\n\n[Après avoir défendu l'idée que je n'avais pas besoin d'un quelconque Framework pour réaliser cela](./grille-css-responsive-et-semantique-sans-framework/), je me suis atteler à Bootstrap.\n\nLes remarques n'ont pas tardées à tomber sur la manière d'intégrer tout cela :\n\n- « Ça ne sert à rien de mettre un “.col-xs-12” ici, ça revient au même de ne rien mettre »,\n- « Pourquoi il n'y a pas un seul “.container” pour gérer toute la page comme dans [la source de cette page](http://getbootstrap.com/examples/offcanvas/) »,\n- « Il ne faut pas mettre les “.container”  dans les composants mais à l'extérieur sinon en mettant les composants dans des petites colonnes on va dépasser la largeur de la grille. Regarde [la source de cette page](http://getbootstrap.com/examples/offcanvas/) »,\n- « T'as pas besoin de “.container” pour utiliser des “.row” », etc.\n\nLe constat est clair, l'utilisation de Bootstrap pour réaliser des pages en imbriquant des composants est une chose, mais le faire correctement en est une autre !\n\nSuivez le guide pour comprendre les guidelines que doivent suivre tout composant pour être « Drag and Droppable » n'importe où !\n\n\n\n\n\n## Repérer des équivalences ##\n\nLa première chose va être de lister ce que représente réellement chaque classe :\n\n- `<div>` => 100% de la largeur\n- `<div class=\"container-fluid\">` => 100% de la largeur + paddings positifs (+15)\n- `<div class=\"container\">` => largeur de grille + paddings positifs (+15)\n- `<div class=\"row\">` => 100% de la largeur + margins négatives (-15)\n- `<div class=\"col-xs-12\">` => 100% de la largeur + paddings positifs (+15)\n- `<div class=\"col-xx-YY\">` => ZZ% de la largeur + paddings positifs (+15)\n\nOn s'aperçoit alors très vite que :\n\n1. `<div>` et `<div class=\"col-xs-12\">`, ce n'est pas pareil.\n2. `.container-fluid` et `.col-xs-12` sont la même chose.\n3. `.container` et `.col-xs-12` sont la même chose à la seule différence que .container à une largeur fixée.\n4. `.row` a forcément besoin d'un `.container`, c'est juste que si vous n'en voyez pas au dessus, c'est peut-être parce que celui-ci s'appelle `.col-xs-12` (ou n'importe quelle déclinaison `<div class=\"col-xx-YY\">`).\n5. `.container-fluid/.container/.col-xs-12/.col-xx-YY` sont l’opposé de `.row` (paddings positifs est annulé par margins négatifs).\n\n[On peut également aller plus loin en permettant à `.container` d'avoir une taille maximale fixée plutôt qu'une taille fixée](./gerer-sa-cascade-de-grille-et-de-composant-avec-bootstrap/#grille-bootstrap-non-fixe-mais-limite-max).\n\n\n\n\n\n## Être composant orienté ##\n\n### Plusieurs Container ###\n\nSi je sais d'avance ce qui va composer ma grille principale et ce qui va composer mes sous-grilles alors effectivement, je n'ai besoin que d'un seul `.container` pour englober ma page.\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <title>Static</title>\n    </head>\n    <body>\n        <div class=\"container\">\n            <div class=\"jumbotron\">\n                <h1>Title</h1>\n            </div>\n            <div class=\"panel\">\n                <h1>Carousel</h1>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-sm-8\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple A</h2>\n                                <p>Exemple A</p>\n                                <p>Exemple A</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple B</h2>\n                                <p>Exemple B</p>\n                                <p>Exemple B</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple C</h2>\n                                <p>Exemple C</p>\n                                <p>Exemple C</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple D</h2>\n                                <p>Exemple D</p>\n                                <p>Exemple D</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple E</h2>\n                                <p>Exemple E</p>\n                                <p>Exemple E</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple F</h2>\n                                <p>Exemple F</p>\n                                <p>Exemple F</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple G</h2>\n                                <p>Exemple G</p>\n                                <p>Exemple G</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-4\">\n                    <nav class=\"panel\">\n                        <ul>\n                            <li><a href=\"javascript:;\">Link A</a></li>\n                            <li><a href=\"javascript:;\">Link B</a></li>\n                            <li><a href=\"javascript:;\">Link C</a></li>\n                            <li><a href=\"javascript:;\">Link D</a></li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    </body>\n</html>\n```\n\n> [Voir le rendu ici](http://codepen.io/Haeresis/pen/Cxhkb)\n\n**Problème**\n\n- Si je souhaite que mon carrousel prenne toute la largeur de la page, je suis bloqué dans mon `.container`. Résolvons ça dans le point suivant.\n\n**Solution**\n\nPour permettre à mon carrousel de prendre toute la largeur, je vais donc éviter le `.container` global mais plutôt utiliser un `.container` ou un `.container-fluid` en fonction de mes besoins.\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <title>Multiple container</title>\n    </head>\n    <body>\n        <div class=\"container\">\n            <div class=\"jumbotron\">\n                <h1>Title</h1>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <div class=\"panel\">\n                <h1>Carousel</h1>\n            </div>\n        </div>\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-sm-8\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple A</h2>\n                                <p>Exemple A</p>\n                                <p>Exemple A</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple B</h2>\n                                <p>Exemple B</p>\n                                <p>Exemple B</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"component-text panel\">\n                                <h2>Exemple C</h2>\n                                <p>Exemple C</p>\n                                <p>Exemple C</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple D</h2>\n                                <p>Exemple D</p>\n                                <p>Exemple D</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple E</h2>\n                                <p>Exemple E</p>\n                                <p>Exemple E</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple F</h2>\n                                <p>Exemple F</p>\n                                <p>Exemple F</p>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <div class=\"panel\">\n                                <h2>Exemple G</h2>\n                                <p>Exemple G</p>\n                                <p>Exemple G</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-4\">\n                    <nav class=\"panel\">\n                        <ul>\n                            <li><a href=\"javascript:;\">Link A</a></li>\n                            <li><a href=\"javascript:;\">Link B</a></li>\n                            <li><a href=\"javascript:;\">Link C</a></li>\n                            <li><a href=\"javascript:;\">Link D</a></li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        </div>\n    </body>\n</html>\n```\n\n> [Voir le rendu ici](http://codepen.io/Haeresis/pen/yIgib)\n\n\n\n### Approche « Layouts / Components » ###\n\nPour permettre l'interversion de tous les composants dans toutes les zones de la page il va toujours falloir les plugger dans des zones d’atterrissage identique.\n\nComme `.container-fluid/.container/.col-xs-12/.col-xx-YY` sont la même chose au niveau des paddings positif, il faut découper les composants entre ces zones pour les rendre interchangeable.\n\nPar conséquent un **composant** atterrira toujours dans une zones à paddings positif et donc ne contiendra jamais en premier lieu une balise enfant avec un `.container-fluid/.container/.col-xs-12/.col-xx-YY`.\n\n*Composant Jumbotron*\n\n```html\n<div class=\"component jumbotron\">\n    <div class=\"jumbotron\">\n        <h1>Title</h1>\n    </div>\n</div>\n```\n\n*Composant Carousel*\n\n```html\n<div class=\"component carousel\">\n    <div class=\"panel\">\n        <h1>Carousel</h1>\n    </div>\n</div>\n```\n\n*Composant Menu*\n\n```html\n<nav class=\"component menu\">\n    <div class=\"panel\">\n        <ul>\n            <li><a href=\"javascript:;\">Link A</a></li>\n            <li><a href=\"javascript:;\">Link B</a></li>\n            <li><a href=\"javascript:;\">Link C</a></li>\n            <li><a href=\"javascript:;\">Link D</a></li>\n        </ul>\n    </div>\n</nav>\n```\n\n*Composant Texte*\n\n```html\n<div class=\"component text\">\n    <div class=\"panel\">\n        <h2>Exemple A</h2>\n        <p>Exemple A</p>\n        <p>Exemple A</p>\n    </div>\n</div>\n```\n\nCependant un **composant** peut commencer par une `.row` pour annuler le padding de sa zone d'arrivée, en vu d'injecter plusieurs `.col-xx-YY`.\n\n*Composant Texte et Image à Droite*\n\n```html\n<div class=\"component text right image\">\n    <div class=\"panel\">\n        <div class=\"row\">\n            <div class=\"col-xs-8\">\n                <h2>Exemple B</h2>\n                <p>Exemple B</p>\n            </div>\n            <div class=\"col-xs-4\">\n                <img class=\"img-responsive\" src=\"\" alt=\"\">\n            </div>\n        </div>\n    </div>\n</div>\n```\n\nAprès le découpage précédent qui a donné naissance à des composants, où est passé la carcasse et les zones d'atterrissage ? C'est ce qui constitue le **layout**. Nos composants précédents peuvent être indépendamment placer dans ce layout : \n\n*Layout A*\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <title>Layout A</title>\n    </head>\n    <body>\n        <div class=\"container\">\n            <!-- include component -->\n        </div>\n        <div class=\"container-fluid\">\n            <!-- include component -->\n        </div>\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-sm-8\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\">\n                            <!-- include component -->\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <!-- include component -->\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <!-- include component -->\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <!-- include component -->\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <!-- include component -->\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <!-- include component -->\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <!-- include component -->\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-4\">\n                    <!-- include component -->    \n                </div>\n            </div>\n        </div>\n    </body>\n</html>\n```\n\nou pourquoi pas celui là :\n\n*Layout B*\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <title>Layout B</title>\n    </head>\n    <body>\n        <div class=\"container\">\n            <!-- include component -->\n        </div>\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <!-- include component -->\n                </div>\n                <div class=\"col-sm-6\">\n                    <!-- include component -->    \n                </div>\n            </div>\n        </div>\n        <div class=\"container\">\n            <!-- include component -->\n        </div>\n    </body>\n</html>\n```\n\n> [Voir le rendu B ici](http://codepen.io/Haeresis/pen/clifo)\n\nou n'importe quel autre layout !\n\n\n\n### Approche « Full Components » ###\n\nCette approche part du postulat que vous n'avez aucun layout et que tout n'est que composant de composant ! Dans cette approche le découpage va être sensiblement différent et c'est bien les composants eux-mêmes qui vont embarquer les `.container` en tout premier lieux.\n\nÀ noter également que les zones d’atterrissage de composant ne devrons cette fois jamais avoir de padding et donc toujours être précédé d'un `.row`.\n\nIl y a également 2 composants spéciaux qui sont le header et le footer qui contiennent les injections CSS et JavaScript ainsi que les meta données.\n\n#### Grille Bootstrap non fixe mais à limite max ####\n\nAvant tout, pour que cela fonctionne il va falloir transformer les tailles fixes des `.containers` de Bootstrap en tailles maximales.\n\nAjoutez soit cela à la suite de l'appel du fichier Bootstrap :\n\n```css\n@media (min-width: 768px) {\n  .container {\n    width: auto;\n    max-width: 750px;\n  }\n}\n@media (min-width: 992px) {\n  .container {\n    width: auto;\n    max-width: 970px;\n  }\n}\n@media (min-width: 1200px) {\n  .container {\n    width: auto;\n    max-width: 1170px;\n  }\n}\n```\n\nou remplacez dans le fichier d'origine Bootstrap les 3 `width` précédentes en `max-width`.\n\nCela fera que `.container` deviendra :\n\n- ~~`<div class=\"container\">` => largeur de grille + paddings positifs (+15)~~\n- `<div class=\"container\">` => 100% de la largeur + paddings positifs (+15) + limite max de grille\n\net pourra être inclus lui-même dans un `.container` sans poser de problème.\n\n#### Composants ####\n\nRevoyons le découpage de nos précédents composants :\n\n*Composant Jumbotron*\n\n```html\n<div class=\"component jumbotron\">\n    <div class=\"container\">\n        <div class=\"jumbotron\">\n            <h1>Title</h1>\n        </div>   \n    </div>\n</div>\n```\n\n*Composant Carousel*\n\n```html\n<div class=\"component carousel\">\n    <div class=\"container-fluid\">\n        <div class=\"panel\">\n            <h1>Carousel</h1>\n        </div>\n    </div>\n</div>\n```\n\n*Composant Menu*\n\n```html\n<nav class=\"component menu\">\n    <div class=\"container\">\n        <div class=\"panel\">\n            <ul>\n                <li><a href=\"javascript:;\">Link A</a></li>\n                <li><a href=\"javascript:;\">Link B</a></li>\n                <li><a href=\"javascript:;\">Link C</a></li>\n                <li><a href=\"javascript:;\">Link D</a></li>\n            </ul>\n        </div>\n    </div>\n</nav>\n```\n\n*Composant Texte*\n\n```html\n<div class=\"component text\">\n    <div class=\"container\">\n        <div class=\"panel\">\n            <h2>Exemple A</h2>\n            <p>Exemple A</p>\n            <p>Exemple A</p>\n        </div>\n    </div>\n</div>\n```\n\n*Composant Texte et Image à Droite*\n\n```html\n<div class=\"component text right image\">\n    <div class=\"container\">\n        <div class=\"panel\">\n            <div class=\"row\">\n                <div class=\"col-xs-8\">\n                    <h2>Exemple B</h2>\n                    <p>Exemple B</p>\n                </div>\n                <div class=\"col-xs-4\">\n                    <img class=\"img-responsive\" src=\"\" alt=\"\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n```\n\nNous voyons qu'a présent se sont les composants eux-mêmes qui embarquent leur comportement maximum. Ajoutons maintenant un composant embarquant des composants.\n\n*Composant Liste à 3 Colonnes*\n\n```html\n<div class=\"component list three colums\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <!-- start for -->\n            <div class=\"col-sm-4\">\n                <div class=\"row\">\n                    <!-- include component[i] -->\n                </div>\n            </div>\n            <!-- end for -->\n        </div>\n    </div>\n</div>\n```\n\n*Composant 2 Tiers 1 Tiers*\n\n```html\n<div class=\"component grid2-1\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-8\">\n                <div class=\"row\">\n                    <!-- include component[0] -->\n                </div>\n            </div>\n            <div class=\"col-sm-4\">\n                <div class=\"row\">\n                    <!-- include component[1] -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n```\n\n*Composant Liste à 2 Colonnes*\n\n```html\n<div class=\"component list two colums\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <!-- start for -->\n            <div class=\"col-sm-6\">\n                <div class=\"row\">\n                    <!-- include component[i] -->\n                </div>\n            </div>\n            <!-- end for -->\n        </div>\n    </div>\n</div>\n```\n\nFinissons avec nos 2 composants spéciaux.\n\n*Composant Header*\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <title>Multiple container</title>\n    </head>\n    <body>\n```\n\n*Composant Footer*\n\n```html\n    </body>\n</html>\n```\n\n#### Pages ####\n\nIl ne nous reste plus, avec un unique moteur comme par exemple [NodeAtlas](https://www.lesieur.name/node-atlas/), à appeler à chaque affichage de page avec une configuration `.json` par exemple.\n\n*Moteur Lamba*\n\n```html\n<!-- start for -->\n<!-- include component[i] -->\n<!-- end for -->\n```\n\n*Équivalent Layout A*\n\n```javascript\n[\n    { \"header\": [] },\n    { \"jumbotron\": [] },\n    { \"carousel\": [] },\n    { \"grid2-1\": [\n        { \"list-three-columns\": [\n            { \"text\": [] },\n            { \"text\": [] },\n            { \"text\": [] },\n            { \"text\": [] },\n            { \"text\": [] },\n            { \"text\": [] },\n            { \"text\": [] }\n        ] },\n        { \"menu\": [] }\n    ] },\n    { \"footer\" }\n]\n```\n\n*Équivalent Layout B*\n\n```javascript\n[\n    { \"header\": [] },\n    { \"jumbotron\": [] },\n    { \"list-two-columns\": [\n        { \"menu\": [] },\n    \t{ \"text-image-right\": [] }\n    ] },\n    { \"carousel\": [] },\n    { \"footer\" }\n]\n```\n\n> [Voir le rendu B ici](http://codepen.io/Haeresis/pen/FlDip)\n\n## Pour aller plus loin ##\n\nEnfin qui dit découpe par composant dans le HTML dit découpe des CSS et JS dans le même sens. Vous pouvez par exemple enregistrer tout ce qui à trait au composant `carousel` dans `component.carousel.js` et `component.carousel.css` et l'injecter dans un bundle spécifique à la page avec les autres composants qui ne sont appelés qu'ici ou dans un bundle commun à toutes les pages. Des Framework comme [NodeAtlas s'occupe pour vous comme des grands de vos bundles](http://haeresis.github.io/NodeAtlas/#minifier-les-cssjs).\n\nVous pouvez également [organiser votre découpe du JavaScript par composant en vous inspirant de ces exemples](https://blog.lesieur.name/structurer-le-javascript-de-son-site-avec-ou-sans-framework/#segmentation).\n\nEt pour finir, même si je n'en ai pas parlé ici, il est évident que le contenu des composants doit être mappé à une source transversale de données indépendamment du composant en lui-même en fonction de la page ou du layout [comme peut le faire NodeAtlas](http://haeresis.github.io/NodeAtlas/#g%C3%A9rer-des-variations-au-sein-dun-m%C3%AAme-template).", "dates" : { "published" : { "$date" : 1412951820000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Gérer sa cascade de grille et de composant avec Bootstrap", "urn" : "gerer-sa-cascade-de-grille-et-de-composant-avec-bootstrap" }
{ "__v" : 0, "_id" : { "$oid" : "544017beac53204337fa2e0d" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "5310456355dfd5f7698d48b6" }, { "$oid" : "53746e72eb856da96ba3f8a3" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48bd" } ], "content" : "Voilà les petites bases qu'il faut rapidement se mettre en tête à propos de la différence entre les marges externes ou margins et marges internes ou paddings :\n\n- Les margins d'un élément HTML se superposent avec les margins de leur voisin, avec les margins de leur parents, avec les margins des enfants des voisins, etc. Puisqu'elles se trouvent à l'extérieur des borders, elles ne sont pas affectées par les backgrounds.\n\n- Les paddings d'un élément HTML s'additionnent ou se cumulent avec les paddings de leur voisins, avec les paddings de leur parents, avec les paddings des enfants des voisins etc. Puisqu'elles se trouvent à l'intérieur de border, elles sont affectées par les backgrounds.\n\nDeux trois autres chose rapide sont à savoir : comme le fait qu'un élément inline ne gère pas les paddings ou qu'un margin négatif déplace les éléments contrairement au padding négatif qui ne fait rien, etc.\n\nMais saviez-vous que : **Si les éléments deviennent flottants en continuant de prendre toute la largeur... les marges externes se comportent comme les marges internes !**\n\n\n\n\n\n## Guide pour constater le problème ##\n\n### Petite architecture de test ###\n\nNous allons tester ce HTML :\n\n```html\n<p>1. p voisin haut</p>\n<p>1. p voisin bas</p>\n<p>2. p voisin de div haut</p>\n<div>\n  <p>2. p haut enfant de div et entre deux p</p>\n  <p>2. p bas enfant de div et entre deux p</p>\n</div>\n<p>2. p voisin de div bas</p>\n<div>\n  <p>3. p enfant de div qui est voisin haut</p>\n</div>\n<div>\n  <p>3. p enfant de div qui est voisin bas</p>\n</div>\n```\n\navec des marges externes ou margins :\n\n```css\n* {\n  margin: 0;\n  padding: 0;\n}\np {\n  margin: 10px 0;\n}\ndiv {\n  margin: 10px 0;\n  background-color: #d9d9ff;\n}\n```\n\navec des marges internes ou paddings :\n\n```css\n* {\n  margin: 0;\n  padding: 0;\n}\np {\n  padding: 10px 0;\n}\ndiv {\n  padding: 10px 0;\n  background-color: #d9d9ff;\n}\n```\n\net avec des margins et des floats :\n\n```css\n* {\n  margin: 0;\n  padding: 0;\n}\np {\n  margin: 10px 0;\n  width: 100%;\n  float: left;\n}\ndiv {\n  margin: 10px 0;\n  background-color: #d9d9ff;\n  width: 100%;\n  float: left;\n}\n```\n\n\n\n### Test live ! ###\n\nPar défaut dans notre exemple, tous les div et p ont les margings et paddings à 0. Vous êtes en mode margin par défaut sans que rien ne flotte. Les p ont un fond transparent mais les div ont un fond violet. Vous pouvez appréhender l'architecture HTML de cette exemple juste au dessus.\n\n#### Constater la superposition des Margins ###\n\nEn passant votre souris sur les éléments, vous pouvez constater la superposition des margins (marges externes). Les p sont oranges, les div sont violettes foncées, et la superposition fait apparaître du marron. Si vous cochez les checkboxs, vous maintiendrez l'effet même en enlevant votre souris. La première case représente le p, la seconde la div.\n\n<div class=\"example\">\n<p data-height=\"300\" data-theme-id=\"0\" data-slug-hash=\"jKvmh\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'>See the Pen <a href='http://codepen.io/Haeresis/pen/jKvmh/'>Behavior of Margin is equals to behavior of Padding with Float</a> by Bruno Lesieur (<a href='http://codepen.io/Haeresis'>@Haeresis</a>) on <a href='http://codepen.io'>CodePen</a>.</p>\n</div>\n\n\n#### Constater l'addition des Paddings ###\n\nAvec le menu en haut à droite, « Basculer en mode padding » en cliquant, et constatez que les marges internes s'additionnent. N'hésitez pas à cocher les cases pour maintenir l'effet.\n\n<div class=\"example\">\n<p data-height=\"300\" data-theme-id=\"0\" data-slug-hash=\"jKvmh\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'>See the Pen <a href='http://codepen.io/Haeresis/pen/jKvmh/'>Behavior of Margin is equals to behavior of Padding with Float</a> by Bruno Lesieur (<a href='http://codepen.io/Haeresis'>@Haeresis</a>) on <a href='http://codepen.io'>CodePen</a>.</p>\n</div>\n\n\n#### Les Margins se comportent comme des Paddings sur les éléments en Float ###\n\nMaintenant « Activez les flottants » tout en restant en « Mode Margin » et, ô surprise, nos margins se comportent maintenant comme des paddings ! Les margins ne se superpose plus mais s'additionne. Et pourtant bien des marges externes.\n\n<div class=\"example\">\n<p data-height=\"300\" data-theme-id=\"0\" data-slug-hash=\"jKvmh\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'>See the Pen <a href='http://codepen.io/Haeresis/pen/jKvmh/'>Behavior of Margin is equals to behavior of Padding with Float</a> by Bruno Lesieur (<a href='http://codepen.io/Haeresis'>@Haeresis</a>) on <a href='http://codepen.io'>CodePen</a>.</p>\n</div>\n\n\n#### Les Backgrounds ne sont pas affectés ###\n\nAvec les flottants actif, et avec le menu en haut à gauche, alternativement, « Basculer en mode padding » et « Basculez en mode margin » pour remarquer que le background rouge associé aux div borde les enfants dans un cas, et englobe le padding dans l'autre.\n\n<div class=\"example\">\n<p data-height=\"300\" data-theme-id=\"0\" data-slug-hash=\"jKvmh\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'>See the Pen <a href='http://codepen.io/Haeresis/pen/jKvmh/'>Behavior of Margin is equals to behavior of Padding with Float</a> by Bruno Lesieur (<a href='http://codepen.io/Haeresis'>@Haeresis</a>) on <a href='http://codepen.io'>CodePen</a>.</p>\n</div>\n\n\n\n\n## Petite discussion Bootstrap ##\n\nPour en venir à Bootstrap et sa grille, vous vous êtes peut-être déjà fait la réflexion suivante ou quelqu'un vous la faites :\n\n« Il ne sert à rien d'écrire : » \n\n```html\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-xs-12\">\n            <h1>Ceci est le titre</h1>\n        </div>\n        <div class=\"col-xs-12\">\n            <h2>Ceci est le sous-titre</h2>\n        </div>\n    </div>\n</div>\n```\n\n« il faut plutôt écrire : » \n\n```html\n<div class=\"container\">\n    <h1>Ceci est le titre</h1>\n    <h2>Ceci est le sous-titre</h2>\n</div>\n```\n\n« C'est là même chose. »\n\nEt bien avec ce billet, sachez que, puisque `.col-xs-12` et toutes ses déclinaisons sont des flottants, dans le premier cas les marges externes vont se superposer, alors que dans le second cas elles vont s'additionner.\n\nAinsi si sur certaine page censée être identique vous devez juste ajouter en regard du titre un lien pour filtrer les résultats de page :\n\n ```html\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <h1>Ceci est le titre</h1>\n        </div>\n       <div class=\"col-sm-6 text-right\">\n            <a href=\"\">Filtrer les résultats</a>\n        </div>\n        <div class=\"col-xs-12\">\n            <h2>Ceci est le sous-titre</h2>\n        </div>\n    </div>\n</div>\n```\n\navec le premier cas cité il n'y aura aucun changement si ce n'est l'ajout du lien alors qu'avec le second cas cité, le titre sera plus espacé du sous-titre sur les pages avec filtre et moins espacé sur les pages sans filtre.\n\nLa praticité de Bootstrap nous met malheureusement face à [une abstraction qui fuie](http://french.joelonsoftware.com/Articles/LeakyAbstractions.html) !\n\n<script async src=\"//codepen.io/assets/embed/ei.js\"></script>\n\n\n\n\n\n\n", "dates" : { "published" : { "$date" : 1413542160000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : ".example {\n   margin: 10px 0;\n}", "title" : "Les Margins se comportent comme des Paddings avec les grilles Bootstrap", "urn" : "les-margins-se-comportent-comme-des-paddings-avec-bootstrap" }
{ "__v" : 0, "_id" : { "$oid" : "544a4724ac53204337fa2e0e" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48c7" }, { "$oid" : "5310456355dfd5f7698d48c8" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5810c54a889f9b4bb0ece04f" }, { "$oid" : "5810c7ceac1a7558f33a3acc" }, { "$oid" : "582b22f1fa290e086423e837" } ], "content" : "*[NodeAtlas]* est une application multi-os écrite en [Node.js] qui va vous permettre de créer, modifier et maintenir tout un ensemble de maquette HTML. Ces maquettes HTML pourront ensuite être validées par le client, et ré-utilisées totalement ou en partie par les développeurs Back-end quelque soit leurs technologies. Ces maquettes HTML pourront également servir de site stand-alone fonctionnant sans serveur ou avec un simple serveur HTTP pour créer des documentations [JSDoc](http://usejsdoc.org/) ou autre comme pour [GitHub] par exemple. C'est ce que nous allons voir dans cet article.\n\nMais *[NodeAtlas]* permet également de faire tourner des sites web complet, performant et rapide tel que le site sur lequel vous être entrain de lire cet article.\n\n> *[NodeAtlas]* est designé pour :\n- [Les débutants en JavaScript qui souhaitent se mettre au Node.js rapidement](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/).\n- **Les experts Front-end, en leur permettant de créer des sites web ou des maquettes HTML de qualité**.\n- Les experts en développement web et/ou JavaScript en leur permettant de créer des sites web et applications JavaScript à hautes performances serveurs.\n\n[NodeAtlas]: https://www.npmjs.com/package/node-atlas/ \"Create MVC2 or Front-end-based websites easily.\"\n[Node.js]: http://nodejs.org/ \"Node.js is a platform built on Chrome's JavaScript runtime easily building fast, scalable network applications.\"\n[GitHub]: https://github.com/ \"GitHub is where people build software. More than 15 million people use GitHub to discover, fork, and contribute to over 38 million projects.\"\n\n\n\n\n\n## Pourquoi ? ##\n\n1. Remplacer le travail initialement fait avec des wireframes par une création en HTML avec l'aide de CSS de wireframing ou de bootstraping. Plus besoin de créer un ama de documents de wireframe, et le travail est directement prêt pour l'étape de design. Vous pouvez ensuite soumettre vos « Wireframes Live » au client.\n2. Remplacer le travail initialement fait avec Photoshop directement à partir de l'étape de wireframing avec des CSS pour le design et diverses images. Plus besoin de transférer des amas de PSD ; tout est mutualisé et la moindre partie n'est pas dupliquée. Vous pouvez ensuite soumettre vos maquettes au client. Le design est intégrable pour l'étape suivante puisqu'il tourne déjà.\n3. Pouvoir fournir à des Intégrateurs, qu'ils travail avec PHP, Java, .NET, Ruby, Node.js etc. des assets HTML directement exploitables et intégrables. Ils pourront ré-utiliser des morceaux de code, voir la totalité des maquettes dans le site qui va être créé.\n4. Transformer ces maquettes HTML à destination des Back-end directement en site web qui tournera avec [Node.js] sous le module *[NodeAtlas]* qui, en plus de créer des maquettes, fait tourner des sites web.\n\n\n\n\n\n## Installer et prendre en main NodeAtlas ##\n\nVous pouvez vous familiariser avec les bases de la création de *Vue* et de *Route* grâce à l'article « [Des sites web Node.js pour les débutants en JavaScript avec NodeAtlas](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/) » afin de mieux appréhender cet article.\n\nPour la suite de ce billet, nous allons travailler sur un exemple concret : le site de présentation de *[NodeAtlas](https://node-atlas.js.org/)* ! Ce site est hébergé sur un espace mis en place par [GitHub] capable de faire tourner des pages HTML simples. Nous allons donc ici voir :\n\n- comment maintenir plusieurs pages HTML de documentation sans redondance de code et générer son site « serverless »,\n- comment créer ses pages avec comme source d'origine le [README.md](https://github.com/Haeresis/NodeAtlas/blob/gh-pages/v1.x/README.fr.md) du projet,\n- comment créer une architecture HTML/CSS/JS Vanilla en s'appuyant sur [des conventions de nommage établies](https://blog.lesieur.name/conventions-html-css-js-et-architecture-front-end/),\n- comment compresser la totalité du contenu pour des performances optimales côté client.\n\n\n\n\n\n## Générer des maquettes à partir de pages lives ##\n\nLe but de la manœuvre va être le suivant : nous allons créer un site web qui tourne en `localhost` le temps du développement. Une fois que celui-ci nous conviendra, nous utiliserons la commande `--generate` du CLI *[NodeAtlas]* afin de créer tout le panel de page HTML correspondant initialement au site que nous avons développé. Ses pages seront consultables sans serveur ou avec n'importe quel serveur HTTP simple (Pas de node.exe, pas de php.exe, etc.).\n\n### Structure initiale du site ###\n\nComme toujours, tout débute avec le fichier `webconfig.json` dans votre projet de travail que nous allons ici nommer `nodeatlas-website`.\n\nCe fichier va donc être ajouté avec d'autres fichiers de démarrage à l'architecture suivante :\n\n```\ndist/\nnodeatlas-website/\n├─ views/\n│  ├─ content.htm\n│  └─ partials/\n│     ├─ content.htm\n│     ├─ head.htm\n│     ├─ header.htm\n│     └─ foot.htm\n├─ variations/\n│  └─ common.json\n└─ webconfig.json\n```\n\nVous remarquerez également la présence du dossier `dist` pour « distribution » au même niveau. C'est là que nos maquettes seront générées.\n\nNous allons exposer ci-après le contenu du site avec la configuration suivante :\n\n**webconfig.json**\n\n```json\n{\n    \"languageCode\": \"fr\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"htmlGenerationBeforeResponse\": true,\n    \"routes\": {\n        \"/index.html\": \"content.htm\"\n    }\n}\n```\n\net les vues suivantes :\n\n**views/partials/head.htm**\n\n```html\n<!DOCTYPE html>\n<!-- `languageCode` renvoi \"fr\" dans notre cas. -->\n<html lang=\"<?= languageCode ?>\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>NodeAtlas</title>\n\n        <!-- `urlBasePath` renvoi \"http://localhost\" dans notre cas quand un serveur tourne. -->\n        <!-- `urlBasePath` renvoi `` dans une page générée à la racine, il renvoit `..` pour un fichier généré dans un sous, `../..` pour un sous-sous-dossier, etc. -->\n        <base href=\"<?= urlBasePath ?>/\" />\n\n        <meta name=\"description\" content=\"NodeAtlas est un Framework JavaScript MVC(2) côté serveur.\" />\n        <meta name=\"geo.placename\" content=\"Annecy, Haute-Savoie, France\" />\n\n        <meta name=\"robots\" content=\"index, follow\" />\n\n        <!--[if IE]><meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /><![endif]-->\n        <!--[if !IE]><!--><meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /><!--<![endif]-->\n    </head>\n    <body>\n        <div class=\"layout\">\n            <noscript class=\"no-js cmpt\">\n                <div class=\"no-js--inner\">\n                    <p>Le JavaScript n'est pas activé.</p>\n                </div>\n            </noscript>\n```\n\n**views/partials/header.htm**\n\n```html\n            <header class=\"header cmpt\">\n                <div class=\"header--inner\">\n                    <div class=\"header--title\">\n                        <h1>NodeAtlas</h1>\n                    </div>\n                </div>\n            </header>\n```\n\n**views/partials/content.htm**\n\n```html\n            <article class=\"content cmpt\">\n                <div class=\"content--inner\">\n                    <?- common.content ?>\n                </div>\n            </article>\n```\n\n**views/partials/foot.htm**\n\n```html\n        </div>\n    </body>\n</html>\n```\n\n**views/content.htm**\n\n```html\n<?- include(\"partials/head.htm\") ?>\n<?- include(\"partials/header.htm\") ?>\n<?- include(\"partials/content.htm\") ?>\n<?- include(\"partials/foot.htm\") ?>\n```\n\nalimentés par le fichier de variation commun suivant :\n\n**variations/common.json**\n\n```js\n{\n    \"content\": \"Contenu pour la documentation.\"\n}\n```\n\nEn installant *[NodeAtlas]* en mode global avec la commande `npm install -g node-atlas`, nous pouvons l'utiliser en temps que CLI à la ligne de commande. C'est ce que nous allons faire dans cet article.\n\nLançons donc notre site qui pour le moment ne contient qu'une page à l'adresse : `http://localhost/index.html`. En ouvrant un invité de commande depuis le dossier `nodeatlas-website` (Ctrl + Shitf + Clique droit dans une zone vide de l'explorateur), tapez la commande suivante :\n\n```\n> node-atlas --browse index.html\n```\n\nNotre page affiche donc « Contenu pour la documentation. » à l'adresse `http://localhost/index.html`.\n\n\n\n### Génération de maquettes ###\n\nVous remarquerez dans votre console que le message « HTML : The file « <location-of-project>\\dist\\index.html » was generated ! ». Si vous vous rendez dans le dossier `dist`, vous remarquerez qu'un fichier `index.html` vous y attend. Si vous l'ouvrez depuis votre gestionnaire de fichier, vous remarquerez que le fichier tourne sans serveur web (dans mon cas avec Chrome, et mon OS, l'adresse est `file:///C:/nodejs/example/dist/index.html`).\n\nCela est possible grâce aux paramètres de webconfig `serverlessRelativePath` avec `../dist/` pour informer *[NodeAtlas]* de l'endroit où les maquettes seront générées et `htmlGenerationBeforeResponse` pour que la génération se fasse après chaque consultation de page sur `localhost`.\n\nIl est possible de ne pas générer la « distribution » page par page après chaque consultation mais en une seule fois avec une seule commande. Commencez par couper votre instance en coupant le site (Ctrl + C dans l'invité de commande) puis supprimez l'intégralité du contenu de `dist`.\n\nLancez alors la commande :\n\n```\n> node-atlas --generate\n```\n\net vous pourrez de nouveau consulter une page `index.html` dans le dossier `dist`.\n\n\n\n### Alimenter dynamiquement le webconfig ###\n\nEn fait, *[NodeAtlas]* n'utilise pas les valeurs de route du `webconfig.json` tel quel mais construit une copie de celui-ci pour tourner. Cela signifie que l'on peut ajouter dynamiquement des routes depuis la partie contrôleur avant le lancement du serveur. Nous allons donc dans un premier temps, ajouter un contrôleur commun `common.json` à notre configuration et en profiter pour mettre en place « l'index des maquettes » ; très utile quand on créé des maquettes avec *[NodeAtlas]*,\n\n```\n{\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"htmlGenerationBeforeResponse\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\"\n        }\n    }\n}\n```\n\net ajouter ce fichier à notre arborescence :\n\n```\n...\nnodeatlas-website/\n┊┉\n├─ controllers/\n│  └─ common.js\n┊┉\n```\n\navec le contenu suivant :\n\n```js\n// On se connecte a NodeAtlas au moment ou celui-ci configure les routes.\nexports.setRoutes = function (next) {\n\n    // On récupère l'instance de NodeAtlas en cours.\n    var NA = this,\n\n        // Et nous récupérons les routes en provenance du webconfig...\n        route = NA.webconfig.routes;\n\n    // ...pour ajouter la route \"/content.html\" à la liste de nos routes.\n    route[\"/content.html\"] = \"content.htm\";\n\n    // On redonne la main à NodeAtlas pour la suite.\n    next(); \n};\n```\n\nIl ne nous reste plus qu'à tester cela avec la commande suivante :\n\n```\n> node-atlas --browse\n```\n\nVous arriverez sur la page « Index of Webconfig's Routes » mise en place. Vous pourrez accéder d'ici aux pages `http://localhost/index.html` ou `http://localhost/content.html` avec le contenu « Contenu pour la documentation. ». Vous constaterez également leurs présence dans le dossier `dist`, toujours grâce à `htmlGenerationBeforeResponse`.\n\n\n\n### Injecter le contenu d'un fichier externe ###\n\nNous allons à présent injecter le contenu du [README.md](https://github.com/Haeresis/NodeAtlas/blob/gh-pages/v1.x/README.fr.md) de *[NodeAtlas]* que vous [pouvez télécharger ici](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.fr.md). Ce contenu est initialement rédigé en *[Markdown](https://fr.wikipedia.org/wiki/Markdown)* or nous le voulons en « Hyper-Text **Markup** Language ». Nous allons donc utiliser également un module npm additionel, le module `marked` pour transformer le contenu du [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.fr.md) en HTML.\n\nNous obtenons donc le nouveau fichier dans l'arborescence :\n\n```\n...\nnode-atlas-website/\n┊┉\n├─ README.md\n┊┉\n```\n\nPour ajouter `marked` à notre environnement, utilisez un invité de commande et lancez la commande :\n\n```\n> npm install -g marked\n```\n\ncela nous permet de ne pas piéger le module dans le projet. Une autre solution serait de créer un `package.json` et de lister tous les modules utilisés par ce projet, mais nous verrons cela dans le prochain billet.\n\nModifions à présent le fichier `controllers/common.js` comme suit :\n\n**controllers/common.js**\n\n```js\n// On se place au niveau du chargement des modules NodeAtlas, et on ajoute le notre.\nexports.setModules = function () {\n\n    // On récupère l'instance de NodeAtlas en cours.\n    var NA = this;\n\n    // On ajoute le module `marked`. Il va être cherché\n    // dans le dossier `node_modules` local (qui n'existe pas)\n    // puis finalement cherché dans les modules installés de manière\n    // globale (-g) et le trouver. Il va être chargé.\n    NA.modules.marked = require(\"marked\");\n};\n\nexports.setRoutes = function (next) {\n    var NA = this,\n        route = NA.webconfig.routes;\n\n    route[\"/content.html\"] = \"content.htm\";\n\n    next(); \n};\n\n// On se place au niveau de la création de la Response HTTP suite à la Request HTTP d'une route.\n// Cette partie sera exécutée quelque soit la route demandée car elle est dans le fichier commun.\nexports.changeVariations = function (next, locals) {\n\n    // On récupère l'instance de NodeAtlas en cours.\n    var NA = this,\n\n        // On récupère le module interne `fs` qui va nous permettre de lire des fichiers.\n        fs = NA.modules.fs,\n\n        // On récupère le module externe `marked` que l'on va utiliser depuis le moteur NodeAtlas.\n        marked = NA.modules.marked;\n\n    // On récupère le contenu de `README.md` en `utf-8`. \n    // Celui-ci sera dans la variable `content`.\n    fs.readFile(\"README.md\", \"utf-8\", function (err, content) {\n        // En cas d'erreur...\n        if (err) {\n            // ...on passe tout de suite au chargement de la page,\n            // sans le contenu du fichier.\n            return next();\n        }\n\n        // On récupère les variations compilées spécifiquement pour une route, \n        // demandée par une requête. C'est pour cela qu'elles proviennent du\n        // paramètre `locals` et non de l'objet `NA`.\n        locals\n\n            // On surcharge la valeur de `content` en provenance du fichier `variations/common.json`\n            // par celle de la variable `content` en retour de la lecture du fichier. On transforme\n            // son contenu de `Markdown` à `HTML`.\n            .common.content = marked(content);\n\n        // On redonne la main à NodeAtlas pour la suite en passant les modifications.\n        next();\n    });\n};\n```\n\nEn coupant le site (Ctrl + C dans l'invité de commande) et en le lançant de nouveau avec :\n\n```\n> node-atlas --browse\n```\n\n*Note : si le message `Error: Cannot find module 'marked'` apparaît, c'est que la variable `NODE_PATH` n'est pas configurée sur votre environnement. C'est elle qui explique où trouver les modules globaux. Dans ce cas, sur Windows, faites un clique droit sur « Ce PC » ou (« Ordinateur ») dans l'Explorateur de fichier et allez dans « Propriétés » puis dans « Paramètres système avancés » puis dans « Variables d'environnement... » puis dans « Variable utilisateur pour... » puis cliquez sur « Nouvelle... ». Ajoutez `NODE_PATH` dans « Nom de la variable » et `%USERPROFILE%\\AppData\\Roaming\\npm\\node_modules` dans « Valeur de la variable ». Cliquez sur « Ok » pour fermer chaque fenêtre. Fermez votre invité de commande et r'ouvrez s'en un. Tout devrait être en ordre.*\n\nVous serez à même de lire le README.md à l'adresse `http://localhost/index.html` ou à l'adresse `http://localhost/content.html` (et dans le dossier `dist`).\n\n> `setModules`, `setRoutes` et `changeVariations`\n\n> Vous aurez remarqué que ces trois fonctions ne fonctionnent pas exactement de la même manière. La première est simple, la seconde nécéssite l'appel de la callback `next` et la dernière en plus, doit passer à cette callback la variable `variations`. Nous allons expliquer trois concepts associés à leurs utilisation :\n\n> - `setModules` intervient au niveau du chargement des modules de NodeAtlas. Le module NodeAtlas est récupérable via `this` dans cette fonction. `this` est lié au moteur et toute modification de celui-ci dans un `exports` est répercuté dans le moteur. Cela signifie qu'en ajoutant des modules, ils se retrouvent utilisable aux autres endroit à travers tout le moteur. Puisque cette zone est dédiée uniquement à charger les `require`, et que les `require` se chargent de manière **synchrone**, on sait que le moteur ne reprend pas la main avant que tout soit chargé. Il n'y a pas de nécéssité de callback donc.\n\n> - `setRoutes` intervient juste avant le chargement des routes, mais quand le moteur est complètement opérationnel. La nature de ce qu'on va faire ici fait que les actions peuvent être **asynchrone**s. Il est donc important d'attendre le retour des fonctions asynchrones avant de rendre la main au moteur et démarrer le serveur. Pour être sur que, par exemple, toutes les routes ont bien finies d'être chargées avant la suite du processus, on glisse la fonction `next` dans le retour de la fonction asynchrone.\n\n> - `changeVariations` intervient à chaque fois que le client fait une requête au serveur NodeAtlas, durant la création de la réponse juste avant la phase de compilation des vues. Comme le contenu de `params` (et donc `params.variations`) est unique à chaque réponse, il ne peut pas être placé dans le `this` (qui représente ici, toujours le moteur NodeAtlas global) sinon les valeurs s'écraseraient les unes les autres à chaque requête concurrante : c'est pour cela qu'il est passé en premier paramètre. Une fois les modifications faites, il est nécessaire de les ré-injecter dans le moteur en premier paramètre de la callback `next`.\n\n> *Note : en réalité, le premier paramètre de la callback `next` est optionnel pour `changeVariations` car `params.variations` est un objet passé par référence mais obligatoire pour `changeDom` car `params.dom` est une string passé en tant que variable.*\n\n\n\n### Créer des fragments de contenu à partir du README.md ###\n\nBien sur, il n'y a pas d'utilité à ajouter la page `http://localhost/content.html` car elle est actuellement identique à la `http://localhost/index.html`. \n\nCe que nous allons faire : c'est créer un ensemble de pages générées à partir du [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.fr.md) directement dans des fichiers accessibles côté Front et côté Back. Nous allons décider que chaque `<h2>` et ce qui le suit sera le contenu d'un fichier. Et chaque fichier sera injecté dans la vue `views/content.htm` pour créer une page derrière une route dynamiquement. Voyons plutôt.\n\nLes fragments HTML seront donc créer dans `assets/content/`.\n\n```\n...\nnodeatlas-website/\n┊┉\n├─ assets/\n│  └─ content/\n┊┉\n```\n\nDans un premier temps, nous allons lire le [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.fr.md) avant que le serveur soit lancé pour créer les fichiers nécessaires puis les ajouter à la liste des routes.\n\n**controllers/common.js**\n\n```js\nexports.setModules = function () {\n    var NA = this;\n    NA.modules.marked = require(\"marked\");\n};\n\nexports.setRoutes = function (next) {\n    var NA = this,\n        fs = NA.modules.fs,\n\n        // On utilise de quoi manipuler le DOM côté serveur (jQuery-like).\n        cheerio = NA.modules.cheerio,\n        \n        // On permet de gérer une callback synchrone à la fin de\n        // plusieurs appels asynchrones (en parallèle).\n        async = NA.modules.async,\n        marked = NA.modules.marked,\n        route = NA.webconfig.routes;\n\n    fs.readFile(\"README.md\", \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        // On récupère la version HTML du README.md.\n        var dom = marked(content),\n\n            // On transforme la string Response en DOM.\n            $ = cheerio.load(dom, { decodeEntities: false }),\n\n            // On prépare la liste des actions asynchrones dans un tableau.\n            allRoutes = [];\n\n        // Pour chaque H2 dans la sortie du README.md.\n        $(\"h2\").each(function () {\n\n            // On récupère le titre.\n            var $title = $(this);\n            \n            // On ajoute au tableau les instructions...\n            allRoutes.push(function (nextRoute) {\n\n                // ...de créer un fichier, dont le nom est l'id généré par `marked`\n                // à partir du H2 et dont le contenu\n                // est les autres balises jusqu'au H2 suivant.\n                fs.writeFile(\"assets/content/\" + $title.attr(\"id\") + \".htm\", $title + $title.nextUntil(\"h2\"), function () {\n                    \n                    // On ajoute la route qui correspondra au chargement du fichier généré.\n                    route[\"/\" + $title.attr(\"id\") + \".html\"] = \"content.htm\";\n\n                    // Et on passe à la suite.\n                    nextRoute();\n                });\n            });\n        });\n\n        // On utilise async pour créer les fichiers de manière\n        // asynchrone, peu importe l'ordre de création. Mais quand\n        // tout est créé...\n        async.parallel(allRoutes, function() {\n\n            // ...on rend la main à NodeAtlas.\n            next();\n        });\n    });   \n};\n\nexports.changeVariations = function (next, locals) {\n    var NA = this,\n        fs = NA.modules.fs;\n\n    // Pour chaque route créée, on lit le fichier HTML généré correspondant...\n    fs.readFile(\"assets/content/\" + locals.route.replace(\".html\", \".htm\"), \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        // ... et on met son contenu dans la variable\n        // utilisée dans la vue.\n        locals.common.content = content;\n\n        next();\n    });\n};\n```\n\nEn coupant le site et en le lançant de nouveau avec :\n\n```\n> node-atlas --browse\n```\n\nVous pourrez voir la liste complète des pages sur l'index `http://localhost/` et constater qu'au fur et à mesure que vous consultez les autres pages, celles-ci apparaissent dans `dist`. Vous pourrez également remarquer que nos fragments sont bien tous présent dans le dossier `nodeatlas-website/assets/content/`.\n\nEn coupant le site et en lançant la commande :\n\n```\n> node-atlas --generate\n```\n\nvous remarquerez que non seulement la totalité des pages se retrouve dans le dossier `dist`, mais que en plus le dossier `content/` et tout son contenu a été copié également. Ce mécanisme permet d'automatiquement rapatrier les futurs fichiers publiques dans la « distribution » lors de la génération, en conservant la même arborescence de fichier.\n\n\n\n### Utilisation de contrôleurs spécifiques ###\n\nNous allons ensuite récupérer la table des matières pour la placer derrière le chemin `http://localhost/index.html`. Nous allons toujours travailler dans `changeVariations`, cependant le mécanisme de chargement sera différent en fonction qu'il soit injecté dans `views/index.htm` ou dans `views/content.htm`. C'est pourquoi nous allons créer deux contrôleurs spécifiques pour ses deux fichiers, et déplacer le contenu de `changeVariations` en provenance de `controllers/common.js` vers ces deux fichiers.\n\nNotre nouvelles arborescences est donc :\n\n```\ndist/\nnodeatlas-website/\n├─ assets/\n│  └─ content/\n├─ controllers/\n│  ├─ common.js\n│  ├─ content.js\n│  └─ index.js\n├─ views/\n│  ├─ content.htm\n│  └─ partials/\n│     ├─ content.htm\n│     ├─ head.htm\n│     ├─ header.htm\n│     └─ foot.htm\n├─ variations/\n│  └─ common.json\n├─ webconfig.json\n└─ README.md\n```\n\navec le webconfig suivant :\n\n```\n{\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    }\n}\n```\n\net avec les trois nouveaux fichiers suivant :\n\n**controllers/common.js**\n\n```js\nexports.setModules = function () {\n    var NA = this;\n\n    NA.modules.marked = require(\"marked\");\n};\n\nexports.setRoutes = function (next) {\n    var NA = this,\n        fs = NA.modules.fs,\n        cheerio = NA.modules.cheerio,\n        async = NA.modules.async,\n        marked = NA.modules.marked,\n        route = NA.webconfig.routes;\n\n    // On va ré-aligner la manière dont les ids sont générés.\n    // Cela va nous servir d'ancre/lien unique pour le nom des fichiers, des urls et des ids,\n    // ainsi il n'y aura pas de lien mort.\n    function toUrl(text) {\n        return text.toLowerCase().replace(/'| |\\(|\\)|\\/|\\!|\\?|,|\\&|\\;|\\[|\\]|\\%/g, \"-\").replace(/-+/g, \"-\").replace(/^-/g, \"\").replace(/-$/g, \"\");\n    }\n\n    fs.readFile(\"README.md\", \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        var dom = marked(content),\n            $ = cheerio.load(dom, { decodeEntities: false }),\n            allRoutes = [],\n\n            // On déclare la futur fonction de création du menu.\n            menu,\n\n            // On choisit la partie du `README.md` que l'on va utiliser comme page d'index.\n            key = \"table-des-matières\";\n\n        // On coordonnonne la manière dont les titres sont transformé en id...\n        $(\"h2, h3\").each(function () {\n            var $title = $(this);\n\n            // ...en changeant les deltas.\n            $title.attr(\"id\", toUrl($title.text()));\n        });\n\n        // On récupère la table des matières, \n        // et on l'enregistre à part dans un autre fichier.\n        $(\"h3[id=\" + key + \"]\").each(function () {\n            var $title = $(this),\n                $toc = $title.next();\n\n            // On transforme toutes les ancres H2 du menu...\n            $toc.find(\"> li\").each(function () {\n                var $sublink = $(this),\n                    $subtitle = $sublink.find(\"> a\"),\n\n                    // On transforme tous les titres...\n                    url = encodeURIComponent(toUrl($subtitle.text())) + \".html\";\n\n                // ...en liens correctes.\n                $subtitle.attr(\"href\", url);\n\n                // Et on réoriente toutes les ancres H3 du menu...\n                $sublink.find(\"> ul > li\").each(function () {\n                    var $sublink = $(this),\n                        $subtitle = $sublink.find(\"> a\");\n\n                    // ...vers les bonnes adresses avec une bonne ancre.\n                    $subtitle.attr(\"href\", url + \"#\" + encodeURIComponent(toUrl($subtitle.text())));\n\n                    // On efface l'entrée `table des matières` de la table des matières.\n                    if (toUrl($subtitle.text()) === key) {\n                        $sublink.remove();\n                    }\n                });\n            });\n\n            // On créer une fonction pour créer le fichier à part qui servira pour le menu global.\n            menu = function (next) {\n                fs.writeFile(\"assets/content/index.htm\", $title + $toc, function () {\n                    \n                    // On retire le menu de la source pour l'enregistrement ultérieur.\n                    $toc.remove();\n                    $title.remove();\n\n                    // On passera à la suite.\n                    next();\n                });\n            };\n\n        });\n\n        $(\"h2\").each(function () {\n            var $title = $(this);\n\n            allRoutes.push(function (nextRoute) {\n                fs.writeFile(\"assets/content/\" + encodeURIComponent($title.attr(\"id\")) + \".htm\", $title + $title.nextUntil(\"h2\"), function () {\n                    // On ajoute le contrôleur pour les pages dynamiques.\n                    route[\"/\" + encodeURIComponent($title.attr(\"id\")) + \".html\"] = {\n                        \"view\": \"content.htm\",\n                        \"controller\": \"content.js\"\n                    };\n\n                    nextRoute();\n                });\n            });\n        });\n\n        // On créer le fichier du menu...\n        menu(function () {  \n\n            // ...puis tous les autres fichiers dans le désordre...     \n            async.parallel(allRoutes, function() {\n\n                // ... puis on rend la main à NodeAtlas.\n                next();\n            });\n        });\n    });   \n};\n```\n\n**controllers/content.js**\n\n```js\nexports.changeVariations = function (next, locals) {\n    var NA = this,\n        fs = NA.modules.fs;\n\n    fs.readFile(\"assets/content/\" + locals.route.replace(\".html\", \".htm\"), \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        locals.common.content = content;\n        next();\n    });\n};\n```\n\n**controllers/index.js**\n\n```js\nexports.changeVariations = function (next, locals) {\n    var NA = this,\n        fs = NA.modules.fs;\n\n    // Avec pour le moment la différence que le fichier choisit\n    // est le fichier `index.htm`.\n    fs.readFile(\"assets/content/index.htm\", \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        locals.common.content = content;\n        next();\n    });\n};\n```\n\nVous constaterez alors après avoir complètement effacé le contenu de `dist` qu'avec l'utilisation, depuis `nodeatlas-website`, de :\n\n```\n> node-atlas --browse\n```\n\nNous retrouverons à l'index la totalité de la table des matières. Nous pourrons constater que la page qui contenait la table des matières (actuellement `http://localhost/avant-propos.html`) en est maintenant dépourvu.\n\nEn ce qui concerne le dossier `dist`, vous aurez peut-être remarqué que nous avons retiré du webconfig le paramètre `htmlGenerationBeforeResponse` ? C'est pourquoi plus rien n'y est généré. Cependant, avec l'ajout des paramètres `output` et `assetsCopy`, vous pouvez toujours couper le serveur web, lancer la commande,\n\n```\n> node-atlas --generate\n```\n\net constater que tous nos fichiers sont de retour !\n\n\n\n### Changer de page, sans rechargement ###\n\nVous vous êtes peut-être demandé pourquoi nous avons créé des fragments HTML dans des fichiers accessibles côté client (dossier `content/`) ? C'est pour pouvoir en injecter le contenu dynamiquement côté client avec des requêtes AJAX ! Grâce à la fonction `history.pushState`, nous allons changer l'url de la page courante et injecter son nouveau contenu sans rafraîchir la page. Cela signifie donc que :\n\n- Si un robot réclame une page, comme il ne navigue pas par l'interface du site et donc sans JavaScript, il la réclamera toujours avec une requête HTTP et recevra donc une réponse complète avec du HTML prêt à être indexé.\n- Si un visiteur réclame la page, le JavaScript prendra la main et les liens deviendront des actions permettant de rapatrier les fragments correspondant et de mettre à jour la page sans la recharger.\n\nBien sur qui dit demande AJAX dit qu'un simple serveur web devra héberger votre maquette (comme c'est le cas pour [GitHub]). Quand le site sera seulement consulté par le système de fichier, les pages se rechargeront simplement comme c'est le cas actuellement.\n\nPour réaliser cela nous allons ajouter un fichier JavaScript commun côté client :\n\n```\nnodeatlas-website/\n┊┉\n├─ assets/\n│  ┊┉\n│  ├─ javascripts/\n│  │  └─ common.js\n│  ┊┉\n┊┉\n```\n\npuis l'ajouter dans le pied de page de nos vues :\n\n**views/partials/foot.htm**\n\n```html\n            <!-- Injection du fichier en provenance de `assets/javascripts/common.js` -->\n            <script src=\"javascripts/common.js\"></script>\n        </div>\n    </body>\n</html>\n```\n\nNous allons également créer un menu global dans lequel nous allons catégoriser les pages crées depuis le [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.fr.md).\n\n**views/partials/navigation.htm**\n\n```html\n            <nav class=\"navigation cmpt\">\n                <div class=\"navigation--inner\">\n                    <div class=\"navigation--home\">\n                        <a href=\"index.html\" title=\"Accueil\">Accueil</a>\n                    </div>\n                    <div class=\"navigation--menu\">\n                        <ul>\n                            <li>\n                                <a href=\"avant-propos.html\">Présentation</a>\n                                <ul>\n                                    <li>\n                                        <a href=\"installation.html\">Installation</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"commencer-avec-nodeatlas.html\">Démarrage rapide</a>\n                                    </li>\n                                </ul>\n                            </li>\n                            <li>\n                                <a href=\"partie-view-et-template.html\">View et Template</a>\n                            </li>\n                            <li>\n                                <a href=\"partie-controller-et-model.html\">Controller et Model</a>\n                            </li>\n                            <li>\n                                <a href=\"pour-aller-plus-loin.html\">Route et Plus</a>\n                                <ul>\n                                    <li>\n                                        <a href=\"api-nodeatlas-comme-module-npm.html\">API</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"cli-commandes-de-lancement.html\">CLI</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"nodeatlas-comme-simple-serveur-web.html\">Simple Serveur</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"environnement-de-d%C3%A9veloppement.html\">Développement</a>\n                                    </li>\n                                    <li>\n                                        <a href=\"environnement-de-production.html\">Production</a>\n                                    </li>\n                                </ul>\n                            </li>\n                            <li>\n                                <a href=\"plus-sur-nodeatlas.html\">Et les autres ?</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n```\n\n**views/content.htm**\n\n```html\n<?- include(\"partials/head.htm\") ?>\n<?- include(\"partials/header.htm\") ?>\n\n<!-- Ajout de la navigation globale. -->\n<?- include(\"partials/navigation.htm\") ?>\n<?- include(\"partials/content.htm\") ?>\n<?- include(\"partials/foot.htm\") ?>\n```\n\nNous allons enfin ajouter le contenu du fichier JavaScript commun :\n\n**assets/javascripts/common.js**\n\n```js\n// On récupère tous les liens du menu.\nvar links = document.querySelectorAll(\".navigation a\"),\n\n    // On se créer une fonction « type » pour faire des appels AJAX\n    xhrRequest = function(url, next) {\n\n        // Création d'un objet d'appel AJAX.\n        var request = new XMLHttpRequest();\n\n        // Pour un appel en GET à l'url <url>.\n        request.open(\"GET\", url, true);\n\n        // Envoi de la requête\n        request.send();\n\n        // Si la requête atteind sa cible.\n        request.addEventListener(\"load\", function () {\n\n            // Si la réponse fournit est invalide...\n            if (request.status < 200 && request.status >= 400) {\n\n                // ...on retourne une erreur.\n                return next(new Error(\"We reached our target server, but it returned an error.\"));\n            }\n\n            // Sinon on renvoi la réponse à la callback.\n            next(null, request.responseText);\n        });\n\n        // Si la requête n'obtient pas de réponse ou une mauvaise réponse.\n        request.addEventListener(\"error\", function () {\n            return next(new Error(\"There was a connection error of some sort.\"));\n        });\n    };\n\n// Au chargement de la page, tous les liens du menu...\n[].forEach.call(links, function (link) {\n\n    // ...deviennent cliquable...\n    link.addEventListener(\"click\", function (e) {\n\n        // et basé sul l'adresse du lien, on récupère le nom du fichier.\n        var urn = link.getAttribute(\"href\").replace(\".html\", \"\");\n\n        // On empèche la page de suivre le lien initial.\n        e.preventDefault();\n\n        // On réclame le fragment nécéssaire à l'affichage de notre nouvelle page.\n        xhrRequest(\"content/\" + encodeURIComponent(urn) + \".htm\", function (err, response) {\n            if (err) {\n              return err;\n            }\n\n            // On ajoute une nouvelle page dans l'historique,\n            // et on s'y déplace (paramètre trois)\n            // en laissant l'urn comme information (premier paramètre)\n            // utilisable pour le retour en arrière.\n            history.pushState(urn, null, \"/\" + urn + \".html\");\n\n            // Et on injecte la response dans la page principale.\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n    });\n});\n\n// À chaque fois que l'on réclamera un retour en arrière (comme le bouton back du navigateur)\nwindow.addEventListener(\"popstate\", function (e) {\n\n    // On consultera l'url passée comme référence pour ramener ce contenu...\n    if (e.state) {\n\n        // ... en AJAX...\n        xhrRequest(\"content/\" + encodeURIComponent(e.state) + \".htm\", function (err, response) {\n            if (err) {\n              return err;\n            }\n\n            // et l'injecter dans la page principale.\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n\n    // Cependant s'il n'y a pas d'état,\n    // c'est que nous somme arrivé à la page \n    // d'origine et que l'on souhaite retourner sur le site\n    // qui avait précédé notre arrivé sur le site.\n    } else {\n        history.back();\n    }\n});\n```\n\nLancez le serveur :\n\n```\n> node-atlas --browse\n```\n\nVous constaterez alors en vous rendant à l'adresse `http://localhost/index.html` que naviguer à travers les pages via votre menu ne recharge plus la page et que, après avoir navigué à travers plusieurs page, le bouton « retour » vous ramène également aux pages précédentes sans rechargement. Vous pourrez réellement vous en assurez dans le panneau « Network » (F12) de votre navigateur en voyant que ce sont bien des requêtes « xhr ».\n\nNous allons maintenant générer la maquette :\n\n```\n> node-atlas --generate\n```\n\nEt en ouvrant le fichier `dist\\index.html` par votre système de fichier, vous vous rendrez compte que les pages ne changent plus. Dans votre console (F12) vous pourrez voir l'erreur suivante (sous Chrome) : « XMLHttpRequest cannot load <filepath>. ». Cela est normal car il faut un serveur web pour répondre aux requêtes AJAX.\n\nNous allons donc modifier le script pour qu'il ne génère pas d'erreur et aille sur la page souhaitée normalement (en rechargeant la page) si l'AJAX n'est pas géré.\n\n**assets/javascripts/common.js**\n\n```js\nvar links = document.querySelectorAll(\".navigation a\"),\n    xhrRequest = function(url, next) {\n        var request = new XMLHttpRequest();\n\n        // Vérifier que l'objet request peut envoyer une requête AJAX.\n        if (location.protocol !== \"file:\") {\n            request.open(\"GET\", url, true);\n            request.send();\n        } else {\n            return next(new Error(\"Impossible to use AJAX in file system mode.\"));\n        }\n\n        request.addEventListener(\"load\", function () {\n            if (request.status < 200 && request.status >= 400) {\n                return next(new Error(\"The server was reached, but with no correct response.\"));\n            }\n            next(null, request.responseText);\n        });\n\n        request.addEventListener(\"error\", function () {\n            return next(new Error(\"The server is unreachable.\"));\n        });\n    },\n\n    // Fonction utilisée si les requêtes AJAX ne fonctionnent pas.\n    xhrFallback = function (url) {\n        // On atteint l'url normalement.\n        location.href = encodeURIComponent(url) + \".html\";\n    };\n\n\n[].forEach.call(links, function (link) {\n    link.addEventListener(\"click\", function (e) {\n        var urn = link.getAttribute(\"href\").replace(\".html\", \"\");\n        e.preventDefault();\n        xhrRequest(\"content/\" + encodeURIComponent(urn) + \".htm\", function (err, response) {\n            if (err) {\n\n                // On stop la fonction.\n                return xhrFallback(urn);\n            }\n\n            history.pushState(urn, null, \"/\" + urn + \".html\");\n\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n    });\n});\n\nwindow.addEventListener(\"popstate\", function (e) {\n    if (e.state) {\n        xhrRequest(\"content/\" + encodeURIComponent(e.state) + \".htm\", function (err, response) {\n            if (err) {\n\n                // On stop la fonction.\n                return xhrFallback(e.state);\n            }\n\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n    } else {\n        history.back();\n    }\n});\n```\n\nÀ présent, en relançant la génération de la maquette, vous pourrez, même par le système de fichier, naviguer entre vos pages qui cette fois se chargeront totalement.\n\n\n\n### Simple Serveur Web ###\n\nSachez que *[NodeAtlas]* aussi sait faire tourner un simple serveur web pour tester vos maquettes en local tel qu'elles seront lues une fois sur un serveur (dans notre exemple, sur [GitHub]). Il vous suffit de vous positionner dans le dossier `dist/` et de lancer la commande :\n\n```\n> node-atlas --browse index.html\n```\n\nou (si le port 80 est déjà utilisé)\n\n\n```\n> node-atlas --browse index.html --httpPort 3000\n```\n\n\n\n### Génération multilingue ###\n\nNous allons à présent créer la version « internationale » de la documentation. Pour cela nous allons suivre les étapes suivantes :\n\n- Créer un webconfig spécifique à la version internationale.\n- Ramener le [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.en.md) international.\n- Mettre l'accès au [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.en.md)) dans une variable de webconfig.\n- Mettre les textes de l'applications dans le fichier de variation commun.\n\nIl va être question d'obtenir la version française du site dans `dist` et la version internationale dans le sous-répertoire `dist\\english` ce qui nécessite l'utilisation de la propriété de webconfig `urlRelativeSubPath`.\n\nNotre nouvelle arborescence va donc être la suivante pour `dist` :\n\n```\ndist/\n└─ english/\n```\n\net pour `nodeatlas-website`\n\n```\nnodeatlas-website/\n├─ assets/\n│  ├─ content/\n│  │  └─ english/\n│  └─ javascripts/\n│     └─ common.js\n├─ controllers/\n│  ├─ common.js\n│  ├─ content.js\n│  └─ index.js\n├─ views/\n│  ├─ content.htm\n│  └─ partials/\n│     ├─ content.htm\n│     ├─ head.htm\n│     ├─ navigation.htm\n│     ├─ header.htm\n│     └─ foot.htm\n├─ variations/\n│  ├─ common.json\n│  └─ en\n│     └─ common.json\n├─ webconfig.json\n├─ webconfig.en.json\n├─ README.md\n└─ README.en.md\n```\n\nCréez donc le nouveau dossier `assets/content/english/` pour accueillir les fragments AJAX de la version internationale.\n\nAvec notre nouveau `nodeatlas-website\\README.en.md` [récupérrable ici]([README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.en.md)) (changez le nom du fichier).\n\nNos deux webconfigs vont être les suivants,\n\npour la version française :\n\n**webconfig.json**\n\n```json\n{\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\net la version internationale :\n\n**webconfig.en.json**\n\n```json\n{\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nNous allons nous servir de `_readme`, `_toc`, et de `_content` dans le code, dans les fichiers suivant :\n\n**controllers/common.js**\n\n```js\nexports.setModules = function () {\n    var NA = this;\n\n    NA.modules.marked = require(\"marked\");\n};\n\nexports.setRoutes = function (next) {\n    var NA = this,\n        fs = NA.modules.fs,\n        cheerio = NA.modules.cheerio,\n        async = NA.modules.async,\n        marked = NA.modules.marked,\n        route = NA.webconfig.routes;\n\n    function toUrl(text) {\n        return text.toLowerCase().replace(/'| |\\(|\\)|\\/|\\!|\\?|,|\\&|\\;|\\[|\\]|\\%/g, \"-\").replace(/-+/g, \"-\").replace(/^-/g, \"\").replace(/-$/g, \"\");\n    }\n\n    // On remplace le « README.md » par sa valeur dans le webconfig.\n    fs.readFile(NA.webconfig._readme, \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        var dom = marked(content),\n            $ = cheerio.load(dom, { decodeEntities: false }),\n            allRoutes = [],\n            menu,\n\n            // On remplace « table des matières » par sa valeur dans le webconfig.\n            key = NA.webconfig._toc;\n\n        $(\"h2, h3\").each(function () {\n            var $title = $(this);\n\n            $title.attr(\"id\", toUrl($title.text()));\n        });\n\n        $(\"h3[id=\" + key + \"]\").each(function () {\n            var $title = $(this),\n                $toc = $title.next();\n\n            $toc.find(\"> li\").each(function () {\n                var $sublink = $(this),\n                    $subtitle = $sublink.find(\"> a\"),\n                    url = encodeURIComponent(toUrl($subtitle.text())) + \".html\";\n\n                $subtitle.attr(\"href\", url);\n\n                $sublink.find(\"> ul > li\").each(function () {\n                    var $sublink = $(this),\n                        $subtitle = $sublink.find(\"> a\");\n\n                    $subtitle.attr(\"href\", url + \"#\" + encodeURIComponent(toUrl($subtitle.text())));\n\n                    if (toUrl($subtitle.text()) === key) {\n                        $sublink.remove();\n                    }\n                });\n            });\n\n            menu = function (next) {\n\n                // On remplace « assets/content/ » par sa valeur dans le webconfig.\n                fs.writeFile(\"assets/\" + NA.webconfig._content + \"index.htm\", $title + $toc, function () {\n                    $toc.remove();\n                    $title.remove();\n\n                    next();\n                });\n            };\n\n        });\n\n        $(\"h2\").each(function () {\n            var $title = $(this);\n\n            allRoutes.push(function (nextRoute) {\n\n                // On remplace « assets/content/ » par sa valeur dans le webconfig.\n                fs.writeFile(\"assets/\" + NA.webconfig._content + encodeURIComponent($title.attr(\"id\")) + \".htm\", $title + $title.nextUntil(\"h2\"), function () {\n                    route[\"/\" + encodeURIComponent($title.attr(\"id\")) + \".html\"] = {\n                        \"view\": \"content.htm\",\n                        \"controller\": \"content.js\"\n                    };\n\n                    nextRoute();\n                });\n            });\n        });\n\n        menu(function () {     \n            async.parallel(allRoutes, function() {\n                next();\n            });\n        });\n    });   \n};\n```\n\n**controllers/content.js**\n\n```js\nexports.changeVariations = function (next, locals) {\n    var NA = this,\n        fs = NA.modules.fs;\n\n    // On remplace « assets/content/ » par sa valeur dans le webconfig.\n    fs.readFile(\"assets/\" + NA.webconfig._content + locals.route.replace(\".html\", \".htm\"), \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        locals.common.content = content;\n        next();\n    });\n};\n```\n\n**controllers/index.js**\n\n```js\nexports.changeVariations = function (next, locals) {\n    var NA = this,\n        fs = NA.modules.fs;\n\n    // On remplace « assets/content/ » par sa valeur dans le webconfig.\n    fs.readFile(\"assets/\" + NA.webconfig._content + \"index.htm\", \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        locals.common.content = content;\n        next();\n    });\n};\n```\n\npuis nous allons augmenter le fichier de variation original :\n\n**variations/common.json**\n\n```json\n{\n    \"title\": \"NodeAtlas\",\n    \"content\": \"Contenu pour la documentation.\",\n    \"noJs\": \"Le JavaScript n'est pas activé.\",\n    \"home\": {\n        \"title\": \"Accueil\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"English\",\n        \"url\": \"english/index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Présentation\",\n        \"url\": \"avant-propos.html\",\n        \"menu\": [{\n            \"title\": \"Installation\",\n            \"url\": \"installation.html\"\n        }, {\n            \"title\": \"Démarrage rapide\",\n            \"url\": \"commencer-avec-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View et Template\",\n        \"url\": \"partie-view-et-template.html\"\n    }, {\n        \"title\": \"Controller et Model\",\n        \"url\": \"partie-controller-et-model.html\"\n    }, {\n        \"title\": \"Route et Plus\",\n        \"url\": \"pour-aller-plus-loin.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-comme-module-npm.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-commandes-de-lancement.html\"\n        }, {\n            \"title\": \"Simple Serveur\",\n            \"url\": \"nodeatlas-comme-simple-serveur-web.html\"\n        }, {\n            \"title\": \"Développement\",\n            \"url\": \"environnement-de-d%C3%A9veloppement.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"environnement-de-production.html\"\n        }]\n    }, {\n        \"title\": \"Et les autres ?\",\n        \"url\": \"plus-sur-nodeatlas.html\"\n    }]\n}\n```\n\net créer sa version internationale :\n\n**variations/en/common.json**\n\n```json\n{\n    \"title\": \"NodeAtlas\",\n    \"content\": \"Content for documentation.\",\n    \"noJs\": \"No JavaScript enabled.\",\n    \"home\": {\n        \"title\": \"Home\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"Français\",\n        \"url\": \"../index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Overview\",\n        \"url\": \"overview.html\",\n        \"menu\": [{\n            \"title\": \"Installing\",\n            \"url\": \"installing.html\"\n        }, {\n            \"title\": \"Get Started\",\n            \"url\": \"start-with-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View and Template\",\n        \"url\": \"view-and-template-part.html\"\n    }, {\n        \"title\": \"Controller and Model\",\n        \"url\": \"controller-and-model-part.html\"\n    }, {\n        \"title\": \"Route and More\",\n        \"url\": \"more-features.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-as-npm-module.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-running-commands.html\"\n        }, {\n            \"title\": \"Simple Server\",\n            \"url\": \"nodeatlas-as-a-simple-web-server.html\"\n        }, {\n            \"title\": \"Development\",\n            \"url\": \"development-environment.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"production-environment.html\"\n        }]\n    }, {\n        \"title\": \"And others?\",\n        \"url\": \"more-about-nodeatlas.html\"\n    }]\n}\n```\n\npour pouvoir changer les fichiers de vue partielle suivants :\n\n**views/partials/head.htm**\n\n```html\n<!DOCTYPE html>\n<html lang=\"<?= languageCode ?>\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>NodeAtlas</title>\n\n        <base href=\"<?= urlBasePath ?>/\" />\n\n        <meta name=\"description\" content=\"NodeAtlas est un Framework JavaScript MVC(2) côté serveur.\" />\n        <meta name=\"geo.placename\" content=\"Annecy, Haute-Savoie, France\" />\n\n        <meta name=\"robots\" content=\"index, follow\" />\n\n        <!--[if IE]><meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /><![endif]-->\n        <!--[if !IE]><!--><meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /><!--<![endif]-->\n    </head>\n\n    <!-- On place dans `data-content` le chemin vers les fragments HTML. -->\n    <!-- On place dans `data-subpath` le chemin vers le sous répertoire de la version internationale. -->\n    <body data-content=\"<?= webconfig._content ?>\" data-subpath=\"<?= webconfig.urlRelativeSubPath ?>\">\n        <div class=\"layout\">\n            <noscript class=\"no-js cmpt\">\n                <div class=\"no-js--inner\">\n\n                    <!-- Le message annonçant l'activation du JS est multilangue. -->\n                    <p><?- common.noJs ?></p>\n                </div>\n            </noscript>\n```\n\n**views/partials/header.htm**\n\n```html\n            <header class=\"header cmpt\">\n                <div class=\"header--inner\">\n                    <div class=\"header--title\">\n\n                        <!-- Le titre du site. -->\n                        <h1><?- common.title ?></h1>\n                    </div>\n                </div>\n            </header>\n```\n\n**views/partials/navigation.htm**\n\n```html\n            <nav class=\"navigation cmpt\">\n                <div class=\"navigation--inner\">\n                    <div class=\"navigation--lang\">\n                        <a href=\"<?= common.lang.url ?>\" title=\"<?= common.lang.title ?>\"><?- common.lang.title ?></a>\n                    </div>\n                    <div class=\"navigation--home\">\n                        <a href=\"<?= common.home.url ?>\" title=\"<?= common.home.title ?>\"><?- common.home.title ?></a>\n                    </div>\n                    <div class=\"navigation--menu\">\n                        <ul>\n                            <? for (var i = 0; i < common.menu.length; i++) { ?>\n                            <li>\n                                <a href=\"<?= common.menu[i].url ?>\" title=\"<?= common.menu[i].title ?>\"><?- common.menu[i].title ?></a>\n                                <? if (common.menu[i].menu) { ?>\n                                <ul>\n                                    <? for (var j = 0; j < common.menu[i].menu.length; j++) { ?>\n                                    <li>\n                                        <a href=\"<?= common.menu[i].menu[j].url ?>\" title=\"<?= common.menu[i].menu[j].title ?>\"><?- common.menu[i].menu[j].title ?></a>\n                                    </li>\n                                    <? } ?>\n                                </ul>\n                                <? } ?>\n                            </li>\n                            <? } ?>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n```\n\nNous pouvons à présent grâce à `data-content` dans le `<body>` choisir les fragments français ou internationaux dans le JavaScript client grâce à la modification suivante :\n\n**assets/javascripts/common.js**\n\n```javascript\n// On retire le lien pour changer de version (.navigation--lang)\n// En sélectionnant que la home et le menu.\nvar links = document.querySelectorAll(\".navigation--home a, .navigation--menu a\"),\n\n    // On va chercher le chemin correcte jusqu'au fichier.\n    fragmentPath = document.body.getAttribute(\"data-content\"),\n\n    // On récupère le sous répertoire si celui-ci existe (version anglaise).\n    urlRelativeSubPath = document.body.getAttribute(\"data-subpath\"),\n    xhrRequest = function(url, next) {\n        var request = new XMLHttpRequest();\n\n        if (location.protocol !== \"file:\") {\n            request.open(\"GET\", url, true);\n            request.send();\n        } else {\n            return next(new Error(\"Impossible d'utiliser AJAX par simple ouverture de fichier.\"));\n        }\n\n        request.addEventListener(\"load\", function () {\n            if (request.status < 200 && request.status >= 400) {\n                return next(new Error(\"Le serveur a été atteind mais à renvoyé une erreur.\"));\n            }\n            next(null, request.responseText);\n        });\n\n        request.addEventListener(\"error\", function () {\n            return next(new Error(\"Le serveur n'a pas pu être atteind.\"));\n        });\n    },\n    xhrFallback = function (url) {\n        location.href = encodeURIComponent(url) + \".html\";\n    };\n\n\n[].forEach.call(links, function (link) {\n    link.addEventListener(\"click\", function (e) {\n        var urn = link.getAttribute(\"href\").replace(\".html\", \"\");\n        e.preventDefault();\n\n        // Et on injecte le chemin pour les liens.\n        xhrRequest(fragmentPath + encodeURIComponent(urn) + \".htm\", function (err, response) {\n            if (err) {\n                return xhrFallback(urn);\n            }\n\n            // Et on injecte le sous répertoire pour les liens.\n            history.pushState(urn, null, urlRelativeSubPath + \"/\" + urn + \".html\");\n\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n    });\n});\n\nwindow.addEventListener(\"popstate\", function (e) {\n    if (e.state) {\n\n        // Et on injecte le chemin pour les liens.\n        xhrRequest(fragmentPath + encodeURIComponent(e.state) + \".htm\", function (err, response) {\n            if (err) {\n                return xhrFallback(e.state);\n            }\n\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n    } else {\n        history.back();\n    }\n});\n```\n\nNous pouvons à présent faire tourner la version française avec la commande :\n\n```\n> node-atlas --browse\n```\n\nou la version internationale avec la commande :\n\n```\n> node-atlas --browse --webconfig webconfig.en.json\n```\n\nVous constaterez que le lien pour changer de version pointe sur des pages inexistantes puisque chaque version ne fait tourner que sa langue. Cependant, en générant les fichiers français avec :\n\n```\n> node-atlas --generate\n```\n\npuis les fichiers anglais avec :\n\n```\n> node-atlas --generate --webconfig webconfig.en.json\n```\n\nvous pourrez, en vous rendant dans `dist` simuler un serveur web avec\n\n```\n> node-atlas --browse index.html\n```\n\net constater que toutes les versions sont accessibles derrière tous les liens.\n\nAprès avoir mis en place de quoi maintenir et générer notre documentation à partir du README.md du projet, il est temps de nous attaquer à la partie visuelle de ce site. Mais arrêtons nous un instant pour automatiser le processus de génération des sites !\n\n\n\n### Génération avec l'API NodeAtlas ###\n\nNous venons de voir qu'il y a plusieurs étapes pour générer notre documentation. Il faut :\n\n- Générer la version française.\n- Générer la version internationale.\n- Lancer le site généré en localhost pour vérification.\n\nNous allons créer un fichier JavaScript dans le dossier `nodeatlas-website` qui va nous permettre de faire les trois en une seule fois. Le voici :\n\n**generate-website.js**\n\n```js\n// On récupère l'API NodeAtlas.\nvar nodeAtlas = require(\"node-atlas\"),\n\n    // On créé une instance pour générer la version française.\n    versionFrench = new nodeAtlas(),\n\n    // On créé une instance pour générer la version internationale.\n    versionEnglish = new nodeAtlas(),\n\n    // On créé une instance pour faire tourner le site générer.\n    versionTest = new nodeAtlas();\n\n// On paramètre la version française.\nversionFrench.init({\n    \"generate\": true\n\n// On explique ce qu'il ce passe après la création de la version française.\n}).generated(function() {\n\n    // On paramètre la version internationale.\n    versionEnglish.init({\n        \"generate\": true,\n        \"webconfig\": \"webconfig.en.json\"\n\n    // On explique ce qu'il ce passe après la création de la version internationale.\n    }).generated(function() {\n\n        // On paramètre la version de test.\n        versionTest.init({\n            \"browse\": \"index.html\",\n            \"directory\": \"../dist/\"\n\n        // On lance le site de Test.\n        }).start();\n\n    // On lance la génération internationale.\n    }).start();\n\n// On lance la génération française.\n}).start();\n```\n\nEt nous lançons la commande suivante depuis le dossier `nodeatlas-website` :\n\n```\n> node generate-website.js\n```\n\nNous faisons tourner la version serverless de nos fichiers avec un simple serveur web équivalent de ce que donnera le site une fois sur [GitHub].\n\n*Note : sous Windows, en renommant `generate-website.js` en `generate-website.na` et en expliquant que les fichiers `.na` s'ouvrent avec `node.exe` on peut se passer de la commande précédente et simplement double cliquer sur `generate-website.na` pour lancer la procédure !*\n\n\n\n## Travailler avec des fichiers Less et Stylus ##\n\nNous allons à présent mettre en place tous les fichiers client qui vont permettre d'habiller notre documentation et de permettre à l'utilisateur d'intéragir avec. Nous allons suivre l'[architecture et les normes indiqués ici](https://blog.lesieur.name/conventions-html-css-js-et-architecture-front-end/) pour cela. Nous parlons donc ici des fichiers CSS ainsi que des fichiers JavaScript. \n\n\n\n### Mise en place des CSS et des JS ###\n\nJusqu'à présent, nous avons travaillé avec le fichier `javascripts/common.js`. Nous allons ajouter à cela, un fichier JavaScript par composant effectif dans le HTML. Nous allons également créer un équivalent de chaque composant en CSS et un fichier commun `stylesheets/common.css`. Nous obtenons donc la nouvelle arborescence suivante :\n\n```\nnodeatlas-website/\n┊┉\n├─ assets/\n│  ┊┉\n│  ├─ javascripts/\n│  │  ├─ common.js\n│  │  ├─ cmpt.header.js\n│  │  ├─ cmpt.navigation.js\n│  │  └─ cmpt.content.js\n│  └─ stylesheets/\n│     ├─ common.css\n│     ├─ cmpt.header.css\n│     ├─ cmpt.navigation.css\n│     └─ cmpt.content.css\n┊┉\n```\n\nNous allons inclure ces fichiers en pied de la balise `head` pour les CSS et en pied de `body` pour les JS.\n\n**views/partials/head.htm**\n\n```html\n<!DOCTYPE html>\n<html lang=\"<?= languageCode ?>\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>NodeAtlas</title>\n\n        <base href=\"<?= urlBasePath ?>/\" />\n\n        <meta name=\"description\" content=\"NodeAtlas est un Framework JavaScript MVC(2) côté serveur.\" />\n        <meta name=\"geo.placename\" content=\"Annecy, Haute-Savoie, France\" />\n\n        <meta name=\"robots\" content=\"index, follow\" />\n\n        <!--[if IE]><meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /><![endif]-->\n        <!--[if !IE]><!--><meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /><!--<![endif]-->\n\n        <!-- Inclusion des fichiers CSS -->\n        <link rel=\"stylesheet\" href=\"stylesheets/common.css\">\n        <link rel=\"stylesheet\" href=\"stylesheets/cmpt.header.css\">\n        <link rel=\"stylesheet\" href=\"stylesheets/cmpt.navigation.css\">\n        <link rel=\"stylesheet\" href=\"stylesheets/cmpt.content.css\">\n    </head>\n    <body data-content=\"<?= webconfig._content ?>\" data-subpath=\"<?= webconfig.urlRelativeSubPath ?>\">\n        <div class=\"layout\">\n            <noscript class=\"no-js cmpt\">\n                <div class=\"no-js--inner\">\n                    <p><?- common.noJs ?></p>\n                </div>\n            </noscript>\n```\n\n**views/partials/foot.htm**\n\n```html\n            <!-- Inclusion des fichiers JS -->\n            <script src=\"javascripts/cmpt.header.js\"></script>\n            <script src=\"javascripts/cmpt.navigation.js\"></script>\n            <script src=\"javascripts/cmpt.content.js\"></script>\n            <script src=\"javascripts/common.js\"></script>\n        </div>\n    </body>\n</html>\n```\n\nVoici un contenu provisoire que nous allons attribuer à chacun des fichiers CSS :\n\n**assets/stylesheets/common.css**\n\n```css\n* {\n    font-weight: bold;\n}\n```\n\n**assets/stylesheets/cmpt.header.css**\n\n```css\n.header {\n    color: red;\n}\n```\n\n**assets/stylesheets/cmpt.navigation.css**\n\n```css\n.navigation,\n.navigation a {\n    color: green;\n}\n```\n\n**assets/stylesheets/cmpt.content.css**\n\n```css\n.content,\n.content a {\n    color: orange;\n}\n```\n\nainsi que le contenu des fichiers JavaScript suivant :\n\n**assets/javascripts/common.js**\n\n```js\n// On se créer (ou surcharge) les namespaces (existant ou non).\n// Un namespace globale au site que l'on nomme `website`.\nvar website = window.website || {};\n\n// Un namespace réservé aux composants que l'on nomme `website.component`.\nwebsite.component = website.component || {};\n\n// On encapsule les mécanismes des fonctions globales \n// pour éviter la collision de variable.\n// `publics` est ici l'équivalent de `website`.\n(function (publics) {\n\n    // On fait de `xhrRequest` une fonction globale `website.xhrRequest`.\n    publics.xhrRequest = function(url, next) {\n        var request = new XMLHttpRequest();\n\n        if (location.protocol !== \"file:\") {\n            request.open(\"GET\", url, true);\n            request.send();\n        } else {\n            return next(new Error(\"Impossible to use AJAX in file system mode.\"));\n        }\n\n        request.addEventListener(\"load\", function () {\n            if (request.status < 200 && request.status >= 400) {\n                return next(new Error(\"The server was reached, but with no correct response.\"));\n            }\n            next(null, request.responseText);\n        });\n\n        request.addEventListener(\"error\", function () {\n            return next(new Error(\"The server is unreachable.\"));\n        });\n    };\n\n    // On fait de `xhrFallback` une fonction globale `website.xhrFallback`.\n    publics.xhrFallback = function (url) {\n        location.href = encodeURIComponent(url) + \".html\";\n    };\n\n    // On créer une fonction d'initialisation pour tout le site.\n    // Qui va charger tous les composants.\n    publics.init = function () {\n        var links = document.querySelectorAll(\".navigation--home a, .navigation--menu a\"),\n            fragmentPath = document.body.getAttribute(\"data-content\"),\n            urlRelativeSubPath = document.body.getAttribute(\"data-subpath\");\n\n        // On charge chaque comportement de composant.\n        (new website.component.Header()).init();\n        (new website.component.Navigation()).init();\n        (new website.component.Content()).init(links, fragmentPath, urlRelativeSubPath);     \n    };\n\n// On passe l'objet website pour l'alimenter avec des fonctions globales.\n}(website));\n\nwebsite.init();\n```\n\n**assets/javascripts/cmpt.header.js**\n\n```js\n// On se créer (ou surcharge) les namespaces (existant ou non).\nvar website = window.website || {};\nwebsite.component = website.component || {};\n\n// On créer un constructeur Header pour les composants `.header`.\nwebsite.component.Header = function () {\n    var publics = this;\n\n    publics.name = \"header\";\n\n    publics.init = function () {};\n};\n```\n\n**assets/javascripts/cmpt.navigation.js**\n\n```js\n// On se créer (ou surcharge) les namespaces (existant ou non).\nvar website = window.website || {};\nwebsite.component = website.component || {};\n\n// On créer un constructeur Navigation pour les composants `.navigation`.\nwebsite.component.Navigation = function () {\n    var publics = this;\n\n    publics.name = \"navigation\";\n\n    publics.init = function () {};\n};\n```\n\n**assets/javascripts/cmpt.content.js**\n\n```js\n// On se créer (ou surcharge) les namespaces (existant ou non).\nvar website = window.website || {};\nwebsite.component = website.component || {};\n\n// On créer un constructeur Content pour les composants `.content`.\nwebsite.component.Content = function () {\n    var publics = this;\n\n    publics.name = \"content\";\n\n    // On créer une fonction d'instance `updateContentByClick` \n    // en passant en paramètre le nécessaire pour qu'elle fonctionne.\n    publics.updateContentByClick = function (links, fragmentPath, urlRelativeSubPath) {\n        [].forEach.call(links, function (link) {\n            link.addEventListener(\"click\", function (e) {\n                var urn = link.getAttribute(\"href\").replace(\".html\", \"\");\n                e.preventDefault();\n\n                website.xhrRequest(fragmentPath + encodeURIComponent(urn) + \".htm\", function (err, response) {\n                    if (err) {\n                        return website.xhrFallback(urn);\n                    }\n\n                    history.pushState(urn, null, urlRelativeSubPath + \"/\" + urn + \".html\");\n\n                    // On se sert d'un nom de classe dynamique et publique pour le changer en cas de besoin.\n                    document.getElementsByClassName(publics.name + \"--inner\")[0].innerHTML = response;\n                });\n            });\n        });\n    };\n\n    // On créer une fonction d'instance `updateContentByHistoryBack`.\n    publics.updateContentByHistoryBack = function () {\n        window.addEventListener(\"popstate\", function (e) {\n            if (e.state) {\n                website.xhrRequest(\"content/\" + encodeURIComponent(e.state) + \".htm\", function (err, response) {\n                    if (err) {\n                        return website.xhrFallback(e.state);\n                    }\n\n                    // On se sert d'un nom de classe dynamique et publique pour le changer en cas de besoin.\n                    document.getElementsByClassName(publics.name + \"--inner\")[0].innerHTML = response;\n                });\n            } else {\n                history.back();\n            }\n        });\n    };\n\n    // On créer une fonction d'initialisation pour la classe, un raccourci.\n    // Et on l'alimente et execute toutes les fonctions utiles.\n    publics.init = function (links, fragmentPath, urlRelativeSubPath) {\n        publics.updateContentByClick(links, fragmentPath, urlRelativeSubPath);\n        publics.updateContentByHistoryBack();\n    };\n};\n```\n\nPuis, en faisant tourner le projet français depuis `nodeatlas-website` :\n\n```\n> node-atlas --browse index.html\n```\n\nNous constatons dans l'onglet « Network » (F12) que les fichiers en questions sont bien chargés (8 requêtes plus celle de la page en elle-même).\n\n![Tous les fichiers chargés](media/images/upload/network-files.jpg)\n\n\n\n### Preprocesseur CSS Stylus transparent ###\n\nNous allons à présent expliquer comment utiliser les préprocesseurs avec *[NodeAtlas]*. Le fonctionnement avec [Less](http://lesscss.org/) est exactement le même mais nous allons ici voir cela avec [Stylus](http://stylus-lang.com/).\n\nIl va être question ici d'activer Stylus dans nos webconfigs comme ceci :\n\n**webconfig.json**\n\n```json\n{\n    \"stylus\": true,\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\net comme cela :\n\n**webconfig.en.json**\n\n```json\n{\n    \"stylus\": true,\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nEn fait avec *[NodeAtlas]*, l'utilisation de Less ou Stylus est totalement transparente pendant la phase de développement. Il suffit de renommer tous vos `.css` en `.styl` (ou `.less` pour Less) et le moteur se chargera, à chaque fois qu'un fichier `.css` sera demander, de compiler sa version `.styl` en CSS et d'en renvoyer son résultat `.css`. Cela signifie que du point de vu de vos fichiers HTML, c'est toujours des `.css` que vous réclamez.\n\nNous allons changer tous nos fichiers CSS en fichier Stylus (avec la syntaxe qui va bien). Nous allons également pour l'occasion créer un fichier de variables que nous allons pouvoir inclure dans chaque fichier pour profiter de fonctions communes. Cela nous donne maintenant :\n\n```\nnodeatlas-website/\n┊┉\n├─ assets/\n│  ┊┉\n│  └─ stylesheets/\n│     ├─ variables.styl\n│     ├─ common.styl\n│     ├─ cmpt.header.styl\n│     ├─ cmpt.navigation.styl\n│     └─ cmpt.content.styl\n┊┉\n```\n\navec les contenus provisoires suivants :\n\n**assets/stylesheets/variables.styl**\n\n```css\nmake-color(my-color)\n    color my-color;\n    border 1px solid my-color\n    padding: 10px;\n    margin: 10px\n    -webkit-border-radius 4px\n            border-radius 4px  \n```\n\n**assets/stylesheets/common.styl**\n\n```css\n@import \"variables\"\n\n*\n    font-weight bold\n```\n\n**assets/stylesheets/cmpt.header.styl**\n\n```css\n@import \"variables\"\n\n.header\n    make-color red\n```\n\n**assets/stylesheets/cmpt.navigation.styl**\n\n```css\n@import \"variables\"\n\n.navigation\n    make-color green\n\n    a\n        color green\n```\n\n**assets/stylesheets/cmpt.content.styl**\n\n```css\n@import \"variables\"\n\n.content\n    make-color orange\n\n    a\n        color orange\n```\n\nPuis, en faisant tourner le projet français depuis `nodeatlas-website` :\n\n```\n> node-atlas --browse index.html\n```\n\nvous pourrez ainsi constater les CSS générés dans votre dossier `assets/stylesheets/`.\n\n\n\n### Preprocesseur CSS Stylus à la Génération ###\n\nLa transparence nécessite que le fichier `.css` soit réclamé en HTTP pour que le serveur le transforme. Cependant, pour mettre à jour vos fichiers Stylus lors de l'appel de `--generate` (sans donc faire démarrer le serveur), il va falloir référencer les fichiers que vous souhaitez compiler en CSS dans le webconfig.\n\nAinsi en changeant nos deux webconfigs comme suit, cela sera possible lors de l'appel de notre fichier `generate-website.js` par exemple.\n\n**webconfig.json**\n\n```json\n{\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nEffacer vos fichiers `.css` de `assets/stylesheets/` et lancez la commande :\n\n```\n> node generate-website.js\n```\n\nVous verrez que les fichiers de travail dans `nodeatlas-website` contiennent bien les fichiers `.css` compilés à partir des `.styl` et que dans `dist` les fichiers CSS sont également bien présent. Un jeu d'enfant !\n\n\n\n### Et Less ? ###\n\nVous pouvez faire exactement la même chose avec Less. Il vous suffit de changer toutes les appelations `.styl` en `.less` et `stylus` en `less`. Bien entendu, la syntaxe des fichiers sera donc celle de Less.\n\nEt en bonus, les deux peuvent fonctionner ensemble ! Le moteur cherche des `.styl` et des `.less` en même temps.\n\n\n\n\n\n## Minifier, Obfusquer et Optimiser les CSS, JS et Images ##\n\nPour des soucis de performance, bien que nous allions travailler dans la version originale de chaque fichier, la sortie produite devra être optimisée et par conséquent illisible. Tout ce processus habituellement fait à la main avec divers outils ou encore automatisé avec un coup de pousse, par exemple, de [gulp](http://gulpjs.com/) est automatique dans *[NodeAtlas]* avec l'aide du webconfig.\n\n\n\n### Minifier les fichiers CSS ###\n\nDans un premier temps, nous allons minifier et placer dans un seul fichier le contenu CSS de notre site. Nous allons donc créer un Bundle spécifique aux Stylesheets en donnant à une clé un tableau d'élément. La clé représente le chemin de sortie et chaque élément représente un fichier d'entré :\n\n**webconfig.json**\n\n```json\n{\n    \"cssBundlingBeforeResponse\": true,\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"cssBundlingBeforeResponse\": true,\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nEnfin, grâce à `cssBundlingBeforeResponse`, nous allons obtenir des fichiers CSS à jour et compilé après chaque chargement de page. Il ne nous reste donc plus qu'à demander la version minifiée des CSS plutôt que les fichiers d'origines :\n\n**views/partials/head.htm**\n\n```html\n<!DOCTYPE html>\n<html lang=\"<?= languageCode ?>\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>NodeAtlas</title>\n\n        <base href=\"<?= urlBasePath ?>/\" />\n\n        <meta name=\"description\" content=\"NodeAtlas est un Framework JavaScript MVC(2) côté serveur.\" />\n        <meta name=\"geo.placename\" content=\"Annecy, Haute-Savoie, France\" />\n\n        <meta name=\"robots\" content=\"index, follow\" />\n\n        <!--[if IE]><meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /><![endif]-->\n        <!--[if !IE]><!--><meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /><!--<![endif]-->\n\n        <!-- Inclusion du fichiers minifié de tous les CSS. -->\n        <link rel=\"stylesheet\" href=\"stylesheets/common.min.css\">\n    </head>\n    <body data-content=\"<?= webconfig._content ?>\" data-subpath=\"<?= webconfig.urlRelativeSubPath ?>\">\n        <div class=\"layout\">\n            <noscript class=\"no-js cmpt\">\n                <div class=\"no-js--inner\">\n                    <p><?- common.noJs ?></p>\n                </div>\n            </noscript>\n```\n\nLançons donc depuis le dossier `nodeatlas-website` la commande :\n\n```\n> node-atlas --browse index.html\n```\n\net constatons que tout est en order : compilation des Stylus vers les CSS, minification des `.css` vers le `.min.css` avant chaque affichage de page.\n\nLa génération avec\n\n```\n> node generate-website.js\n```\n\nfonctionne également.\n\n\n\n### Offusquer les JavaScript ###\n\nAttardons nous à présent sur les JavaScript. Nous allons offusquer et placer dans un seul fichier le contenu JavaScript de notre site. Nous allons donc ajouter un Bundle spécifique aux JavaScript en donnant à une clé un tableau d'élément. La clé représente le chemin de sortie et chaque élément représente un fichier d'entré :\n\n**webconfig.json**\n\n```json\n{\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        },\n        \"javascripts\": {\n            \"javascripts/common.min.js\": [\n                \"javascripts/cmpt.header.js\",\n                \"javascripts/cmpt.navigation.js\",\n                \"javascripts/cmpt.content.js\",\n                \"javascripts/common.js\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        },\n        \"javascripts\": {\n            \"javascripts/common.min.js\": [\n                \"javascripts/cmpt.header.js\",\n                \"javascripts/cmpt.navigation.js\",\n                \"javascripts/cmpt.content.js\",\n                \"javascripts/common.js\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nComme précédemment, grâce à `jsBundlingBeforeResponse`, nous allons obtenir des fichiers JavaScript à jour et compilés après chaque chargement de page. Il ne nous reste donc plus qu'à demander la version minifiée des JavaScript plutôt que les fichiers d'origines :\n\n**views/partials/foot.htm**\n\n```html\n            <!-- Inclusion du fichiers minifié de tous les JavaScript. -->\n            <script src=\"javascripts/common.min.js\"></script>\n        </div>\n    </body>\n</html>\n```\n\nLançons donc depuis le dossier `nodeatlas-website` la commande :\n\n```\n> node-atlas --browse index.html\n```\n\net constatons que l'offuscation des `.js` vers le `.min.js` avant chaque affichage de page.\n\nLa génération avec\n\n```\n> node generate-website.js\n```\n\nfonctionne tout autant.\n\n\n\n### Optimiser vos Images ###\n\nPassons maintenant à l'optimisation d'image. *[NodeAtlas]* propose une optimisation sans perte pour obtenir les images les moins lourdes en conservant une qualité égale. Vous pourrez à souhait utiliser d'autre module npm pour faire bien plus.\n\nDans un premier temps, nous allons [ajouter l'image suivante au projet](https://github.com/Haeresis/NodeAtlas/blob/gh-pages/media/images/ex-logo-node-atlas.png) et vous pourrez [la télécharger ici](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/media/images/ex-logo-node-atlas.png).\n\nCe qui nous donne la nouvelle arborescence complète suivante :\n\n```\ndist/\n└─ english/\nnodeatlas-website/\n├─ assets/\n│  ├─ media/\n│  │  └─ images/\n│  │     └─ ex-logo-node-atlas.png\n│  ├─ content/\n│  │  └─ english/\n│  ├─ javascripts/\n│  │  ├─ common.js\n│  │  ├─ cmpt.header.js\n│  │  ├─ cmpt.navigation.js\n│  │  └─ cmpt.content.js\n│  └─ stylesheets/\n│     ├─ common.css\n│     ├─ cmpt.header.css\n│     ├─ cmpt.navigation.css\n│     └─ cmpt.content.css\n├─ controllers/\n│  ├─ common.js\n│  ├─ content.js\n│  └─ index.js\n├─ views/\n│  ├─ content.htm\n│  └─ partials/\n│     ├─ content.htm\n│     ├─ head.htm\n│     ├─ navigation.htm\n│     ├─ header.htm\n│     └─ foot.htm\n├─ variations/\n│  └─ common.json\n│     └─ en\n│        └─ common.json\n├─ webconfig.json\n├─ webconfig.en.json\n├─ README.md\n└─ README.en.md\n```\n\net les nouveaux fichiers de variations et vues suivants :\n\n**variations/common.json**\n\n```json\n{\n    \"title\": {\n        \"alt\": \"NodeAtlas\",\n        \"src\": \"media/images/ex-logo-node-atlas.png\"\n    },\n    \"content\": \"Contenu pour la documentation.\",\n    \"noJs\": \"Le JavaScript n'est pas activé.\",\n    \"home\": {\n        \"title\": \"Accueil\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"English\",\n        \"url\": \"english/index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Présentation\",\n        \"url\": \"avant-propos.html\",\n        \"menu\": [{\n            \"title\": \"Installation\",\n            \"url\": \"installation.html\"\n        }, {\n            \"title\": \"Démarrage rapide\",\n            \"url\": \"commencer-avec-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View et Template\",\n        \"url\": \"partie-view-et-template.html\"\n    }, {\n        \"title\": \"Controller et Model\",\n        \"url\": \"partie-controller-et-model.html\"\n    }, {\n        \"title\": \"Route et Plus\",\n        \"url\": \"pour-aller-plus-loin.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-comme-module-npm.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-commandes-de-lancement.html\"\n        }, {\n            \"title\": \"Simple Serveur\",\n            \"url\": \"nodeatlas-comme-simple-serveur-web.html\"\n        }, {\n            \"title\": \"Développement\",\n            \"url\": \"environnement-de-d%C3%A9veloppement.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"environnement-de-production.html\"\n        }]\n    }, {\n        \"title\": \"Et les autres ?\",\n        \"url\": \"plus-sur-nodeatlas.html\"\n    }]\n}\n```\n\n**variations/en/common.json**\n\n```json\n{\n    \"title\": {\n        \"alt\": \"NodeAtlas\",\n        \"src\": \"media/images/ex-logo-node-atlas.png\"\n    },\n    \"content\": \"Content for documentation.\",\n    \"noJs\": \"No JavaScript enabled.\",\n    \"home\": {\n        \"title\": \"Home\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"Français\",\n        \"url\": \"../index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Overview\",\n        \"url\": \"overview.html\",\n        \"menu\": [{\n            \"title\": \"Installing\",\n            \"url\": \"installing.html\"\n        }, {\n            \"title\": \"Get Started\",\n            \"url\": \"start-with-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View and Template\",\n        \"url\": \"view-and-template-part.html\"\n    }, {\n        \"title\": \"Controller and Model\",\n        \"url\": \"controller-and-model-part.html\"\n    }, {\n        \"title\": \"Route and More\",\n        \"url\": \"more-features.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-as-npm-module.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-running-commands.html\"\n        }, {\n            \"title\": \"Simple Server\",\n            \"url\": \"nodeatlas-as-a-simple-web-server.html\"\n        }, {\n            \"title\": \"Development\",\n            \"url\": \"development-environment.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"production-environment.html\"\n        }]\n    }, {\n        \"title\": \"And others?\",\n        \"url\": \"more-about-nodeatlas.html\"\n    }]\n}\n```\n\n**views/partials/header.htm**\n\n```html\n            <header class=\"header cmpt\">\n                <div class=\"header--inner\">\n                    <div class=\"header--title\">\n\n                        <!-- Remplacement du texte par l'image. -->\n                        <h1><img src=\"<?= common.title.src ?>\" alt=\"<?= common.title.alt ?>\"></h1>\n                    </div>\n                </div>\n            </header>\n```\n\nOptimisons à présent notre image `media/images/ex-logo-node-atlas.png` :\n\n**webconfig.json**\n\n```json\n{\n    \"imgOptimizationsBeforeResponse\": true,\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"optimizations\": {\n        \"images\": {\n            \"media/images/ex-logo-node-atlas.png\": \"media/images/min/\"\n        }\n    },\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        },\n        \"javascripts\": {\n            \"javascripts/common.min.js\": [\n                \"javascripts/cmpt.header.js\",\n                \"javascripts/cmpt.navigation.js\",\n                \"javascripts/cmpt.content.js\",\n                \"javascripts/common.js\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"imgOptimizationsBeforeResponse\": true,\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"optimizations\": {\n        \"images\": {\n            \"media/images/ex-logo-node-atlas.png\": \"media/images/min/\"\n        }\n    },\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        },\n        \"javascripts\": {\n            \"javascripts/common.min.js\": [\n                \"javascripts/cmpt.header.js\",\n                \"javascripts/cmpt.navigation.js\",\n                \"javascripts/cmpt.content.js\",\n                \"javascripts/common.js\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nComme précédemment, grâce à `imgOptimizationsBeforeResponse`, nous allons obtenir des images optimisées après chaque chargement de page. Il ne nous reste donc plus qu'à demander la version optimisées des images plutôt que les images d'origines :\n\n```json\n{\n    \"title\": {\n        \"alt\": \"NodeAtlas\",\n        \"src\": \"media/images/min/ex-logo-node-atlas.png\"\n    },\n    \"content\": \"Contenu pour la documentation.\",\n    \"noJs\": \"Le JavaScript n'est pas activé.\",\n    \"home\": {\n        \"title\": \"Accueil\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"English\",\n        \"url\": \"english/index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Présentation\",\n        \"url\": \"avant-propos.html\",\n        \"menu\": [{\n            \"title\": \"Installation\",\n            \"url\": \"installation.html\"\n        }, {\n            \"title\": \"Démarrage rapide\",\n            \"url\": \"commencer-avec-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View et Template\",\n        \"url\": \"partie-view-et-template.html\"\n    }, {\n        \"title\": \"Controller et Model\",\n        \"url\": \"partie-controller-et-model.html\"\n    }, {\n        \"title\": \"Route et Plus\",\n        \"url\": \"pour-aller-plus-loin.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-comme-module-npm.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-commandes-de-lancement.html\"\n        }, {\n            \"title\": \"Simple Serveur\",\n            \"url\": \"nodeatlas-comme-simple-serveur-web.html\"\n        }, {\n            \"title\": \"Développement\",\n            \"url\": \"environnement-de-d%C3%A9veloppement.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"environnement-de-production.html\"\n        }]\n    }, {\n        \"title\": \"Et les autres ?\",\n        \"url\": \"plus-sur-nodeatlas.html\"\n    }]\n}\n```\n\n**variations/en/common.json**\n\n```json\n{\n    \"title\": {\n        \"alt\": \"NodeAtlas\",\n        \"src\": \"media/images/min/ex-logo-node-atlas.png\"\n    },\n    \"content\": \"Content for documentation.\",\n    \"noJs\": \"No JavaScript enabled.\",\n    \"home\": {\n        \"title\": \"Home\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"Français\",\n        \"url\": \"../index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Overview\",\n        \"url\": \"overview.html\",\n        \"menu\": [{\n            \"title\": \"Installing\",\n            \"url\": \"installing.html\"\n        }, {\n            \"title\": \"Get Started\",\n            \"url\": \"start-with-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View and Template\",\n        \"url\": \"view-and-template-part.html\"\n    }, {\n        \"title\": \"Controller and Model\",\n        \"url\": \"controller-and-model-part.html\"\n    }, {\n        \"title\": \"Route and More\",\n        \"url\": \"more-features.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-as-npm-module.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-running-commands.html\"\n        }, {\n            \"title\": \"Simple Server\",\n            \"url\": \"nodeatlas-as-a-simple-web-server.html\"\n        }, {\n            \"title\": \"Development\",\n            \"url\": \"development-environment.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"production-environment.html\"\n        }]\n    }, {\n        \"title\": \"And others?\",\n        \"url\": \"more-about-nodeatlas.html\"\n    }]\n}\n```\n\nLançons donc depuis le dossier `nodeatlas-website` la commande :\n\n```\n> node-atlas --browse index.html\n```\n\net constatons que l'optimisation des `media/images` vers le `media/images/min/` avant chaque affichage de page.\n\nLa génération avec\n\n```\n> node generate-website.js\n```\n\nfonctionne tout autant.\n\n\n\n### Webconfig avec fichiers partagés ###\n\nCe qui est génant avec nos précédents exemples, c'est que pour quelques valeurs différentes, nous devons maintenir deux webconfigs avec énormément d'options. Nous allons voir ici comment simplement déporter les configurations dans des fichiers différents afin de ne pas avoir de redondance de configuration. Ainsi nos deux webconfigs `webconfig.json` et `webconfig.en.json` deviennent :\n\n**webconfig.json**\n\n```json\n{\n    \"imgOptimizationsBeforeResponse\": true,\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"optimizations\": \"optimizations.json\",\n    \"bundles\": \"bundles.json\",\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"imgOptimizationsBeforeResponse\": true,\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"optimizations\": \"optimizations.json\",\n    \"bundles\": \"bundles.json\",\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nAvec les nouveaux fichiers suivants :\n\n**optimizations.json**\n\n```\n{\n    \"images\": {\n        \"media/images/logo-node-atlas.png\": \"media/images/min/\"\n    }\n}\n```\n\n**bundles.json**\n\n```\n{\n    \"stylesheets\": {\n        \"stylesheets/common.min.css\": [\n            \"stylesheets/common.css\",\n            \"stylesheets/cmpt.header.css\",\n            \"stylesheets/cmpt.navigation.css\",\n            \"stylesheets/cmpt.content.css\"\n        ]\n    },\n    \"javascripts\": {\n        \"javascripts/common.min.js\": [\n            \"javascripts/cmpt.header.js\",\n            \"javascripts/cmpt.navigation.js\",\n            \"javascripts/cmpt.content.js\",\n            \"javascripts/common.js\"\n        ]\n    }\n}\n```\n\n**stylus.json**\n\n```\n{\n    \"files\": [\n        \"stylesheets/common.styl\",\n        \"stylesheets/cmpt.header.styl\",\n        \"stylesheets/cmpt.navigation.styl\",\n        \"stylesheets/cmpt.content.styl\"\n    ]\n}\n```\n\n**routes.json**\n\n```\n{\n    \"/index.html\": {\n        \"view\": \"content.htm\",\n        \"controller\": \"index.js\"\n    }\n}\n```\n\ndonnant donc le nouvel ensemble de fichier suivant :\n\n```\nnodeatlas-website/\n┊┉\n├─ webconfig.json\n├─ webconfig.en.json\n├─ optimizations.json\n├─ bundles.json\n├─ stylus.json\n├─ routes.json\n├─ README.md\n├─ README.en.md\n┊┉\n```\n\nLançons donc depuis le dossier `nodeatlas-website` la commande :\n\n```\n> node-atlas --browse index.html\n```\n\net constatons que la génération avec\n\n```\n> node generate-website.js\n```\n\nfonctionne toujours.\n\n\n\n### Webconfig différent en développement et production ###\n\nVous aurez probablement remarqué que depuis les ajouts des mécanismes pour optimiser le code, les temps de réponse sont devenus plus lent. C'est parceque toutes l'optimisation se refait au chargement de chaque page. Nous allons voir ici comment :\n\n- Développer avec les fichiers originaux sans mécanisme d'optimisation.\n- Générer une version finale des fichiers optimisés.\n\nPour cela nous allons utiliser différents webconfigs.\n\n#### Version Développement ####\n\nTout d'abord arrêtons d'utiliser l'optimisation après chaque chargement de page et n'utilisons pas d'instruction pour la minification et l'optimisation. Nous allons créer une variable pour indiquer que la version actuelle n'utilisera pas les fichiers minifiés.\n\nEnsuite, nous allons également utiliser la propritété `httpPort` pour faire tourner nos deux versions côte à côte. Nous allons aussi utiliser une variable pour indiquer derrière quel port va tourner l'autre langue pour chaque webconfig.\n\n**webconfig.json**\n\n```json\n{\n    \"httpPort\": 7777,\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\",\n    \"_otherPort\": 7778,\n    \"_min\": \"\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"httpPort\": 7778,\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\",\n    \"_otherPort\": 7777,\n    \"_min\": \"\"\n}\n```\n\nNous allons également modifier conditionnellement les vues suivantes pour qu'elles affichent les fichiers de travail avec ses webconfigs et les fichiers de productions avec les webconfigs de génération que nous allons créer plus loin.\n\n**views/partials/head.htm**\n\n```html\n<!DOCTYPE html>\n<html lang=\"<?= languageCode ?>\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>NodeAtlas</title>\n\n        <base href=\"<?= urlBasePath ?>/\" />\n\n        <meta name=\"description\" content=\"NodeAtlas est un Framework JavaScript MVC(2) côté serveur.\" />\n        <meta name=\"geo.placename\" content=\"Annecy, Haute-Savoie, France\" />\n\n        <meta name=\"robots\" content=\"index, follow\" />\n\n        <!--[if IE]><meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /><![endif]-->\n        <!--[if !IE]><!--><meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /><!--<![endif]-->\n\n        <!-- Inclusion du fichiers minifié après génération. -->\n        <? if (webconfig._min) { ?>\n        <link rel=\"stylesheet\" href=\"stylesheets/common.min.css\">\n        \n        <!-- Inclusion du fichiers standar pendant le développement. -->\n        <? } else { ?>\n        <link rel=\"stylesheet\" href=\"stylesheets/common.css\">\n        <link rel=\"stylesheet\" href=\"stylesheets/cmpt.header.css\">\n        <link rel=\"stylesheet\" href=\"stylesheets/cmpt.navigation.css\">\n        <link rel=\"stylesheet\" href=\"stylesheets/cmpt.content.css\">\n        <? }  ?>\n    </head>\n    <body data-content=\"<?= webconfig._content ?>\" data-subpath=\"<?= webconfig.urlRelativeSubPath ?>\">\n        <div class=\"layout\">\n            <noscript class=\"no-js cmpt\">\n                <div class=\"no-js--inner\">\n                    <p><?- common.noJs ?></p>\n                </div>\n            </noscript>\n```\n\n**views/partials/foot.htm**\n\n```html\n            <!-- Inclusion du fichiers minifié après génération. -->\n            <? if (webconfig._min) { ?>\n            <script src=\"javascripts/common.min.js\"></script>\n\n            <!-- Inclusion du fichiers standar pendant le développement. -->\n            <? } else { ?>\n            <script src=\"javascripts/cmpt.header.js\"></script>\n            <script src=\"javascripts/cmpt.navigation.js\"></script>\n            <script src=\"javascripts/cmpt.content.js\"></script>\n            <script src=\"javascripts/common.js\"></script>\n            <? }  ?>\n        </div>\n    </body>\n</html>\n```\n\n**views/partials/header.htm**\n\n```html\n            <header class=\"header cmpt\">\n                <div class=\"header--inner\">\n                    <div class=\"header--title\">\n\n                        <!-- On utilise la version non minifiée en local. -->\n                        <h1><img src=\"<?= (!webconfig._min) ? common.title.src.replace(webconfig._min, \"\") : common.title.src ?>\" alt=\"<?= common.title.alt ?>\"></h1>\n                    </div>\n                </div>\n            </header>\n```\n\n**views/partials/navigation.htm**\n\n```html\n            <nav class=\"navigation cmpt\">\n                <div class=\"navigation--inner\">\n                    <div class=\"navigation--lang\">\n\n                        <!-- On ajoute la base si le site est en développement, en attribuant le port de l'autre version. -->\n                        <a href=\"<?= (!webconfig._min) ? urlBasePath.replace(webconfig.httpPort, webconfig._otherPort) : '' ?>/<?= common.lang.url ?>\" title=\"<?= common.lang.title ?>\"><?- common.lang.title ?></a>\n                    </div>\n                    <div class=\"navigation--home\">\n                        <a href=\"<?= common.home.url ?>\" title=\"<?= common.home.title ?>\"><?- common.home.title ?></a>\n                    </div>\n                    <div class=\"navigation--menu\">\n                        <ul>\n                            <? for (var i = 0; i < common.menu.length; i++) { ?>\n                            <li>\n                                <a href=\"<?= common.menu[i].url ?>\" title=\"<?= common.menu[i].title ?>\"><?- common.menu[i].title ?></a>\n                                <? if (common.menu[i].menu) { ?>\n                                <ul>\n                                    <? for (var j = 0; j < common.menu[i].menu.length; j++) { ?>\n                                    <li>\n                                        <a href=\"<?= common.menu[i].menu[j].url ?>\" title=\"<?= common.menu[i].menu[j].title ?>\"><?- common.menu[i].menu[j].title ?></a>\n                                    </li>\n                                    <? } ?>\n                                </ul>\n                                <? } ?>\n                            </li>\n                            <? } ?>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n```\n\nEt pour lancer les deux versions en même temps, nous allons créer un fichier `develop-website.js` :\n\n**develop-website.js**\n\n```js\n// On récupère l'API NodeAtlas.\nvar nodeAtlas = require(\"node-atlas\"),\n\n    // On créé une instance pour générer la version française.\n    versionFrench = new nodeAtlas(),\n\n    // On créé une instance pour générer la version internationale.\n    versionEnglish = new nodeAtlas();\n\n// On paramètre la version française et on la lance.\nversionFrench.run({\n    \"browse\": true\n});\n\n// On paramètre la version internationale et on la lance.\nversionEnglish.run({\n    \"webconfig\": \"webconfig.en.json\"\n});\n```\n\nEt nous lançons la commande suivante depuis le dossier `nodeatlas-website` :\n\n```\n> node develop-website.js\n```\n\nNous faisons tourner la version française et internationale de développement de nos fichiers aux adresses `http://localhost:7777/` et `http://localhost:7778/english/`.\n\n*Note : sous Windows, en renommant `develop-website.js` en `develop-website.na` et en expliquant que les fichiers `.na` s'ouvrent avec `node.exe` on peut se passer de la commande précédente et simplement double cliquer sur `develop-website.na` pour lancer la procédure !*\n\n#### Version Production ####\n\nNous allons maintenant créer les webconfigs de génération qui eux vont bien avoir les Bundles et les Optimizations, qui utiliseront la variable `_min` du webconfig à `true` et qui seront derrière un unique site. Voyez plutôt :\n\n**webconfig.generate.json**\n\n```json\n{\n    \"optimizations\": \"optimizations.json\",\n    \"bundles\": \"bundles.json\",\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\",\n    \"_min\": true\n}\n```\n\n**webconfig.generate.en.json**\n\n```json\n{\n    \"optimizations\": \"optimizations.json\",\n    \"bundles\": \"bundles.json\",\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\",\n    \"_min\": true\n}\n```\n\nNous allons à présent modifier le fichier `generate-website.js` pour qu'ils utilisent ces nouveaux webconfigs :\n\n**generate-website.js**\n\n```js\nvar nodeAtlas = require(\"node-atlas\"),\n    versionFrench = new nodeAtlas(),\n    versionEnglish = new nodeAtlas(),\n    versionTest = new nodeAtlas();\n\nversionFrench.init({\n    \"generate\": true,\n\n    // Nouveau webconfig français pour la génération.\n    \"webconfig\": \"webconfig.generate.json\"\n}).generated(function() {\n    versionEnglish.init({\n        \"generate\": true,\n\n        // Nouveau webconfig international pour la génération.\n        \"webconfig\": \"webconfig.generate.en.json\"\n    }).generated(function() {\n        versionTest.init({\n            \"browse\": \"index.html\",\n            \"directory\": \"../dist/\"\n        }).start();\n    }).start();\n}).start();\n```\n\nFinissons par lancer la commande suivante depuis le dossier `nodeatlas-website` :\n\n```\n> node generate-website.js\n```\n\nEt profitons de notre site complet, prêt à être placé sur [Github] depuis le dossier `dist`. Il suffit maintenant de faire du dossier `dist` un dépôt local de `https://github.com/Haeresis/NodeAtlas/tree/gh-pages` de [Github] et le tour est joué !\n\n\n\n### Processus de mise en production ###\n\nPour résumer nous utilisons donc :\n\n- Pour développer (depuis `nodeatlas-website`),\n\n```\n> node develop-website.js\n```\n\n- Pour tester la version de production en local (depuis `nodeatlas-website`),\n\n```\n> node generate-website.js\n```\n\n- Pour monter le site sur [GitHub] (depuis `dist/`),\n \n*Ensemble de commande GIT.*\n\n**[Vous pouvez récupérer l'intégralité du code de cet article dans cette archive pour tester](https://blog.lesieur.name/media/scripts/upload/nodeatlas-website-dist.zip).**\n\n\n\n\n\n## D'autres bonnes pratiques ##\n\nVous trouverez d'autres fonctionnalités de *[NodeAtlas]* sur [le site officiel de NodeAtlas](https://node-atlas.js.org/) en attendant la rédaction du dernier article dédié :\n\n- aux développeur Back-end ou JavaScript en étendant le fonctionnement de *[NodeAtlas]* aux parties *Contrôleur* et *Modèle* avec une utilisations des *Websockets* pour les actions en temps réel ainsi qu'un tour des accès aux diverses bases de données.", "dates" : { "published" : { "$date" : 1477917180000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : ".article img {\nmax-width: 100%;\nborder: 1px solid rgba(39,41,43,.15);\n}", "title" : "Créer et maintenir des maquettes HTML avec NodeAtlas", "urn" : "creer-et-maintenir-des-maquettes-html-avec-node-atlas" }
{ "__v" : 0, "_id" : { "$oid" : "549993c07d7ac1495000ea7b" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "53746e72eb856da96ba3f8a3" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5499b03566bb5aeedaafd8b6" }, { "$oid" : "5310456355dfd5f7698d48bd" } ], "content" : "J'ai déjà abordé le sujet des Frameworks CSS qui surchargeaient le DOM HTML inutilement et allait à l'encontre de la philosophie du [W3C](http://www.w3.org/) (séparation du fond et de la forme) dans un précédent article où j'expliquais pourquoi, par exemple, [Bootstrap est une régression pour un développement Front-end de qualité](https://blog.lesieur.name/bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite/).\n\nJ'ai également expliqué comment reproduire l'équivalent de fonctionnalités utiles dans un Framework en respectant l'approche CSS-driven dans [Grille CSS Responsive et Sémantique sans Framework](https://blog.lesieur.name/grille-css-responsive-et-semantique-sans-framework/).\n\n**Je vais ici vous démontrer que cette méthode CSS-driven peut non seulement être grandement simplifiée avec l'utilisation des préprocesseurs CSS comme [Less](http://lesscss.org/), [Sass](http://sass-lang.com/) ou [Stylus](http://stylus-lang.com/), mais qu'elle permet également d'exploiter les Frameworks tel que [Bootstrap](http://getbootstrap.com/) de manière propre et conforme à la philosophie de séparation de la sémantique et du design.**\n\n\n\n\n\n## Les approches HTML-driven et CSS-driven pour habiller une page Web ##\n\nLa différence est simple :\n\n### HTML-driven où l'habillage rapide et désolant ###\n\n- Les Frameworks CSS imposent une utilisation HTML-driven des sélecteurs CSS en demandant aux développeurs d'habiller une page web en la surchargeant de `div` et de `class` représentant l'habillage et la disposition graphique de la page.\n\n**HTML**\n\n```html\n<footer class=\"container\">\n    <div class=\"row\">\n\t    <div class=\"col-sm-4 col-sm-push-8\">\n\t\t    <div class=\"text-right hidden-xs\">\n\t\t        <a href=\"\">Join us on Facebook !</a>\n\t\t    </div>\n\t\t    <div class=\"text-center visible-xs\">\n\t\t        <a href=\"\">Join us on Facebook !</a>\n\t\t    </div>\n\t    </div>\n\t    <div class=\"col-sm-8 col-sm-pull-4\">\n\t\t    All rights not reserved.\n\t    </div>\n    </div>\n</footer>\n```\n\n**CSS**\n\n```css\n/* Appel d'un Framework CSS. Lourd en poids et état de boite noire si on ne le connait pas. */\n```\n\n*C'est malheureusement ce que l'on voit de plus en plus souvent sur les sites Internet et qui est selon moi « LA » régression pour un travail Front-end de qualité.*\n\n### CSS-driven où le travail effectué avec l'évolution du HTML par le W3C ###\n\n- L'habillage CSS tel que défini par le W3C est lui CSS-driven. Il y a séparation du fond (la sémantique) et de la forme (la feuille de style) et rien de la disposition ou du design graphique ne doit transparaître dans le DOM HTML.\n \n**HTML**\n\n```html\n<footer>\n\t    <div class=\"share\">\n\t\t        <a href=\"\">Follow us on Google+ !</a>\n\t    </div>\n\t    <div class=\"copyright\">\n\t\t    All rights not reserved.\n\t    </div>\n</footer>\n```\n\n**CSS**\n\n```css\n    .footer,\n.container {\n    max-width: 1200px;\n    margin-left: auto;\n    margin-right: auto;\n    padding-left: 15px;\n    padding-right: 15px;\n}\n    .footer\n.no-gutter {\n    padding-left: -15px;\n    padding-right: -15px;\n}\n    .share,\n    .copyright,\n.col {\n    float: left;\n    width: 100%;\n    padding-left: 15px;\n    padding-right: 15px;\n}\n    .share,\n    .copyright,\n.relative { padding: relative; }\n    .share,\n.text-center { text-align: center; }\n\n@media (min-width: 768px) {\n    .copyright,\n.col12-8 { width: 66.66666667%; }\n    .share,\n.col12-4 { width: 33.33333333%; }\n\n    .copyright,\n.push12-8 { left: 66.66666667%; }\n    .share,\n.pull12-4 { right: 33.33333333%; }\n\n    .share,\n.text-right { text-align: right; }\n}\n```\n\n*Et effectivement cela nécessite de savoir utiliser le CSS.*\n\n### Pourquoi être HTML-driven est un réel problème ? ###\n\nPrenons un exemple concret ; le « Footer » utilisé dans notre exemple précédent à les caractéristiques suivantes :\n- Sur mobile la partie de partage à son texte centré. Il en va de même pour la partie copyright.\n- Sur grand écran le copyright se trouve à gauche et prend 8/12ème de la place en largeur tandis que la partie de partage se trouve à droite et en prend 4/12ème. La partie de gauche a son texte aligné à gauche et la partie de droite a son texte aligné à droite. \n\n> Cependant les designers pensent que pour **des raisons d'ergonomie** il est préférable que sur la page d'accueil le bouton Facebook soit à gauche et prenne la moitié de la place et que le copyright soit à droite en prenant l'autre moitié. C'est donc à présent le copyright qui est aligné à droite sur grand écran.\n\n#### Les trois choix aberrant faisable avec du développement HTML-driven ####\n\nC'est là que l'utilisation d'un Framework va forcer les développeurs à faire de mauvais choix de développement puisque cette modification **ne devrait impacter que les intégrateurs Front-end**, cependant...\n\n1. Le plus simple sera de **dire aux designers ou au client** que cette modification n'est pas possible. Le « Footer » **doit rester consistant** et étant utilisé sur toutes les pages du site **il n'est pas possible d'avoir un « Footer »** spécifique. Des raisons techniques seront avancées comme **des contraintes Bootstrap**, etc.\n2. Un composant alternatif va être **crée part les développeur Back-end** afin de répondre à cette demande. Une **condition sera mise en place** pour que le composant du **Footer alternatif soit injecté sur l'accueil** et uniquement sur l'accueil.  Cela forcera également de dupliquer du code qu'il faudra maintenir en double en cas de changement.\n\n    ```html\n<footer class=\"container\">\n    <div class=\"row\">\n\t    <div class=\"col-sm-6\">\n\t\t    <div class=\"hidden-xs\">\n\t\t        <a href=\"\">Join us on Facebook !</a>\n\t\t    </div>\n\t\t    <div class=\"text-center visible-xs\">\n\t\t        <a href=\"\">Join us on Facebook !</a>\n\t\t    </div>\n\t    </div>\n\t    <div class=\"col-sm-6\">\n\t\t    <div class=\"text-right hidden-xs\">\n\t\t        All rights not reserved.\n\t\t    </div>\n\t\t    <div class=\"visible-xs\">\n\t\t        All rights not reserved.\n\t\t    </div>\n\t    </div>\n    </div>\n</footer>\n```\n\n3. Dans un cas extrême il serait même envisagé de faire **travailler les Content Filler** en plaçant les classes dans des variations de contenu par page de manière à **ne pas injecter les mêmes classes en fonction de la page appelée** avec un code comme celui ci-dessous... le summum de l'aberrance.\n\n    ```html\n<footer class=\"container\">\n    <div class=\"row\">\n\t    <div class=\"<column-left>\">\n\t\t    <div class=\"<mobile>\">\n\t\t        <a href=\"\">Join us on Facebook !</a>\n\t\t    </div>\n\t\t    <div class=\"<desktop>\">\n\t\t        <a href=\"\">Join us on Facebook !</a>\n\t\t    </div>\n\t    </div>\n\t    <div class=\"<column-right>\">\n\t\t    <div class=\"<mobile>\">\n\t\t        All rights not reserved.\n\t\t    </div>\n\t\t    <div class=\"<desktop>\">\n\t\t        All rights not reserved.\n\t\t    </div>\n\t    </div>\n    </div>\n</footer>\n```\n\n#### La solution logique de l'approche CSS-driven ####\n\nLe HTML n'aurait absolument pas besoin de changer puisque **la demande concerne le design**. C'est donc bien **le développeur Front-end qui doit s'occuper de cette tâche** et en assurer l'évolution et la maintenance. Cela signifie simplement que si le « Footer » est injecté sur un layout comportant la classe `.home` en amont (sur le `<body>` par exemple). Il suffit alors d'**ajouter à la fin de la feuille CSS les règles suivantes** :\n\n```css\n@media (min-width: 768px) {\n    .home .copyright,\n    .home .share,\n.col12-6 { width: 50%; }\n\n    .home .copyright,\n    .home .share,\n.push-pull-reset { left: 0; right: 0; }\n\n    .home .share,\n.text-left { text-align: left; }\n\n    .home .copyright,\n.text-right { text-align: right; }\n}\n```\n\n\n## Profiter des avantages d'un Framework CSS tout en respectant les bonnes pratiques ##\n\nC'est ici qu'intervient le préprocesseur [Less](http://lesscss.org/). Sans être un grand expert dans ce languages on peut très facilement tirer parti des avantages d'un Framework CSS comme Bootstrap sans surcharger d'une seule ligne son DOM.\n\n[Less](http://lesscss.org/) vous permet d'utiliser des variables dans votre CSS ainsi que des raccourcis de classe à la place de retaper toutes vos propriétés CSS. En sortie, c'est bien un fichier CSS qui est généré mais, vous n'avez pas besoin de vous en pré-occuper :\n- Vous n'avez qu'à maintenir le `.less` dans vos fichiers et le `.css` est automatiquement généré. Un fichier `.css.map` permet également à votre navigateur de vous indiquer pour un élément HTML ciblé dans votre débogueur F12 quelles lignes du fichier `.less` sont utilisées (C'est le cas pour Google Chrome sans aucune intervention de votre part).\n- Pour maintenir non plus un fichier `.css`, mais un fichier `.less`, il va vous falloir un logiciel qui va exécuter pour vous votre fichier `test.less` avant le renvoi de la réponse au client quand le fichier `test.css` est demandé.\n- Une fois en environnement de production on active aucunement Less et c'est bien `test.css` qui sera renvoyé sans calcule supplémentaire quand une requête pour `test.css` sera effectuée par le client.\n\n> **Pour ma part, j'utilise le moteur de sites web [Node.js](http://nodejs.org/) : [NodeAtlas](http://haeresis.github.io/NodeAtlas/)**. [Il permet d'activer Less facilement](https://github.com/Haeresis/NodeAtlas#g%C3%A9n%C3%A9rer-les-css-avec-less) dans un environnement de développement pour travailler dans les règles de l'art avec les versions Less de vos Frameworks préférés !\n\n\n### Étude d'un exemple avec Bootstrap ###\n\nIl vous faudra :\n- La [version Less de Bootstrap](http://getbootstrap.com/getting-started/), \n- un navigateur déboguant facilement Less avec des fichiers `.css.map` comme [Google Chrome et son débogueur](https://www.google.com/chrome/browser/desktop/index.html) et,\n- un interpréteur de `.less` pour générer vos `.css` comme [NodeAtlas](http://haeresis.github.io/NodeAtlas/) si vous faites du [Node.js](http://nodejs.org/).\n\n\n\n#### Sources ####\n- Une implémentation de cet exemple pour [NodeAtlas](https://github.com/Haeresis/NodeAtlas) se trouve sur [le repository PreprocessorAtlas](https://github.com/Haeresis/PreprocessorAtlas) à l'url : http://localhost:7777/bootstrap/ une fois le site lancé.\n- [Un exemple Codepen live se trouve derrière ce lien](http://codepen.io/Haeresis/pen/dPpMNv) !\n\n#### Explications ####\n\nNous allons habiller la structure HTML suivante avec Bootstrap ; notez qu'aucune classe Bootstrap ne vient polluer le DOM HTML :\n\n**HTML**\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n\t\t<meta charset=\"UTF-8\">\n        <title>Less Example with Bootstrap</title>\n    </head>\n    <body>\n        <header>\n            <div class=\"brand\">\n                \n                <div class=\"logo component\">\n                    <h3>Bruno Lesieur</h3>\n                </div>\n\n            </div>\n            <div class=\"slogan\">\n                \n                <div class=\"markdown component\">\n                    <p>Some #ID with lot of .CLASS</p>\n                </div>\n\n            </div>\n            <div class=\"title\">\n                \n                <div class=\"logo component\">\n                    <h1>Quelque #ID et beaucoup de .CLASS</h1>\n                </div>  \n\n            </div>\n            <nav class=\"main-nav\">\n                \n                <div class=\"navigation component\">\n                    <ul>\n                        <li><a href=\"\">Home</a></li>\n                        <li><a href=\"\">Section A</a></li>\n                        <li><a href=\"\">Section B</a></li>\n                        <li><a href=\"\">Section C</a></li>\n                    </ul>\n                </div>      \n\n            </nav>\n        </header>\n        <div class=\"content\">\n            <section class=\"overview\">\n                \n                <div class=\"carousel component\">\n                    <h1>Slide 1</h1>\n                    <p>Bla bla bla</p>\n                </div>  \n\n            </section>\n            <nav class=\"anchor-nav\">\n                \n                <div class=\"navigation component\">\n                    <h2>Summary</h2>\n                    <ul>\n                        <li>\n                            <a href=\"#h1-title\">H1 Title</a>\n                            <ul>\n                                <li>\n                                    <a href=\"#h2-title\">H2 Title</a>\n                                    <ul>\n                                        <li><a href=\"#h3-title-1\">H3 Title 1</a></li>\n                                        <li><a href=\"#h3-title-2\">H3 Title 1</a></li>\n                                    </ul>\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n\n            </nav>\n            <article class=\"main\">\n                <div class=\"article\">\n\n                    <div class=\"markdown component\">\n                        <header>\n                            <h1 id=\"h1-title\">H1 Title</h1>\n                            <p>This is a leading text for my article</p>\n                        </header>\n\n                        <h2 id=\"h2-title\">H2 Title</h2>\n                        <p>Bla bla bla</p>\n\n                        <h3 id=\"h3-title-1\">H3 Title 1</h3>\n                        <p>Bla bla bla</p>\n\n                        <h3 id=\"h3-title-2\">H3 Title 2</h3>\n                        <p>Bla bla bla</p>\n\n                        <header>\n                            <footer>\n                                <p>by <a href=\"\">Haeresis</a></p>\n                                <p>date, etc</a></p>\n                            </footer>\n                        </header>\n                    </div>\n\n                </div>\n                <ul class=\"step-list\">\n                    <li class=\"step\">\n\n                        <div class=\"markdown component\">\n                            <h3>H3 Step</h3>\n                            <p>Bla bla bla</p>\n                        </div>\n\n                    </li>\n                    <li class=\"step\">\n                        \n                        <div class=\"markdown component\">\n                            <h3>H3 Step</h3>\n                            <p>Bla bla bla</p>\n                        </div>\n\n                    </li>\n                    <li class=\"step\">\n                        \n                        <div class=\"markdown component\">\n                            <h3>H3 Step</h3>\n                            <p>Bla bla bla</p>\n                        </div>\n\n                    </li>\n                </ul>\n            </article>\n            <ul class=\"call-to-action-list\">\n                <li class=\"call-to-action\">\n                    \n                    <div class=\"markdown component\">\n                        <h2>H2 Action</h2>\n                        <p>Bla bla bla</p>\n                    </div>\n\n                </li>\n                <li class=\"call-to-action\">\n        \n                    <div class=\"markdown component\">\n                        <h2>H2 Action</h2>\n                        <p>Bla bla bla</p>\n                    </div>          \n\n                </li>\n                <li class=\"call-to-action\">\n        \n                    <div class=\"markdown component\">\n                        <h2>H2 Action</h2>\n                        <p>Bla bla bla</p>\n                    </div>          \n\n                </li>\n            </ul>\n        </div>\n        <footer>\n            <nav class=\"secondary-nav\">\n                \n                <div class=\"navigation component\">\n                    <ul>\n                        <li>\n                            <a href=\"\">Contact us</a>\n                        </li>\n                    </ul>\n                </div>\n\n            </nav>\n            <div class=\"utils\">\n                \n                <div class=\"markdown component\">\n                    <p>Join us on Google+</p>\n                </div>  \n\n            </div>\n            <div class=\"legals\">\n                \n                <div class=\"markdown component\">\n                    <p>©All Right not reserved at all</p>\n                </div>  \n\n            </div>\n        </footer>\n    <body>\n</html>\n```\n\nEt voici le fichier Less expliqué :\n\n**Less**\n\n```css\n/*------------------------------------*\\\n    $SUMMARY\n\\*------------------------------------*/\n\n/**\n * SUMMARY.................C'est moi !\n * RESET...................Même rendu pour tous les navigateurs.\n * IMPORT..................Les fichiers Less nécessaire de Bootstrap.\n * TESTS...................Des règles CSS activables et désactivables pour les tests.\n * GRID....................Habillage de la grille.\n */\n\n\n\n\n\n/*------------------------------------*\\\n    $RESET\n\\*------------------------------------*/\n\n/* On inclut le padding à la taille. */\n* {\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n\n/* On évite les marges. */\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n\n\n\n\n/*------------------------------------*\\\n    $IMPORT\n\\*------------------------------------*/\n\n/* On importe les variables du Framework. */\n@import 'bootstrap/variables';\n\n/* On importe le système de grille. */\n@import 'bootstrap/grid';\n@import 'bootstrap/mixins/grid';\n@import 'bootstrap/mixins/grid-framework';\n\n/* On importe le système de responsivité. */\n@import 'bootstrap/responsive-utilities';\n@import 'bootstrap/mixins/responsive-visibility';\n\n/* À titre d'exemple, voici tout ce qu'il faudrait importer pour utiliser `.text-center` et `.text-right`. Il n'est parfois pas toujours judicieux d'importer des parties de Framework quand on a besoin que d'une classe. Nous créerons notre propre alignement plus bas. */\n/*\n@import 'bootstrap/type';\n@import 'bootstrap/mixins/text-overflow.less';\n@import 'bootstrap/mixins/text-emphasis.less';\n@import 'bootstrap/mixins/background-variant.less';\n*/\n\n\n\n\n\n/*------------------------------------*\\\n    $TESTS\n\\*------------------------------------*/\n\n/* Afficher les zones plus facilement dans la page HTML pour déboguer l'affichage. */\n.brand:before,\n.slogan:before,\n.title:before,\n.main-nav:before,\n.overview:before,\n.anchor-nav:before,\n.main:before,\n.call-to-action:before,\n.secondary-nav:before,\n.legals:before,\n.utils:before {\n   width: 100%;\n   display: inline-block;\n}\n\n.brand:before {\n    content: \"Brand\";\n   background-color: rgba(0, 0, 150, 0.5);\n}\n.slogan:before {\n   content: \"Slogan\";\n   background-color: rgba(150, 150, 0, 0.5);\n}\n.title:before {\n   content: \"Title\";\n   background-color: rgba(255, 0, 0, 0.2);\n}\n.main-nav:before {\n   content: \"Nav\";\n   background-color: rgba(0, 255, 0, 0.2);\n}\n.overview:before {\n   content: \"Overview\";\n   background-color: rgba(150, 0, 0, 0.5);\n}\n.anchor-nav:before {\n   content: \"Anchor nav\";\n   background-color: rgba(0, 0, 255, 0.2);\n}\n.main:before {\n   content: \"Main\";\n   background-color: rgba(255, 255, 0, 0.2);\n}\n.call-to-action:before {\n   content: \"Call to action\";\n   background-color: rgba(255, 0, 255, 0.2);\n}\n.secondary-nav:before {\n   content: \"Secondary nav\";\n   background-color: rgba(0, 150, 0, 0.5);\n}\n.legals:before {\n   content: \"Legals\";\n   background-color: rgba(0, 255, 255, 0.2);\n}\n.utils:before {\n   content: \"Utils\";\n   background-color: rgba(150, 0, 150, 0.5);\n}\n.main:before {\n  content: none;\n}\n.article:before {\n  content: \"Article\";\n  background-color: rgba(255, 255, 0, 0.2);\n  width: 100%;\n  display: inline-block;\n}\n.step:before {\n  content: \"Step\";\n  background-color: rgba(0, 255, 0, 0.2);\n  width: 100%;\n  display: inline-block;\n}\n\n\n\n\n/*------------------------------------*\\\n    $GRID\n\\*------------------------------------*/\n\n/* Normalement, Bootsrap utilise la classe `.row` sur un élément enfant pour annuler le padding inutile en vu d'injecter des colonnes. Nous n'allons pas surcharger le DOM pour cela aussi nous créons une nouvelle classe qui s'applique directement sur le `.container` et qui à la même fonction. */\n.padding-reset {\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tpadding-left: 0;\n\tpadding-right: 0;\n}\n\n/* Nous allons manager nous même les `.row` sans nécessairement ajouter des éléments dans le DOM. */\n.clear-left {\n\tclear: left;\t\n}\n\n/* Nous allons utiliser les listes pour définir des éléments de liste et non des `div` comme Bootstrap le fait habituellement. */\n.ul-reset {\n\tpadding: 0;\n\tmargin: 0;\n\tlist-style: none;\n}\n\n/* Affin de ne pas importer du code inutile, nous allons nous même recréer les trois classes nécessaire pour l'alignement des textes. */\n.text-right {\n  text-align: right;\n}\n.text-left {\n  text-align: left;\n}\n.text-center {\n  text-align: center;\n}\n\n\n\n\n\n/* À partir d'ici, on habille notre grille avec les raccourcis propre à Less.\n- `&:extend(<class>);` rajoute la classe courante à la liste des classes du sélecteur `<class>` à la ligne ou elle est définie.\n- `<class>;` ajoute l'intégralité des sélecteurs de la classe <class> à ceux de la classe courante. */\n\n/* Ainsi on ajoute\n- `body > header, .content, body > footer` aux classes `.container` et `.padding-reset`\nce qui donnera en sortie\n- `body > header, .content, body > footer, .container {}` et \n- `body > header, .content, body > footer, .padding-reset {}` */\nbody > header,\n.content,\nbody > footer {\n\t&:extend(.container, .padding-reset);\n}\n\n/* Ici on ajoute les mécanismes des colonnes Bootstrap. */\n.brand {\n\t.make-sm-column(2);\n\t.make-sm-column-push(10);\n}\n.slogan {\n\t.make-sm-column(10);\n\t.make-sm-column-pull(2);\n}\n/* On créer manuellement un retour à la ligne sous cette colonne, peut importe son contenu. */\n.title {\n\t&:extend(.clear-left);\n\t.make-sm-column(2);\n}\n.main-nav {\n\t.make-sm-column(10);\n}\n.overview {\n\t.make-sm-column(12);\n}\n.anchor-nav {\n\t.make-sm-column(3);\t\n}\n.main {\n\t.make-sm-column(9);\t\n}\n.call-to-action-list {\n\t&:extend(.ul-reset);\n}\n.call-to-action {\n\t.make-sm-column(6);\n\t.make-md-column(4);\n}\n.call-to-action:nth-child(1) {\n\t.make-lg-column-offset(2);\n}\n\n/* On cache le troisième élément `.call-to-action` en fonction de la taille de l'écran représenté par les variables : `@screen-sm-min`, `@screen-md-min` et `@screen-lg-min`. */\n@media (min-width: @screen-sm-min) {\n\t.call-to-action:nth-child(n+3) {\n\t\tdisplay: none;\n\t}\n}\n@media (min-width: @screen-md-min) {\n\t.call-to-action:nth-child(n+3) {\n\t\tdisplay: block;\n\t}\n}\n@media (min-width: @screen-lg-min) {\n\t.call-to-action:nth-child(n+3) {\n\t\tdisplay: none;\n\t}\n}\n.secondary-nav {\n\t.make-sm-column(12);\n}\n.utils {\n\t.make-sm-column(3);\n\t.make-sm-column-push(9);\n}\n.legals {\n\t.make-sm-column(9);\n\t.make-sm-column-pull(3);\n}\n/* Cette fois on utilise bien `.row` pour annuler le padding de l'élément englobant afin de ré-aligner la grille interne. */\n.step-list {\n\t&:extend(.ul-reset);\n\t.row;\n}\n.step {\n\t.hidden-xs;\n\t.make-sm-column(4);\n}\n.legals,\n.brand {\n  .text-left;\n}\n.utils {\n  .text-center;\n}\n@media (min-width: @screen-sm-min) {\n  .utils,\n  .brand {\n    .text-right;\n  }\n  .legals {\n    .text-left\n  }\n}\n```\n\n\n\n### Étude d'un exemple sans Framework ###\n\nIl vous faudra :\n- Un navigateur déboguant facilement Less avec des fichiers `.css.map` comme [Google Chrome et son débogueur](https://www.google.com/chrome/browser/desktop/index.html) et,\n- un interpréteur de `.less` pour générer vos `.css` comme [NodeAtlas](http://haeresis.github.io/NodeAtlas/) si vous faites du [Node.js](http://nodejs.org/).\n\n\n\n#### Sources ####\n\n- Une implémentation de cet exemple pour [NodeAtlas](https://github.com/Haeresis/NodeAtlas) se trouve sur [le repository LessAtlas](https://github.com/Haeresis/LessAtlas) à l'url : http://localhost:7777/no-framework/ une fois le site lancé.\n- [Un exemple Codepen live se trouve derrière ce lien](http://codepen.io/Haeresis/pen/KwgzmE)  !\n\n#### Explications ####\n\nNous allons habiller la même structure HTML que précédemment mais à la main sans aucun Framework :\n\n**HTML**\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n\t\t<meta charset=\"UTF-8\">\n        <title>Less Example with Bootstrap</title>\n    </head>\n    <body>\n        <header>\n            <div class=\"brand\">\n                \n                <div class=\"logo component\">\n                    <h3>Bruno Lesieur</h3>\n                </div>\n\n            </div>\n            <div class=\"slogan\">\n                \n                <div class=\"markdown component\">\n                    <p>Some #ID with lot of .CLASS</p>\n                </div>\n\n            </div>\n            <div class=\"title\">\n                \n                <div class=\"logo component\">\n                    <h1>Quelque #ID et beaucoup de .CLASS</h1>\n                </div>  \n\n            </div>\n            <nav class=\"main-nav\">\n                \n                <div class=\"navigation component\">\n                    <ul>\n                        <li><a href=\"\">Home</a></li>\n                        <li><a href=\"\">Section A</a></li>\n                        <li><a href=\"\">Section B</a></li>\n                        <li><a href=\"\">Section C</a></li>\n                    </ul>\n                </div>      \n\n            </nav>\n        </header>\n        <div class=\"content\">\n            <section class=\"overview\">\n                \n                <div class=\"carousel component\">\n                    <h1>Slide 1</h1>\n                    <p>Bla bla bla</p>\n                </div>  \n\n            </section>\n            <nav class=\"anchor-nav\">\n                \n                <div class=\"navigation component\">\n                    <h2>Summary</h2>\n                    <ul>\n                        <li>\n                            <a href=\"#h1-title\">H1 Title</a>\n                            <ul>\n                                <li>\n                                    <a href=\"#h2-title\">H2 Title</a>\n                                    <ul>\n                                        <li><a href=\"#h3-title-1\">H3 Title 1</a></li>\n                                        <li><a href=\"#h3-title-2\">H3 Title 1</a></li>\n                                    </ul>\n                                </li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n\n            </nav>\n            <article class=\"main\">\n                <div class=\"article\">\n\n                    <div class=\"markdown component\">\n                        <header>\n                            <h1 id=\"h1-title\">H1 Title</h1>\n                            <p>This is a leading text for my article</p>\n                        </header>\n\n                        <h2 id=\"h2-title\">H2 Title</h2>\n                        <p>Bla bla bla</p>\n\n                        <h3 id=\"h3-title-1\">H3 Title 1</h3>\n                        <p>Bla bla bla</p>\n\n                        <h3 id=\"h3-title-2\">H3 Title 2</h3>\n                        <p>Bla bla bla</p>\n\n                        <header>\n                            <footer>\n                                <p>by <a href=\"\">Haeresis</a></p>\n                                <p>date, etc</a></p>\n                            </footer>\n                        </header>\n                    </div>\n\n                </div>\n                <ul class=\"step-list\">\n                    <li class=\"step\">\n\n                        <div class=\"markdown component\">\n                            <h3>H3 Step</h3>\n                            <p>Bla bla bla</p>\n                        </div>\n\n                    </li>\n                    <li class=\"step\">\n                        \n                        <div class=\"markdown component\">\n                            <h3>H3 Step</h3>\n                            <p>Bla bla bla</p>\n                        </div>\n\n                    </li>\n                    <li class=\"step\">\n                        \n                        <div class=\"markdown component\">\n                            <h3>H3 Step</h3>\n                            <p>Bla bla bla</p>\n                        </div>\n\n                    </li>\n                </ul>\n            </article>\n            <ul class=\"call-to-action-list\">\n                <li class=\"call-to-action\">\n                    \n                    <div class=\"markdown component\">\n                        <h2>H2 Action</h2>\n                        <p>Bla bla bla</p>\n                    </div>\n\n                </li>\n                <li class=\"call-to-action\">\n        \n                    <div class=\"markdown component\">\n                        <h2>H2 Action</h2>\n                        <p>Bla bla bla</p>\n                    </div>          \n\n                </li>\n                <li class=\"call-to-action\">\n        \n                    <div class=\"markdown component\">\n                        <h2>H2 Action</h2>\n                        <p>Bla bla bla</p>\n                    </div>          \n\n                </li>\n            </ul>\n        </div>\n        <footer>\n            <nav class=\"secondary-nav\">\n                \n                <div class=\"navigation component\">\n                    <ul>\n                        <li>\n                            <a href=\"\">Contact us</a>\n                        </li>\n                    </ul>\n                </div>\n\n            </nav>\n            <div class=\"utils\">\n                \n                <div class=\"markdown component\">\n                    <p>Join us on Google+</p>\n                </div>  \n\n            </div>\n            <div class=\"legals\">\n                \n                <div class=\"markdown component\">\n                    <p>©All Right not reserved at all</p>\n                </div>  \n\n            </div>\n        </footer>\n    <body>\n</html>\n```\n\nEt voici le fichier Less expliqué :\n\n**Less**\n\n```css\n/*------------------------------------*\\\n\t\t$SUMMARY\n\\*------------------------------------*/\n\n/**\n * SUMMARY.................C'est moi !\n * VARIABLES...............Valeurs réutilisables.\n * RESET...................Même rendu pour tous les navigateurs.\n * TESTS...................Des règles CSS activables et désactivables pour les tests.\n * GRID....................Grille de base à 12 colonnes.\n * ALIGNMENT...............Alignement du contenu des colonnes.\n * VISTIBLE / HIDDEN.......Cacher / Afficher les colonnes.\n * UI......................Appliquer la CSS sur les éléments.\n */\n\n\n\n\n\n/*------------------------------------*\\\n    $VARIABLES\n\\*------------------------------------*/\n\n/* Les valeurs qui vont nous servir de gap pour l'affichage responsive des éléments. */\n@screen-xs-max: 763px;\n@screen-sm-min: 764px;\n@screen-sm-max: 991px;\n@screen-md-min: 992px;\n@screen-md-max: 1199px;\n@screen-lg-min: 1200px;\n\n\n\n\n\n/*------------------------------------*\\\n\t$RESET\n\\*------------------------------------*/\n\n/* On inclut le padding à la taille. */\n* {\n\t-webkit-box-sizing: border-box;\n\t   -moz-box-sizing: border-box;\n\t\t\tbox-sizing: border-box;\n}\n\n/* On évite les marges. */\nbody {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n\n\n\n\n/*------------------------------------*\\\n\t$TESTS\n\\*------------------------------------*/\n\n/* Afficher les zones plus facilement dans la page HTML pour déboguer l'affichage. */\n.brand:before,\n.slogan:before,\n.title:before,\n.main-nav:before,\n.overview:before,\n.anchor-nav:before,\n.main:before,\n.call-to-action:before,\n.secondary-nav:before,\n.legals:before,\n.utils:before {\n    width: 100%;\n    display: inline-block;\n}\n\n.brand:before {\n    content: \"Brand\";\n    background-color: rgba(0, 0, 150, 0.5);\n}\n.slogan:before {\n    content: \"Slogan\";\n    background-color: rgba(150, 150, 0, 0.5);\n}\n.title:before {\n    content: \"Title\";\n    background-color: rgba(255, 0, 0, 0.2);\n}\n.main-nav:before {\n    content: \"Nav\";\n    background-color: rgba(0, 255, 0, 0.2);\n}\n.overview:before {\n    content: \"Overview\";\n    background-color: rgba(150, 0, 0, 0.5);\n}\n.anchor-nav:before {\n    content: \"Anchor nav\";\n    background-color: rgba(0, 0, 255, 0.2);\n}\n.main:before {\n    content: \"Main\";\n    background-color: rgba(255, 255, 0, 0.2);\n}\n.call-to-action:before {\n    content: \"Call to action\";\n    background-color: rgba(255, 0, 255, 0.2);\n}\n.secondary-nav:before {\n    content: \"Secondary nav\";\n    background-color: rgba(0, 150, 0, 0.5);\n}\n.legals:before {\n    content: \"Legals\";\n    background-color: rgba(0, 255, 255, 0.2);\n}\n.utils:before {\n    content: \"Utils\";\n    background-color: rgba(150, 0, 150, 0.5);\n}\n.main:before {\n\tcontent: none;\n}\n.article:before {\n\tcontent: \"Article\";\n\tbackground-color: rgba(255, 255, 0, 0.2);\n\twidth: 100%;\n\tdisplay: inline-block;\n}\n.step:before {\n\tcontent: \"Step\";\n\tbackground-color: rgba(0, 255, 0, 0.2);\n\twidth: 100%;\n\tdisplay: inline-block;\n}\n\n\n\n\n\n/*------------------------------------*\\\n    $GRID\n\\*------------------------------------*/\n\n/* On crée une grille sur 12 colonnes en affectant les valeurs. */\n.span12-12 { width: 100%; }\n.span12-11 { width: 91.66666667%; }\n.span12-10 { width: 83.33333333%; }\n.span12-9 { width: 75%; }\n.span12-8 { width: 66.66666667%; }\n.span12-7 { width: 58.33333333%; }\n.span12-6 { width: 50%; }\n.span12-5 { width: 41.66666667%; }\n.span12-4 { width: 33.33333333%; }\n.span12-3 { width: 25%; }\n.span12-2 { width: 16.66666667%; }\n.span12-1 { width: 8.33333333%; }\n\n/* On crée de quoi déplacer les colonnes vers la droite. */\n.pull12-12 { right: 100%; }\n.pull12-11 { right: 91.66666667%; }\n.pull12-10 { right: 83.33333333%; }\n.pull12-9 { right: 75%; }\n.pull12-8 { right: 66.66666667%; }\n.pull12-7 { right: 58.33333333%; }\n.pull12-6 { right: 50%; }\n.pull12-5 { right: 41.66666667%; }\n.pull12-4 { right: 33.33333333%; }\n.pull12-3 { right: 25%; }\n.pull12-2 { right: 16.66666667%; }\n.pull12-1 { right: 8.33333333%; }\n.pull12-0 { right: 0; }\n\n/* On crée de quoi déplacer les colonnes vers la gauche. */\n.push12-12 { left: 100%; }\n.push12-11 { left: 91.66666667%; }\n.push12-10 { left: 83.33333333%; }\n.push12-9 { left: 75%; }\n.push12-8 { left: 66.66666667%; }\n.push12-7 { left: 58.33333333%; }\n.push12-6 { left: 50%; }\n.push12-5 { left: 41.66666667%; }\n.push12-4 { left: 33.33333333%; }\n.push12-3 { left: 25%; }\n.push12-2 { left: 16.66666667%; }\n.push12-1 { left: 8.33333333%; }\n.push12-0 { left: 0; }\n\n/* On crée de quoi déplacer les colonnes vers la gauche en créant des espaces vides. */\n.prepend12-12 { margin-left: 100%; }\n.prepend12-11 { margin-left: 91.66666667%; }\n.prepend12-10 { margin-left: 83.33333333%; }\n.prepend12-9 { margin-left: 75%; }\n.prepend12-8 { margin-left: 66.66666667%; }\n.prepend12-7 { margin-left: 58.33333333%; }\n.prepend12-6 { margin-left: 50%; }\n.prepend12-5 { margin-left: 41.66666667%; }\n.prepend12-4 { margin-left: 33.33333333%; }\n.prepend12-3 { margin-left: 25%; }\n.prepend12-2 { margin-left: 16.66666667%; }\n.prepend12-1 { margin-left: 8.33333333%; }\n.prepend12-0 { margin-left: 0; }\n\n/* On crée de quoi déplacer les colonnes vers la droite en créant des espaces vides. */\n.append12-12 { margin-right: 100%; }\n.append12-11 { margin-right: 91.66666667%; }\n.append12-10 { margin-right: 83.33333333%; }\n.append12-9 { margin-right: 75%; }\n.append12-8 { margin-right: 66.66666667%; }\n.append12-7 { margin-right: 58.33333333%; }\n.append12-6 { margin-right: 50%; }\n.append12-5 { margin-right: 41.66666667%; }\n.append12-4 { margin-right: 33.33333333%; }\n.append12-3 { margin-right: 25%; }\n.append12-2 { margin-right: 16.66666667%; }\n.append12-1 { margin-right: 8.33333333%; }\n.append12-0 { margin-right: 0; }\n\n/* On crée de quoi appliquer les états définis au dessus sur nos colonnes. */\n.pull-push { position: relative; }\n.pull-push-reset { position: static; }\n\n/* On crée de quoi gérer les paddings. */\n.gutter { padding-left: 16px; padding-right: 16px; }\n.gutter-reset { padding-left: 0; padding-right: 0; }\n\n/* On crée de quoi gérer les listes et les retours à la ligne. */\n.list-reset { margin: 0;padding: 0;list-style-type: none; }\n.clearfix { clear: both; }\n\n/* On crée nos éléments unitaires. */\n.grid { max-width: 1200px; margin-left:auto; margin-right:auto; }\n.grid:after { content: \"\"; clear: both; display: block; }\n.column { float: left; width: 100%; }\n\n\n\n\n\n/*------------------------------------*\\\n\t\t$ALIGMENT\n\\*------------------------------------*/\n\n/* Gestion de l'alignement du contenu. */\n.text-left { text-align: left; }\n.text-center { text-align: center; }\n.text-right { text-align: right; }\n.text-justify { text-align: justify; }\n\n\n\n\n\t\n/*------------------------------------*\\\n\t\t$VISTIBLE / HIDDEN\n\\*------------------------------------*/\n\n/* Gestion de la visibilité du contenu. */\n.display-block { display: block; }\n.display-inline { display: inline-block; }\n.display-inline-block { display: inline-block; }\n.display-none { display: none; }\n\n\n\n\n\n/*------------------------------------*\\\n    $UI\n\\*------------------------------------*/\n\n/* Habillage Mobile et Petite Tablette. */\n/* Comme on n'utilise pas de Media Queries dans les prochaines définitions, on peut utiliser `&:extend` qui va ajouter la classe courante au sélecteur dans `&:extend` au niveau de la définition du sélecteur plus haut, cela pour alléger la feuille CSS qui sera générées. */\nbody > header,\nbody > footer,\n.content {\n    &:extend(.grid);\n}\n\nbody > header:after,\nbody > footer:after,\n.content:after {\n    &:extend(.grid:after);  \n}\n\n.brand,\n.slogan,\n.title,\n.main-nav,\n.overview,\n.anchor-nav,\n.main,\n.article,\n.step,\n.call-to-action,\n.secondary-nav,\n.utils,\n.legals {\n    &:extend(.column);   \n}\n\n.brand,\n.slogan,\n.title,\n.main-nav,\n.overview,\n.anchor-nav,\n .article,\n.step,\n.call-to-action,\n.secondary-nav,\n.utils,\n.legals {\n    &:extend(.gutter);\n}\n\n.step-list,\n.call-to-action-list {\n    &:extend(.list-reset);\n}\n\n.title {\n    &:extend(.clearfix);\n}\n\n.legals,\n.utils {\n    &:extend(.text-center);  \n}\n\n.step {\n    &:extend(.display-none);    \n}\n\n/* Tablette / Petit Écran \nOn utilise nos variables `@screen-sm-min`, `@screen-md-min` et `@screen-lg-min`  pour garder toujours la même valeur dans la zone de @media.\n*/\n\n@media (min-width: @screen-sm-min) {\n\n/* En ce qui concerne les classes dans des zones de Media Queries, il ne faut pas utiliser `&:extend` mais simplement le nom des classes de manière à dupliquer les sélecteurs de ces classes à l'intérieur de la classe que vous venez de déclarer et donc à l'intérieur des Media Queries. */\n    .brand,\n    .title {\n        .span12-2;\n    }\n    .anchor-nav,\n    .utils {\n        .span12-3;\n    }\n    .step {\n        .span12-4;\n    }\n    .call-to-action {\n        .span12-6;\n    }\n    .legals,\n    .main {\n        .span12-9;\n    }\n    .main-nav,\n    .slogan {\n        .span12-10;\n    }\n\n    .utils,\n    .legals,\n    .brand,\n    .slogan {\n        .pull-push;\n    }\n\n    .utils {\n        .push12-9;\n    }\n    .brand {\n        .push12-10;\n    }\n    .slogan {\n        .pull12-2;\n    }\n    .legals {\n        .pull12-3;\n    }\n    .legals {\n        .text-left;\n    }\n    .brand,\n    .utils {\n        .text-right;\n    }\n    .step {\n        .display-block;\n    }\n    .call-to-action:nth-child(n + 3) {\n        .display-none;\n    }\n}\n\n/* Écran Standard */\n@media (min-width: @screen-md-min) {\n    .anchor-nav,  \n    .call-to-action {\n        .span12-4;\n    }\n    .main {\n        .span12-8;\n    }\n    .call-to-action:nth-child(n + 3) {\n        .display-block;\n    }\n}\n\n/* Grand Écran */\n@media (min-width: @screen-lg-min) {\n    .anchor-nav {\n        .span12-3;\n    }\n    .call-to-action {\n        .span12-4;\n    }\n    .main {\n        .span12-9;\n    }\n    .call-to-action:nth-child(odd) {\n        .prepend12-2;\n    }\n    .call-to-action:nth-child(even) {\n        .append12-2;\n    }\n    .call-to-action:nth-child(n + 3) {\n        .display-none;\n    }\n}\n```\n\n\n\n\n\n## De l'utilité d'un Framework ##\n\nCe que l'on peut constater facilement en étudiant les deux exemples précédents c'est que la connaissance du Framework, afin de l'utiliser judicieusement, n'est pas bien plus utile/difficile à appliquer que de créer son propre jeu de classe CSS. Les Frameworks CSS sont donc de très bonnes sources d'inspiration et l'étude de leurs mécanismes améliorera grandement vos aptitudes en CSS mais leur utilisation [ne vous dispense pas de réfléchir](http://blog.goetter.fr/2013/08/23/un-framework-css-ne-dispense-pas-de-reflechir/).", "dates" : { "published" : { "$date" : 1419340140000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Utilisation optimisée de Framework CSS comme Bootstrap avec Less", "urn" : "utilisation-optimisee-de-framework-css-comme-bootstrap-avec-less" }
{ "__v" : 0, "_id" : { "$oid" : "54aa5e637d7ac1495000ea7c" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48c7" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "582b22f1fa290e086423e837" }, { "$oid" : "5810c54a889f9b4bb0ece04f" }, { "$oid" : "5310456355dfd5f7698d48c8" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "530ef6a6789c1a55e4fde0af" } ], "content" : "Je vous propose de créer vos propres sites [Node.js] armés pour un rendu de qualité côté client et avec très peu de JavaScript. Vous pourrez ensuite, petit à petit et à votre rythme, vous plonger dans la partie Back-end JavaScript offerte par [Node.js]. Tout ceci est possible grâce au module [npm] (node.js package manager) *[NodeAtlas]*.\n\n*[NodeAtlas]* est un Framework JavaScript côté serveur orienté Front-end, c'est-à-dire qu'il permet de faire tourner des sites multilingues complets uniquement avec les parties *Vue* et *Route* d'activées le reste étant fait par le framework. Bien évidemment, en activant la partie *Contrôleur* et *Modèle* vous prendrez la main sur le JavaScript serveur et vous pourrez créer de grands sites de qualités avec tout ce que l'on est en droit d'attendre : compte utilisateur, envoi de message, chat en direct... ou de solides applications web couplées à des Frameworks Javascript Frontaux comme [Vue] ou même [simplement du code maison](https://blog.lesieur.name/structurer-le-javascript-de-son-site-avec-ou-sans-framework/) ! Mais commençons par le commencement.\n\nSachez que le blog sur lequel vous lisez cet article est fait avec *[NodeAtlas]* ([obtenir les sources](https://github.com/NodeAtlas/BlogAtlas/)), ce qui lui permet de respecter facilement les standards [HTML](http://validator.w3.org/check?uri=http%3A%2F%2Fblog.lesieur.name%2Fdes-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas%2F&charset=%28detect+automatically%29&doctype=Inline&group=0&user-agent=W3C_Validator%2F1.3+http%3A%2F%2Fvalidator.w3.org%2Fservices)/[CSS](http://jigsaw.w3.org/css-validator/validator?uri=http%3A%2F%2Fblog.lesieur.name%2Fdes-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas%2F&profile=css3&usermedium=all&warning=1&vextwarning=&lang=fr) et de [fournir sans efforts de hautes performances](./media/documents/GTmetrix-report-blog.lesieur.name-20161207T045101-DgGwcfC5.pdf).\n\n> *[NodeAtlas]* est designé pour :\n- **Les débutants en JavaScript qui souhaitent se mettre au Node.js rapidement**.\n- [Les experts Front-end, en leur permettant de créer des sites web ou des maquettes HTML de qualité](https://blog.lesieur.name/creer-et-maintenir-des-maquettes-html-avec-node-atlas/).\n- Les experts en développement web et/ou JavaScript en leur permettant de créer des sites web et applications JavaScript à hautes performances serveurs.\n\n[npm]: https://www.npmjs.com/ \"npm is the package manager for node.\"\n[NodeAtlas]: https://www.npmjs.com/package/node-atlas/ \"Create MVC2 or Front-end-based websites easily.\"\n[Node.js]: http://nodejs.org/ \"Node.js is a platform built on Chrome's JavaScript runtime easily building fast, scalable network applications.\"\n[Vue]: https://vuejs.org/ \"The Progressive JavaScript Framework\"\n\n\n\n\n\n## Créer un projet et lancer son Hello World ##\n\nIl existe bien des manières d'utiliser le module *[NodeAtlas]*. Nous allons ici l'utiliser avec le `require` de [Node.js].\n\n### Installer le module NodeAtlas ###\n\nNous allons prendre en considération que vous [avez déjà installé Node.js et npm sur votre machine](https://blog.lesieur.name/installer-et-utiliser-nodejs-sous-windows/).\n\n1. Créez vous n'importe où sur votre machine l'arborescences suivante :\n\n   ```\nproject-directory/\n└─ server.js\n```\n\n2. et remplissez le contenu de `server.js` avec le code suivant :\n\n   ```js\nrequire('node-atlas')().run({\n    browse: true\n});\n```\n\n   *Note: `browse` ouvrira votre navigateur.*\n\n3. puis placez-vous ensuite dans votre répertoire `project-directory` et ouvrez un invité de commande (sous Windows, dans l'explorer de dossier, maintenez la touche `shift` enfoncée et faites un clique droit ; sélectionnez ensuite l'option « Ouvrir une fenêtre de commandes ici »).\n\n4. Entrez la commande `npm install node-atlas` pour installer le module *[NodeAtlas]* localement, dans votre dossier projet. Une fois installé, votre contenu de répertoire projet devrait ressembler à ceci :\n\n   ```\nproject-directory/\n├─ node_modules/\n│  ├─ node-atlas/\n│  ┊┉\n│\n└─ server.js\n```\n\n5. Enfin, testez le tout en tapant dans votre console `node server.js --lang fr-fr` pour obtenir le message « NodeAtlas est maintenant en français ! » suivit de « NodeAtlas c'est lancé en mode « Simple Serveur Web » car aucun « <path\\to\\>project-directory\\webconfig.json » n'a été trouvé. » ou de « NodeAtlas c'est arrêté car le port 80 est déjà écouté par une autre application. ». Une page web devrait également s'ouvrir à l'adresse « http://localhost/ » avec le message « Cannot GET / ».\n\n   *Note: `--lang` est ce qui a mis *[NodeAtlas]* en français. Il n'est plus nécéssaire pour la suite.*\n\n\n\n### Le Hello World ###\n\nAffichons notre première page web ! Nous allons ajouter à la structure initiale un `webconfig.json` et une page `index.htm` dans le dossier des vues `views/` afin de créer une route.\n\n1. Nous créons donc le fichier `webconfig.json` que nous allons alimenter comme suit :\n\n   ```json\n{\n    \"routes\": {\n        \"/hello-world/\": \"index.htm\"\n    }\n}\n```\n\n   Nous venons donc de dire qu'à l'adresse « http://localhost/hello-world/ » nous afficherons le contenu de `index.htm`.\n\n   > Si vous aviez eu le message « NodeAtlas c'est arrêté car le port 80 est déjà écouté par une autre application. », changez alors le port d'écoute de votre application avec le `webconfig.json` suivant :\n\n   > ```json\n{\n    \"httpPort\": 7777,\n    \"routes\": {\n        \"/hello-world/\": \"index.htm\"\n    }\n}\n```\n\n  > Cette fois, c'est l'adresse « http://localhost:7777/hello-world/ » qu'il faudra afficher pour avoir le contenu de `index.htm`.\n\n2. Nous créons ensuite le fameux fichier de contenu `index.htm` pour obtenir l'arborescence suivante :\n\n   ```\nproject-directory/\n├─ node_modules/\n│  ├─ node-atlas/\n│  ┊┉\n│\n├─ views/\n│  └─ index.htm\n└─ server.js\n```\n\n   et le remplissons de ce contenu :\n\n   ```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>The Hello World Page !</title>\n    </head>\n    <body>\n        <p>Hello World !</p>\n    </body>\n</html>\n```\n\n3. Relançons la commande précédente :\n 1. En retournant dans votre invité de commande.\n 2. En tapant `Ctrl + C` pour couper l'instance en cours\n 3. En appuyant sur la touche « haut » pour ré-afficher la commande `node server.js --lang fr-fr` (vous pouvez à présent seulement conserver `node server.js` car la langue restera en `fr-fr`).\n\n   Cela ouvre votre navigateur à l'adresse « http://localhost/ » (ou « http://localhost:7777/ ») avec un joli : « Cannot GET / ». Allez donc à l'addresse « /hello-world/ » comme celà : « http://localhost/hello-world/ » pour afficher votre « Hello World ! ».\n\n[<img alt=\"Votre premier Hello World avec NodeAtlas\" src=\"./media/images/upload/nodeatlas-hello-world-mini.jpg\" width=\"560\" height=\"313\">](https://blog.haeresis.fr/upload/image/nodeatlas-hello-world.jpg)\n\n> Il est possible, si votre page d'atterissage est « /hello-world/ », de changer votre fichier `server.js` comme suit :\n\n   > ```js\nrequire('node-atlas')().run({\n    browse: \"/hello-world/\"\n});\n```\n\n\n\n\n\n## Architecture HTML multilingue ##\n\n### Gestion des vues et inclusions ###\n\n#### La structure de l'exemple ####\n\nLa structure et le découpage que je vais vous proposer est arbitraire. *[NodeAtlas]* vous laisse la totale liberté quand à la structure et au découpage de votre rendu. Pas d'id imposé, pas de classe... rien.\n\nVoici celle que je vous propose pour notre exemple :\n\n1. Le dossier du projet qui contient tous les fichiers.\n\n   ```\nproject-directory/\n```\n\n2. Le dossier contenant tous les modules npm de votre site.\n\n   ```\n├─ node_modules/\n│  ├─ node-atlas/\n│  ┊┉\n```\n\n3. Le dossier contenant tous les fichiers disponibles par demande HTTP sans nécésiter de référence de route dans le `webconfig.json`. Le dossier `assets/`.\n\n   ```\n├─ assets/\n│  ├─ javascripts/\n│  │  ├─ common.js\n│  │  └─ home.js\n│  ├─ stylesheets/\n│  │  ├─ common.css\n│  │  └─ home.css\n│  └─ media/\n│     └─ images/\n```\n\n4. Le dossier contenant chaque vue d'affichage différent pour votre site.\n\n   ```\n├─ views/\n│  ├─ home.htm\n│  ├─ default.htm\n```\n\n5. Le dossier contenant les composants HTML répétable sur plus d'une vue et ajouté via des `include`.\n\n   ```\n│  └─ partials/\n│     ├─ head.htm\n│     ├─ header.htm\n│     ├─ footer.htm\n│     └─ foot.htm\n```\n\n6. Les fichiers de la racines du projet. S'ajouterons à termes un `README.md` et un `package.json`.\n\n   ```\n├─ server.js\n└─ webconfig.json\n```\n\nCe qui nous donne en totalité :\n\n```\nproject-directory/\n├─ node_modules/\n│  ├─ node-atlas/\n│  ┊┉\n│\n├─ assets/\n│  ├─ javascripts/\n│  │  ├─ common.js\n│  │  └─ home.js\n│  ├─ stylesheets/\n│  │  ├─ common.css\n│  │  └─ home.css\n│  └─ media/\n│     └─ images/\n├─ views/\n│  ├─ home.htm\n│  ├─ default.htm\n│  └─ partials/\n│     ├─ head.htm\n│     ├─ header.htm\n│     ├─ footer.htm\n│     └─ foot.htm\n├─ server.js\n└─ webconfig.json\n```\n\nNous allons remplir ces fichiers, avant d'exécuter la suite. [Vous pouvez télécharger cette arborescence à vide ici pour gagner du temps](https://blog.lesieur.name/media/scripts/upload/project-directory-assets-views.zip).\n\n#### Liste des routes ####\n\nVoici le fichier `webconfig.json` que nous allons alimenter :\n\n```json\n{\n    \"languageCode\": \"en-gb\",\n    \"pageNotFound\": \"/page-404/\",\n    \"routes\": {\n        \"/\": \"home.htm\",\n        \"/presentation/\": \"default.htm\",\n        \"/contact-us/\": \"default.htm\",\n        \"/page-404/\": {\n            \"view\": \"default.htm\",\n            \"statusCode\": 404\n        }\n    }\n}\n```\n\nDe manière à obtenir (pour le moment) :\n- Une page d'accueil derrière « `http://localhost/` »,\n- Une page de présentation derrière « `http://localhost/presentation/` »,\n- Une page de contact derrière « `http://localhost/contact-us/` »,\n- Et une page d'erreur derrière toutes les urls ne pointant pas vers un fichier du dossier `assets/`.\n\n*Note : si la route —initialement une `string`— se transforme en `Object`, alors la propriété dans cet objet (représentant la `string` initiale) est `view`.*\n\n#### Structure des vues Home et Default ####\n\nPour commencer, nous n'aurons que deux vues différentes. Une vue présentant une liste d'éléments important à consulter et une vue permettant d'afficher *un titre* et *du texte*.\n\nVoici donc nos deux vues :\n\n**views/default.htm**\n\n```html\n<!-- Sections communes stockées dans le dossier `views/partials/` et inclues dans notre vue. Ici la balise <head> avec les feuilles de style communes ainsi que le header. -->\n<?- include('partials/head.htm') ?>\n<?- include('partials/header.htm') ?>\n\n        <section class=\"overview\">\n            <h1>Presentation</h1>\n\n            <p>This is a presentation about subject of the website !</p>\n        </section>\n\n<!-- Sections communes stockées dans le dossier `views/partials/` et inclues dans notre vue. Ici les scripts JavaScript communs et le footer. -->\n<?- include('partials/footer.htm') ?>\n<?- include('partials/foot.htm') ?>\n```\n\n**views/home.htm**\n\n```html\n<?- include('partials/head.htm') ?>\n\n        <!-- Liste des styles CSS disponibles pour la vue courante. -->\n        <link rel=\"stylesheet\" href=\"stylesheets/home.css\">\n\n<?- include('partials/header.htm') ?>\n\n        <section class=\"must-see\">\n            <h1>Not to be missed</h1>\n\n            <ul>\n                <li>\n                    <h2>What is our subject ?</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n                    <p><a href=\"./presentation/\">Go to Presentation</a></p>\n                </li>\n                <li>\n                    <h2>Contact us !</h2>\n                    <p>Quibusdam eaque nemo dolorum labore dolor repellendus minus, magnam asperiores, nostrum, nisi porro, molestiae ipsa.</p>\n                    <p><a href=\"./contact-us/\">Go to Contact Information</a></p>\n                </li>\n                <li>\n                    <h2>Welcome !</h2>\n                    <p>Vero aliquam debitis, similique rerum hic asperiores.</p>\n                    <p><a href=\"./\">Go to Home</a></p>\n                </li>\n            </ul>\n        </section>\n\n<?- include('partials/footer.htm') ?>\n\n        <!-- Liste des controllers JavaScript client spécifiques à la vue courante. -->\n        <script type=\"text/javascript\" src=\"javascripts/home.js\"></script\n\n<?- include('partials/foot.htm') ?>\n```\n\net voici les 4 vue partielles communes incluse dans ces deux vues :\n\n1. **views/partials/head.htm**\n\n   ```html\n<!DOCTYPE html>\n<!-- Injection dynamique de la langue pour la route courante via `languageCode`. -->\n<html lang=\"<?= languageCode ?>\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Title of the page</title>\n\n        <!-- Injection dynamique de l'url absolue du site jusqu'à sa racine. -->\n        <base href=\"<?= urlBasePath ?>/\">\n\n        <!-- Liste des Frameworks CSS disponibles pour toutes les pages. -->\n        <link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css\">\n\n        <!-- Liste des styles CSS disponibles pour toutes les pages. -->\n        <link rel=\"stylesheet\" href=\"stylesheets/common.css\">\n```\n\n2. **views/partials/header.htm**\n\n   ```html\n    </head>\n    <body>\n        <!-- Classe spécifique à chaque layout. -->\n        <div class=\"home layout\">\n            <header>\n                <h1>Website main title</h1>\n            </header>\n```\n\n   *Note : nous verrons dans la partie suivante comment injecter une classe de layout différente en fonction du template qui injecte le composant.*\n\n3. **views/partials/footer.htm**\n\n   ```html\n            <footer>\n                <p>©All rights not reserved at all !</p>\n            </footer>\n        </div>\n\n        <!-- Liste des librairies JavaScript disponibles pour toutes les vues. -->\n        <script type=\"text/javascript\" src=\"//code.jquery.com/jquery-3.1.1.min.js\"></script>\n```\n\n4. **views/partials/foot.htm**\n\n   ```html\n        <!-- Liste des controllers JavaScript client qui affectent toutes les vues. -->\n        <script type=\"text/javascript\" src=\"javascripts/common.js\"></script>\n    </body>\n</html>\n```\n\n   > N'oubliez pas de remettre votre page de lancement à la racine :\n\n**server.js**\n\n   > ```js\nrequire('node-atlas')().run({\n    browse: \"/\" // ou true\n});\n```\n\nÀ présent, ré-exécutez `node server.js` rapidement :\n1. En retournant dans votre invité de commande.\n2. En tapant `Ctrl + C` pour couper l'instance en cours\n3. En appuyant sur la touche « haut » pour ré-afficher la commande `node server.js`.\n\n*Note : à notre niveau d'utilisation de *[NodeAtlas]*, seul un changement dans le `webconfig.json` nécessite un redémarrage du moteur*.\n\nComme vous pouvez le constater, toutes vos pages ont le même titre, la même classe de layout et même pire, les pages « /presentation/ », « /contact-us/ » ou les pages d'erreurs (comme « /a-non-existing-page/ ») sont identiques... pas très pratique tout cela. Bien qu'il soit possible d'étendre la configuration dédiée de chaque page dans le `webconfig` lui-même comme vous allez le voir ci-dessous, la section « Gestion des variations et du multilingue » de cet article sera dédiée à cette tâche.\n\n#### Étendre les routes du webconfig.json ####\n\nPour le petit exemple, si vous ne souhaitez pas activer les variations (voir plus loin dans cet article) pour quelques delta entre chaque page vous pouvez procéder comme suit :\n\n**webconfig.json**\n\n```json\n{\n    \"languageCode\": \"en-gb\",\n    \"pageNotFound\": \"/page-404/\",\n    \"routes\": {\n        \"/\": {\n            \"view\": \"home.htm\",\n            \"_layout\": \"home\",\n            \"_title\": \"Home Page\"\n        },\n        \"/presentation/\": {\n            \"view\": \"default.htm\",\n            \"_layout\": \"default\",\n            \"_title\": \"Presentation\"\n        },\n        \"/contact-us/\": {\n            \"view\": \"default.htm\",\n            \"_layout\": \"default\",\n            \"_title\": \"Contact Us\"\n        },\n        \"/page-404/\": {\n            \"view\": \"default.htm\",\n        \"statusCode\": 404,\n            \"_layout\": \"default\",\n            \"_title\": \"Page 404\"\n        }\n    }\n}\n```\n\n*Note : les noms de propriété pour étendre vos routes commence par des « _ » (cela est totalement arbitraire pour l'exemple) pour éviter qu'elles n'entrent en conflit avec de futures propriétées réservées par [NodeAtlas].*\n\n**views/partials/header.htm**\n\n```html\n    </head>\n    <body>\n        <!-- Utilisation de la valeur « home » ou « default » en fonction de la route. -->\n        <div class=\"<?- routeParameters._layout ?> layout\">\n            <header>\n                <!-- Utilisation de la valeur « Home Page », « Presentation », « Contact Us » ou « Page 404 » en fonction de la route. -->\n                <h1><?- routeParameters._title ?></h1>\n            </header>\n```\n\nDe cette manière, la classe layout et le titre seront différent en fonction de la page.\n\n\n\n\n### Gestion des variations et du multilingue ###\n\nÉtendre les routes avec vos propres variables de webconfig est plus une rustine qu'une véritable bonne pratique. Cela peut faire l'affaire pour une ou deux variables cependant le but d'une vue est d'être alimenté par des données transversales et différentes en fonction de la route : ces données sont les variations !\n\n#### Mettre en place des fichiers de variations pour une même vue ####\n\nNotre nouveau `webconfig.json` est le suivant :\n\n```json\n{\n    \"languageCode\": \"en-gb\",\n    \"pageNotFound\": \"/page-404/\",\n    \"routes\": {\n        \"/\": {\n            \"view\": \"home.htm\",\n            \"variation\": \"home.json\"\n        },\n        \"/presentation/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"presentation.json\"\n        },\n        \"/contact-us/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"contact-us.json\"\n        },\n        \"/page-404/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"page-404.json\",\n            \"statusCode\": 404\n        }\n    }\n}\n```\n\net nous avons donc dans notre structure le nouveau dossier :\n\n```\n├─ variations/\n│  ├─ home.json\n│  ├─ presentation.json\n│  ├─ contact-us.json\n│  └─ page-404.json\n```\n\n[Vous pouvez télécharger ce complément d'arborescence à vide ici pour gagner du temps](https://blog.lesieur.name/media/scripts/upload/project-directory-variations.zip).\n\nCela fait que nous avons à présent des variables utilisables pour chaque vue via la propriété `variation`. C'est vous qui décidez quelles sont les variables que vous souhaitez vous créer pour pouvoir par la suite les utiliser dans vos vues. Voyons de plus prèt tous ses fichiers.\n\nAvec les 3 fichiers de variations suivant :\n\n**variations/presentation.json**\n\n```json\n{\n    \"layout\": \"default presentation\",\n    \"title\": \"Presentation\",\n    \"content\": \"<p>This is a presentation about subject of the website !</p>\"\n}\n```\n\n**variations/contact-us.json**\n\n```json\n{\n    \"layout\": \"default contact-us\",\n    \"title\": \"Contact Us\",\n    \"content\": \"<p>Please contact us to fake@email.here.</p>\"\n}\n```\n\n**variations/page-404.json**\n\n```json\n{\n    \"layout\": \"default page-404\",\n    \"title\": \"Page 404\",\n    \"content\": \"<p>This page do not exist !</p>\"\n}\n```\n\non peut alimenter la vue suivante :\n\n**views/default.html**\n\n```html\n<?- include('partials/head.htm') ?>\n<?- include('partials/header.htm') ?>\n\n        <section class=\"overview\">\n            <!-- Retourne la valeur `title` du fichier json référencé dans la propriété `variation` de la route. -->\n            <h1><?- specific.title ?></h1>\n\n            <!-- Retourne la valeur `content` du fichier json référencé dans la propriété `variation` de la route. -->\n            <?- specific.content ?>\n        </section>\n\n<?- include('partials/footer.htm') ?>\n<?- include('partials/foot.htm') ?>\n```\n\nainsi le contenu des pages est différent en fonction de si l'on appel :\n\n- « `http://localhost/presentation/` »,\n- « `http://localhost/contact-us/` » ou\n- Une page qui n'existe pas « `http://localhost/a-non-existing-page/` ».\n\nDe la même manière le fichier de variation :\n\n**variations/home.json**\n\n```json\n{\n    \"layout\": \"home\",\n    \"title\": \"Home Page\",\n    \"overview\": [{\n        \"title\": \"What is our subject ?\",\n        \"content\": \"<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\",\n        \"link\": {\n            \"href\": \"./presentation/\",\n            \"content\": \"Go to Presentation\"\n        }\n    }, {\n        \"title\": \"Contact us !\",\n        \"content\": \"<p>Quibusdam eaque nemo dolorum labore dolor repellendus minus, magnam asperiores, nostrum, nisi porro, molestiae ipsa.</p>\",\n        \"link\": {\n            \"href\": \"./contact-us/\",\n            \"content\": \"Go to Contact Information\"\n        }\n    }, {\n        \"title\": \"Welcome !\",\n        \"content\": \"<p>Vero aliquam debitis, similique rerum hic asperiores.</p>\",\n        \"link\": {\n            \"href\": \"./\",\n            \"content\": \"Go to Home\"\n        }\n    }]\n}\n```\n\nalimente le template :\n\n**views/home.html**\n\n```html\n<?- include('partials/head.htm') ?>\n\n        <link rel=\"stylesheet\" href=\"stylesheets/home.css\">\n\n<?- include('partials/header.htm') ?>\n\n        <section class=\"must-see\">\n\n            <!-- Le tiret indique que l'on veut afficher la valeur et interpréter les éventuels éléments HTML qu'elle contient. -->\n            <h1><?- specific.title ?></h1>\n\n            <ul>\n\n                <!-- Voici comment boucler sur le tableau `specific.overview` du fichier de variation. -->\n                <? for (var i = 0, l = specific.overview.length; i < l; i++) { ?>\n                <li>\n                    <h2><?- specific.overview[i].title ?></h2>\n                    <?- specific.overview[i].content ?>\n\n                    <!-- L'égale indique que l'on veut afficher la valeur sans interpréter les éventuels éléments HTML qu'elle contient. -->\n                    <p><a href=\".<?= specific.overview[i].link.href ?>\"><?- specific.overview[i].link.content ?></a></p>\n                </li>\n                <? } ?>\n            </ul>\n        </section>\n\n<?- include('partials/footer.htm') ?>\n\n        <script type=\"text/javascript\" src=\"javascripts/home.js\"></script\n\n<?- include('partials/foot.htm') ?>\n```\n\nÀ présent, ré-exécutez `node server.js` pour tester.\n1. En retournant dans votre invité de commande.\n2. En tapant `Ctrl + C` pour couper l'instance en cours\n3. En appuyant sur la touche « haut » pour ré-afficher la commande `node server.js`.\n\n#### Gestion de sites multilingues avec les variations ####\n\nAvec cette mécanique, nous pouvons facilement gérer des sites en plusieurs langues. Pour cela nous allons activer deux mécanismes :\n\n- La possibilité d'avoir un fichier de variation commun à l'ensemble des pages.\n- La possiblilité d'indiquer un `languageCode` différent en fonction de la route utilisée.\n\nVoyons cela avec le fichier `webconfig.json` suivant :\n\n```json\n{\n    \"languageCode\": \"en-gb\",\n    \"pageNotFound\": \"/page-404/\",\n    \"variation\": \"common.json\",\n    \"routes\": {\n        \"/\": {\n            \"view\": \"home.htm\",\n            \"variation\": \"home.json\"\n        },\n        \"/presentation/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"presentation.json\"\n        },\n        \"/contact-us/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"contact-us.json\"\n        },\n        \"/francais/\": {\n            \"view\": \"home.htm\",\n            \"variation\": \"home.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"/francais/presentation/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"presentation.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"/francais/contactez-nous/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"contact-us.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"/francais/*\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"page-404.json\",\n            \"languageCode\": \"fr-fr\",\n        \"statusCode\": 404\n        },\n        \"/page-404/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"page-404.json\",\n            \"statusCode\": 404\n        }\n    }\n}\n```\n\net le nouveau dossier de variation suivant :\n\n```\n├─ variations/\n│  ├─ common.json\n│  ├─ home.json\n│  ├─ presentation.json\n│  ├─ contact-us.json\n│  ├─ page-404.json\n│  └─ fr-fr/\n│     ├─ common.json\n│     ├─ home.json\n│     ├─ presentation.json\n│     ├─ contact-us.json\n│     └─ page-404.json\n```\n\n[Vous pouvez télécharger ce complément d'arborescence à vide ici pour gagner du temps](https://blog.lesieur.name/media/scripts/upload/project-directory-variations-fr-fr.zip).\n\navec le nouveau fichier `en-gb` :\n\n**variations/common.json**\n\n```json\n{\n    \"title\": \"My first Website !\",\n    \"copyright\": \"©All rights not reserved at all !\"\n}\n```\n\net son équivalent `fr-fr` :\n\n**variations/fr-fr/common.json**\n\n```json\n{\n    \"title\": \"Mon premier site web !\",\n    \"copyright\": \"©Tous les droits ne sont pas réservés du tout !\"\n}\n```\n\net les versions complètes en français de :\n\n**variations/fr-fr/presentation.json**\n\n```json\n{\n    \"layout\": \"default presentation\",\n    \"title\": \"Présentation\",\n    \"content\": \"<p>Voici une présentation à propos du site de notre projet.</p>\"\n}\n```\n\n**variations/fr-fr/contact-us.json**\n\n```json\n{\n    \"layout\": \"default contact-us\",\n    \"title\": \"Contactez-nous\",\n    \"content\": \"<p>Merci de nous contacter à l'adresse fake@email.here.</p>\"\n}\n```\n\n**variations/fr-fr/page-404.json**\n\n```json\n{\n    \"layout\": \"default page-404\",\n    \"title\": \"Page 404\",\n    \"content\": \"<p>Cette page n'existe pas !</p>\"\n}\n```\n\n**variations/fr-fr/home.json**\n\n```json\n{\n    \"layout\": \"home\",\n    \"title\": \"Page d'accueil\",\n    \"overview\": [{\n        \"title\": \"Qu'est-ce que notre projet ?\",\n        \"link\": {\n            \"href\": \"./francais/presentation/\",\n            \"content\": \"Allez à la présentation\"\n        }\n    }, {\n        \"title\": \"Contactez-nous !\",\n        \"link\": {\n            \"href\": \"./francais/contactez-nous/\",\n            \"content\": \"Aller aux informations de contact\"\n        }\n    }, {\n        \"title\": \"Bienvenue !\",\n        \"link\": {\n            \"href\": \"./francais/\",\n            \"content\": \"Aller à l'accueil\"\n        }\n    }]\n}\n```\n\n*Note : vous remarquerez que les valeurs de `specific.overview[i].content` n'ont pas été traduites. Dans ce cas là, c'est la valeur du dossier parent qui sera prise en compte, dans notre cas la version `en-gb`.*\n\nEn ce qui concerne les vues, pas de changement puisqu'ils avaient déjà été effectués. Cependant, nous allons rendre dynamique les valeurs dans nos vues partielles `partials/header.htm` et `partials/footer.htm` à partir de notre fichier de vartiation `common.json`.\n\n**views/partials/header.htm**\n\n```html\n    </head>\n    <body>\n\n        <!-- Cette valeur sera différente en fonction de la route car elle provient d'un fichier spécifique. -->\n        <div class=\"<?= specific.layout ?> layout\">\n            <header>\n\n                <!-- Cette valeur sera identique pour toutes les routes car elle provient d'un fichier commun. -->\n                <h1><?- common.title ?></h1>\n            </header>\n```\n\n**views/partials/footer.htm**\n\n```html\n            <!-- Cette valeur sera identique pour toutes les routes car elle provient d'un fichier commun. -->\n            <footer>\n                <p><?- common.copyright ?></p>\n            </footer>\n        </div>\n        <script type=\"text/javascript\" src=\"//code.jquery.com/jquery-3.1.1.min.js\"></script>\n```\n\nÀ présent, ré-exécutez `node server.js` pour tester.\n\n- La page d'accueil `en-gb` derrière « http://localhost/ »,\n- La page de présentation `en-gb` derrière « http://localhost/presentation/ »,\n- La page de contact `en-gb` derrière « http://localhost/contact-us/ »,\n- Les page d'erreur `en-gb` derrière toutes les urls ne pointant pas vers un fichier du dossier `assets/` et n'étant pas dans `francais/`.\n- La page d'accueil `fr-fr` derrière « http://localhost/francais/ »,\n- La page de présentation `fr-fr` derrière « http://localhost/francais/presentation/ »,\n- La page de contact `fr-fr` derrière « http://localhost/francais/contactez-nous/ »,\n- Les page d'erreur `fr-fr` derrière toutes les urls pointant vers un chemin de `francais/` non listé avant.\n\n\n\n\n\n## Pour aller plus loin ##\n\n### Des urls dynamiques ###\n\nIl ne vous aura peut-être pas échappé que si vous changez l'intégralité de vos urls dans le fichier `webconfig.json`, tous vos liens ne seront plus valides à travers tous vos fichiers de variations. Voici la marche à suivre pour rendre tous vos liens dynamiques !\n\nChangeons notre `webconfig.json` comme suit (`pageNotFound` et chaque clé dans `routes`) :\n\n```json\n{\n    \"languageCode\": \"en-gb\",\n    \"pageNotFound\": \"error\",\n    \"variation\": \"common.json\",\n    \"routes\": {\n        \"home\": {\n            \"url\": \"/\",\n            \"view\": \"home.htm\",\n            \"variation\": \"home.json\"\n        },\n        \"presentation\": {\n            \"url\": \"/presentation/\",\n            \"view\": \"default.htm\",\n            \"variation\": \"presentation.json\"\n        },\n        \"contact-us\": {\n            \"url\": \"/contact-us/\",\n            \"view\": \"default.htm\",\n            \"variation\": \"contact-us.json\"\n        },\n        \"home-fr-fr\": {\n            \"url\": \"/francais/\",\n            \"view\": \"home.htm\",\n            \"variation\": \"home.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"presentation-fr-fr\": {\n            \"url\": \"/francais/presentation/\",\n            \"view\": \"default.htm\",\n            \"variation\": \"presentation.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"contact-us-fr-fr\": {\n            \"url\": \"/francais/contactez-nous/\",\n            \"view\": \"default.htm\",\n            \"variation\": \"contact-us.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"error-fr-fr\": {\n            \"url\": \"/francais/*\",\n            \"view\": \"default.htm\",\n            \"variation\": \"page-404.json\",\n            \"languageCode\": \"fr-fr\",\n            \"statusCode\": 404\n        },\n        \"error\": {\n            \"url\": \"/page-404/\",\n            \"view\": \"default.htm\",\n            \"variation\": \"page-404.json\",\n            \"statusCode\": 404\n        }\n    }\n}\n```\n\net voyons les modifications d'appel pour les liens dans la vue `home.htm` :\n\n**views/home.html**\n\n```html\n<?- include('partials/head.htm') ?>\n\n        <link rel=\"stylesheet\" href=\"stylesheets/home.css\">\n\n<?- include('partials/header.htm') ?>\n\n        <section class=\"must-see\">\n\n            <h1><?- specific.title ?></h1>\n\n            <ul>\n                <? for (var i = 0, l = specific.overview.length; i < l; i++) { ?>\n                <li>\n                    <h2><?- specific.overview[i].title ?></h2>\n                    <?- specific.overview[i].content ?>\n\n                    <!-- On réclame la clé `specific.overview[i].link.href` dans la liste des routes `webconfig.routes` pour en afficher son `url`. -->\n                    <p><a href=\".<?= webconfig.routes[specific.overview[i].link.href].url ?>\"><?- specific.overview[i].link.content ?></a></p>\n                </li>\n                <? } ?>\n            </ul>\n        </section>\n\n<?- include('partials/footer.htm') ?>\n\n        <script type=\"text/javascript\" src=\"javascripts/home.js\"></script\n\n<?- include('partials/foot.htm') ?>\n```\n\nIl faudra ensuite placer les bonnes clés dans les propriétés `overview[i].link.href` de vos fichiers `common.js` :\n\n**variations/home.json**\n\n```json\n{\n    \"layout\": \"home\",\n    \"title\": \"Home Page\",\n    \"overview\": [{\n        \"title\": \"What is our subject ?\",\n        \"content\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\",\n        \"link\": {\n            \"href\": \"presentation\",\n            \"content\": \"Go to Presentation\"\n        }\n    }, {\n        \"title\": \"Contact us !\",\n        \"content\": \"Quibusdam eaque nemo dolorum labore dolor repellendus minus, magnam asperiores, nostrum, nisi porro, molestiae ipsa.\",\n        \"link\": {\n            \"href\": \"contact-us\",\n            \"content\": \"Go to Contact Information\"\n        }\n    }, {\n        \"title\": \"Welcome !\",\n        \"content\": \"Vero aliquam debitis, similique rerum hic asperiores.\",\n        \"link\": {\n            \"href\": \"home\",\n            \"content\": \"Go to Home\"\n        }\n    }]\n}\n```\n\n**variations/fr-fr/home.json**\n\n```json\n{\n    \"layout\": \"home\",\n    \"title\": \"Page d'accueil\",\n    \"overview\": [{\n        \"title\": \"Qu'est-ce que notre projet ?\",\n        \"link\": {\n            \"href\": \"presentation-fr-fr\",\n            \"content\": \"Allez à la présentation\"\n        }\n    }, {\n        \"title\": \"Contactez-nous !\",\n        \"link\": {\n            \"href\": \"contact-us-fr-fr\",\n            \"content\": \"Aller aux informations de contact\"\n        }\n    }, {\n        \"title\": \"Bienvenue !\",\n        \"link\": {\n            \"href\": \"home-fr-fr\",\n            \"content\": \"Aller à l'accueil\"\n        }\n    }]\n}\n```\n\nÀ présent, ré-exécutez `node server.js` pour tester.\n\n**[Vous pouvez récupérer l'intégralité du code de cet article dans cette archive pour tester](https://blog.lesieur.name/media/scripts/upload/project-directory.zip).**\n\n### D'autres bonnes pratiques ###\n\nVous trouverez d'autres fonctionnalités de *[NodeAtlas]* sur le site officiel de [NodeAtlas](https://node-atlas.js.org/).\n\nÀ présent passons à notre second article pour bien débuter avec *[NodeAtlas]* et dédiés :\n\n- [aux développeur Front-end, en expliquant comment générer des maquettes HTML à partir d'un site *NodeAtlas* ou comment rendre automatique les tâches liées à la performance côté client](https://blog.lesieur.name/creer-et-maintenir-des-maquettes-html-avec-node-atlas/).", "dates" : { "published" : { "$date" : 1420789800000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : ".text p img {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 100%;\n}", "title" : "Des sites web Node.js pour débuter en JavaScript serveur avec NodeAtlas", "urn" : "des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas" }
{ "__v" : 0, "_id" : { "$oid" : "54bcdc3c1bee52d944ae9aac" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48c0" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48cc" }, { "$oid" : "5310456355dfd5f7698d48c8" }, { "$oid" : "5810c54a889f9b4bb0ece04f" }, { "$oid" : "582b22f1fa290e086423e837" }, { "$oid" : "5310456355dfd5f7698d48b8" } ], "content" : "> *NodeAtlas* est un Framework JavaScript MVC(2) côté serveur vous permettant de créer des sites évolutifs et performant et conforme W3C. C'est-à-dire qu'il permet de faire tourner des sites multilingues indexables ou de créer des maquettes HTML passant la validation W3C uniquement avec des Vues mais également de créer de gros sites orientés composants et/ou orientés services en respectant les nouveaux standards avec son système de point d'ancrage.\n\n\n\n\n\n## NodeAtlas c'est : ##\n\n- La porte d'entrée aux Développeurs Front-end dans le monde de [Node.js](https://nodejs.org/en/).\n- Du tout JavaScript ; pour les débutants venant du monde PHP, .NET, Ruby, Java ou pour les experts JS.\n- De l'évolutivité avec :\n   - des vues sans se préoccuper des contrôleurs,\n   - la prise en main progressive de contrôleurs et points d'ancrage,\n   - de l'internationalisation (i18n) et de la localisations (l10n) rapide,\n   - la puissance d'Express.js (serveur web) et Socket.io (échange client-serveur temps réel) pré-configuré, simple et ajustable,\n   - les préprocesseurs EJS, PUG (JADE), Less et Stylus embarqués et prêt à l'emploi,\n   - des outils interne de génération HTML sans serveur ou d'empaquetage, minifications, offuscations, optimisations de CSS, JS et images,\n   - encore ; de la manipulation de DOM côté serveur, du debug serveur dans le navigateur, de l'HTTPs facile à mettre en place.\n- De la combinaison d'instance NodeAtlas pour des architectures basés sur le service comme l'utilisation sous forme d'API REST,\n- Tous les modules NPM, middleware Express.js/Socket.io, des plugins utilisables (sessions, bases de données SQL/NoSQL, répartition de charge, proxy, développement à chaud).\n- [Un guide pas à pas Français et International](https://node-atlas.js.org/), avec un support communautaire sur [Gitter](https://gitter.im/NodeAtlas) (Chat) [FR](https://gitter.im/NodeAtlas/Aide)/[EN](https://gitter.im/NodeAtlas/Help).\n- Des passionnés de web et de JavaScript &lt;3 !\n- Et peut-être bientôt vous ?\n\n\n\n\n\n## Site Officiel de NodeAtlas ##\n\n> **[Pour une documentation complète, vous pouvez vous rendre sur le Site Officiel de NodeAtlas](https://node-atlas.js.org/)**.\n\n\n\n\n\n## Documentation ##\n\n### À propos de NodeAtlas ##\n\n- [README.md complet et détaillé sur GitHub](https://github.com/Haeresis/NodeAtlas/blob/gh-pages/README.fr.md)\n- [Pour maintenir et développer node-atlas.js](http://node-atlas.js.org/doc/index.html)\n- [Discuter sur le chat ou demander de l'aide pour NodeAtlas](https://gitter.im/NodeAtlas/Aide)\n\n\n\n### Exemple de sites ##\n\n- [Génération et maintenance de maquette HTML](https://github.com/NodeAtlas/ResumeAtlas/).\n- [Test et Documentation d'Interface Ulilisateur](https://github.com/NodeAtlas/DocAtlas/).\n- [Site Node.js avec Websocket et PopState](https://github.com/NodeAtlas/BookAtlas/).\n- [Site Node.js avec base MongoDB et Redis](https://github.com/NodeAtlas/BlogAtlas/).\n- [Exemple d'API REST](https://github.com/NodeAtlas/ApiAtlas/).\n- [Et encore plus sur la page Github de la communauté NodeAtlas](https://github.com/NodeAtlas/) !\n\n\n\n### Articles ###\n\n- [Article pour les débutants en JavaScript qui souhaitent se mettre au Node.js rapidement](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/).\n- [Article pour les experts Front-end, en leur permettant de créer des sites web ou des maquettes HTML de qualité](https://blog.lesieur.name/creer-et-maintenir-des-maquettes-html-avec-node-atlas/).\n- Article pour les experts en développement web et/ou JavaScript en leur permettant de créer des sites web et applications JavaScript à hautes performances serveurs (prochainement...).", "dates" : { "published" : { "$date" : 1421591280000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "NodeAtlas, le Framework JavaScript MVC(2), SEO et W3C compliant.", "urn" : "nodeatlas-le-framework-nodejs-mvc2-oriente-front-end" }
{ "__v" : 0, "_id" : { "$oid" : "54cc92c2a36eedac79a3a599" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48ba" } ], "content" : "Nous allons voir dans cet article comment créer rapidement un système permettant de surveiller si une touche du clavier est enfoncée lors de l'exécution d'une action dans votre navigateur ou mieux, si une série de touche est enfoncée pour autoriser/lancer l'exécution d'une action lors de la pression, par exemple, sur « Ctrl + Alt + E ».\n\n<figure>\n    <img src=\"media/images/upload/ctrlalte.jpg\" alt=\"Ctrl + Alt + E\">\n    <figcaption><a href=\"https://s-media-cache-ak0.pinimg.com/736x/5e/11/0f/5e110f0cda1acb3fdba06b38aab93586.jpg\">Image originale ici</a></figcaption>\n</figure>\n\nEt comme toujours, on va devoir jouer avec un peu de JavaScript ! Si vous n'avez pas trop le temps de jouer, [le code qui vous intéresse probablement se trouve ici](https://blog.lesieur.name/comment-gerer-les-raccourcis-clavier-en-javascript/#avec-jquery)\n\n\n\n\n\n## Détecter qu'une ou plusieurs touches sont enfoncées ##\n\nNous allons implémenter dans cette partie la fonctionnalité tant convoitée, mais de différentes manières. Cela vous ferra un exercice JavaScript intéressant. Par exemple sur cette page, appuyez sur « Ctrl + Alt + E ».\n\n\n\n### Avec les méthodes JavaScript inline `onkeydown` et `onkeyup` ###\n\nPour les anciens, vous les connaissez peut-être pour les avoir croisés au détour d'un attribut HTML comme ici : `<input type=\"text\" onkeydown=\"doSomething()\" />`. Ce qu'il faut retenir de la méthode inline pour les événements, c'est qu'elle ne garde que la dernière affectation de code, et qu'elle écrase toutes celles associées précédemment. Voyons plus bas cette implémentation.\n\n> [Tester cet exemple de code en live sur cette page](http://codepen.io/Haeresis/pen/KwvOPB).\n\n```js\n/*\n * Nous sommes dans le scope global,\n * aussi l'objet `keys` est accessible partout\n * dans le code à travers tous les fichiers JavaScript.\n*/\nvar keys = {};\n\n/*\n * Étant dans le code global,\n * `window.onkeydown` est identique à `this.onkeydown` \n * lui même identique à `onkeydown`.\n * On associe ci-dessous la même fonction lorsqu'une\n * touche est appuyée, et lorsqu'une touche est relachée.\n*/\nonkeydown = onkeyup = function (e) {\n\n    /*\n     * Si `e` n'existe pas, \n     * nous somme probablement dans un vieux IE.\n     * On affecte alors `event` à `e`.\n     */\n    e = e || event;\n\n    /*\n     * Si la fonction courante est executée, \n     * quand une touche est enfoncée,\n     * `e.type === 'keydown'` renverra `true`\n     * sinon elle renverra `false`.\n     * Il suffit alors d'assigner chaque état \n     * dans le tableau `keys` pour chaque\n     * touche `e.keyCode`.\n     */     \n    keys[e.keyCode] = e.type === 'keydown';\n    \n    /*\n     * Cette zone sera exécutée lorsque les touches\n     * Ctrl (17), Alt (18) et E (69)\n     * seront enfoncée en même temps\n     * car l'objet `keys` vaudra alors :\n     * {\n     *  17: true,\n     *  18: true,\n     *  69: true\n     * }\n  \t */\n    if (keys[17] && keys[18] && keys[69]) {\n\n      /*\n       * Affichera dans la console (F12, onglet console)\n       * le texte « Ctrl + Alt + E ».\n       */\n      console.log('Ctrl + Alt + E');\n    }\n}\n\n/*\n * Si l'on clique dans le navigateur...\n */\nonclick = function () {\n\n    /*\n     * ...alors que les touches\n     * Ctrl (17), Alt (16) et E (69)\n     * sont appuyées...\n     */\n    if (keys[17] && keys[16] && keys[69]) {\n\n        /*\n         * ...on affichera dans la console \n         * le texte « Ctrl + Alt + E ».\n         */\n        console.log('Ctrl + Shift + E');\n    }\n}\n```\n\n\n\n### Avec les écouteurs d'événement JavaScript ###\n\nÉtant donné que nous accrochons nos événements à l'objet global `window`, le mieux est d'abonner les événements à des écouteurs plutôt que d'utiliser les méthodes inline, comme cela nous pourrons par la suite abonner d'autres fonctions.\n\nCela se fait avec `addEventListener` (ou `attachEvent` sur les anciens IE).\n\n> [Tester cet exemple de code en live sur cette page](http://codepen.io/Haeresis/pen/LEjwWN).\n\n```js\nvar keys = {};\n\n/*\n * Mise du code appelé en commun dans une\n * fonction que nous allons\n * abonnée à un écouteur d'événement.\n */\nfunction trackMultipleKeyStroke (e) {\n    e = e || event;\n    keys[e.keyCode] = e.type === 'keydown';\n  \n    /*\n     * Cette partie constitue le code exécuté quand\n     * Ctrl (17), Alt (18) et E (69)\n     * sont enfoncées.\n     */\n    if (keys[17] && keys[18] && keys[69]) {\n        console.log('Ctrl + Alt + E');\n    }\n}\n\n/*\n * Fonction de rétro-compatibilité pour\n * les navigateurs Internet Explorer.\n * Elle marchera dans tous les navigateurs\n * et demandera qui s'abonne, à quel événement\n * et ce qu'il se passe quand l'événement est\n * appelé/levé.\n */\nfunction addEvent(element, event, func) {\n\n\t/*\n\t * Avons nous à faire à un vieil Internet Explorer ?\n\t */\n\tif (element.attachEvent) {\n\n\t\t/*\n\t\t * Abonnons nous alors comme Internet Explorer le propose.\n\t\t */\n\t\treturn element.attachEvent('on' + event, func);\n\t} else {\n\n  \t\t/*\n  \t\t * Nous nous abonnons comme la spécification ECMAScript le propose.\n  \t\t */\n\t\treturn element.addEventListener(event, func, false);\n  \t}\n}\n\n/*\n * Appel de la fonction de rétro-compatibilité \n * que nous venons de créer pour abonner `window`\n * au événement `keydown` et `keyup`\n */\naddEvent(window, \"keydown\", trackMultipleKeyStroke);\naddEvent(window, \"keyup\", trackMultipleKeyStroke);\n\n/*\n * Cette partie constitue le code exécuté quand\n * on clique dans la page...\n */\naddEvent(window, \"click\", function () {\n\n    /*\n     * ...si Ctrl (17), Shift (16) et E (69)\n     * sont enfoncées.\n     */\n    if (keys[17] && keys[16] && keys[69]) {\n        console.log('Ctrl + Shift + E');\n    }\n});\n```\n\n\n\n### Avec jQuery ###\n\nComme toujours, pour ne pas vous soucier de la compatibilité et écrire moins de code, vous pouvez faire appel à la librairie [jQuery](http://jquery.com/). Comme le code proposé ci-dessous.\n\n> [Tester cet exemple de code en live sur cette page](http://codepen.io/Haeresis/pen/XJavgr).\n\n```js\nvar keys = {};\n\n$(window).on(\"keyup keydown\", function (e) {\n    e = e || event;\n    keys[e.keyCode] = e.type === 'keydown';\n  \n    /*\n     * Cette partie constitue le code exécuté quand\n     * Ctrl (17), Alt (18) et E (69)\n     * sont enfoncées.\n     */\n    if (keys[17] && keys[18] && keys[69]) {\n        console.log('Ctrl + Alt + E');\n    }\n\n    /*\n     * Cette partie constitue le code exécuté quand\n     * on clique dans la page...\n     */\n}).click(function () {\n\n    /*\n     * ...si Ctrl (17), Shift (16) et E (69)\n     * sont enfoncées.\n     */\n    if (keys[17] && keys[16] && keys[69]) {\n        console.log('Ctrl + Shift + E');\n    }\n});\n```\n\n\n\n\n\n## 3 points à savoir ##\n\nIl y a quelques points à savoir pour ensuite utiliser ces raccourcis clavier en toutes circonstances.\n\n\n\n1. ### Perte de focus ###\n\n   Quand vous levez une popup via `alert` ou plus globalement que vous perdez le focus, l'événement `keyup` n'est pas levé ce qui laisse penser au navigateur que vous maintenez encore les touches alors que ce n'est peut-être plus le cas. Pour remédier à cela, l'astuce est de remettre à vide l'objet global `keys`.\n\n   > Ainsi le code ci-dessous produit le bug : *`voyez-plutôt`*\n\n   > ```js\nvar keys = {};\n$(window).on(\"keyup keydown\", function (e) {\n    e = e || event;\n    keys[e.keyCode] = e.type === 'keydown';\n}).click(function () {\n    /*\n     * Quand vous ré-appuierez sur une des trois touches de la combinaison,\n     * même sans appuyer sur les autres touches,\n     * l'alerte se relancera car elle empêche les valeurs de l'objet \n     * contenant les touches de repasser à `false` quand vous les relâchés.\n     */\n    if (keys[17] && keys[16] && keys[69]) {\n        alert('Ctrl + Shift + E');\n    }\n});\n```\n\n   La solution est donc de vider toutes les valeurs pour qu'elles soient interprétées comme \n`false` après l'appel de la fonction faisant perdre le focus.\n\n   > Ainsi le code ci-dessous résout le bug : **`voyez-plutôt`**\n\n   > ```js\nvar keys = {};\n$(window).on(\"keyup keydown\", function (e) {\n    e = e || event;\n    keys[e.keyCode] = e.type === 'keydown';\n}).click(function () {\n    if (keys[17] && keys[16] && keys[69]) {\n        alert('Ctrl + Shift + E');\n        /*\n         * Remet les valeurs des touches à `false` en les vidants.\n         */\n        keys = {};\n    }\n});\n```\n\n2. ### Plusieurs écoutes, bon ordre ###\n\n   Si vous souhaiter lister vos raccourcis clavier, il faut lister vos combinaisons de touches de la séquence la plus longue à la séquence la plus courte avec des `else if` sinon vous n’arriverez jamais à faire fonctionner les combinaisons les plus longues.\n\n   > Ci-dessous la seconde combinaison ne sera jamais appelée : *`voyez-plutôt`*\n\n   > ```js\nif (keys[17] && keys[69]) {\n    console.log('Ctrl + E');\n} else if (keys[17] && keys[16] && keys[69]) {\n    console.log('Ctrl + Shift + E');\n}\n```\n\n   La bonne pratique est donc la suivante.\n\n   > Ci-dessous la seconde combinaison fonctionnera : **`voyez-plutôt`**\n\n   > ```js\nif (keys[17] && keys[16] && keys[69]) {\n    console.log('Ctrl + Shift + E');\n} else if (keys[17] && keys[69]) {\n    console.log('Ctrl + E');\n}\n```\n\n3. ### Prendre la main sur les raccourcis du navigateur ###\n\n   Parfois, votre combinaison de touche ouvre une action par défaut programmée par le navigateur. Si vous souhaitez l'annuler, faites comme suit :\n\n   ```js\nvar keys = {};\n$(window).on(\"keyup keydown\", function (e) {\n    e = e || event;\n    keys[e.keyCode] = e.type === 'keydown';\n\n    if (keys[17]] && keys[84]) {\n\n        /*\n         * Normalement, un nouvel onglet devrait s'ouvrir, \n         * car c'est le raccourci utilisé pour cela.\n         */\n        console.log('Ctrl + T');\n\n        /*\n         * Mais pas en ajoutant `return false`.\n         */\n        return false;\n    }\n});\n```\n\n\n\n\n\n## Les Char Codes ou Key Codes ##\n\nVous trouverez [la liste des nombres](http://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes) à mettre dans votre objet `keys` sur [la page suivante](http://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes).", "dates" : { "published" : { "$date" : 1422786600000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "var keys = {};\n$(window).on(\"keyup keydown\", function (e) {\n    e = e || event;\n    keys[e.keyCode] = e.type === 'keydown';\n    if (keys[17] && keys[18] && keys[69]) {\n        alert('Ctrl + Alt + E');\n        keys = {};\n        return false;\n    }\n});", "stylesheet" : "", "title" : "Comment gérer les raccourcis clavier en JavaScript", "urn" : "comment-gerer-les-raccourcis-clavier-en-javascript" }
{ "__v" : 0, "_id" : { "$oid" : "54d0dd87a36eedac79a3a59d" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48b9" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48b8" } ], "content" : "Pour les personnes en charge de l'édition de contenu, remplir des liens est souvent source de problème car, là où la page des termes et conditions avaient toujours été une page interne au site, la voilà devenu un fichier PDF ou une page plus globale hébergée sur un autre site web ; ce qui demande l'ouverture d'un nouvel onglet pour s'afficher. Et le pire dans tout cela, c'est que c'est juste pour la version du site en Vulcain ! Il va donc falloir laisser ces mêmes personnes gérer eux-mêmes la propriété `target` ou...\n\n...**utiliser un script intelligent qui va ajouter les `target=\"_blank\"` là ou ils sont nécessaires !**\n\nCela est également très pratique quand on rédige ses pages en Markdown.\n\n\n\n\n\n## Un peu d'histoire ##\n\nLe fameux attribut `target=\"_blank\"` que l'on utilise pour ouvrir une fenêtre dans un nouvel onglet à toujours été une petite source de conflit. Très utilisé lors de l'époque du HTML4, il a été boudée un certain temps durant la période xHTML car non valide. La bataille a donc fait rage entre :\n\n- ceux ne faisant que peu de cas des standards,\n- ceux affirmant que c'était à l'utilisateur de décider dans quel onglet ouvrir le lien (sans que ce même utilisateur ne sache comment faire),\net \n- ceux faisant appel au JavaScript pour passer les validations...\n\nAujourd'hui de l'eau a été mis dans le vin puisque à l'heure du HTML5, la balise `target` est de nouveau autorisée.\n\n\n\n\n\n## Smart Target Injection ##\n\n### Explication ###\n\n*Voilà les règles établies pour savoir si un lien doit être ouvert dans un nouvel onglet, ou dans l'onglet courant :*\n*Si le lien a déjà l'attribut `target` de défini (à `_blank`, `_self` ou autre), on ne touche à rien, mais si cet attribut est absent alors :*\n - *si le lien pointe sur un nom de domaine différent, on ouvre la page dans un nouvel onglet*\n - *si le lien pointe sur notre site web, deux cas :*\n   - *si c'est une page web on l'ouvre dans le même onglet,*\n   - *si c'est un média/fichier (.pdf, .jpg, .png, .js, .mp4, etc.) on l'ouvre dans un nouvel onglet.*\n\n### Code jQuery ###\n\nVoici le petit code [jQuery](http://jquery.com/) qui va faire cela. Si vous n'aimez pas [jQuery](http://jquery.com/), je vous propose [une version de ce code en JavaScript natif plus bas](https://blog.lesieur.name/ne-vous-souciez-plus-de-la-target-dans-vos-liens/#code-purement-javascript) et si vous voulez que vos `target` ne soient pas ajoutées côté client en JavaScript, [vous pouvez toujours utiliser NodeAtlas](https://blog.lesieur.name/nodeatlas-le-framework-nodejs-mvc2-oriente-front-end/) !\n\n```js\n/*\n * Pour tous les liens de la page courante...\n */\n$(document.links).filter(function() {\n    /*\n     * ...garder ceux qui n'on pas déjà une `target` dans les attributs...\n     */\n    return !this.target;\n}).filter(function() {\n    /*\n     * ...et garder les pages qui ne sont pas sur le nom de domaine courant...\n     */\n    return this.hostname !== window.location.hostname ||\n        /*\n         * ...ou qui ne sont pas des pages web (.pdf, .jpg, .png, .js, .mp4, etc.).\n         */\n        /\\.(?!html?)([a-z]{0,3}|[a-zt]{0,4})$/.test(this.pathname);\n/*\n * Pour toutes les pages conservées, ajouter l'attribut `target=\"_blank\"`. \n */\n}).attr('target', '_blank');\n```\n\n### À propos de la RegExp ###\n\nVous pouvez comprendre la RegExp utilisée ligne 17 sur [cette page explicative](https://regex101.com/r/sE6gT9/3).\n\nIl est également bon de noter que dans ce code, seules les extensions `.html` et `.htm` s'ouvre dans l'onglet courant. Vous pouvez ajouter des extensions comme cela :\n\n```js\n\\.(?!html?|aspx?|php3?)([a-z]{0,3}|[a-zt]{0,4})$\n```\n\nici les pages de type `.htm`, `.html`, `.php`, `.php3`, `.asp` et `.aspx` s'ouvrirons dans le même onglet.\n\n\n\n\n\n## Petit jeu de test ##\n\nVoici une liste de lien à tester. Sachez que de mon côté, je les ai écris en Markdown (`[Accueil relative « ./ »](./)`) et que je ne me suis absolument pas soucié de la `target` (devinez comment ?!).\n\n- [Accueil relative « ./ »](./) (page courante)\n- [Page actuelle relative « ./ne-vous-souciez-plus-de-la-target-dans-vos-liens/ »](./ne-vous-souciez-plus-de-la-target-dans-vos-liens/) (page courante)\n- [Une image du site relative « ./media/images/bw-author.png »](./media/images/bw-author.png) (nouvel onglet)\n- [Le flux RSS du site relatif « ./feeds/articles.xml »](./feeds/articles.xml) (nouvel onglet)\n- [Un lien relatif sans extension « ./non-exsitante-page »](./non-exsitante-page) (page courante)\n- [Un lien relatif avec .htm « ./non-exsitante-page.htm »](./non-exsitante-page.htm) (page courante)\n- [Un lien relatif avec .html « ./non-exsitante-page.html »](./non-exsitante-page.html) (page courante)\n- [Accueil absolue « https://blog.lesieur.name/ »](https://blog.lesieur.name/) (page courante)\n- [Page actuelle absolue « https://blog.lesieur.name/ne-vous-souciez-plus-de-la-target-dans-vos-liens/ »](https://blog.lesieur.name/ne-vous-souciez-plus-de-la-target-dans-vos-liens/) (page courante)\n- [Une image du site absolue « https://blog.lesieur.name/media/images/bw-author.png »](https://blog.lesieur.name/media/images/bw-author.png) (nouvel onglet)\n- [Le flux RSS du site absolue « https://blog.lesieur.name/feeds/articles.xml »](https://blog.lesieur.name/feeds/articles.xml) (nouvel onglet)\n- [Page nouvel onglet « https://www.lesieur.name »](https://www.lesieur.name) (nouvel onglet)\n- [Image nouvel onglet « http://fc08.dev{...}d5k2le2.jpg »](http://fc08.deviantart.net/fs70/i/2012/309/9/1/the_moment_by_dzsurnik-d5k2le2.jpg) (nouvel onglet)\n- <a target=\"_self\" href=\"http://fc08.deviantart.net/fs70/i/2012/309/9/1/the_moment_by_dzsurnik-d5k2le2.jpg\">Image manuellement définie à target=\"_self\" « http://fc08.dev{...}d5k2le2.jpg »</a> (page courante)\n- <a target=\"_blank\" href=\"./\">Accueil manuellement définie à target=\"_blank\" « ./ »</a> (nouvel onglet)\n\n\n\n\n\n## Code purement JavaScript ##\n\nSi vous n'utilisez pas [jQuery](http://jquery.com/), voici le code :\n\n```js\nvar links = document.links;\n\nfor (var i = 0, linksLength = links.length; i < linksLength; i++) {\n    if (!links[i].target) {\n        if (\n            links[i].hostname !== window.location.hostname || \n            /\\.(?!html?)([a-z]{0,3}|[a-zt]{0,4})$/.test(links[i].pathname)\n        ) {\n            links[i].target = '_blank';\n        } \n    }\n}\n```", "dates" : { "published" : { "$date" : 1422967140000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "website.script = function () {\n    $(document.links).filter(function() {\n       return /\\.(html?)$/.test(this.pathname);\n    }).removeAttr('target');\n};", "stylesheet" : "", "title" : "Ne vous souciez plus de la target dans vos liens", "urn" : "ne-vous-souciez-plus-de-la-target-dans-vos-liens" }
{ "__v" : 0, "_id" : { "$oid" : "54e5ff40a36eedac79a3a59e" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "5310456355dfd5f7698d48c3" }, { "$oid" : "5310456355dfd5f7698d48c5" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "54f042102ae5a068f260dae2" } ], "content" : "Autant vous annoncer la mauvaise nouvelle tout de suite, il n'est pas possible d'utiliser les Media Queries dans l'attribut des balises HTML `style`. Ainsi le code suivant ne fonctionnera pas...\n\n```html\n<div>\n    <img \n        src=\"image/que/je/veux/decaller/seulement/quand/elle/flotte.png\" \n        style=\"@media(min-width: 768px){float:left margin:-4px 16px 8px -24px;}\">\n    <p>J'aimerai faire flotter à gauche l'image ci-dessus uniquement sur \n    les grands écrans. Comme les valeurs de `margin` sont ajustées uniquement \n    aux propriétés de cette image (-4px 16px 8px -24px), il n'existe pas de\n    classe  HTML-driven comme créer un `.float-left` (à l'avance) qui répondrait \n    exactement à mon besoin.</p>\n</div>\n```\n\n...c'est comme ça !\n\nDans ce cas, *comment faire pour gérer des propriétés CSS ponctuellement en utilisant les Media Queries ?* Cela est très utile pour le remplissage de contenu pour ajuster des images ou encore manager des `background-image`.\n\nLa solution n'est pas l'attribut `style` des balises HTML **mais la balise `<style>` elle même** !\n\n\n\n\n## La balise style ##\n\nLa solution simple en HTML5 est donc d'utiliser la balise `<style scoped>` dans la balise `<body>` d'un document HTML :\n\n```html\n<!DOCTYPE html><!-- On travail en HTML5 -->\n...\n<body>\n\t...\n\t<div>\n\t\t<style scoped>\n\t\t\t@media (min-width: 768px) {\n\t\t\t\t.on-the-fly-class-example { \n\t\t\t\t\tfloat: left; \n\t\t\t\t\tmargin: -4px 16px 8px -24px;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t\t<img class=\"on-the-fly-class-example\" src=\"image/que/je/veux/decaller/seulement/quand/elle/flotte.png\">\n\t\tJ'aimerai faire flotter à gauche l'image ci-dessus uniquement sur les grands écrans. Comme les valeurs de `margin` sont ajusté uniquement aux propriété de cette image (-4px 16px 8px -24px), il n'existe pas de classe HTML-driven comme `.float-left` (à l'avance) qui répondrait exactement à mon besoin.\n\t</div>\n\t...\n</body>\n```\n\n> [Tester le rendu de ce code](http://codepen.io/Haeresis/pen/KwooLd)\n\nNote : Il est important que la balise `<style>` soit déclarée avant son utilisation pour éviter que le navigateur ne pose un problème de [FOUC](http://fr.wikipedia.org/wiki/FOUC).\n\n\n\n### Pourquoi ajouter l'attribut scoped ? ###\n\nEn HTML5, il n'est pas valide de placer la balise `<style>` en dehors de la balise `<head>`. Oui, mais ce n'est pas tout à fait exacte... En réalité, il n'est pas valide de la placer dans `<body>` uniquement si on ne mentionne pas qu'elle est `scoped`, ce qui signifie que notre exemple est parfaitement valide.\n\nOui, mais pourquoi est-il nécessaire cet attribut ? `scoped` signifie que le style ne s'appliquera que sur la balise parente imédiate (ici `<div>`) et la totalité de ses balises enfants (ici `<img>`). Cependant dans les faits, aucun navigateur ne l'implémente encore et il ne limite donc pas du tout sa portée.\n\nVous pouvez tout à fait vous en passer donc mais cela ne sera pas valide W3C.\n\n\n\n### Je ne travail pas en HTML5 ###\n\nCela signifie donc que l'attribut `scoped` ne peut pas être utilisé et qu'il faut lui préférer `<style type=\"text/css\">`. Cependant, même avec toute votre bonne volonté en plus, l'attribut `style` est invalide en dehors de la balise `<head>`.\n\nActuellement, même si vous ne passerez pas la validation la quasi totalité des navigateurs qui savent lire les Média Queries sauront exécuter le `style` dans le `body`. Mais parceque les standards ne sont pas fait pour les chiens, vous pouvez soit :\n\n- Migrer votre site en HTML5 pour utiliser ce type de fonctionnalité.\n- Faire comme ce blog : proposer un chanp textarea pour entrer toutes les instructions CSS souhaitées lors de la rédaction d'un article, et injecter son contenu dans une balise `<style>` située après les balises `<link>` de la balise `<head>` lors de son rendu côté serveur.\n- Ne pas l'utiliser :)\n\n\n\n### Un petit mot sur les performances ###\n\nN'ayez point peur, du fait que les instructions CSS (même si elles sont dans une feuille CSS à part) bloquent le rendu de votre page le temps qu'elles soient analysées, cela revient donc au même de placer vos instructions dans la page en amont des balises à habiller.\n\nÇa allégera vos feuilles CSS qui n'ont pas besoin de déclarations spécifiques pour des éléments affichés uniquement sur la page courante.", "dates" : { "published" : { "$date" : 1424360400000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Utiliser les Media Queries CSS3 dans l'attribut style", "urn" : "utiliser-les-media-queries-css3-dans-l-attribut-style" }
{ "__v" : 0, "_id" : { "$oid" : "54f02a0e8abb243843ee1e75" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48c5" }, { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "54f0408e2ae5a068f260dae1" }, { "$oid" : "54f042102ae5a068f260dae2" }, { "$oid" : "5310456355dfd5f7698d48ba" } ], "content" : "Par convention, on a toujours utilisé la balise `<link>` dans la balise `<head>`. Cette balise est utilisée —entre autre— pour permettre aux navigateurs de lire et d'appliquer les instructions CSS depuis une feuille CSS. \n\nPar convention dis-je ? Pas réellement car :\n- Côté W3C, la balise `<link>` telle qu'elle a été créée n'est valide W3C en HTML4, xHTML ou HTML5 uniquement si elle est appelé dans la balise `<head>`.\n- Côté technique, une propriété CSS est appliquée sur un élément du DOM quand il est rendu sur la page uniquement si elle a été interprétée avant de rencontrer cet élément. Si une feuille CSS est lu en pied de page donc, c'est-à-dire après le rendu d'un élément, il y aura un phénomène de [FOUC](http://fr.wikipedia.org/wiki/FOUC) très dérangeant si la page est demandée depuis un réseau bas débit.\n\n> **`Exemple :`** Ainsi le code suivant est valide :\n\n> ```html\n<head>\n\t...\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" />\n\t...\n</head>\n```\n\nmais\n\n> *`Exemple :`* le code suivant est invalide :\n\n> ```html\n<body>\n\t...\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" />\n\t...\n</body>\n```\n\nCependant, puisque l'affichage du contenu de la page est mis en attente tant que les fichiers `href` des `<link>` ne sont pas téléchargés et analysés par le navigateur, cela participe à ralentir l'affichage du contenu des pages aux yeux de l'utilisateur ce qui mène parfois les outils comme [PageSpeed](https://developers.google.com/speed/pagespeed/) ou [GTmetrix](http://gtmetrix.com/) a demander de placer les feuilles CSS très lourdes après l'analyse du DOM.\n\nMais puisque cela n'est pas valide, comment faire pour placer la balise `<link>` en pied de balise `<body>` ?\n\n\n\n\n\n## Link dans le Body autorisé par HTML5.1 ##\n\nPour répondre à la demande des outils de rapidité web, il est parfois nécessaire de lier sa feuille en pied de page pour être sur que le contenu soit déjà lisible avant même qu'il ne soit habillé par la CSS.\n\nCela est totalement valide grâce à la norme HTML5.1 ou [HTML+RDFa 1.1](http://www.w3.org/TR/html-rdfa/) (signifiant également que cela est valide en HTML4 également).\n\n[RDFa](http://fr.wikipedia.org/wiki/RDFa) introduit des attributs permettant de décrire des éléments HTML à l'instar des [Microdatas](http://en.wikipedia.org/wiki/Microdata_%28HTML%29). Parmi ces attributs, il y a `property`. Et c'est justement ce qui va nous permettre de rendre valide `<link>` dans le `body`.\n\n\n\n### Valide dans Head ou Body ? ###\n\nLes trois codes ci-dessous font la même chose ; permettre a une page HTML d'être habillée par le contenu d'une feuille CSS.\n\n#### Standard ####\n\nLe code ci-dessous n'est pas valide dans le `<body>` mais est valide dans le `<head>`.\n\n> ```html\n<html ...>\n\t...\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" />\n\t...\n</html>\n```\n\n#### Microdatas ####\n\nLe code ci-dessous est valide dans le `<head>` ainsi que dans le `<body>`.\n\n> ```html\n<html ... itemscope itemtype=\"http://schema.org/Thing\">\n\t...\n\t<link itemprop=\"url\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" />\n\t...\n</html>\n```\n\n#### RDFa ####\n\nLe code ci-dessous est valide dans le `<head>` ainsi que dans le `<body>`.\n\n> ```html\n<html ... typeof=\"schema:Thing\">\n\t...\n\t<link property=\"schema:name\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" />\n\t...\n</html>\n```\n\n> Note : `rel` ne doit pas être présent si `itemprop` est en place alors qu'il n'est pas gênant (juste redondant) si `property` est en place.\n\n\n\n\n\n## Support des navigateurs ##\n\nLà ou le bat blesse c'est que tous les navigateurs ne supportent pas l'inclusion de feuille de style si la propriété `rel` n'est pas présente en dépit des recommandations du W3C. Que peut-on faire ?\n\n\n\n### itemprop n'autorise pas rel ###\n\n> *`Ceci`* Ne marche pas, le style n'est pas appliqué\n> ```html\n<html ... itemscope itemtype=\"http://schema.org/Thing\">\n\t...\n\t<link itemprop=\"link\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" />\n\t...\n</html>\n```\n\nCeci ne fonctionne pas, s'il n'y a pas de propriété `rel` la feuille n'est pas chargée sur tous les navigateurs. Il suffit de la rajouté alors ? Pas si simple car `rel` ne doit pas être présent si `itemprop` est en place.\n\n\n\n### property seul ne marche pas ###\n\n> *`Ceci`* Ne marche pas\n> ```html\n<body ... typeof=\"schema:Thing\">\n\t...\n\t<link property=\"schema:url\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" />\n\t...\n</body>\n```\n\nCeci ne fonctionne pas, ici aussi, sans la propriété `rel` la feuille n'est pas chargée sur tous les navigateurs. Cependant cette fois, l'attribut `rel` ne serait pas gênant.\n\n\n\n### La solution valide ###\n\n> **`Ceci`** Marche\n> ```html\n<html ...>\n\t...\n\t<link property rel=\"stylesheet\" href=\"example/css.css\" media=\"screen\" />\n\t...\n</html>\n```\n\nCe cas de figure est valide car `typeof` n'est pas obligatoire et `property` n'a pas besoin de valeur pour la validation.\n\n**On peut conclure qu'ajouter la propriété `property` en supplément de la propriété `rel` est une pratique assurant la parfaite validité W3C pour l'usage du chargement de fichier CSS dans la balise `<body>` via la balise `<link>`.**\n\n\n\n\n\n## Phénomène de FOUC VS accès rapide au contenu important de la page ##\n\nEt quid du phénomène de FOUC si je mets les CSS en pied de page ? Sans trop entrer dans la technique, des pistes à étudier seraient :\n\n- De charger avant dans le `<head>` les fichiers CSS les plus léger ne contenant que des instructions de disposition, de visibilité, d'habillage des textes etc. dans l'optique de présenter le plus rapidement possible du texte lisible et mis en forme mais surtout qu'il n'y ai aucun déplacement d’élément ou changement de taille d'élément quand les feuilles CSS de pied de `<body>` (les plus lourdes) seront chargées.\n\n- D'uniquement habiller les éléments au-dessus de la ligne de flottaison avec des feuilles dans le `<head>` (toujours de manière légère) et d'apporter la couche lourde en pied de page.\n\n- D'utiliser l'un des deux mécanismes précédents pour la première visite de l'internaute, puis de placer par la suite l'intégralité dans le `<head>` (même les feuilles lourdes) pour éviter aux navigateurs de faire son rendu deux fois (il n'y aura plus de problème de temps de chargement lié aux feuilles lourdes puisqu'elles auront été mises en cache lors de la première visite).\n\n> Dans le cas d'une app web, on peut également imaginer uniquement cacher tout le contenu et habiller dans le `<head>` un encart dédié à couvrir la page et a notifier que l'interface est `en chargement...` et charger les feuilles lourdes en pied de page avec comme premier rôle de masquer le message d'attente et de ré-afficher complètement habiller l'intégralité de l'interface.", "dates" : { "published" : { "$date" : 1425014400000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Utiliser la balise Link dans la balise Body", "urn" : "utiliser-la-balise-link-dans-la-balise-body" }
{ "__v" : 0, "_id" : { "$oid" : "54f838fb8abb243843ee1e76" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48ca" } ], "content" : "<a href=\"media/images/upload/gmail_not_dot_sensitive.png\"><img alt=\"Gmail n'est pas sensible aux points\" src=\"media/images/upload/gmail_not_dot_sensitive.png\" style=\"max-width: 100%; border: solid 1px #ccc\"></a>\n\nAussi étrange que cela puisse paraître sachez qu'une adresse Gmail n'est pas « dot sensitive » c'est-à-dire sensible aux points...\n\nMais quelle mouche a piqué Google ?!\n\n\n\n## Explication ##\n\nCela signifie donc que les adresses :\n\n- br**.**uno**.**lesi**.**eur<span class=\"gmail\"></span>\n- brunolesieur<span class=\"gmail\"></span>\n- bruno**.**lesieur<span class=\"gmail\"></span>\n- **.**brunolesieur<span class=\"gmail\"></span>\n- brunolesieur**.**<span class=\"gmail\"></span>\n- bru**..**no**.**lesieu**..**r<span class=\"gmail\"></span>\n\nsont toutes les 6 identiques ! Elles appartiennent à la même personne et... sont toutes valides pour Gmail.\n\nTestez vous même, envoyez-vous divers email à votre adresse Gmail avec des variations de point dans l'adresse et constatez que vous les recevrez tous.\n\nUn petit « Oui, il s'agit bien de votre adresse. » sera même précisé à côté de votre adresse.\n\n\n\n## Inscription sur Gmail ##\n\nCela fait que personne ne peut s'inscrire sur Gmail avec l'adresse « brunolesieur<span class=\"gmail\"></span> » par exemple ou toutes autres déclinaisons.\n\n\n\n## Inscription sur des sites tierces ##\n\nMais cela signifie aussi que je peux m'inscrire 10 fois sur le même site en faisant pointer tous les emails (c'est à dire mes identifiants) sur la même boîte en ajoutant simplement des points entre les lettres.\n\nEt pas seulement 10 fois, mais une infinité de fois puisque les points peuvent s'empiler les uns derrière les autres.\n\n\n\n## Quelle mouche a piqué Google ? ##\n\nGoogle s'explique [ici](https://support.google.com/mail/answer/10313?hl=fr) en avançant le fait qu'un utilisateur qui ne se souviendrait pas exactement s'il y a un point ou pas dans votre adresse email pourrait tout de même vous contacter.\n\nC'est un argument que l'on pourrait trouver curieux en avançant alors que l'adresse bruno-lesieur<span class=\"gmail\"></span> appartiendrait elle a quelqu'un d'autre alors qu'on penserait me contacter ? Et bien non car Gmail a réponse à tout : une adresse Gmail ne peux pas contenir de tiret (« - ») ni d'underscore (« _ »). Curieuse politique chez Google !\n\n> Note : Envoyer un email à bruno.lesieur+ce-que-je-veux<span class=\"gmail\"></span> ferra également arriver un email dans la boîte originale comme précisé dans les commentaires de cet article.\n\n\n\n## Un peu de code ##\n\nEffectivement, l'expression régulière pour valider les emails [la plus communément utilisée autorise les caractères suivants](http://www.regular-expressions.info/email.html) devant l'arobase : `[a-zA-Z0-9._%+-]+`. [Vous pouvez tester la Regex et la comprendre ici](https://regex101.com/r/kA0eG1/2).\n\n\n\n## Un problème de plus pour la validation d'email ##\n\nEt puisque cette règle est spécifique à Google, à moins de faire une règle spécifique pour les adresses Gmail, on ne peut pas se permettre de faire notre validation « not dot sensitive » puisque toto@example.com n'est pas la même adresse que to.to@example.com...\n\n\n\n## Effets de bord ? ##\n\nEt vous, quels effets de bord imaginez-vous pour cette utilisation ?\n\nPour ma part j'ai reçu pour une adresse similaire à la mienne (ou plutôt une de mes infinités d'adresse) une facture qui ne m'était pas destiné. Ceci n'explique pas le pourquoi du comment mais il est assez difficile d'expliquer aux opérateurs que cette facture ne m'est pas destiné si elle est tombé dans ma boîte email, surtout si effectivement, on est bien inscrit chez le prestataire qui a envoyé la facture, mais pour un autre service !\n\n\n\n## Le mot de la fin ##\n\nCe qui est sûr, c'est que Yopmail n'est peut-être pas la seule solution pour les tests d'inscriptions faciles lors des phases de développement !", "dates" : { "published" : { "$date" : 1425555360000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "$(\".gmail\").text(\"@gmail.com\");", "stylesheet" : "", "title" : "Gmail n'est pas sensible aux points", "urn" : "gmail-n-est-pas-sensible-aux-points" }
{ "__v" : 0, "_id" : { "$oid" : "54f8874a8abb243843ee1e77" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "54f042102ae5a068f260dae2" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48b6" } ], "content" : "Je l'ai encore croisée au détour d'un code ! J'y ai prêté attention pour la première fois sur le Framework CSS [Semantic-UI](http://semantic-ui.com/elements/icon.html#/icons) car j'ai vu dans la source qu'il était impossible d'afficher une icône avec ce Framework sans utiliser **la balise qui n'existe pas : la balise Icon** !\n\nJe vous la présente sans plus de suspense avec cet exemple : `<i class=\"icon settings\"></i>`. Et son rendu est une icône, représentant par exemple ici de quoi modifier les <span class=\"icons settings\">paramètres</span>. Il n'y a pas de doute, l'intention première est d'afficher une icône, non pas avec la balise `<img>` estimée réservée à de l'affichage de contenu pure (au contraire d'une décoration), mais en remplacement de `<span>` qui, lui, est trop neutre.\n\n<figure>\n<img src=\"media/images/upload/Basic-HTML.png\" alt=\"Balise i en HTML4\" style=\"max-width: 100%\">\n<figcaption>La balise &lt;i&gt; en HTML4, miriamposner.com</figcaption>\n</figure>\n\nQuoi de mieux qu'une balise qui est inline, courte, dont la seule lettre représente le début du mot « icon » et qui passe même la validation W3C ? Je vous présente la balise `<i>` qui a vu le jour grâce à HTML4 et signifiait « *le contenu affiché est italique* » et qui tenterait de faire son coming-back en tant que nouvelle icône derrière le dos du W3C !\n\nMais ça me pause un problème. Parlons en de cette fausse-vrai balise !\n\n\n\n\n\n## Une balise tombée dans l’oubli ##\n\nTout commence avec la balise `<i>ce texte est italique</i>` totalement valide HTML4 et qui représente de la forme. Cela est légion à l'époque avec les cousines `<b>`, `<center>`, `<font>`, etc. Comprenez par là que `<i>` n'a aucune autre utilité que de rendre le texte italique et est un parfait raccourci du mot « italic ».\n\nEt puis, le CSS fait sont petit bonhomme de chemin si bien que l'on peut très vite rendre italique le contenu de n'importe quel groupe de balise si bien que l’existence même de `<i>` (et ses comparses) va être remise en cause. xHTML, le petit frère va enfoncer le clou et un texte ne sera plus `<i>` pour « italic » mais sera `<em>` pour « emphasis » et ce sera alors au CSS de décider si le rendu de son contenu sera italique ou rouge souligné... idem avec `<b>` pour « bold » qui deviendra `<strong>` —c-à-d avec sens fort, important— et qui ne donnera pas nécessairement lieu à un rendu gras si la CSS en a décidé autrement.\n\nCependant, le rendu « par défaut » des `<em>` étant de l'italique et de `<strong>` étant du gras, il n'en fallait pas plus pour les catégoriser, à tord, comme les « remplaçant » de `<i>` et `<b>` or... il n'en ai rien ! Nous allons voir ça plus loin.\n\n\n\n\n\n## Icône, du contenu ou de la décoration ? ##\n\nParlons de deux catégories d'images : celles qui sont destinées à représenter du contenu, l'équivalent de ce que raconte le texte mais sous forme d'image et celle destinées à la décoration permettant de rendre ce que l'on consulte plus agréable à l’œil, plus attractif. Il y a donc ;\n\n- les images de contenu qui [se charger quelque soit le périphérique, la place qu'il y a pour afficher de l'information](https://blog.lesieur.name/maitriser-les-requetes-au-chargement-d-une-page-web/#les-images). Quoi qu'il arrive le réseau doit être en mesure d'aller la chercher sinon un message alternatif doit expliquer pourquoi la ressource manque. C'est pourquoi nous utilisons une balise `<img>`. Et il y a,\n- les images de décoration, de design qui ne sont que contextuelles, ne pas les afficher ne changerait en rien le sens du message délivré par la page, juste son appréciation par l'utilisateur. C'est pourquoi la magnifique image de background sur écran large ne doit pas être chargée sur mobile, idem pour les petits éléments décoratifs de ci de là car, on manque de réseau (pas toujours), mais surtout, on manque de place ! On utilise donc ici les propriétés CSS `background-image` [qui ne feront pas d'appel au réseau si elles ne sont pas sollicitées](https://blog.lesieur.name/maitriser-les-requetes-au-chargement-d-une-page-web/#les-backgrounds) (cachées par les parents, dans une Media Querie non interprétée, etc.).\n\nMais les icônes ? Que sont elles ? Du contenu ? Pas vraiment, elles ne changent pas le contenu du message délivré. De la décoration ? Pas totalement puisque c'est un guide ergonomique pour l’œil qui va bien au delà de la simple décoration (même si dans un sens, un bon design en plus d'être agréable à l’œil est censé aller dans ce sens également).\n\n\n\n\n\n## Les icônes et les polices custom ##\n\nAlors comment représenter des icônes ? Mettons les balise `<img>` de côté tout de suite, si on considère qu'une icône n'est pas du contenu pertinent. L'icône sert dans le meilleurs des cas à accompagner un mot, un groupe de mot ou dans le pire des cas à être affiché seule. Par exemple le mot « Paramètre » peut donc être précédé d'une icône d'écrou ou ne pas être affiché et guider l'utilisateur en lui laissant penser que cette icône seule représente le mot ou l'action « Paramètre ».\n\nQu'est-ce qui —sémantiquement ou d'un point de vu de séparation du fond et de la forme– serait le plus proche de ce comportement ? **Une balise inline, dont la valeur `:before` représenterait une icône** elle même affiché par une `background-image` ou part une police.\n\nAinsi ceci répond parfaitement au besoin :\n\n```html\n`<span class=\"icon settings\">Paramètres</span>`\n```\n\nou ceci\n\n```html\n`<span class=\"icon settings hidden\">Paramètres</span>`\n```\n\navec comme affichage ceci :\n\n```css\n.icon:before {\n    content: \"\";\n    width: 0.8em;\n    height: 0.8em;\n    margin-right: 0.2em;\n    display: inline-block;\n    background-size: cover;\n}\n.icon.hidden {\n    display: block;\n    width: 0.8em;\n    text-indent: -7777px;\n}\n.icon.hidden:before {\n    display: none;\n}\n.icon.hidden:after {\n    content: \"\";\n    width: 0.8em;\n    height: 0.8em;\n    display: inline-block;\n    background-size: cover;\n    float: right;\n}\n\n.icon.settings:after,\n.icon.settings:before {\n    background-image: url('une-image-icone-ici.png');\n    /* À noter que l'on peut également charger une police avec un caractère spéciale représentant l'icône à la place d'images de background. Mais nous ne traiterons pas cet aspect dans cet article */\n}\n```\n\n> Résultat\n<p data-height=\"338\" data-theme-id=\"0\" data-slug-hash=\"pvZmae\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'>See the Pen <a href='http://codepen.io/Haeresis/pen/pvZmae/'>Display icon with background-image</a> by Bruno Lesieur (<a href='http://codepen.io/Haeresis'>@Haeresis</a>) on <a href='http://codepen.io'>CodePen</a>.</p>\n\n\n\n\n\n## La balise i, le retour discret ! ##\n\nMais détrompez-vous. Non, seulement la balise `<i>` n'a pas été remplacé par `<em>` mais elle reste totalement utilisée par le W3C dans la spécification  HTML5 !\n\nEt quoi de plus pratique et séduisant que de remplacer notre exemple précédent par\n\n```html\n`<i class=\"settings\">Paramètres</i>`\n```\n\nou ceci\n\n```html\n`<i class=\"settings hidden\">Paramètres</i>`\n```\n\n__Malheureusement pour cette pratique, si la balise `<i>` est toujours valide de nos jour, ce n'est pas que pour la rétro-compatibilité HTML5 mais belle et bien parce qu'elle signifie quelque chose, et ce n'est pas « icon ».__\n\n[La documentation HTML5 nous explique pour `<i>`](https://html.spec.whatwg.org/multipage/semantics.html#the-i-element) qu'il s'applique à une portion de texte empruntant une autre voix, ou une autre humeur c-à-d étant en décalage avec le propos global dans sa manière de l'aborder bien que son sujet reste le même ;\n\n1. comme une pensée :\n\n   > `<p>`Tu as de très jolies yeux aujourd'hui, dit Salie. `<i>`_Dommage que tes oreilles les caches..._`</i>` pensa t-elle.`</p>`\n\n2. une pensée idiomatique d'une autre langue :\n\n   > `<p>`It's like a `<i lang=\"fr\">`déjà-vu`</i>` all over again.`</p>`\n\n3. un terme technique\n\n   > `<p>`La notion de `<i class=\"term\">`flemme empathique`</i>` est expliqué dans un autre article.`</p>`\n\n4. une taxonomie\n\n   > `<p>`J'ai `<i class=\"taxonomy\">`veni vidi vici`</i>`.`</p>`\n\nDe la même manière, sachez que `<b>` n'a pas été remplacé par `<strong>` mais tout comme `<i>`, [`<b>` à une utilité précise](https://html.spec.whatwg.org/multipage/semantics.html#the-b-element).\n\n\n\n\n\n## La balise i peut-elle représenter une icône ? ##\n\nEst-ce bien d'utiliser la balise `<i>` pour représenter une icône en lieu et place de la balise `<span>`. On peut clairement objecter que le code suivant `<i class=\"icon settings\"></i>` est une faute absolue puisque dans ce cas, la balise `<i>` ne représente aucun texte. D'une autre manière, `<i class=\"settings\">Paramètres</i>` sans la classe `icon` est déconseillé puisque `<i>` doit avoir son propre rendu quand il ne sert pas à afficher une icône. Il faut donc absolument l'accompagner d'un mot et d'une classe spécifique, quitte à ensuite le masquer pour ne garder que l'icône, comme ceci `<i class=\"icon settings hidden\">Paramètres</i>` (la classe `icon` étant ici une équivalence de `taxonomy` ou `term` dans nos exemples précédents).\n\nAu final, en extrapolant un peu, on peut estimer que l'icône *paramètres* est une autre manière de parler du message « paramètre ». Cet affichage est donc en décalage avec le propos du mot en lui même puisque c'est une autre manière de l'exprimer —comme le serrait de le signer (avec les mains), ou de l'écrire avec un symbole japonais— mais reste cohérent avec son sujet qui est « je désigne un ensemble de paramètre ». Ainsi ici, il est question de mettre l'accent sur le mot exprimé à travers un dessin.\n\nPour ma part, c'est une explication qui ne me satisfait pas totalement aussi j'estime que laisser le choix entre l'utilisation de `<i class=\"icon settings hidden\">Paramètres</i>` et `<span class=\"icon settings hidden\">Paramètres</span>` au développeur est la moindre des choses pour un Framework CSS monsieur [Semantic-UI](http://semantic-ui.com/elements/icon.html#/icons) !\n\nEt vous ? Que pensez-vous de cette pratique ou de ce « détournement » des spécifications ?", "dates" : { "published" : { "$date" : 1428410460000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "(function (d) {\nvar js = d.createElement('script'),\n    ref = d.getElementsByTagName('script')[0]\njs.async = true;\njs.src = '//assets.codepen.io/assets/embed/ei.js';\nref.parentNode.insertBefore(js, ref);\n}(document));", "stylesheet" : ".icons:before {\n    content: \"\";\n    width: 0.8em;\n    height: 0.8em;\n    margin-right: 0.2em;\n    display: inline-block;\n    background-size: cover;\n}\n.icons.hidden {\n    display: block;\n    width: 0.8em;\n    text-indent: -7777px;\n}\n.icons.hidden:before {\n    display: none;\n}\n.icons.hidden:after {\n    content: \"\";\n    width: 0.8em;\n    height: 0.8em;\n    display: inline-block;\n    background-size: cover;\n    float: right;\n}\n\n.icons.settings:after,\n.icons.settings:before {\n    background-image:  url('https://cdn2.iconfinder.com/data/icons/basicset/gear_64.png');\n}", "title" : "Icon ou la balise sémantique HTML qui n'existait pas !", "urn" : "icon-ou-la-balise-html-semantique-qui-n-existait-pas" }
{ "__v" : 0, "_id" : { "$oid" : "555ca3736868ca087fbf8644" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [], "content" : "Photoshop est *un outil vaste et complet* qui fait *le bonheur des designers* au quotidien, **mais un peu moins celui des intégrateurs HTML**.\n\nDans un monde parfait, une fois les recherches ergonomiques et visuelles faites, appliquées, testée et validée ; \n- un ensemble de gabari nous serait envoyé pour l'ensemble des pages du site (faites avec par exemple l'outil [Moqups](https://moqups.com/) que je vous conseil),\n- le résultat visuel en jpg serait éventuellement fourni pour avoir une idée du rendu global, ainsi que les polices d'écritures nécessaires,\n- l'ensemble des images de contenu seraient extraites et prêtes à l'emploi,\n- et un Guide de Style référençant l'intégralité des couleurs, typographies, espacements, etc. nous serait fourni dans [un document comme celui-ci](http://purina.k-expert.com/html/style-guidelines-example/guidelines.htm).\n\nCependant, si nous étions dans un monde parfait, cela se saurait. Aussi il faut se contenter au quotidien :\n- de *recevoir des PSDs pour chaque page*, d'une taille plus ou moins conséquente et d'une organisation plus ou moins correcte,\n- de *se procurer une version de Photoshop* « par les moyens dans nos moyens » afin d'aller fouiller cet ensemble de fichier à la recherche de nos valeurs et nos images,\n- de *courir après les polices* manquantes,\n- et de *faire nous même du Photoshop* pour rectifier des demandes faites par le Client qui ne va pas les demander à l'agence de création sous peine de devoir, après une modification conséquente de tous les PSDs, nous les renvoyer dans leur intégralité !\n\nEt dire que dans un monde parfait il suffirait de changer quelque ligne dans le Guide de Style sans même que nous sachions réellement que Photoshop existe... \n\nMais plutôt que d'attendre que le monde change, et si nous nous facilitions la vie avec ce qu'il a à nous offrir ? **C'est partit pour une liste non exhaustive de ce que j'utilise pour aller le plus vite possible lors de mes « Séances d'extraction Photoshop » !**", "dates" : { "published" : { "$date" : 1478707680000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : false }, "script" : "", "stylesheet" : "", "title" : "Les Tips Photoshop pour Développeurs Front-end", "urn" : "les-tips-photoshop-pour-developpeurs-front-end" }
{ "__v" : 0, "_id" : { "$oid" : "5577e6346868ca087fbf8645" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5499b03566bb5aeedaafd8b6" }, { "$oid" : "5310456355dfd5f7698d48bb" } ], "content" : "Lors des reviews d'intégration HTML à partir de valeurs fournis dans un PSD, on m'a fait remarquer que « _les tailles de polices n'étaient pas bonnes_ » car elles étaient en `rem` et non en `px`. Aujourd'hui pire, on me somme de remplacer tous les `rem` par des `px`. C'est tout, c'est comme ça. Peut-être parce que l'on a peur que la conversion `rem` en `px` ne soit pas juste ou peut-être simplement parce qu'on ne sait pas bien à quoi sert le `rem`.\n\n<figure>\n<img src=\"media/images/upload/rem-all.png\" alt=\"Balise i en HTML4\" style=\"max-width: 100%\">\n<figcaption>Comment gérer avec du Rem, css-tricks.com</figcaption>\n</figure>\n\n**Sans entrer dans des détails techniques poussés, je vais vous expliquer pourquoi j'utilise `rem`.**\n\n[Je vous laisse également une petite démo temps réel plus bas dans l'article](https://blog.lesieur.name/pourquoi-j-utilise-l-unite-rem-et-non-l-unite-pixel/#exemple)\n\nAllez, n'ayons pas peur, ce `rem`, il ne va pas nous manger !\n\n\n\n\n\n## Pixel VS Rem ##\n\n### Le Pixel ###\n\nNotre bon vieux pixel rassurant se comporte de tel sorte que je précise dans ma feuille CSS `font-size: 16px` et que la taille de la police sur laquelle cette propriété s'applique fait bien 16 pixel de hauteur (il y a des histoires de dpi et de faux pixel là dedans mais ça ne nous intéresse pas pour notre explication). Le problème ici est une question d'accessibilité. Si je demande d'agrandir les textes via l'option de mon navigateur ou de mon OS il ne se passera rien. Comme nous avons établie dans le marbre que le texte fait `16px`, il ferra toujours cette hauteur, peut importe ce que l'utilisateur demande.\n\n\n### Le Rem ###\n\nCette unité quand à elle est un pourcentage de taille en fonction du zoom texte que l'utilisateur applique sur son navigateur. Elle se base toujours sur la taille du texte défini à la racine du document. Avec un savant petit calcul CSS on arrive à faire en sorte que pour un zoom texte de 100% (qui est le zoom texte par défaut des navigateur) `1.0rem` est strictement la même chose que `10px` ou encore que `1.6rem` est strictement la même chose que `16px`. Cela nous permet de travailler facilement, avec une unité identique mais qui est taillé pour l'accessibilité.\n\n\n\n\n\n## Une Histoire de Responsive Web Design ##\n\nPar conséquent, si je modifie la taille du texte à la racine du document, cela modifiera la taille de tous les textes du document de manière proportionnelle ce qui est impossible avec des unités définis en pixel. Il me suffit alors via des Media Queries de difinir une valeur racine plus ou moins grande pour rendre les textes plus lisible ou plus facile à cliquer, etc.\n\n\n**Le pixel n'est donc pas à bannir, mais à utiliser uniquement pour des éléments qui ne doivent pas varier si le zoom texte est changé. Cela peut-être des cas pour les marges par exemple.**\n\n\n\n\n## Rem ou Em ? ##\n\nUne autre unité existante est le `em`. Cependant, à la différence du `rem` qui rend proportionnelle une taille par rapport à la taille du texte à la racine du document, le `em` la rend proportionnelle par rapport à la taille de l'élément parent dans lequel il est contenu. Cela permet de définir, par exemple, qu'un exposant est `0.8em` de sont parent, soit 80% de sa hauteur.\n\n\n\n\n\n## Un peu de concret ##\n\nPar ici c'est un peu plus concret, on s’arrête donc là pour la théorie.\n\n### Exemple ###\n\n<p style=\"margin-bottom: 8px\">Jouez donc avec le slider ou changez la valeur magique de 62.5% qui permet de rendre les valeurs en Rem fluide et constatez la différence entre Pixel et Rem.</p>\n\n<p style=\"margin-bottom: -16px\" data-height=\"364\" data-theme-id=\"0\" data-slug-hash=\"ZGyGWm\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'>See the Pen <a href='http://codepen.io/Haeresis/pen/ZGyGWm/'>Pixel VS Rem</a> by Bruno Lesieur (<a href='http://codepen.io/Haeresis'>@Haeresis</a>) on <a href='http://codepen.io'>CodePen</a>.</p>\n\n### Explication ###\n\nPour se mettre à gérer ses tailles en Rem, rien de compliqué. Il suffit de définir la racine du document à 62.5% sur la balise `html` puis de gérer ses tailles en Rem en sachant que 10px correspond à 1.0rem.\n\n**En CSS**\n\n```css\nhtml {\n    font-size: 62.5%; /* Ré-équilibrage du Rem face au Pixel pour des calculs simples */\n}\n\n/* Exemple d'application */\np {\n    font-size: 12px; /* Pour les navigateurs qui ne supportent pas le Rem */\n    font-size: 1.2rem; /* Pour les navigateurs « Responsive » */\n}\n```\n\n**En Less**\n\n```css\nhtml {\n    font-size: 62.5%;\n}\n\n/* Fonction toute prête pour gérer Rem et Pixel en fonction des supports des navigateurs. */\n.font-size(@sizeValue) {\n    @remValue: @sizeValue;\n    @pxValue: (@sizeValue * 10);\n    font-size: ~\"@{pxValue}px\"; \n    font-size: ~\"@{remValue}rem\";\n}\n\n/* Exemple d'application */\np {\n    .font-size(1.2);\n}\n```\n\n<script async src=\"//assets.codepen.io/assets/embed/ei.js\"></script>", "dates" : { "published" : { "$date" : 1433935440000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Pourquoi j'utilise l'unité Rem et non l'unité Pixel", "urn" : "pourquoi-j-utilise-l-unite-rem-et-non-l-unite-pixel" }
{ "__v" : 0, "_id" : { "$oid" : "5579c7c66868ca087fbf8647" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5499b03566bb5aeedaafd8b6" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48ca" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "53746e72eb856da96ba3f8a3" }, { "$oid" : "54f0408e2ae5a068f260dae1" } ], "content" : "On me dit souvent que je n'aime pas Bootstrap, et pour cause, je pense que [c'est une regression pour un travail Front-end de qualité](https://blog.lesieur.name/bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite/). En réalité, ce n'est pas le Framework le fautif, mais la façon dont il est utilisé. Les exemples de mauvaises utilisations sont légions sur le net et les mauvaises intégrations HTML cour les rues.\n\nSuis-je donc entrain de dire qu'il y a une bonne et une mauvaise façon d'utiliser Bootstrap ? C'est exactement ce que je suis entrain de dire, et je vais vous expliquer à travers ce billet le cheminement qui va vous conduire à :\n\n- Séparer le fond et la forme, pour un gain de lisibilité et de propreté,\n- Inclure et générer le stricte minimum pour un gain de performance, avec un exemple d'optimisation de CSS 30 fois plus légère.\n\n<figure>\n<img src=\"media/images/upload/bootstrap_less.png\" alt=\"Bootstrap et Less\" style=\"max-width: 100%\">\n<figcaption>Bootstrap et Less, themightycribb.com</figcaption>\n</figure>\n\nNon, je suis sérieux, ce billet n'est pas une blague, c'est cadeau, et c'est pour vous.\n\n\n\n\n\n## À ne vraiment pas faire, ou l'utilisation Standard de Bootstrap ##\n\nPour commencer notre réflexion, partons de l'utilisation « standard » de Bootstrap. C'est la majorité du code que nous pourrons trouver à travers le net quand il s'agit de Bootstrap. Si vous êtes farouchement attaché à Bootstrap, ou que vous ne pouvez pas faire autrement que de l'utiliser (certaines personnes ont malheureusement des IT Dictator), oubliez dès aujourd'hui cette méthode de travail.\n\nVoici un petit affichage de grille gratté à la va vite.\n\n**HTML**\n\n*La feuille CSS Bootstrap est inclue*\n\n```html\n<!-- Composant -->\n<div class=\"container\">\n\t<!-- En-tête -->\n\t<div class=\"row\">\n\t\t<div class=\"col-xs-12 col-md-6 col-md-push-6 text-right\">\n\t\t\t<div>\n\t\t\t\t<h1>Je suis un titre</h1>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-xs-12 col-md-6 col-md-pull-6\">\n\t\t\t<div>Je suis un petit texte explicatif à propos du site.</div>\n\t\t</div>\n\t</div>\n\t<!-- Liste d'élément -->\n\t<div class=\"row\">\n\t\t<div class=\"col-xs-12 col-sm-6 col-md-4\">\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</div>\n\t\t<div class=\"col-xs-12 col-sm-6 col-md-4\">\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</div>\n\t\t<div class=\"col-xs-12 col-sm-6 col-md-4\">\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</div>\n\t\t<div class=\"col-xs-12 col-sm-6 col-md-4\">\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</div>\n\t</div>\n</div>\n```\n\nAjoutons maintenant notre propre surcharge pour faire un rendu de tout ça :\n\n**CSS**\n\n```css\n/* Nous colorons la zone de site. */\n.container {\n\tbackground-color: #f2f2f2;\n\tpadding-bottom: 16px;\n}\n\n/* Nous colorons chaque colonne sans sa marge, \n\tnous avons donc été obligé de rajouter une \n\tdiv inutile autour. */\n.row > div > div {\n\tbackground-color: #ddddff;\n\tmargin-top: 16px;\n\tpadding: 10px;\n\tfont-size: 1.5rem;\n}\n\n/* Nous devons tout de même gérer de manière custom\n\tcertain comportement, ici je veux que les colonnes\n\taient une hauteur fixe à partir de la version\n\ttablette. */\n@media (min-width: 768px) {\n  .row > div > div {\n    height: 40px;\n  }\n}\n\n/* Avec Bootstrap, soit le texte est à gauche, soit \n\til est à droite. On ne peut pas changer\n\tse compontement de façon responsive.\n\tOn va donc surcharger la classe « text-right »\n\tqui dans notre cas ne veux plus dire grand chose... */\n.row:first-child .text-right {\n\ttext-align: left;\n}\n\n/* Je redéfini ici qu'il s'aligne à droite\n\tà partir de la tablette. */\n@media (min-width: 992px) {\n  .row:first-child .text-right {\n    text-align: right;\n  }\n}\n\nh1 {\n\tmargin: 0;\n\tfont-size: 3rem;\n\tmargin-top: -6px;\n}\n```\n\n**Résultat**\n\n- **[Voir le résultat avec le code](http://codepen.io/Haeresis/pen/yNXXQO)**\n\n> _`Mauvaise pratique :`_ On constate au rayon des mauvaises choses :\n - Un DOM pollué par un surplus de balises, dans notre exemple nous avons une `<div>` inutile dans chaque colonne.\n - Un DOM pollué par un surplus de classe, non seulement elles décrivent visuellement et non sémantiquement la structure, mais en plus elles ne traduisent pas toujours le comportement réel du visuel (exemple avec la classe `text-right` surchargée dans notre exemple).\n - Une CSS Bootstrap complète et donc excessivement lourde en poids avec en plus notre propre surcharge, actuellement la portion HTML fait [657 octets](http://codepen.io/Haeresis/pen/yNXXQO?editors=100) après compression et le fichier CSS fait [118ko](http://codepen.io/Haeresis/pen/yNXXQO?editors=010) après compression.\n\n\n\n\n\n## Un début de bonne pratique, ou l'utilisation de Bootstrap avec Less ##\n\nVoyons à présent comment nous pouvons nous en sortir en utilisant [une méthode CSS-Driven](https://blog.lesieur.name/utilisation-optimisee-de-framework-css-comme-bootstrap-avec-less/). L'avantage de cette méthode va être de déporter le poids du fichier HTML à l'intérieur des fichiers CSS. C'est une excellente chose puisque les fichiers CSS peuvent être mis en cache, eux. Grâce à la version Less de Bootstrap, nous sommes en mesure de n'inclure que les parties nécessaires à notre habillage. Pour commencer, on arrête avec les affreuses classes Bootstrap partout dans le HTML, et on nomme les classes sémantiquement !\n\n**HTML**\n\n```html\n<div class=\"component\">\n\t<div class=\"header\">\n\t\t<div class=\"title\">\n\t\t\t<div>\n\t\t\t\t<h1>Je suis un titre</h1>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"quote\">\n\t\t\t<div>Je suis un petit texte explicatif à propos du site.</div>\n\t\t</div>\n\t</div>\n\t<div class=\"list\">\n\t\t<div class=\"item\">\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</div>\n\t\t<div class=\"item\">\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</div>\n\t</div>\n</div>\n```\n\nOn ajoute ensuite les bribes Bootstrap qui nous sont nécessaires, et nous habillons la structure en Less :\n\n**Less**\n\n```css\n/* Inclusion Bootstrap nécessaire pour la page */\n@import 'bootstrap/normalize';\n@import 'bootstrap/variables';\n@import 'bootstrap/utilities';\n\n/*  Inclusion Bootstrap nécessaire pour la grille */\n@import 'bootstrap/grid';\n@import 'bootstrap/mixins/hide-text';\n@import 'bootstrap/mixins/center-block';\n@import 'bootstrap/mixins/clearfix';\n@import 'bootstrap/mixins/grid';\n@import 'bootstrap/mixins/grid-framework';\n\n/*  Inclusion Bootstrap nécessaire pour l'alignement */\n@import 'bootstrap/type';\n@import 'bootstrap/mixins/text-overflow.less';\n@import 'bootstrap/mixins/text-emphasis.less';\n@import 'bootstrap/mixins/background-variant.less';\n\n/* On se permet de recréer nous même quelques\n\tcomportements nécessitant trop d'inclusion de code. */\nhtml {\n\tfont-size: 62.5%;\n}\n* {\n\t-webkit-box-sizing: border-box;\n\t   -moz-box-sizing: border-box;\n\t        box-sizing: border-box;\n}\n\n/* On travaille nos classes en empilement. */\n.component {\n\t/* Ceci est la même chose que `<div class=\"container\">` \n\t\tappliqué à `.component`. */\n\t.container;\n\t.clearfix;\n\t\n\t.list,\n\t.header {\n\t\t/* Ceci est la même chose que `<div class=\"row\">` \n\t\t\tappliqué à `.header` et `.list`. */\n\t\t.row;\n\t}\n\n\t.header {\t\n\t\t.quote,\n\t\t.title {\n\t\t\t/* Ceci est l'équivalent de `<div class=\"col-xs-12\">` \n\t\t\t\tappliqué à `.title` et `.quote`. */\n\t\t\t.make-xs-column(12);\n\t\t\t/* Ceci est l'équivalent de `<div class=\"col-md-6\">` \n\t\t\t\tappliqué à `.title` et `.quote`. */\n\t\t\t.make-md-column(6);\n\t\t}\n\n\t\t.title {\n\t\t\t/* Ceci est l'équivalent de `<div class=\"col-md-push-6\">` \n\t\t\t\tappliqué à `.title`. */\n\t\t\t.make-md-column-push(6);\n\n\t\t\t/* Ceci est l'équivalent de `<div class=\"text-left\">` \n\t\t\t\tappliqué à `.title`, mais l'avantage, c'est qu'il peut être écrasé facilement. */\n\t\t\t.text-left;\n\n\t\t\t@media (min-width: @screen-sm-min) {\n\t\t\t\t/* Ceci est l'équivalent de `<div class=\"text-right\">` \n\t\t\t\t\tappliqué à `.title` uniquement à partir de la tablette.\n\t\t\t\t\tCeci n'est pas faisable avec une approche classique\n\t\t\t\t\tavec Bootstrap dans le DOM. */\n\t\t\t\t.text-right;\n\t\t\t}\n\t\t}\n\n\t\t.quote {\n\t\t\t/* Ceci est l'équivalent de `<div class=\"col-md-pull-6\">` \n\t\t\t\tappliqué à `.quote`. */\n\t\t\t.make-md-column-pull(6);\n\t\t}\n\t}\n\n\t.list {\n\t\t.item {\n\t\t\t/* Ceci est l'équivalent de `<div class=\"col-xs-12\">` \n\t\t\t\tappliqué à `.item`. */\n\t\t\t.make-xs-column(12);\n\t\t\t/* Ceci est l'équivalent de `<div class=\"col-sm-6\">` \n\t\t\t\tappliqué à `.item`. */\n\t\t\t.make-sm-column(6);\n\t\t\t/* Ceci est l'équivalent de `<div class=\"col-md-4\">` \n\t\t\t\tappliqué à `.item`. */\n\t\t\t.make-md-column(4);\n\t\t}\n\t}\n\n\t/* Par ici on fait un peu de Less standard */\n\t.title,\n\t.quote,\n\t.item {\n\t\tdiv {\n\t\t\tbackground-color: #ddddff;\n\t\t\tmargin-top: 16px;\n\t\t\tpadding: 10px;\n\t\t\tfont-size: 1.5rem;\n\t\t\t\n\t\t\t@media (min-width: @screen-xs-min) {\n\t\t\t\theight: 40px;\n\t\t\t}\n\t\t}\n\t}\n\n\th1 {\n\t\tmargin: 0;\n\t\tfont-size: 3rem;\n\t\tmargin-top: -6px;\n\t}\n\n\tbackground-color: #f2f2f2;\n\tpadding-bottom: 16px;\n}\n```\n\n**Résultat**\n\n- **[Voir le résultat avec le code](http://codepen.io/Haeresis/pen/gpRGQX)**\n\n> Avec cette technique, on a une sortie CSS qui a été divisée par 7 :\n - Le DOM ne contient plus la CSS Bootstrap complète mais uniquement les classes contenues dans les fichiers inclus avec `@include`. Actuellement le fichier HTML fait [504 octets](http://codepen.io/Haeresis/pen/gpRGQX?editors=100) après compression et le fichier CSS fait [16 ko](http://codepen.io/Haeresis/pen/gpRGQX?editors=010) après compression.\n - Mais ce qui est agréable c'est que Le DOM n'est plus pollué par un surplus de classe, elles décrivent maintenant sémantiquement la structure !\n - Cependant le DOM est toujours pollué par des balises inutiles.\n\n\n\n### Utiliser la feature Less :extend() ###\n\nEn Less, il y a deux approches pour utiliser des raccourcis de classe afin de ne pas écrire de code de manière redondante. Tout d'abord, je créé une classe modèle\n\n```\n.model { a; b; c; d; e; f; g; h; i; j; }\n```\n\n- La première approche est celle utilisée dans notre exemple précédent, pour l'appliquer j'utilise le code suivant :\n\t\n\t```\n\t.ex-1, .ex-2, .ex-3, .ex-4, .ex-5, .ex-6, .ex-7, .ex-8, .ex-9, .ex-0 { \n\t\t.model;\n\t}\n\t```\n\t\n\tce qui génère en sortie CSS :\n\n\t```\n\t.model { a; b; c; d; e; f; g; h; i; j; }\n\n\t.ex-1 { a; b; c; d; e; f; g; h; i; j; }\n\t.ex-2 { a; b; c; d; e; f; g; h; i; j; }\n\t.ex-3 { a; b; c; d; e; f; g; h; i; j; }\n\t.ex-4 { a; b; c; d; e; f; g; h; i; j; }\n\t.ex-5 { a; b; c; d; e; f; g; h; i; j; }\n\t.ex-6 { a; b; c; d; e; f; g; h; i; j; }\n\t.ex-7 { a; b; c; d; e; f; g; h; i; j; }\n\t.ex-8 { a; b; c; d; e; f; g; h; i; j; }\n\t.ex-9 { a; b; c; d; e; f; g; h; i; j; }\n\t.ex-0 { a; b; c; d; e; f; g; h; i; j; }\n\t```\n\n- La seconde approche qui est notre fameuse feature `:extend()` permet de gagner de la place en sortie\n\t\n\t```\n\t.ex-1, .ex-2, .ex-3, .ex-4, .ex-5, .ex-6, .ex-7, .ex-8, .ex-9, .ex-0 { \n    \t&:extend(.model);\n\t}\n\t```\n\n\tce qui génère en sortie CSS :\n\n\t```\n\t.ex-1, .ex-2, .ex-3, .ex-4, .ex-5, .ex-6, .ex-7, .ex-8, .ex-9, .ex-0,\n\t.model { a; b; c; d; e; f; g; h; i; j; k; l; m; n; o; p; q; r; s; t; u; v; w; x; y; z; }\n\t```\n\nL'un des problèmes de cette seconde approche est qu'elle ne fonctionne pas avec des fonctions. Ainsi la fonction Bootstrap `.make-xs-column(12)` par exemple n'est pas utilisable :\n\n```\n.ex-1, .ex-2, .ex-3, .ex-4, .ex-5, .ex-6, .ex-7, .ex-8, .ex-9, .ex-0 { \n    &:extend(.make-xs-column(12)); /* Ce code plante. */\n}\n```\n\nUn autre problème est que `:extend()` n'est pas utilisable dans les Media Queries. C'est un formidable atout qui est très limité avec l’utilisation de Bootstrap ou des [approches Desktop First](https://blog.lesieur.name/les-concepts-autour-du-responsive-web-design/) mais qui peut se révéler très intéressant sur des grosses feuilles custom Mobile First.\n\nVoyons rapidement en quoi cela changerait notre précédente feuille :\n\n```css\n\n/* ... */\n\n.component {\n\t/* Ici, `:extend()` est appliquable. */\n\t&:extend(.container, .clearfix all);\n\n\t.list,\n\t.header {\n\t\t/* Ici, `:extend()` est appliquable. */\n\t\t&:extend(.row);\n\t}\n\n\t.header {\t\n\t\t.quote,\n\t\t.title {\n\t\t\t/* Ici, `:extend()` n'est pas appliquable\n\t\t\t\tcar ce sont des fonctions. */\n\t\t\t.make-xs-column(12);\n\t\t\t.make-md-column(6);\n\t\t}\n\n\t\t.title {\n\t\t\t/* Ici, `:extend()` n'est pas appliquable\n\t\t\t\tcar c'est une fonction */\n\t\t\t.make-md-column-push(6);\n\n\t\t\t/* Ici, `:extend()` est appliquable. */\n\t\t\t&:extend(.text-left);\n\n\t\t\t@media (min-width: @screen-sm-min) {\n\t\t\t\t/* Ici, `:extend()` n'est pas appliquable\n\t\t\t\t\tcar on est dans une Media Query. */\n\t\t\t\t.text-right;\n\t\t\t}\n\t\t}\n\n\t\t.quote {\n\t\t\t/* Ici, `:extend()` n'est pas appliquable\n\t\t\t\tcar c'est une fonction */\n\t\t\t.make-md-column-pull(6);\n\t\t}\n\t}\n\n\t.list {\n\t\t.item {\n\t\t\t/* Ici, `:extend()` n'est pas appliquable\n\t\t\t\tcar ce sont des fonctions. */\n\t\t\t.make-xs-column(12);\n\t\t\t.make-sm-column(6);\n\t\t\t.make-md-column(4);\n\t\t}\n\t}\n\n\t/* ... */\n}\n```\n\n> **`Bonne pratique :`** Avec cette technique, on peut donc encore réduire la taille en sortie même si dans notre exemple nous passons seulement d'un code de 16277 bytes à un code de 16038 bytes. Dans de nombreux cas l'écart peut cependant être significatif !\n\n\n\n\n\n## LA bonne pratique, ou l'utilisation de Bootstrap avec Less et par référence ##\n\nC'est par ici qu'on touche réellement à un point intéressant, et à la réelle chose qu'il faut faire quand on utilise du Less, et surtout Bootstrap ; l'inclusion par référence ! Avant d'en parler, adaptons rapidement notre HTML pour le rendre encore plus sémantique. Cela n'a rien à voir avec notre propos, mais des `<div>` partouts, ça me donne des boutons !\n\n**HTML**\n\n```html\n<section class=\"component\">\n\t<header>\n\t\t<div class=\"title\">\n\t\t\t<div>\n\t\t\t\t<h1>Je suis un titre</h1>\n\t\t\t</div>\n\t\t</div>\n\t\t<aside>\n\t\t\t<div>Je suis un petit texte explicatif à propos du site.</div>\n\t\t</aside>\n\t</header>\n\t<ul class=\"list\">\n\t\t<li>\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</li>\n\t\t<li>\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</li>\n\t\t<li>\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</li>\n\t\t<li>\n\t\t\t<div>Je suis un bloc avec contenu</div>\n\t\t</li>\n\t</ul>\n</section>\n```\n\nLe réel intérêt va résider dans l'utilisation de l'inclusion par référence. C'est à dire qu'au lieu d'inclure les portions de Bootstrap utile avec `@import`, nous allons le faire avec `@import (reference)`.\n\n\n**Less**\n\n```css\n@import 'bootstrap/normalize';\n\n/* Inclusion des fichiers, non plus entièrement, mais par\n\tréférence avec « (reference) ». */\n@import (reference) 'bootstrap/variables';\n@import (reference) 'bootstrap/utilities';\n@import (reference) 'bootstrap/grid';\n@import (reference) 'bootstrap/mixins/hide-text';\n@import (reference) 'bootstrap/mixins/center-block';\n@import (reference) 'bootstrap/mixins/clearfix';\n@import (reference) 'bootstrap/mixins/grid';\n@import (reference) 'bootstrap/mixins/grid-framework';\n@import (reference) 'bootstrap/type';\n@import (reference) 'bootstrap/mixins/text-overflow.less';\n@import (reference) 'bootstrap/mixins/text-emphasis.less';\n@import (reference) 'bootstrap/mixins/background-variant.less';\n\nhtml {\n\tfont-size: 62.5%;\n}\n* {\n\t-webkit-box-sizing: border-box;\n\t   -moz-box-sizing: border-box;\n\t        box-sizing: border-box;\n}\n\n/* On permet des listes au rendu vide. */\n.ul-reset {\n\tmargin-left: -15px;\n\tmargin-right: -15px;\n\tpadding: 0;\n\tlist-style-type: none;\n}\n\n.component {\n\t&:extend(.container);\n\t&:extend(.clearfix all);\n\t\n\t.list,\n\theader {\n\t\t&:extend(.row);\n\t}\n\n\theader {\t\n\t\taside,\n\t\t.title {\n\t\t\t.make-xs-column(12);\n\t\t\t.make-md-column(6);\n\t\t}\n\n\t\t.title {\n\t\t\t.make-md-column-push(6);\n\n\t\t\t&:extend(.text-left);\n\n\t\t\t@media (min-width: @screen-sm-min) {\n\t\t\t\t.text-right;\n\t\t\t}\n\t\t}\n\n\t\taside {\n\t\t\t.make-md-column-pull(6);\n\t\t}\n\t}\n\n\t.list {\n\n\t\t/* On applique à `.list` un reset. */\n\t\t&:extend(.ul-reset);\n\n\t\tli {\n\t\t\t.make-xs-column(12);\n\t\t\t.make-sm-column(6);\n\t\t\t.make-md-column(4);\n\t\t}\n\t}\n\n\t.title,\n\taside,\n\t.list li {\n\t\tdiv {\n\t\t\tbackground-color: #ddddff;\n\t\t\tmargin-top: 16px;\n\t\t\tpadding: 10px;\n\t\t\tfont-size: 1.5rem;\n\t\t\t\n\t\t\t@media (min-width: @screen-xs-min) {\n\t\t\t\theight: 40px;\n\t\t\t}\n\t\t}\n\t}\n\n\th1 {\n\t\tmargin: 0;\n\t\tfont-size: 3rem;\n\t\tmargin-top: -6px;\n\t}\n\n\tbackground-color: #f2f2f2;\n\tpadding-bottom: 16px;\n}\n```\n\n**Résultat**\n\n- **[Voir le résultat avec le code](http://codepen.io/Haeresis/pen/gpRGqX)**\n\n> **`Bonne pratique`** Et là, c'est le jackpot, on a une sortie divisée par 30 !\n\n> Ce qu'il se passe est que toutes les classes et fonctions des fichiers inclus par référence ne sont générées que si elles sont appelées en tant que raccourci dans le fichier qui les appels par référence.\n\n> **Ainsi pour la sortie nous avons maintenant un HTML de [431 bytes](http://codepen.io/Haeresis/pen/gpRGqX?editors=100) après compression et un fichier CSS de [4 ko](http://codepen.io/Haeresis/pen/gpRGqX?editors=010) après compression !**\n\n\n\n### Ne plus se soucier des inclusions ###\n\nAvec un appel par référence, comme vous l'aurez peut-être deviné, on peut même remplacer l'intégralité des appels suivant :\n\n```less\n@import (reference) 'bootstrap/variables';\n@import (reference) 'bootstrap/utilities';\n@import (reference) 'bootstrap/grid';\n@import (reference) 'bootstrap/mixins/hide-text';\n@import (reference) 'bootstrap/mixins/center-block';\n@import (reference) 'bootstrap/mixins/clearfix';\n@import (reference) 'bootstrap/mixins/grid';\n@import (reference) 'bootstrap/mixins/grid-framework';\n@import (reference) 'bootstrap/type';\n@import (reference) 'bootstrap/mixins/text-overflow.less';\n@import (reference) 'bootstrap/mixins/text-emphasis.less';\n@import (reference) 'bootstrap/mixins/background-variant.less';\n```\n\nuniquement par :\n\n```less\n@import (reference) 'bootstrap/bootstrap';\n```\n\net c'est la référence qui fera le reste, le tout pour une sortie de [4 ko](http://codepen.io/Haeresis/pen/gpRGqX?editors=010) totalement identique avant l'inclusion feature par feature. On est bien loin de nos [118 ko](http://codepen.io/Haeresis/pen/yNXXQO?editors=010) initiales !\n\n\n\n\n\n## Petits calculs ##\n\nNous allons voir rapidement la quantité de bande passante sauvée en aillant fait l'effort d'ajouter `(reference)` et `:extend()`. Gardez en tête que ce n'est pas pour une page complète, mais bien le petit fragment d'exemple que nous venons d'étudier.\n\nNous avons donc :\n- Méthode Standard, avec DOM négligé : HTML = 657 octets, CSS = 116.972 octets.\n- Méthode Optimisée, avec DOM propre : HTML = 431 octets, CSS = 4.018 octets.\n\n**Côté serveur**, pour 10000 appels (de différent client) :\n- Méthode Standard : 657 x 10000 = 6.570Mo, 116.972 x 10000 = 1.169.720Mo\n- Méthode Optimisé : 431 x 10000 = 4.310Mo, 4.018 x 10000 = 40.180Mo\n\n   Soit une **économie de trafic** :\n   - HTML = 6.570Mo - 4.310Mo = **2.260Mo**\n   - CSS = 1.169.720Mo - 40.180Mo = **1.129Go**\n\n**Côté client**, pour 100 appels d'un seul ordinateur **sans cache** :\n- Méthode Standard : 657 x 100 = 65.700o, 116.972 x 100 = 11.697.200o\n- Méthode Optimisé : 431 x 100 = 43.100o, 4.018 x 100 = 401.800o\n   \n   Soit une **économie de trafic** :\n   - HTML = 65ko - 43ko = **22ko**\n   - CSS = 11.697ko - 401ko = **11Mo**\n\n**Côté client**, pour 100 appels d'un seul ordinateur **avec cache** :\n- Méthode Standard : 657 x 100 = 65.700o, 116.972 x 1 = 116.972o\n- Méthode Optimisé : 431 x 100 = 43.100o, 4.018 x 1 = 4.018o\n   \n   Soit une **économie de trafic** :\n   - HTML = 65ko - 43ko = **22ko**\n   - CSS = 117ko - 4ko = **113ko**\n\n\n\n## En Bonus ##\n\nPour développer des sites web avec Less en toute transparence, je ne saurais que trop vous conseiller le module [NodeAtlas](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/) en [node.js](https://nodejs.org/). Cela vous permettra de développer dans vos feuilles Less et d'appeler les résultats CSS. Un exemple d'implémentation est à votre disposition dans le projet [LessAtlas](https://github.com/Haeresis/LessAtlas/).", "dates" : { "published" : { "$date" : 1434048660000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Bootstrap, lisibilité, propreté, performance, optimisation ; c'est possible !", "urn" : "bootstrap-lisibilite-proprete-performance-optimisation-c-est-possible" }
{ "__v" : 0, "_id" : { "$oid" : "55894a766868ca087fbf8648" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48c3" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5499b03566bb5aeedaafd8b6" }, { "$oid" : "53746e72eb856da96ba3f8a3" }, { "$oid" : "5310456355dfd5f7698d48bb" } ], "content" : "Dans de nombreux cas, on utilise des balises superflus pour gérer ;\n\n- la largeur total d'une grille avec les éléments externes et \n- l'espacement entre chaque balise avec l'élément interne. Parfois même, \n- pour appliquer de la couleur de fond, on utilise une troisième balise ! \n\nC'est notamment le cas avec le framework CSS Bootstrap qui se fait vieux. Si vous vous ventez de ne plus suporter IE8 parce qu’il à fait son temps, alors il est également temps d'arrêter d'utiliser des balises inutiles !\n\nVoici un exemple d'ancienne pratique et son équivalence avec la propriété CSS3 `calc()`.\n\n\n\n\n\n## La Grille ##\n\n### Exemple old school à la Bootstrap ###\n\n**HTML :**\n\nAvec le HTML suivant :\n\n```html\n<div class=\"container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-xs-4\">\n\t\t\t<div class=\"item\">Zone 1</div>\n\t\t</div>\n\t\t<div class=\"col-xs-4\">\n\t\t\t<div class=\"item\">Zone 2</div>\n\t\t</div>\n\t\t<div class=\"col-xs-4\">\n\t\t\t<div class=\"item\">Zone 3</div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-xs-6\">\n\t\t\t<div class=\"item\">Zone 4</div>\n\t\t</div>\n\t\t<div class=\"col-xs-6\">\n\t\t\t<div class=\"item\">Zone 5</div>\n\t\t</div>\n\t</div>\n</div>\n```\n\net avec la CSS suivante :\n\n**CSS :**\n\n```css\n* {\n\tbox-sizing: border-box;\n}\n.container {\n\tmax-width: 1200px;\n\tpadding-left: 15px;\n\tpadding-right: 15px;\n\tmargin-bottom: 15px;\n}\n.row {\n\tmargin-top: 15px;\n\tmargin-left: -15px;\n\tmargin-right: -15px;\n}\n.row:after {\n\tcontent: \"\";\n\tdisplay: block;\n\tclear: left;\n}\n.col-xs-6 {\n\tpadding-left: 15px;\n\tpadding-right: 15px;\n\twidth: 50%;\n\tfloat: left;\n}\n.col-xs-4 {\n\tpadding-left: 15px;\n\tpadding-right: 15px;\n\twidth: 33.33333333%;\n\tfloat: left;\n}\n.item {\n\tbackground-color: #e8e8e8;\n\tpadding: 15px;\n}\n```\n\nnous obtenons :\n\n**Résultat :**\n\n<div class=\"example-grid\">\n\t<div class=\"container\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-xs-4\">\n\t\t\t\t<div class=\"item\">Zone 1</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-xs-4\">\n\t\t\t\t<div class=\"item\">Zone 2</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-xs-4\">\n\t\t\t\t<div class=\"item\">Zone 3</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-xs-6\">\n\t\t\t\t<div class=\"item\">Zone 4</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-xs-6\">\n\t\t\t\t<div class=\"item\">Zone 5</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n### Même exemple avec calc() en CSS3 ###\n\nAvec le HTML suivant :\n\n**HTML :**\n\n```html\n<ul class=\"component\">\n\t<li>Zone 1</li>\n\t<li>Zone 2</li>\n\t<li>Zone 3</li>\n\t<li>Zone 4</li>\n\t<li>Zone 5</li>\n</ul>\n```\n\net avec la CSS suivante :\n\n**CSS :**\n\n```css\n* {\n\tbox-sizing: border-box;\n}\n.list {\n\tpadding: 0;\n\tmax-width: 1200px;\n\tmargin-top: 0;\n\tmargin-bottom: 15px;\n\tmargin-left: -15px;\n\tmargin-right: -15px;\n\tlist-style-type: none;\n}\n.list:after {\n\tcontent: \"\";\n\tdisplay: block;\n\tclear: left;\n}\n.list li {\n\tmargin-top: 15px;\n\tbackground-color: #e8e8e8;\n\tpadding: 15px;\n\tfloat: left;\n\tmargin-left: 15px;\n\tmargin-right: 15px;\n}\n.list li:nth-child(n+5) {\n\twidth: calc(50% - 30px);\t\n}\n.list li:nth-child(n+3) {\n\twidth: calc(33.33333333% - 30px);\t\n}\n```\n\nnous obtenons :\n\n**Résultat :**\n\n<div class=\"example-list\">\n\t<ul class=\"list\">\n\t\t<li>Zone 1</li>\n\t\t<li>Zone 2</li>\n\t\t<li>Zone 3</li>\n\t\t<li>Zone 4</li>\n\t\t<li>Zone 5</li>\n\t</ul>\n</div>\n\n\n\n\n\n## À propos de calc() ##\n\nLa grande force de `calc()` en CSS3 est qu'elle est capable de mélanger le calcul de plusieurs unités en même temps, et en temps réel. Cela permet en plus de conserver des proportions bonnes dès que la fenêtre change de taille.\n\n### Support des navigateurs ###\n\n#### Support IE9 ###\n\nComme dit en introduction, si vous souhaitez supporter `calc()` pour des versions plus vieille que IE8, il va falloir vous procurer [un polyfill comme celui-ci](https://github.com/closingtag/calc-polyfill). En ce qui concerne IE9, il est mentionné qu'elle est partiellement supportée. En réalité, cela vient du fait que si vous écrivez `calc(50%-30px)` cela fonctionnera partout sauf sur IE9 ou il faut bien mettre des espaces entre les symboles d'opération comme ceci : `calc(50% - 30px)`.\n\n#### Support propriétaire ####\n\nVous pouvez également supporter des versions plus vieille de la plupard des navigateurs avec les extensions propriétaires suivantes :\n\n```css\nwidth: -webkit-calc(50% - 100px);\nwidth:    -moz-calc(50% - 100px);\nwidth:         calc(50% - 100px);\n```\n### Support Less ###\n\nEn Less, la propriété calc() existe aussi, et c'est peut-être elle qui vous avait fait échouer vos tests si vous aviez déjà tenté le mélange d'unité car elle est incapable de le faire, aussi : `width: calc(50% - 30px);` donnera en sortie CSS `width: 20%`. Qui plus est, le calcul n'est pas effectué en temps réel. Pour réellement utiliser la propriété `calc()` CSS3 il va falloir écrire `width: calc(~'50% - 30px');` ce qui donnera en sortie CSS `width: calc(50% - 30px);`.\n\n#### Pour en savoir plus ####\n\nSi vous voulez en savoir plus sur `calc()` et ses subtilités [c'est par ici](http://caniuse.com/#feat=calc).\n\n**À vous de jouer !**", "dates" : { "published" : { "$date" : 1435060800000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : ".example-grid * {\n\t-webkit-box-sizing: border-box;\n\t   -moz-box-sizing: border-box;\n\t        box-sizing: border-box;\n}\n.example-grid .container {\n\tmax-width: 1200px;\n\tpadding-left: 15px;\n\tpadding-right: 15px;\n\tmargin-bottom: 15px;\n}\n.example-grid .row {\n\tmargin-top: 15px;\n\tmargin-left: -15px;\n\tmargin-right: -15px;\n}\n.example-grid .row {\n\tmargin-top: 15px;\n\tmargin-left: -15px;\n\tmargin-right: -15px;\n}\n.example-grid .row:after {\n\tcontent: \"\";\n\tdisplay: block;\n\tclear: left;\n}\n.example-grid .col-xs-6 {\n\tpadding-left: 15px;\n\tpadding-right: 15px;\n\twidth: 50%;\n\tfloat: left;\n}\n.example-grid .col-xs-4 {\n\tpadding-left: 15px;\n\tpadding-right: 15px;\n\twidth: 33.33333333%;\n\tfloat: left;\n}\n.example-grid .item {\n\tbackground-color: #e8e8e8;\n\tpadding: 15px;\n}\n\n.example-list * {\n\t-webkit-box-sizing: border-box;\n\t   -moz-box-sizing: border-box;\n\t        box-sizing: border-box;\n}\n.example-list .list {\n\tpadding: 0;\n\tmax-width: 1200px;\n\tmargin-top: 0;\n\tmargin-bottom: 15px;\n\tmargin-left: -15px;\n\tmargin-right: -15px;\n\tlist-style-type: none;\n}\n.example-list .list:after {\n\tcontent: \"\";\n\tdisplay: block;\n\tclear: left;\n}\n.example-list .list li {\n\tmargin-top: 15px;\n\tbackground-color: #e8e8e8;\n\tpadding: 15px;\n\tfloat: left;\n\tmargin-left: 15px;\n\tmargin-right: 15px;\n\twidth: calc(50% - 30px);\n}\n.example-list .list li:nth-child(n+3) {\n\twidth: calc(33.33333333% - 30px);\t\n}\nbody {\n\toverflow-x: hidden;\n}", "title" : "La propriété CSS3 calc() pour arrêter avec les balises HTML imbriquées inutilement", "urn" : "la-propriete-css3-calc-pour-arreter-avec-les-balises-html-imbriquees-inutilement" }
{ "__v" : 0, "_id" : { "$oid" : "558bf17d6868ca087fbf8649" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48c3" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48bd" } ], "content" : "Je viens de voir un code allembiqué permettant de maintenir la hauteur de deux `<div>` côte à côte. Problème ? Ces éléments ne sont pas côte à côte en version mobile mais l'un sous l'autre : et maintenir la hauteur dans ce cas là ne sert à rien. La semaine d'avant, j'ai vu un code avec une cascade de `if` permettant d'ouvrir une vidéo dans une popup sur PC et d'ouvrir un lien Youtube sur mobile. Bien évidemment, les petits écrans PC ouvraient une popup alors qu'il aurait été intéressant qu'ils ouvrent aussi un lien. Je vous fais l'impasse sur les comportements au redimensionnement de la fenêtre.\n\nBref, lançons-nous dans un petit exercice pour permettre un code JavaScript Responsive Web Design, sans se soucier de l'appareil qui l’exécute.\n\n\n\n\n\n## La fonction JavaScript `window.matchMedia` ##\n\nDe la même manière que dans une feuille CSS nous allons nous servir de `@media`, en JavaScript, nous allons nous servir de `window.matchMedia` pour adresser différent comportement en fonction de la taille d'affichage de l'écran. La syntaxe dans les deux cas est identique et une simple ligne gère la condition total d'affichage. Enfin, si votre navigateur ne gère pas `window.matchMedia`, il ne gère pas non plus `@media` ce qui va nous arranger pour le support.\n\n\n\n\n\n## Notre problématique ##\n\nJe souhaite ouvrir la vidéo d'une chaine Youtube dans une popup. Si l'écran est trop petit, je préfère allez sur la page Internet de la page. Cela permet aux smartphones de proposer d'ouvrir le lien Internet dans une application tierce dédiée (entre autre) et aux petits écrans de ne pas se manger de popup.\n\n\n\n### HTML ###\n\nTout d'abord, préparons le terrain HTML. Nous avons besoin de deux box côte à côte, la première présentera la chaine Youtube, la seconde permettra de lancer la vidéo dans une popup. Si l'écran est trop petit, les box seront l'une sous l'autre.\n\n```html\n<section class=\"youtube-presentation\">\n  <div class=\"presentation\">\n    <h1>Youtube for Playstation</h1>\n    <h2>Description</h2>\n    <p>Welcome to the official home of PlayStation on YouTube.</p>\n    <p>Here you'll find the latest videos about your favorite\n    PlayStation products direct from Sony Computer Entertainment,\n    as well as consumer generated clips from other PlayStation\n    fans. To stay up to date, be sure to subscribe above and\n    check back often for the new game trailers,\n    behind-the-scenes footage, in-game moments,\n    tips and tricks and exclusive sneak peeks.</p>\n  </div>\n  <div class=\"video\">\n    <h2>Final Fantasy VII Remake E3 Trailer | PS4</h2>\n    <div class=\"link\">\n      <a \n        href=\"https://www.youtube.com/watch?v=Kznek1uNVsg\"><img \n        src=\"https://lh3.googleusercontent.com/[...]\" \n        alt=\"Final Fantasy VII Remake E3 Trailer | PS4\"></a>\n    </div>\n    <div class=\"popup\">\n      <div class=\"embeded\">\n        <div class=\"close\"></div>\n        <iframe \n          width=\"560\" \n          height=\"315\" \n          src=\"https://www.youtube.com/embed/Kznek1uNVsg\" \n          frameborder=\"0\" \n          allowfullscreen></iframe>\n      </div>\n    </div>\n  </div>\n</section>\n```\n\n### CSS ###\n\nHabillons tout ça :\n\n```css\n/* On créer un container responsive */\n* {\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n.youtube-presentation {\n  margin-left: -1rem;\n  margin-right: -1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n.youtube-presentation:after {\n  content: '';\n  clear: left;\n  display: block;\n}\n\n/* Et deux colonnes Responsive */\n.youtube-presentation .presentation,\n.youtube-presentation .video {\n   padding: 1rem;\n   float: left;\n   width: calc(100% - 2rem);\n   background-color: #e0e0e0;\n   margin: 1rem;\n   margin: 1rem;\n}\n@media (min-width: 768px) {\n  .youtube-presentation .presentation,\n  .youtube-presentation .video {\n     width: calc(50% - 2rem);\n  }\n}\n\n/* Mise en forme de la présentation */\n.youtube-presentation .presentation *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation .presentation *:last-child {\n  margin-bottom: 0;\n}\n\n/* Mise en forme de l'image vidéo */\n.youtube-presentation .video *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation .video .link {\n  max-width: 100%;  \n}\n.youtube-presentation .video .link img {\n  max-width: 100%;\n  background-color: #000;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  margin: 0;\n  margin-top: 1rem;\n}\n\n/* Mise en forme de la popup pour la vidéo */\n.youtube-presentation .video .popup {\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.youtube-presentation .video iframe {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n/* Affichage de la popup */\n.youtube-presentation .popup {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n@media (min-width: 768px) {\n  .youtube-presentation .popup.opened {\n    display: block;\n  }\n}\n.youtube-presentation .popup .embeded {\n  position: absolute;\n  width: 50%;\n  height: 50%;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n     -moz-transform: translateX(-50%) translateY(-50%);\n      -ms-transform: translateX(-50%) translateY(-50%);\n       -o-transform: translateX(-50%) translateY(-50%);\n          transform: translateX(-50%) translateY(-50%);\n}\n.youtube-presentation .popup .close {\n  position:absolute;\n  right: 0;\n  bottom: 100%;\n  cursor: pointer;\n}\n.youtube-presentation .popup .close:before {\n  content: 'X';\n  display: block;\n  color: #000;\n  -webkit-border-radius: 50%;\n          border-radius: 50%;\n  cursor: pointer;\n  padding: .2rem;\n  font-size: 1rem;\n  width: 2rem;\n  text-align: center;\n  background-color: #fff;\n  margin-bottom: .2rem;\n}\n```\n\nEt voyons le résultat !\n<section class=\"youtube-presentation\">\n  <div class=\"presentation\">\n    <div class=\"like-h1\">Youtube for Playstation</div>\n    <div class=\"like-h2\">Description</div>\n    <p>Welcome to the official home of PlayStation on YouTube.</p>\n    <p>Here you'll find the latest videos about your favorite\n    PlayStation products direct from Sony Computer Entertainment,\n    as well as consumer generated clips from other PlayStation\n    fans. To stay up to date, be sure to subscribe above and \n    check back often for the new game trailers, \n    behind-the-scenes footage, in-game moments, \n    tips and tricks and exclusive sneak peeks.</p>\n  </div>\n  <div class=\"video\">\n    <div class=\"like-h2\">Final Fantasy VII Remake E3 Trailer | PS4</div>\n    <div class=\"link\"><a href=\"https://www.youtube.com/watch?v=Kznek1uNVsg\"><svg><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#1F1F1F\" class=\"ytp-large-play-button-svg\" d=\"M84.15,26.4v6.35c0,2.833-0.15,5.967-0.45,9.4c-0.133,1.7-0.267,3.117-0.4,4.25l-0.15,0.95c-0.167,0.767-0.367,1.517-0.6,2.25c-0.667,2.367-1.533,4.083-2.6,5.15c-1.367,1.4-2.967,2.383-4.8,2.95c-0.633,0.2-1.316,0.333-2.05,0.4c-0.767,0.1-1.3,0.167-1.6,0.2c-4.9,0.367-11.283,0.617-19.15,0.75c-2.434,0.034-4.883,0.067-7.35,0.1h-2.95C38.417,59.117,34.5,59.067,30.3,59c-8.433-0.167-14.05-0.383-16.85-0.65c-0.067-0.033-0.667-0.117-1.8-0.25c-0.9-0.133-1.683-0.283-2.35-0.45c-2.066-0.533-3.783-1.5-5.15-2.9c-1.033-1.067-1.9-2.783-2.6-5.15C1.317,48.867,1.133,48.117,1,47.35L0.8,46.4c-0.133-1.133-0.267-2.55-0.4-4.25C0.133,38.717,0,35.583,0,32.75V26.4c0-2.833,0.133-5.95,0.4-9.35l0.4-4.25c0.167-0.966,0.417-2.05,0.75-3.25c0.7-2.333,1.567-4.033,2.6-5.1c1.367-1.434,2.967-2.434,4.8-3c0.633-0.167,1.333-0.3,2.1-0.4c0.4-0.066,0.917-0.133,1.55-0.2c4.9-0.333,11.283-0.567,19.15-0.7C35.65,0.05,39.083,0,42.05,0L45,0.05c2.467,0,4.933,0.034,7.4,0.1c7.833,0.133,14.2,0.367,19.1,0.7c0.3,0.033,0.833,0.1,1.6,0.2c0.733,0.1,1.417,0.233,2.05,0.4c1.833,0.566,3.434,1.566,4.8,3c1.066,1.066,1.933,2.767,2.6,5.1c0.367,1.2,0.617,2.284,0.75,3.25l0.4,4.25C84,20.45,84.15,23.567,84.15,26.4z M33.3,41.4L56,29.6L33.3,17.75V41.4z\"></path><polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#FFFFFF\" points=\"33.3,41.4 33.3,17.75 56,29.6\"></polygon></svg><img src=\"https://lh3.googleusercontent.com/proxy/EGUmRlYCgAUhw7F9Hic2auLGZfu3r9rAp1Z3hgouT_iYqgmKzxDtR5xcVimq25AIvdIUdBFC0dESno2LSxH5fd38P3O-jcmecp0A0GFXdCzkfVxDM0PqhVrH=w692-h384\" alt=\"Final Fantasy VII Remake E3 Trailer | PS4\"></a></div>\n    <div class=\"popup\">   \n      <div class=\"embeded\">\n        <div class=\"close\"></div>\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Kznek1uNVsg\" frameborder=\"0\" allowfullscreen></iframe>\n      </div>\n    </div>\n  </div>\n</section>\n\n> *`Conclusion :`* Sans JavaScript nous avons été capable d'habiller la totalité des éléments et de créer l'affichage de la popup (que l'on ne voit pas sans la classe `opened`). Nous allons maintenant avoir du JavaScript pour\n\n> - maintenir la hauteur des box à la même taille, uniquement quand ils sont côte à côte,\n- ouvrir la popup en grand format ou laisser le lien amener à une page Youtube.\n\n\n\n\n\n## Notre solution : `window.matchMedia` ##\n\nCommençons dans un premier temps, à l'aide de jQuery, par appliquer le script qui va maintenir la hauteur, et ouvrir la popup.\n\n```js\n/* Variable globale si pas encore défini */\nvar website = website || {},\n    $window = $window || $(window);\n\n/* \n * Scope pour nos deux nouvelles fonctions, \n * aucune variable ici ne polluera le reste\n * des scripts.\n */\n(function (publics) {\n  \n  /* \n   * Création de la fonctionnalité pour maintenir \n   * les hauteurs.\n   */\n  publics.sameHeight = function ($items) {\n  \n    function sameHeight() {\n      var maxHeight = 0;\n      \n      /* Parmi les éléments recherchés... */\n      $items.height(\"\").each(function () {\n        var $current = $(this);\n        \n        /* ...on trouve le plus haut... */\n        if ($current.height() > maxHeight) {\n          maxHeight = $current.height();\n        }\n        \n      /* Et on applique cette hauteur à tous les autres. */\n      }).height(maxHeight);\n    }\n    \n    /* \n     * Application de la fonction à la \n     * lecture de celle-ci...\n     */\n    sameHeight();\n    \n    /* \n     * ...puis à chaque redimensionnement de \n     * page.\n     */\n    $window.resize(function () {\n      sameHeight(); \n    });\n  };\n  \n  /* \n   * Création de la fonctionnalité pour ouvrir/fermer \n   * les popups.\n   */\n  publics.popupVideo = function ($senders, $targets) {\n    \n    /* Sur une popup ouverte... */\n    function closePopup($popup) {\n      /* ...permettre au clique sur le background qu'elle se ferme... */\n      $popup.click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n        \n      /* ...mais pas que le contenu utile la ferme... */\n      }).find(\".content\").click(function (e) {\n        e.stopPropagation();\n        \n      /* ...mais que le bouton close la ferme. */\n      }).find(\".close\").click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n      });\n    }\n    \n    /* Chaque élément d'ouverture $sender... */\n    function popupVideo() {\n      $senders.each(function (i) {\n        var $sender = $(this),\n            $target = $targets.eq(i);\n        \n        /* ...cible sa popup associée $target */\n        $sender.click(function (e) {\n          /* ...l'ouvre au clique... */\n          e.preventDefault();\n          $target.addClass(\"opened\");\n        });\n        \n        /* ...et met en place sa fermeture. */\n        closePopup($target)\n      });\n    }\n\n    /* \n     * Application de la fonction à la \n     * lecture de celle-ci...\n     */\n    popupVideo();\n    \n    /* \n     * ...puis à chaque redimensionnement de \n     * page.\n     */\n    $window.resize(function () {\n      popupVideo(); \n    });\n  };\n  \n}(website));\n\n/* \n * Application de nos deux fonctions sur le \n * HTML préparé en amont.\n */\nwebsite.sameHeight(\n  $(\".youtube-presentation .presentation, .youtube-presentation .video\")\n);\nwebsite.popupVideo(\n  $(\".youtube-presentation .video a\"),\n  $(\".youtube-presentation .popup\")\n);\n```\n\nCe qui nous donne au final... ceci !\n<section class=\"youtube-presentation ex1\">\n  <div class=\"presentation\">\n    <div class=\"like-h1\">Youtube for Playstation</div>\n    <div class=\"like-h2\">Description</div>\n    <p>Welcome to the official home of PlayStation on YouTube.</p>\n    <p>Here you'll find the latest videos about your favorite\n    PlayStation products direct from Sony Computer Entertainment,\n    as well as consumer generated clips from other PlayStation\n    fans. To stay up to date, be sure to subscribe above and \n    check back often for the new game trailers, \n    behind-the-scenes footage, in-game moments, \n    tips and tricks and exclusive sneak peeks.</p>\n  </div>\n  <div class=\"video\">\n    <div class=\"like-h2\">Final Fantasy VII Remake E3 Trailer | PS4</div>\n    <div class=\"link\"><a href=\"https://www.youtube.com/watch?v=Kznek1uNVsg\"><svg><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#1F1F1F\" class=\"ytp-large-play-button-svg\" d=\"M84.15,26.4v6.35c0,2.833-0.15,5.967-0.45,9.4c-0.133,1.7-0.267,3.117-0.4,4.25l-0.15,0.95c-0.167,0.767-0.367,1.517-0.6,2.25c-0.667,2.367-1.533,4.083-2.6,5.15c-1.367,1.4-2.967,2.383-4.8,2.95c-0.633,0.2-1.316,0.333-2.05,0.4c-0.767,0.1-1.3,0.167-1.6,0.2c-4.9,0.367-11.283,0.617-19.15,0.75c-2.434,0.034-4.883,0.067-7.35,0.1h-2.95C38.417,59.117,34.5,59.067,30.3,59c-8.433-0.167-14.05-0.383-16.85-0.65c-0.067-0.033-0.667-0.117-1.8-0.25c-0.9-0.133-1.683-0.283-2.35-0.45c-2.066-0.533-3.783-1.5-5.15-2.9c-1.033-1.067-1.9-2.783-2.6-5.15C1.317,48.867,1.133,48.117,1,47.35L0.8,46.4c-0.133-1.133-0.267-2.55-0.4-4.25C0.133,38.717,0,35.583,0,32.75V26.4c0-2.833,0.133-5.95,0.4-9.35l0.4-4.25c0.167-0.966,0.417-2.05,0.75-3.25c0.7-2.333,1.567-4.033,2.6-5.1c1.367-1.434,2.967-2.434,4.8-3c0.633-0.167,1.333-0.3,2.1-0.4c0.4-0.066,0.917-0.133,1.55-0.2c4.9-0.333,11.283-0.567,19.15-0.7C35.65,0.05,39.083,0,42.05,0L45,0.05c2.467,0,4.933,0.034,7.4,0.1c7.833,0.133,14.2,0.367,19.1,0.7c0.3,0.033,0.833,0.1,1.6,0.2c0.733,0.1,1.417,0.233,2.05,0.4c1.833,0.566,3.434,1.566,4.8,3c1.066,1.066,1.933,2.767,2.6,5.1c0.367,1.2,0.617,2.284,0.75,3.25l0.4,4.25C84,20.45,84.15,23.567,84.15,26.4z M33.3,41.4L56,29.6L33.3,17.75V41.4z\"></path><polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#FFFFFF\" points=\"33.3,41.4 33.3,17.75 56,29.6\"></polygon></svg><img src=\"https://lh3.googleusercontent.com/proxy/EGUmRlYCgAUhw7F9Hic2auLGZfu3r9rAp1Z3hgouT_iYqgmKzxDtR5xcVimq25AIvdIUdBFC0dESno2LSxH5fd38P3O-jcmecp0A0GFXdCzkfVxDM0PqhVrH=w692-h384\" alt=\"Final Fantasy VII Remake E3 Trailer | PS4\"></a></div>\n    <div class=\"popup\">   \n      <div class=\"embeded\">\n        <div class=\"close\"></div>\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Kznek1uNVsg\" frameborder=\"0\" allowfullscreen></iframe>\n      </div>\n    </div>\n  </div>\n</section>\n\n> Les mécanismes sont en place et fonctionnels, cependant, au vu du design de ma page dans ses divers formats Responsive, nous allons :\n- Pouvoir changer les règles pour les Media Queries `@media` de ma feuille CSS.\n- Les implémenter également dans le JavaScript avec `window.matchMedia`.\n\n\n\n### Le code JavaScript final ###\n\nAu regard de l'affichage de ma zone de contenu, il y a assez de place pour afficher les box côte à côte pour une largeur de fenêtre de 992px à l'infini et entre 480px et 780px. En ce qui concerne l'affichage de la popup, en dessous de 480px de large, je préférerais afficher la vidéo sur une page dédiée Youtube ou dans une application tierce. Je veux également le même comportement si l'affichage est inférieur à 320px de hauteur.\n\nLes deux Media Queries seront donc :\n\n- Pour les box : `(min-width: 480px) AND (max-width: 779px), (min-width: 992px)`\n- Pour la popup : `(min-width: 480px) AND (min-height: 320px)`\n\n*Note : Les valeurs données étant incluses, je mets donc 779px et non 780px pour qu'à 780px les box soient de nouveau en ligne.*\n\nCela nous donne les modifications suivantes pour la CSS :\n\n*CSS*\n\n```css\n/* ... */\n\n/* Et deux colonnes Responsive */\n.youtube-presentation .presentation,\n.youtube-presentation .video {\n   padding: 1rem;\n   float: left;\n   width: calc(100% - 2rem);\n   background-color: #e0e0e0;\n   margin: 1rem;\n   margin: 1rem;\n}\n@media (min-width: 480px) AND (max-width: 779px), (min-width: 992px) { /* Media Queries des box. */\n  .youtube-presentation .presentation,\n  .youtube-presentation .video {\n     width: calc(50% - 2rem);\n  }\n}\n\n/* ... */\n\n/* Affichage de la popup */\n.youtube-presentation .popup {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n@media (min-width:480px) AND (min-height: 320px) { /* Media Queries de la popup. */\n  .youtube-presentation .popup.opened {\n    display: block;\n  }\n}\n\n/* ... */\n```\n\net les modifications suivantes pour le JavaScript :\n\n```js\n/* ... */\n\n(function (publics) {\n  var privates = {};\n  \n  /*\n   * Nous créons une petite fonctionnalité\n   * utile uniquement dans notre scope pour\n   * autoriser, en fonction de la Media Queries\n   * le JavaScript à faire effet.\n   */\n  privates.allowMechanism = function (mediaQueries) {\n    var rtrn = false;\n    \n    /*\n     * Si le navigateur ne gère pas les Media Queries,\n     * la fonctionnalité ne fait rien de notable.\n     */\n    if (typeof mediaQueries !== 'undefined') {\n      \n      /*\n       * Si il les gère, appliquer l'effet, uniquement\n       * sur ce qui a été demandé dans la Media Queries.\n       */\n      if (typeof window.matchMedia !== 'undefined') {\n       rtrn = window.matchMedia(mediaQueries).matches;\n        \n      /*\n       * Si il les gère, mais qu'aucune Media Queries n'a été\n       * définies, rendre l'effet pour touts les\n       * cas de figure.\n       */\n      } else {\n        rtrn = true;\n      }\n    }\n    \n    return rtrn;\n  }\n\n  publics.sameHeight = function ($items, mediaQueries) {\n  \n    function sameHeight() {\n      var maxHeight = 0;\n      $items.height(\"\");\n\n      /*\n       * On ne manage la hauteur des box que\n       * si les Media Queries sont validées.\n       */\n      if (privates.allowMechanism(mediaQueries)) {\n        $items.each(function () {\n          var $current = $(this);\n\n          if ($current.height() > maxHeight) {\n            maxHeight = $current.height();\n          }\n        }).height(maxHeight);\n      }\n    }\n\n    /* ... */\n  };\n\n  publics.popupVideo = function ($senders, $targets, mediaQueries) {\n\n    /* ... */\n    \n    function popupVideo() {\n        /* ... */\n        \n        $sender.click(function (e) {\n\n          /*\n           * On autorise l'ouverture de la Popup uniquement\n           * si les Media Queries sont validées.\n           */\n          if (privates.allowMechanism(mediaQueries)) {\n            e.preventDefault();\n            $target.addClass(\"opened\");\n          }\n        });\n\n        /* ... */\n      });\n    }\n\n    /* ... */\n  };\n  \n}(website));\n\n/* \n * Application de nos deux fonctions sur le \n * HTML préparé en amont.\n */\nwebsite.sameHeight(\n  $(\".youtube-presentation .presentation, .youtube-presentation .video\"),\n  \"(min-width: 480px) AND (max-width: 779px), (min-width: 992px)\"\n);\nwebsite.popupVideo(\n  $(\".youtube-presentation .video a\"),\n  $(\".youtube-presentation .popup\"),\n  \"(min-width: 480px) AND (min-height: 320px)\"\n);\n```\n\nEt voilà !\n<section class=\"youtube-presentation2\">\n  <div class=\"presentation\">\n    <div class=\"like-h1\">Youtube for Playstation</div>\n    <div class=\"like-h2\">Description</div>\n    <p>Welcome to the official home of PlayStation on YouTube.</p>\n    <p>Here you'll find the latest videos about your favorite\n    PlayStation products direct from Sony Computer Entertainment,\n    as well as consumer generated clips from other PlayStation\n    fans. To stay up to date, be sure to subscribe above and \n    check back often for the new game trailers, \n    behind-the-scenes footage, in-game moments, \n    tips and tricks and exclusive sneak peeks.</p>\n  </div>\n  <div class=\"video\">\n    <div class=\"like-h2\">Final Fantasy VII Remake E3 Trailer | PS4</div>\n    <div class=\"link\"><a href=\"https://www.youtube.com/watch?v=Kznek1uNVsg\"><svg><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#1F1F1F\" class=\"ytp-large-play-button-svg\" d=\"M84.15,26.4v6.35c0,2.833-0.15,5.967-0.45,9.4c-0.133,1.7-0.267,3.117-0.4,4.25l-0.15,0.95c-0.167,0.767-0.367,1.517-0.6,2.25c-0.667,2.367-1.533,4.083-2.6,5.15c-1.367,1.4-2.967,2.383-4.8,2.95c-0.633,0.2-1.316,0.333-2.05,0.4c-0.767,0.1-1.3,0.167-1.6,0.2c-4.9,0.367-11.283,0.617-19.15,0.75c-2.434,0.034-4.883,0.067-7.35,0.1h-2.95C38.417,59.117,34.5,59.067,30.3,59c-8.433-0.167-14.05-0.383-16.85-0.65c-0.067-0.033-0.667-0.117-1.8-0.25c-0.9-0.133-1.683-0.283-2.35-0.45c-2.066-0.533-3.783-1.5-5.15-2.9c-1.033-1.067-1.9-2.783-2.6-5.15C1.317,48.867,1.133,48.117,1,47.35L0.8,46.4c-0.133-1.133-0.267-2.55-0.4-4.25C0.133,38.717,0,35.583,0,32.75V26.4c0-2.833,0.133-5.95,0.4-9.35l0.4-4.25c0.167-0.966,0.417-2.05,0.75-3.25c0.7-2.333,1.567-4.033,2.6-5.1c1.367-1.434,2.967-2.434,4.8-3c0.633-0.167,1.333-0.3,2.1-0.4c0.4-0.066,0.917-0.133,1.55-0.2c4.9-0.333,11.283-0.567,19.15-0.7C35.65,0.05,39.083,0,42.05,0L45,0.05c2.467,0,4.933,0.034,7.4,0.1c7.833,0.133,14.2,0.367,19.1,0.7c0.3,0.033,0.833,0.1,1.6,0.2c0.733,0.1,1.417,0.233,2.05,0.4c1.833,0.566,3.434,1.566,4.8,3c1.066,1.066,1.933,2.767,2.6,5.1c0.367,1.2,0.617,2.284,0.75,3.25l0.4,4.25C84,20.45,84.15,23.567,84.15,26.4z M33.3,41.4L56,29.6L33.3,17.75V41.4z\"></path><polygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#FFFFFF\" points=\"33.3,41.4 33.3,17.75 56,29.6\"></polygon></svg><img src=\"https://lh3.googleusercontent.com/proxy/EGUmRlYCgAUhw7F9Hic2auLGZfu3r9rAp1Z3hgouT_iYqgmKzxDtR5xcVimq25AIvdIUdBFC0dESno2LSxH5fd38P3O-jcmecp0A0GFXdCzkfVxDM0PqhVrH=w692-h384\" alt=\"Final Fantasy VII Remake E3 Trailer | PS4\"></a></div>\n    <div class=\"popup\">   \n      <div class=\"embeded\">\n        <div class=\"close\"></div>\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Kznek1uNVsg\" frameborder=\"0\" allowfullscreen></iframe>\n      </div>\n    </div>\n  </div>\n</section>\n\n> **`Conclusion :`** Et nous voilà aligné avec les Media Queries que ce soit dans les fichiers CSS ou dans les fichiers JavaScript !\n\n> Si vous souhaitez obtenir le code final complet, [c'est par ici](http://codepen.io/Haeresis/pen/YXEBbK) !", "dates" : { "published" : { "$date" : 1435320180000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "/* Variable globale si pas encore défini */\nvar website = website || {};\n\n/* \n * Scope pour nos deux nouvelles fonctions, \n * aucune variable ici ne pollura le reste\n * des scripts.\n */\n(function (publics) {\n   var privates = {};\n  \n /*\n   * Nous créeons une petite fonctionalité\n   * utile uniquement dans notre scope pour\n   * autoriser, en fonction de la Media Queries\n   * le JavaScript à faire effet.\n   */\n  privates.allowMechanism = function (mediaQueries) {\n    var rtrn = false;\n    \n    /*\n     * Si le navigateur ne gère pas les Media Queries,\n     * la fonctionalité ne fait rien de notable.\n     */\n    if (typeof mediaQueries !== 'undefined') {\n      \n      /*\n       * Si elle les gèrent, appliquer l'effet, uniquement\n       * sur ce qui a été demandé dans la Media Queries.\n       */\n      if (typeof window.matchMedia !== 'undefined') {\n       rtrn = window.matchMedia(mediaQueries).matches;\n        \n      /*\n       * Si elle les gèrent, mais qu'aucune n'a été\n       * définies, rendre l'effet pour toutes les\n       * tailles.\n       */\n      } else {\n        rtrn = true;\n      }\n    }\n    \n    return rtrn;\n  }\n\n  publics.sameHeight2 = function ($items, mediaQueries) {\n  \n    function sameHeight() {\n      var maxHeight = 0;\n\n      $items.height(\"\");\n\n      /*\n       * On ne manage la hauteur des box que\n       * si les mediaQueries sont validées.\n       */\n      if (privates.allowMechanism(mediaQueries)) {\n        $items.each(function () {\n          var $current = $(this);\n\n          if ($current.height() > maxHeight) {\n            maxHeight = $current.height();\n          }\n        }).height(maxHeight);\n      }\n    }\n\n    sameHeight();\n    $window.resize(function () {\n      sameHeight(); \n    });\n  };\n\n  publics.popupVideo2 = function ($senders, $targets, mediaQueries) {\n\n    function closePopup($popup) {\n      $popup.click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n      }).find(\".content\").click(function (e) {\n        e.stopPropagation();\n      }).find(\".close\").click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n      });\n    }\n    \n    function popupVideo() {\n      $senders.each(function (i) {\n        var $sender = $(this),\n            $target = $targets.eq(i);\n        \n        $sender.click(function (e) {\n\n          /*\n           * On autorise l'ouverture de la Popup uniquement\n           * si les mediaQueries sont validées.\n           */\n          if (privates.allowMechanism(mediaQueries)) {\n            e.preventDefault();\n            $target.addClass(\"opened\");\n          }\n        });\n\n        closePopup($target)\n      });\n    }\n\n    popupVideo();\n    $window.resize(function () {\n      popupVideo(); \n    });\n  };\n  /* \n   * Création de la feature pour maintenir \n   * les hauteurs.\n   */\n  publics.sameHeight = function ($items) {\n  \n    function sameHeight() {\n      var maxHeight = 0;\n\n      /* Parmis les éléments recherchés... */\n      $items.height(\"\").each(function () {\n        var $current = $(this);\n        \n        /* ...on trouve le plus haut... */\n        if ($current.height() > maxHeight) {\n          maxHeight = $current.height();\n        }\n        \n      /* Et on applique cette hauteur à tous les autres. */\n      }).height(maxHeight);\n    }\n    \n    /* \n     * Application de la fonction à la \n     * lecture de celle-ci...\n     */\n    sameHeight();\n    \n    /* \n     * ...puis à chaque redimentionnement de \n     * page.\n     */\n    $(window).resize(function () {\n      sameHeight(); \n    });\n  };\n  \n  /* \n   * Création de la feature pour ouvrir/fermer \n   * les popups.\n   */\n  publics.popupVideo = function ($senders, $targets) {\n    \n    /* Sur une popup ouverte... */\n    function closePopup($popup) {\n      /* ...permettre au clique sur le background qu'elle se ferme... */\n      $popup.click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n        \n      /* ...mais pas que le contenu utile la ferme... */\n      }).find(\".content\").click(function (e) {\n        e.stopPropagation();\n        \n      /* ...mais que le bouton Close la ferme. */\n      }).find(\".close\").click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n      });\n    }\n    \n    /* Chaque élément d'ouverture $sender... */\n    function popupVideo() {\n      $senders.each(function (i) {\n        var $sender = $(this),\n            $target = $targets.eq(i);\n        \n        /* ...cible sa popup associée $target */\n        $sender.click(function (e) {\n          /* ...l'ouvre au clique... */\n          e.preventDefault();\n          $target.addClass(\"opened\");\n        });\n        \n        /* ...et met en place sa fermeture. */\n        closePopup($target)\n      });\n    }\n\n    /* \n     * Application de la fonction à la \n     * lecture de celle-ci...\n     */\n    popupVideo();\n    \n    /* \n     * ...puis à chaque redimentionnement de \n     * page.\n     */\n    $(window).resize(function () {\n      popupVideo(); \n    });\n  };\n  \n}(website));\n\n/* Application de nos deux fonctions sur le \n * HTML préparé en amont.\n */\nwebsite.sameHeight($(\".youtube-presentation.ex1 .presentation, .youtube-presentation.ex1 .video\"));\nwebsite.popupVideo($(\".youtube-presentation.ex1 .video a\"), $(\".youtube-presentation.ex1 .popup\"));\nwebsite.sameHeight2(\n  $(\".youtube-presentation2 .presentation, .youtube-presentation2 .video\"),\n  \"(min-width: 480px) AND (max-width: 779px), (min-width: 992px)\"\n);\nwebsite.popupVideo2(\n  $(\".youtube-presentation2 .video a\"), $(\".youtube-presentation2 .popup\"),\n  \"(min-width: 480px) AND (min-height: 320px)\"\n);", "stylesheet" : "/* On créer un container responsive */\n.youtube-presentation,\n.youtube-presentation * {\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n.youtube-presentation {\n  margin-left: -1rem;\n  margin-right: -1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n.youtube-presentation:after {\n  content: '';\n  clear: left;\n  display: block;\n}\n\n/* Et deux colonnes responsive */\n.youtube-presentation .presentation,\n.youtube-presentation .video {\n   padding: 1rem;\n   float: left;\n   width: calc(100% - 2rem);\n   background-color: #e0e0e0;\n   margin: 1rem;\n   margin: 1rem;\n}\n\n@media (min-width: 768px) {\n  .youtube-presentation .presentation,\n  .youtube-presentation .video {\n     width: calc(50% - 2rem);\n  }\n}\n\n/* Mise en forme de la présentation */\n.youtube-presentation .presentation *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation .presentation *:last-child {\n  margin-bottom: 0;\n}\n\n/* Mise en forme de l'image vidéo*/\n.youtube-presentation .video *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation .video .link {\n  max-width: 100%;  \n}\n.youtube-presentation .video .link img {\n  max-width: 100%;\n  background-color: #000;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  margin: 0;\n  margin-top: 1rem;\n}\n\n/* Mise en forme de la popup pour la vidéo*/\n.youtube-presentation .video .popup {\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.youtube-presentation .video iframe {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n/* Affichage de la popup */\n.youtube-presentation .popup {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n}\n@media (min-width: 768px) {\n  .youtube-presentation .popup.opened {\n    display: block;\n  }\n}\n.youtube-presentation .popup .embeded {\n  position: absolute;\n  width: 50%;\n  height: 50%;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n     -moz-transform: translateX(-50%) translateY(-50%);\n      -ms-transform: translateX(-50%) translateY(-50%);\n       -o-transform: translateX(-50%) translateY(-50%);\n          transform: translateX(-50%) translateY(-50%);\n}\n.youtube-presentation .popup .close {\n  position:absolute;\n  right: 0;\n  bottom: 100%;\n  cursor: pointer;  \n}\n\n.youtube-presentation .popup .close:before {\n  content: 'X';\n  display: block;\n  color: #000;\n  -webkit-border-radius: 50%;\n          border-radius: 50%;\n  cursor: pointer;\n  padding: .2rem;\n  font-size: 1rem;\n  width: 2rem;\n  text-align: center;\n  background-color: #fff;\n  margin-bottom: .2rem;\n}\n\n.youtube-presentation .video .link {\n  position: relative;\n  display: inline-block;\n}\n.video svg {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 86px;\n  height: 60px;\n  -webkit-transform: translateY(-50%) translateX(-50%);\n     -moz-transform: translateY(-50%) translateX(-50%);\n      -ms-transform: translateY(-50%) translateX(-50%);\n       -o-transform: translateY(-50%) translateX(-50%);\n          transform: translateY(-50%) translateX(-50%);\n}\n\nbody {\n   overflow-x: hidden;\n}\n\n\n/* On créer un container responsive */\n.youtube-presentation2,\n.youtube-presentation2 * {\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n.youtube-presentation2 {\n  margin-left: -1rem;\n  margin-right: -1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n.youtube-presentation2:after {\n  content: '';\n  clear: left;\n  display: block;\n}\n\n/* Et deux colonnes responsive */\n.youtube-presentation2 .presentation,\n.youtube-presentation2 .video {\n   padding: 1rem;\n   float: left;\n   width: calc(100% - 2rem);\n   background-color: #e0e0e0;\n   margin: 1rem;\n   margin: 1rem;\n}\n\n@media (min-width: 480px) AND (max-width: 779px), (min-width: 992px) {\n\t.youtube-presentation2 .presentation,\n\t.youtube-presentation2 .video {\n\t   width: calc(50% - 2rem);\n\t}\n}\n\n/* Mise en forme de la présentation */\n.youtube-presentation2 .presentation *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation2 .presentation *:last-child {\n  margin-bottom: 0;\n}\n\n/* Mise en forme de l'image vidéo*/\n.youtube-presentation2 .video *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation2 .video .link {\n  max-width: 100%;  \n}\n.youtube-presentation2 .video .link img {\n  max-width: 100%;\n  background-color: #000;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  margin: 0;\n  margin-top: 1rem;\n}\n\n/* Mise en forme de la popup pour la vidéo*/\n.youtube-presentation2 .video .popup {\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.youtube-presentation2 .video iframe {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n/* Affichage de la popup */\n.youtube-presentation2 .popup {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n}\n@media (min-width:480px) AND (min-height: 320px) {\n  .youtube-presentation2 .popup.opened {\n    display: block;\n  }\n}\n.youtube-presentation2 .popup .embeded {\n  position: absolute;\n  width: 50%;\n  height: 50%;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n     -moz-transform: translateX(-50%) translateY(-50%);\n      -ms-transform: translateX(-50%) translateY(-50%);\n       -o-transform: translateX(-50%) translateY(-50%);\n          transform: translateX(-50%) translateY(-50%);\n}\n.youtube-presentation2 .popup .close {\n  position:absolute;\n  right: 0;\n  bottom: 100%;\n  cursor: pointer;\n}\n\n.youtube-presentation2 .popup .close:before {\n  content: 'X';\n  display: block;\n  color: #000;\n  -webkit-border-radius: 50%;\n          border-radius: 50%;\n  cursor: pointer;\n  padding: .2rem;\n  font-size: 1rem;\n  width: 2rem;\n  text-align: center;\n  background-color: #fff;\n  margin-bottom: .2rem;\n}\n\n.youtube-presentation2 .video .link {\nposition: relative;\ndisplay: inline-block;\n}\n.youtube-presentation2 .video svg {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 86px;\n  height: 60px;\n  -webkit-transform: translateY(-50%) translateX(-50%);\n     -moz-transform: translateY(-50%) translateX(-50%);\n      -ms-transform: translateY(-50%) translateX(-50%);\n       -o-transform: translateY(-50%) translateX(-50%);\n          transform: translateY(-50%) translateX(-50%);\n}\n\n.like-h1 {\n  color: #222;\n  margin: 32px 0 0;\n  font-weight: 400;\n  line-height: 1.3;\n  font-size: 1.5em;\n}\n.like-h2 {\n  color: #111;\n  margin: 32px 0 0;\n  font-weight: 400;\n  line-height: 1.3;\n  font-size: 1.17em;\n}", "title" : "Activer vos effets JavaScript en fonction de vos Media Queries", "urn" : "activer-vos-effets-javascript-en-fonction-de-vos-media-queries" }
{ "__v" : 0, "_id" : { "$oid" : "55abad466868ca087fbf864a" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48c9" } ], "content" : "Hier, c'était mon anniversaire. Et cette année, je ne m'en suis souvenu qu'avant-hier. Il ne me semble pas avoir passé une année sans que le mois de juillet arrivé, et même un peu avant, je ne me sois pas « impatienté » en attendant que le 18 arrive. Mais cette année, c'est comme si j'avais oublié de « m'impatienter ».\n\nAujourd'hui, j'ai mal à la tête, côté gauche, au dessus de l'oreille, et ce mal se prolonge jusqu'au dessus de ma tête et glisse jusqu'à ma tempe. C'est ténu, mais c'est le même mal de tête qu'hier, le jour de mon anniversaire, et que celui de la veille, et de la veille... et le même depuis maintenant deux semaines. Cette veille d'anniversaire, j'ai eu une accalmie. J'en ai certain jour, sans vraiment comprendre pourquoi. Avant ses deux dernières semaines, les maux de têtes étaient également chaque jour, mais pas nécessairement ciblés sur ce côté gauche. Avant le mois de mai, les maux de tête n'étaient pas tous les jours. Et avant le mois d'octobre de l'année dernière, les maux de tête n'étaient pas là.\n\nSi on analyse donc la progression de ces maux, en dehors de toutes causes environnementales, sociales ou physiques cela donne :\n - Dimanche 19 Octobre 2014 : premier mal de tête qui a cogné sur le côté gauche de mon crâne au dessus de l'oreille. Je m'en rappel car un tel mal de tête ne s'était jamais produit de toute ma vie. Ça cognait par saccade, c'était dérangeant, mais pas handicapant, juste très très désagréable. Puis cela marque le début de mes chaleurs au front et de mon hypersensibilité au touché frontal sans nécessairement pouvoir appeler ça des maux de tête. Le Nurofen qui était mon ami quand occasionnellement j'avais des maux de tête, ne changeait rien.\n - Samedi 16 Mai 2015 : après plusieurs mois de chaleur, de nausée, d'inquiétude, d'angoisse, de colique etc. Ce mal de tête qui le 19 Octobre a cogné du côté gauche, est apparu du côté droit de mon crâne, au dessus de l'oreille également. Depuis j'ai mal à la tête, tous les jours, à des endroits différents, mais tout est remis à zero la nuit en dormant. Le mal de tête apparaît une heure après le réveil, plus ou moins, et parfois se prolonge jusqu'à midi. Aucun médicament ne fait effet, sauf parfois du Co-doliprane et le très récent Relpax ou Zoromigro.\n - Depuis le 3 juillet 2015 : la majorité, voir la totalité des maux de tête qui réapparaissent chaque matin se trouvent sur le côté gauche, cependant, jusqu'au 12 juillet ils disparaissaient plus ou moins dans la journée, et cela n'a été gênant que deux jours pendant la semaine : des simples Dolipranne ont suffit à ré-apaiser mon mal dans la demi-heure à chaque fois.\n - Du 13 juillet 2015 à aujourd'hui, du matin au soir, du soir au matin, j'ai eu mal à ce côté gauche dans des proportions allant de ténus à presque insoutenable sans que aucun médicament ne change rien. Le 18, jour de mon anniversaire, avec ma première fêtes d'anniversaire surprise, deux Doliprannes et un anti-inflammatoire prescrit par le Neurologue en cas de dernier recours, j'ai passé ma journée à avoir mal.\n\nEn ajoutant les symptômes physiques qui ont accompagnés ses dates, et les examens cela donne :\n\n- Diverses prises de sang entre octobre et décembre qui ont montré un taux de lymphocyte un peu bas et de contre-examen m'étant en évidence le fait que celui-ci remontait progressivement\n - Cachet pour les maux de ventre accompagnant des selles molles mais seine à l'examen coprologique.\n\n- Nausées/maux de tête/prise au nez en fin décembre\n - J'ai eu un IRM cérébral avec l'avis du pratiquant disant RAS, juste un léger remaniement ethmoïdale.\n\n- Sans grosses améliorations en janvier/février\n - tentative de guérir une hypothétique sinusite aux antibiotique.\n\n- Tout Mars re-nausée/maux de tête/prise au nez \n - Cachet au carbone et anti-nauséeux.\n\n- D'Avril à Juin en complément diverse prises de sang, RAS, et un nouvel examen coprologique, RAS puis : \n - Allergologue qui diagnostique une Rhinite Chronique non allergique et qui me prescrit du Rhinocorne, depuis, plus de soucis.\n - Gastro-entérologue qui diagnostique des intestins irritables ainsi qu'un colon fonctionnant mal et qui me prescrit du Spagulax, depuis, plus de réel soucis. \n - Neurologue qui confirme le diagnostique IRM comme parfait et qui me donne un traitement de fond anti-migraine. Après 1 mois et demi, toujours en attente d'amélioration avec quelques nouvelles douleurs dans le bas des mollets, à la jointure du pied.\n\nEn ce qui concerne mon état psychologique :\n\nPour mon psy, et au vu de tous les examens antérieurs que j'ai pu faire, c'est parce que je me pause trop de questions et de problèmes que j'ai ses maux de tête. Alimenter par l'angoisse et la peur de mourir que j'ai eu ses derniers mois. Depuis que mes certitudes sur ma bonne santé ont été brisées par un corps qui m'a fait comprendre, pour la première fois de ma vie, que si la nature le souhaitait, je ne pourrais rien faire pour garder la forme. C'est très dure de penser qu'on n'est maître de son destin et de sa santé quand elle se dégrade sans que cela semble venir de nul part, et qu'on, ou le médecins ne semble rien pouvoir y faire. Pourquoi est ce que ça m'es arrivé maintenant ? On a toujours pas répondu à cette question...\n\nSi je perds un temps précieux à écrire tout ça, c'est parce que cela ne tournera plus dans ma tête une fois sorti de ma tête. Pourtant, j'ai l'impression que, maintenant que c'est écrit, c'est réel. Maintenant que mon histoire est « marqué sur le papier », je ne peux plus espérer que ça n'existe pas, et enfin me lever un matin en me disant : « Bon bah, je sais pas ce qui c'est passé, mais enfin sa semble fini. », ou que je puisse me dire « Je crois que ça s'améliore de mois en mois, ça va s'arrêter... ». Non, je n'en ai pas réellement l'impression en se qui concerne les maux de tête.\n\nMais j'écris sous les directives de mon psy, car je ne peux pas me résigner à avoir mal toute ma vie, et désespérer, je veux tout tenter. Mon psy m'assure que ça va passer, et que penser positivement et évacuer ce qui me tracasse de ma tête est la solution. Pourtant, j'étais vraiment sur qu'aujourd'hui, avec la magnifique journée que j'ai passé hier, les maux de têtes seraient plus ténus, comme pendant ma semaine de vacances. C'est maintenant sans compté le fait d'écrire tout ça qui me « prend la tête » comme ironiquement j'aime le dire ses derniers temps.\n\nJ'ai bien conscience que la vie, c'est pas des vacances, alors comment je vais faire pour arrêter ses maux de tête qui me semblent empirer quand la seule amélioration de ceux-ci semble liée à un environnement de vacances ? Pourquoi je ne peux pas simplement faire comme mes 26 dernières années : affronter les problèmes avec enthousiasme. Pourquoi je ne peux pas simplement profiter de mon bonheur auprès de ma Femme comme je l'ai fait ses 4 dernières années.\n\nEn tout cas, pour clore ce premier récit, pour ceux qui ne l'aurait pas compris, je suis né un 18 juillet il y a 27 ans. Je le marque, parce que je vais peut-être avoir tendance à l'oublier !\n\n\n\n\n\n- Hésitation à la medicine « alternative » car dernier recour avant le mur.\n- Explication de la signification du « plus mal à la tête », « accalmie ».\n- Ça me précoccupe d'avoir mal toujours au même endroit, j'ai lu qu'une personne avait toujours mal au même endroit car elle avait une petite tumeur inopérable tant qu'elle restait petite et qu'elle devrait vivre avec.\n- Je me demande comment un directeur de 55 ans déjà repéré comme pouvant faire des cancers à pu mourir d'une tumeur de la vésicule billiaire.\n- Le souvenirs donne l'impression que le temps est long", "dates" : { "published" : { "$date" : 1437314340000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : false }, "script" : "", "stylesheet" : "", "title" : "L'année où j'ai oublié mon anniversaire", "urn" : "l-annee-ou-j-ai-oublie-mon-anniversaire" }
{ "__v" : 0, "_id" : { "$oid" : "55df1d924bf5981b0760b95b" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48b6" }, { "$oid" : "5310456355dfd5f7698d48be" } ], "content" : "Je viens de (re)terminer la lecture du [Guide CSS Fr](http://guidecss.fr/) et j'ai eu envie d'apporter quelques modifications et ajouts à ces très bons conseils. Cet article va donc en quelque sorte constituer mes conventions en matière de création et maintenance HTML et CSS. Elles sont donc identiques à ce qui est écrit sur [Guide CSS Fr](http://guidecss.fr/) à cet article prêt !\n\n<figure>\n<img src=\"media/images/upload/css.jpg\" alt=\"Anatomie d'une règle CSS\" style=\"max-width: 100%\">\n<figcaption>Affreux sélecteur... http://www.puce-et-media.com/</figcaption>\n</figure>\n\nN'ayant rien à ajouter aux parties autres que « [4. Convention de nommage](http://guidecss.fr/convention.html) », je passe directement à mes propres conventions de nommage en vous sensibilisant à l'anatomie d'une page HTML.\n\n**Je finirai néanmoins par pointer du doigt une erreur, sinon la seule, en ce qui concerne la totale inutilité du préfixe `.js-` destiné à séparer le visuel du fonctionnel**.\n\n*Note : Tous les exemples d'inclusion de fragment HTML sont tirés de [NodeAtlas](http://haeresis.github.io/NodeAtlas/) mais c'est la même chose avec vos Frameworks préférés.*\n\n\n\n\n\n## Composition d'une page ##\n\nChaque page HTML est composée par :\n- un *Gabarit* de page que nous nommerons ici **Template**,\n- des *Composants* que nous nommerons ici **Components** et\n- des *Patrons de conception* que nous nommerons ici **Patterns**.\n\nAvant de nous attacher au Template qui représente la structure qui va accueillir nos Components sur une page, intéressons nous au plus important : les Components eux-mêmes.\n\n\n\n### Les Components (Composants) ###\n\n#### Structure ####\n\nLes Components sont des fragments de HTML qui découpent une page de contenu HTML de manière logique et consistante. Bien qu'ils puissent être spécialisés et quasiment dédiés à un seul endroit —comme le Header de site—, ils sont prévus pour être :\n- **Déplaçable** dans une page.\n- **Réutilisable** sur d'autres pages.\n\nÀ cet effet, il est généralement bon d'écrire un Component dans un fichier dédié. Par exemple dans le dossier `components` de [NodeAtlas](http://haeresis.github.io/NodeAtlas/), on pourrait créer un `hearder.htm` et l'utiliser avec `<%- include('header.htm') %>` dans un Template de page HTML.\n\nUn Component est obligatoirement composé de deux `<div>` imbriquées (ou toutes autres balises de type `block`) pour pouvoir se suffire à lui-même et respecter n'importe quel design sans être disposé dans un Template Complexe (voir plus loin).\n\nLa première `<div>` représente la place totale qu'occupera le Component, design visuel inclus (background généralement) et peut varier sémantiquement avec : `header`, `footer`, `section`, `article`, `aside` ou `nav`. Nous reviendrons plus bas sur cet aspect.\n\nLa seconde `<div>` représente la limite du contenu en lui-même (1200px maximum habituellement). Elle contiendra toujours la classe `.ui` (par exemple) qui nous permet de définir la taille maximale d'affichage du contenu des Components, pour tous les Components, quand ils sont libres (utilisés en dehors d'une grille, ce que nous verrons plus loin).\n\n**Voici par exemple un Component HTML dans `components/name-of-component.htm`**\n\n```html\n<div class=\"name-of-component\">\n  <div class=\"ui\">\n    <!-- Subparts of component here. -->\n  </div>\n</div>\n```\n\nLa `<div>` de classe `.ui` fixe la taille maximale dans chaque composant grâce à par exemple...\n\n**...ces directives CSS dans `assets/stylesheets/common.css`**\n\n```css\n.ui {\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n}\n```\n\n**ou ponctuellement dans `assets/stylesheets/component.name-of-component.css` avec**\n\n```css\n.name-of-component .ui {\n  max-width: 1024px;\n}\n```\n\nMais aucune taille `width` ou `height` ne doit être forcée de manière à ce que le contenu du composant soit toujours fluide, quelque soit sa place dans une grille.\n\n> **Pourquoi deux « div » imbriquées et une « .ui » partout ?**\n\n> Je vais vous laisser voir cela à travers les divers exemples d'affichages réalisables sans Template Complexe (pas de grille) et **à partir du même code HTML**.\n   - [Toute la place en alternance : type « One Page »](http://codepen.io/Haeresis/pen/pJMBEg),\n   - [inclus dans une page : type « Page Standard »](http://codepen.io/Haeresis/pen/NqQVXv),\n   - [les deux exemples précédents en alternance : type « Design »](http://codepen.io/Haeresis/pen/PqMvQW),\n   - [sur toute la page : type « BackOffice »](http://codepen.io/Haeresis/pen/mJNYxE),\n   - [grille de composant : type « Bootstrap »](http://codepen.io/Haeresis/pen/vOowjL),\n   - [un affichage hors flux : type « Popup »](http://codepen.io/Haeresis/pen/KpOLeR),\n   - [un affichage en absolue : type « App Mobile »](http://codepen.io/Haeresis/pen/jPgopz) ou encore\n   - **[la totalité en une page](http://codepen.io/Haeresis/pen/bdXymY)**.\n\n#### Nommage ####\n\nDans le [Guide CSS Fr](http://guidecss.fr/), il est expliqué que si le nom du Component est : `my-component`, alors celui d'un sous Component serait `my-component__text` et une version alternative de se Component serait permise avec la classe `my-component--alternative` à la place. Pour ma part j'ai opté pour quelque chose de différent pour des questions de lisibilité du `__` ce qui nous permet de ne pas se soucier de séparer les classes par deux espaces.\n\n1. Le nom du Component est unique. Par exemple `.presentation-items`.\n   ```html\n  <div class=\"presentation-items\">\n    <div class=\"ui\">\n      <!-- Subparts -->\n    </div>\n  </div>\n```\n\n2. Une sous partie de Component est nommée par exemple `.presentation-items--title`, `.presentation-items--content` ou encore `.presentation-items--item--title`.\n   ```html\n  <div class=\"presentation-items\">\n    <div class=\"ui\">\n      <div class=\"presentation-items--title\">\n        <!-- Title -->\n      </div>\n      <ul class=\"presentation-items--items\">\n        <li class=\"presentation-items--item\">\n          <div class=\"presentation-items--subtitle\"> <!-- ou `presentation-items--item--title` -->\n            <!-- Subtitle -->\n          </div>\n          <div class=\"presentation-items--content\">\n            <!-- Content -->\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n```\n   et est adressé en CSS directement par son sélecteur CSS\n   ```css\n   .presentation-item {\n     background-color: #f00;\n   }\n   .presentation-item--title {\n     font-size: 1.4rem;\n   }\n   .presentation-item--content {\n     padding: 20px;\n   }\n```\n\n3. La version alternative d'un Component n'est pas préfixée par son nom. Au lieu de cela, le comportement alternatif est nommé et est préfixé par `.as-`. C'est grâce au cumul des classes et non à son changement que l'on appliquera la différence. Par exemple `as-carousel`.\n   ```html\n  <div class=\"presentation-items as-carousel\">\n    <div class=\"ui\">\n      <!-- ... -->\n    </div>\n  </div>\n```\n   qui est adressé en CSS grâce à la cascade\n   ```css\n   /* ... Partie précédente ... */\n\n   .presentation-item.as-carousel { /* Cas rare de double sélection permise. */\n     background-color: #00f;\n   }\n   /*.presentation-item*/.as-carousel .presentation-item--title {\n     font-size: 1.2rem;\n   }\n   /*.presentation-item*/.as-carousel .presentation-item--content {\n     padding: 10px;\n   }\n```\n   ou encore en Less\n   ```css\n   .presentation-item {\n     background-color: #f00;\n     &.as-carousel {\n       background-color: #00f;\n     }\n   }\n   .presentation-item--title {\n     font-size: 1.4rem;\n   }\n   .presentation-item--content {\n     padding: 20px;\n   }\n\n   /*.presentation-item*/.as-carousel {\n     .presentation-item--title {\n       font-size: 1.2rem;\n     }\n     .presentation-item--content {\n       padding: 10px;\n     }\n   }\n```\n\n\n\n### Le Template (Gabarit de page) ###\n\nLe Template est la carcasse qui va accueillir les Components. On appel souvent cette carcasse la Grille ou Grid. Dans son état le plus simple c'est une page HTML sans grille, sans classe de Template : une page uniquement composé de Components les uns à la suite des autres.\n\nLe contenu de la page HTML ne doit jamais être immédiatement sous le `<body>` mais dans une `<div>` de classe `layout` par exemple. Cela permet d'ajouter les scripts HTML à l'extérieur et de pouvoir profiter de `:nth-child(x)` à l'intérieur sans que le nombre ou la place des items soient altérés par l'ajout d'un `<script>` (En ce qui concerne les `<link>`, ça se trouve dans le `<head>`).\n\n\n#### Template Simple (sans classe) ####\n\nVoici à quoi ressemble une page HTML sans grille qui accueil nos Components.\n\n```html\n<body>\n  <!-- Minimum of `script` tags for boot -->\n  <div class=\"layout\">\n    <!-- Loop of Components here. -->\n  </div>\n  <!-- All `script` tags for 99% of Javascript here. -->\n</body>\n```\n\n#### Template Nommé ####\n\nIl est intéressant d'ajouter un nom à chaque Template de manière à pouvoir changer, pour un Template précis, le comportement de n'importe quel Component.\n\n```html\n<body class=\"home\"> <!-- Name of Template -->\n  <div class=\"layout\">\n    <!-- Loop of Components here. -->\n  <div>\n</body>\n```\n\nEn mettant ce nom au sommet de toute balise HTML, cela permet de manipuler les variations CSS de tous les Patterns et Components en fonction du Template. En incluant donc la partie Header et Footer de votre site et même le conteneur `.layout` global. Je peux donc changer l'arrière plan du site, spécifiquement pour le Template de classe `home`.\n\n**Avec ce code CSS par exemple dans `assets/stylesheets/common.less`**\n\n```css\n.layout {\n  background-image: none;\n}\n\n/* ... */\n\n.home {\n\n  /**\n   * Extend `.layout` in common.less\n   */\n  .layout {\n    background-image: url('../media/images/ads.png');\n  }\n}\n```\n\n#### Template Complexe ####\n\nIl est possible de créer des Templates plus complexes en permettant de les habiller avec un système de grille pour avoir une page plus ordonnée.\n\n**Un exemple de Components répartis dans des `.area` destinées à être habillées par une grille.**\n\n```html\n<body class=\"home\">\n  <div class=\"layout\">\n    <section class=\"area for-main\">\n      <div class=\"part for-overview\">\n        <!-- Loop of Components here. -->\n      </div>\n      <aside class=\"part for-ads\">\n        <!-- Loop of Components here. -->\n      </aside>\n    </section>\n    <section class=\"area for-presentation\">\n      <!-- Loop of Components here. -->\n    </section>\n    <aside class=\"area for-also\">\n      <!-- Loop of Components here. -->\n    </aside>\n  </div>\n</body>\n```\n\n**avec un habillage de grille (LESS avec Bootstrap par exemple)**\n\n```css\n@import (reference) 'bootstrap/bootstrap';\n\n.home {\n  .area {\n     .container; /* Add padding left and right... */\n  }\n  .for-presentation {\n    padding: 0; /* ...and remove it. */\n  }\n\n  .part {\n    .make-sm-column(6);\n  }\n}\n```\n\nRien ne vous empêche non plus de changer la grille (l'application CSS sur le Template) en fonction des besoins, ce que vous ne pourriez pas faire si vous appliquer des Patterns comme `.col-xs-6` directement dans la grille (nous verrons cela plus bas).\n\nPar exemple en ajoutant `.with-ads` à votre Template, vous pourriez faire varier votre feuille CSS de manière à accueillir de la publicité de part et d'autre de la page.\n\n```html\n<body class=\"home with-ads\">\n  <div class=\"layout\">\n    <!-- Template Grid -->\n  </div>\n</body>\n```\n\n\n\n### Les Patterns (Patrons de conception) ###\n\nCe sont des modèles prêts à l'emploi destinés à être apposés sur une balise, ou, une balise contenant un ensemble de balise. Lors de sa définition, le Pattern nécessite « obligatoirement » un commentaire CSS sur son utilisation dans un code HTML.\n\nContrairement aux Templates et Components, les Patterns ne sont pas ciblés depuis la feuille CSS vers une classe « sémantique » mais mis à la main sur une balise HTML. En ce sens, ils sont parfait pour permettre à des rédacteurs de contenu de faire de la mise en page ou faire votre grille CSS dans le Template de manière [HTML-Driven](https://blog.lesieur.name/utilisation-optimisee-de-framework-css-comme-bootstrap-avec-less/) plutôt que [CSS-Driven](https://blog.lesieur.name/utilisation-optimisee-de-framework-css-comme-bootstrap-avec-less/).\n\nDans nos exemples précédents, `.container`, `.area` et `.part` pourrait être des Patterns avec chacun un rôle « raccourci » spécifique. Les Patterns peuvent donc servir dans les Components, mais également dans les Templates en fonction du besoin.\n\nVoici des exemples de Patterns :\n\n```css\n/** \n  <div class=\"text-center\">\n    Ce texte est centré.\n  </div>\n */\n.text-center {\n  text-align: center;\n}\n\n/** \n  <div class=\"img-responsive\">\n    <img src=\"fit-container-in-all-size.png\">\n  </div>\n * or\n  <img class=\"img-responsive\" src=\"fit-container-in-all-size.png\">\n */\n.img-responsive {\n  max-width: 100%;\n  img {\n    max-width: 100%;\n  }\n}\n\n/** \n  <button class=\"btn-right-arrow\">\n    <span>Click Me</span>\n  </button>\n */\n.btn-right-arrow {\n  position: relative;\n  span {\n    display: inline-block;\n    padding: 4px 8px;\n    position: relative;\n    z-index: 2;\n  }\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    right: 0;\n    .translateY();\n    background-image: url('../media/images/arrow.png');\n    width: 16px;\n    height: 16px;\n  }\n}\n\n/** \n  <div class=\"container\">\n    <!-- Any blocks or inlines -->\n  </div>\n */\n.container {\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n}\n```\n\nLes Patterns étant applicables dans tous les Components, un comportement spécifique à un Component peut-être spécifié dans le fichier du Component de cette manière :\n\n**Exemple de Pattern CSS surchargé spécifiquement pour un Component**\n\n```css\n/** \n  <div class=\"color-alternative\">\n    I am white !\n  </div>\n */\n.color-alternative {\n  color: #fff;\n}\n\n/* ... */\n\n.background-white-component {\n  background-color: #fff;\n\n  /**\n   * Extend `.color-alternative` in common.less\n   */\n  /* Pattern */.color-alternative {\n    color: #888;\n  }\n}\n```\n\n**Mon conseil : un Pattern doit toujours être placé dans une zone dédiée au Contenu et non au Composant en lui-même. Il est parfait dans du HTML qui pourrait avoir vocation à finir dans une base de donnée de contenu. Aussi n'utilisez jamais un `.text-right` sur un `.component--subcomponent` car rien ne garanti que dans un autre contexte (Template), le texte ne serait pas à gauche. Et en ce qui concerne leur utilisation dans les Template : tout dépend si vous préférez intervertir les Templates HTML quand la carcasse varie ou ajouter une classe `.with-this-variation` comme vu précédemment.**\n\n\n\n### Classes Alternatives ###\n\n`class=\"name-of-component\"` sert à identifier toutes les portions de HTML relatives à se composant dans une page. En ajoutant des classes, on peut varier l'habillage ou identifier précisément une instance.\n\n- __as-*__ : permet de faire varier le style/comportement d'un composant/gabarit. *Exemple : `class=\"name-of-component as-popup\"` pour permettre au composant de s'afficher comme une popup.*\n\n- __with-*__ : un équivalent de `as-*`. _Vous pouvez par exemple réserver `as-*` pour les composants et `with-*` pour les gabarits._\n\n- __is-*__ : permet de décrire l'état d'un composant/gababrit ou afin d'activer/désactiver des visuels et/ou fonctionnalités ou une capacité à permettre une fonctionnalité. *Exemple : `class=\"name-of-component is-opened\"` pour décrire que la popup est ouverte ou `class=\"name-of-component is-closable\"` pour dire que la popup peut être manuellement fermée*.\n\n- __for-*__ : permet d'identifier précisément un composant/gabarit parmi plusieurs autres du même type. _Exemple : class=\"part-of-template for-ads\" pour identifier le contenu du composant comme étant de la publicité par exemple._\n\n\n\n\n## CSS et JS : une seule classe pour les gouverner toutes ##\n\nNous y voilà, au point qui à lui seul m'a donné l'envie d'écrire cet article.\n\n> Le [Guide CSS FR](http://guidecss.fr/convention.html) nous dit « *N'utilisez jamais une classe de style CSS pour vos ancres JavaScript. Associer un comportement javascript à une classe de style signifie que nous ne pourrons jamais avoir l'un sans l'autre.* » et nous donne comme exemple : « *is-sortable  js-is-sortable* »\n\n> **Cela est faux.** Je m'explique.\n\n1. Dans le cas des Patterns ; une unique classe doit se suffire à elle-même. C'est précisément parce qu'elle a vocation à être apposée à la main qu'il ne doit pas être possible de gérer le visuel et le JavaScript indépendamment.\n\n   Soit tous les `.btn-popup` ouvre une popup, soit aucun. Il n'y a pas de raison que les `.btn-popup` n'ouvre pas les popups et que les `.btn-popup.js-btn-popup` les ouvre. Le `.btn-popup` se suffit à lui-même. Si toutefois on souhaite un bouton identique au `.btn-popup`, sans que celui-ci n'ouvre de popup, c'est dans la CSS et le HTML que ça se passe avec par exemple les règles CSS `.btn-popup, .btn-foo { /* same design */ }` que l'on applique sur l'élément HTML `.btn-foo`.\n   \n   Une autre manière de faire serait alors les règles CSS `.btn-foo { /* design */ } .is-popup-openable { cursor: pointer; }` appliqué sur un élément HTML `.btn-foo.is-popup-openable`. Comprenez bien ici que le `cursor: pointer` et l'action de rendre cliquable sont encore une fois liés à une unique classe qui est `.is-popup-openable` et qu'il n'y a pas de sens à utiliser `.is-popup-openable.js-is-popup-openable`. Soit la classe y est et l'élément est cliquable avec une main, soit elle n'y ai pas et l'élément n'est pas cliquable sans main.\n\n2. Dans le cas des Components et des Templates, c'est pareil. Il est cependant envisageable que dans un cas on souhaite afficher un Component de manière standard, et dans un autre cas on souhaite lui faire exécuter un script pour par exemple gérer un défilement automatique d'item ; une visionneuse. \n\n   Cela n'a pas de sens que `.presentation-items` ne soit pas un visionneur mais que `.presentation-items.js-presentation-items` en soit un. Non, cela a plus de sens que `.presentation-items` n'en soit pas nécessairement un mais que `.presentation-items.as-viewer` en soit un.\n\n   Pas besoin de préciser `.js-` car c'est au moment de sélectionner un Component par la classe le désignant (et sa variation ou non) dans nos fichiers JavaScript qu'on décide qu'un code JavaScript doit s'appliquer dessus : et absolument pas parce que nous l'avons décidé en ajoutant la même classe avec `.js-` devant.\n\n   *Exemple : Il est possible que j'ajoute du JavaScript pour faire fonctionner `.presentation-items` pour par exemple faire du Lazy Loading de contenu ou que je n'en utilise pas sur `.presentation-items.as-viewer` car mes transitions automatiques sont gérées en CSS3 avec transition et animation.*\n\n**En conclusion : style et comportement doivent être liés à la même classe. Si une autre classe doit être ajoutée, c'est pour décrire un _Autre_ comportement visuel et/ou fonctionnel.**\n\n\n\n\n\n## Des Components réellement déplaçable partout ##\n\nLa problématique lorsque l'on déplace des fragments de HTML, c'est de ne plus respecter l'arborescence des `<h1-h6>`. Car si un Component possède un `<h1>`, alors il peut difficilement être mis une fois dans le haut de la page et une fois en bas sans faire hurler au scandale les experts SEO. Réglons ce problème.\n\n\n\n### Rappel sur les `block` sémantiques ###\n\nSachez qu'en HTML5, [il peut y avoir plus d'un `<h1>` par page](https://blog.lesieur.name/les-balises-h1-multiples-autorisees-en-html5/) mais pas à n'importes quelles conditions.\n\nSous la balise `<body>` : l'intégralité des `<h1-h6>` dispersés entre les balises forment un index hiérarchique. L'élément `<h1>` doit être unique. Mais les balises `<section>`, `<article>`, `<aside>` et `<nav>` remettent les compteurs à zéro et sous chacune de ces balises il est de nouveau possible de disperser des `<h1-h6>` avec un seul `<h1>`, etc.\n\nChaque nouvel espace de `<section>`, `<article>`, `<aside>` et `<nav>` peut lui-même contenir un `<header>` et un `<footer>`. L'importance des `<h1-h6>` est donc à présent bi-directionnel voir tri-directionnel : un `<h2>` est d'autant plus important qu'il se trouve directement dans `<body>` à l'intérieur d'un `<header>` au contraire d'un `<h1>` sous une pile de plusieurs `<section>`. Il est même probable que un `body > article > header > h1` dans une page avec une unique balise `<article>` est plus de poids que le `body > header > h1` du titre de page (mais je spécule, ce n'ai pas moi qui fait les règles des algorithmes).\n\nEn tout cas le voilà ! Notre moyen de rendre déplaçable les Components comme des sortes de module pouvant chacun contenir : un `<header>`, un `<footer>` et une hiérarchie `<h1-h6>`.\n\n\n\n### L'application simple : faire gérer le cloisonnement par le Template ###\n\nLe moyen le plus simple est de gérer le cloisonnement avec le Template. Imaginons ce Template :\n\n```html\n<body class=\"home\">\n  <div class=\"layout\">\n    <header class=\"area for-header\">\n      <!-- Loop of Components here. -->\n    </header>\n    <section class=\"area for-main\">\n      <div class=\"part for-overview\">\n        <!-- Loop of Components here. -->\n      </div>\n      <aside class=\"part for-ads\">\n        <!-- Loop of Components here. -->\n      </aside>\n    </section>\n    <section class=\"area for-presentation\">\n      <!-- Loop of Components here. -->\n    </section>\n    <aside class=\"area for-also\">\n      <!-- Loop of Components here. -->\n    </aside>\n    <footer class=\"area for-footer\">\n      <!-- Loop of Components here. -->\n    </footer>\n  </div>\n</body>\n```\n\nainsi que ce Component :\n\n```html\n<div class=\"component\">\n  <div class=\"ui\">\n    <header class=\"component--header\">\n      <h1>Title<h1>\n    </header>\n    <div  class=\"component--content\">\n      <h2>Subtitle</h2>\n      <p>Text</p>\n      <p>Text</p>\n    </div>\n    <footer class=\"component--footer\">\n      <h3>Lien<h3>\n    </footer>\n  </div>\n</div>\n```\n\nLa contrainte avec ce composant est donc qu'il ne pourra jamais être placé dans `.for-header` ni dans `.for-footer` sous peine d'injecter un double `<header>` et `<footer>` dans le `<body>`. Cela peut être évité en estimant que les Components de Header et de Footer globaux sont spécifiques à ses zones et ne seront pas déplaçable (comme c'est pratiquement toujours le cas).\n\nOn voit cependant que hors-mi ces zones, notre Component peut atterrir un peu partout ou il le souhaite sans que cela ne pose de soucis.\n\n\n\n### L'application complexe : faire gérer le cloisonnement au moment de l'injection du Component, hors Template et hors Component ###\n\nPenchons nous de nouveau sur [NodeAtlas](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/) qui va nous permettre de créer des injections de Component dynamique ! Vous pouvez faire des systèmes similaires de vos côtés avec vos outils ou Frameworks préférés. Cela n'est qu'un brouillon car on pourrait même envisager l’injection de Component dans des Component, etc.\n\nAvec...\n\n1. Le webconfig suivant `webconfig.json` :\n\n   ```js\n{\n  \"commonController\": \"common.js\",\n  \"routes\": {\n    \"/\" : {\n      \"template\": \"home.htm\",\n      \"variation\": \"home.json\"\n    }\n  }\n}\n```\n\n2. Le Template `templates/home.htm` :\n\n   ```html\n<!-- ... -->\n<body class=\"home\">\n  <div class=\"layout\">\n    <div class=\"area for-header\">\n      <%- includeComponent('placeholder-header') %>\n    </div>\n    <div class=\"area for-main\">\n      <div class=\"part for-overview\">\n        <%- includeComponent('placeholder-overview') %>\n      </div>\n      <div class=\"part for-ads\">\n        <%- includeComponent('placeholder-ads') %>\n      </div>\n    </div>\n    <div class=\"area for-presentation\">\n      <%- includeComponent('placeholder-presentation') %>\n    </div>\n    <div class=\"area for-also\">\n      <%- includeComponent('placeholder-also') %>\n    </div>\n    <div class=\"area for-footer\">\n      <%- includeComponent('placeholder-footer') %>\n    </div>\n  </div>\n</body>\n<!-- ... -->\n```\n\n3. Le Fichier de variation `variations/home.json` :\n\n   ```js\n{\n  \"components\": {\n\n    \"placeholder-header\": [{\n      \"path\": \"templates/component.htm\",\n      \"variation\": {\n        \"mainTag\": \"div\"\n      }\n    }, {\n      \"path\": \"templates/component.htm\",\n      \"variation\": {\n        \"mainTag\": \"header\"\n      }\n    }],\n\n    \"placeholder-overview\": [{\n      \"path\": \"templates/three-boxes.htm\",\n      \"variation\": {\n        \"mainTag\": \"section\"\n      }\n    }],\n\n    \"placeholder-ads\": [{\n      \"path\": \"templates/component.htm\",\n      \"variation\": {\n        \"mainTag\": \"aside\"\n      }\n    }],\n\n    \"placeholder-presentation\": [{\n      \"path\": \"templates/three-boxes.htm\",\n      \"variation\": {\n        \"mainTag\": \"article\"\n      }\n    }],\n\n    \"placeholder-also\": [{\n      \"path\": \"templates/component.htm\",\n      \"variation\": {\n        \"mainTag\": \"aside\"\n      }\n    }],\n\n    \"placeholder-footer\": [{\n      \"path\": \"templates/component.htm\",\n      \"variation\": {\n        \"mainTag\": \"footer\"\n      }\n    }, {\n      \"path\": \"templates/component.htm\",\n      \"variation\": {\n        \"mainTag\": \"div\"\n      }\n    }, {\n      \"path\": \"templates/component.htm\",\n      \"variation\": {\n        \"mainTag\": \"div\"\n      }\n    }]\n\n  }\n}\n```\n\n4. Le Component `components/component.htm` :\n\n   ```html\n<%- sc('<section class=\"banner\">', component) %>\n  <div class=\"ui\">\n    <%- sc('<header class=\"component--header\">', component) %>\n      <%- sc('<h1>', component) %>Title<%- sc('</h1>', component) %>\n    <%- sc('</header>', component) %>\n    <div  class=\"component--content\">\n      <%- sc('<h2>', component) %>Title<%- sc('</h2>', component) %>\n      <p>Text</p>\n      <p>Text</p>\n    </div>\n    <%- sc('<footer class=\"component--footer\">', component) %>\n      <%- sc('<h3>', component) %>Lien<%- sc('</h3>', component) %>\n    <%- sc('</footer>', component) %>\n  </div>\n<%- sc('</section>', component) %>\n```\n\n...on pourrait parvenir à nos fins. Pendant la réalisation de nos Components on utilise toujours une `<section>`. C'est au moment d'injecter le Component que l'on décide grâce à mainTag quelle balise globale va remplacée `<section>`. On s'assurerait également de transformer tous les `<header>` en `<div class=\"header-like\">` (etc.) dans le cas où le mainTag serait `div`, `header` ou `footer`.\n\nVoici pour les petits curieux le code [NodeAtlas](https://github.com/Haeresis/NodeAtlas) de `comtrollers/common.js` qu'il faut pour faire fonctionner tout ça.\n\n- [Contenu du fichier `controller/common.js`](http://codepen.io/Haeresis/pen/jbNVYa/?editors=001)\n\n#### De la sémantique automatique ####\n\nBon, **vous conviendrez que notre Component est assez laid**, et ça rend la chose faussement complexe. Je vous propose de plutôt maintenir un fichier `components/component.htm` comme celui-ci :\n\n```html\n<section$ class=\"banner\">\n  <div class=\"ui\">\n    <header$ class=\"component--header\">\n      <h1$>Title</h1$>\n    </header$>\n    <div  class=\"component--content\">\n      <h2$>Title</h2$>\n      <p>Text</p>\n      <p>Text</p>\n    </div>\n    <footer$ class=\"component--footer\">\n      <h3$>Lien</h3$>\n    </footer$>\n  </div>\n</section$>\n```\n\ngrâce au projet [ComponentAtlas](https://github.com/Haeresis/ComponentAtlas) qui est un module additionnel de [NodeAtlas](https://github.com/Haeresis/NodeAtlas). Il permet l'inclusion de Component en cascade, ne touchera à aucunes balises sans $ et permettra de transformer ceci :\n\n```html\n<section$ class=\"component\">\n  <header$ id=\"test\">header</header$>\n  <footer$ class=\"test\">footer</footer$>\n  <h1$ class='test'>h1</h1$>\n  <h2$ class='test' id=\"test\">h2</h2$>\n  <h3$ id=\"test\" class=\"test\">h3</h3$>\n  <h4$ id=\"test\" class='test'>h4</h4$>\n  <h5$ id='test' class='test'>h5</h5$>\n  <h6$>h6</h6$>\n</section$>\n```\n\nen ceci :\n\n```html\n<header class=\"component\">\n  <div class=\"header-like\" id=\"test\">header</div>\n  <div class=\"footer-like test\">footer</div>\n  <div class='h1-like test'>h1</div>\n  <div class=\"h2-like test' id=\"test\">h2</div>\n  <div class=\"h3-like test\">h3</div>\n  <div class='h4-like test'>h4</div>\n  <div class='h5-like test'>h5</div>\n  <div class=\"h6-like\">h6</div>\n</header>\n```\n\nsi le `maintTag` était `header` ou de le transformer en ceci :\n\n```html\n<section class=\"component\">\n  <header id=\"test\">header</header>\n  <footer class=\"test\">footer</footer>\n  <h1 class='test'>h1</h1$>\n  <h2 class='test' id=\"test\">h2</h2>\n  <h3 id=\"test\" class=\"test\">h3</h3>\n  <h4 id=\"test\" class='test'>h4</h4>\n  <h5 id='test' class='test'>h5</h5>\n  <h6>h6</h6>\n</section>\n```\n\nsans `mainTag` de précisé.", "dates" : { "published" : { "$date" : 1440685440000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Conventions HTML et CSS orientés composants", "urn" : "conventions-html-et-css-orientes-composants" }
{ "__v" : 0, "_id" : { "$oid" : "55edf67336a8eee50213dd53" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [], "content" : "« Que fait Google à longueur de journée ? Il indexe du texte. Comment les visiteurs arrivent sur mon site ? via Google. C.Q.F.D. ». J'adore cette citation, elle provient de l'article « [L'ère post PSD](http://davidl.fr/blog/fin-psd.html) » que j'ai découvert et lu une larme à l'œil. Il a d'autant plus de poids pour moi que son auteur adore Photoshop. J'ai toujours voulu parlé du sujet, et je me lance.\n\n\n\n\n\n## L'ère Photoshop ##\n\n### Il y a un vrai lobying autour de Photoshop ###\n\nOn embauche des profiles pour faire des maquettes de site web « à tout va », dans des déclinaisons « Desktop » / « Tablette » / « Mobile » ou encore on fournit la même page avec 17 contenus différents. Pourquoi fait-on ça ? C'est vrai : c'est tellement long et fastidieux de refaire la même page, trente fois, qu'une fois cette étape terminée, les PSDs ne changent plus. Quand on sait que tout ce beau monde peut frôler la trentaine de fichier avec la même redondance de visuel et faire quelques Gigas de transfert : on se demande vraiment où son les avantages :\n\n- La possibilité d'**évolution** ? De la home, surement, mais ça s'arrête ici.\n- L'espace de **stockage**. Pas vraiment, c'est assez lourd beaucoup de PSD.\n- La rapidité de **transfert**, Non plus du coup.\n- La facilité de **maintenance** ? Joker.\n\nAlors ? Pourquoi ? Parce que vendre à la maquette rapporte ? Et que c'est facilement justifiable ? Parce qu'on à toujours fait comme ça pour produire des mises en page figé ? Parce qu’on n'envisage pas que quelqu'un embauché pour faire du Photoshop ne puisse faire du HTML/CSS ? Si les maquettistes n'ont qu'une vague idée de comment est habillée une page web, comment peuvent-t ils en améliorer les processus de création ? \n\nPourquoi ne pas simplement se concentrer sur l'identité visuelle (atmosphère, typographie, logos) avec Photoshop pour fournir des Guides de style/Chartes graphiques de qualité et laisser le processus de gabarit Responsive Design HTML... aux intégrateurs HTML ! Un long processus auquel il faudrait habituer le client et qui serait une mine d'or pour l'équipe d'intégration qui pourrait fournir de vrai maquette à valider, dans un navigateur, en vrai !\n\n\n\n### Donnez le doigt, perdez le bras ! ###\n\nPour la création de site, ce sont ces PSD qui galvanisent le processus complet de fabrication d'un site web. Visuel, Structure, Hiérarchie, Spécifications, Processus, Validation et même... Contenu ! Tout peut y passer. On se retrouve à devoir respecter un écart entre chaque boite à la règle alors que cela n'a de sens pour une seule et unique taille, à parcourir le nom des liens pour savoir quelle page se trouve derrière quelle page ou à regarder le nom des fichiers pour connaître l'ordre des interactions inter-page. On se retrouve à devoir se justifier sur des incohérences de style inter-PSD pour lequel les PSD sont le Saint-Graal.\n\nMontrez aux clients une zone de texte pour discuter d'un contenu et ils vous diront que ce n'est pas le bon texte quand ils ne vous diront pas qu'ils veulent changer la couleur du pied de page. Au final, **les développeurs web finissent par devoir posséder Photoshop** pour travailler, et le site web se résume à devoir respecter le plus fidèlement possible un visuel qui n'est pas adapté pour les périphériques et même, le contenu...\n\nÀ qui la faute ? **Certainement pas au client**.\n\n\n\n\n## La clé de voûte du site Internet ##\n\nContenu, contenu, contenu et contenu. Voici dans l'ordre les étapes de développement d'un site web.\n\n> 1. Pour qui ? ... Ambiance, Idée. \n2. Aménager son contenu ... Wireframe / Gabarit.\n3. Trouver l'identité visuel en respectant les Guidelines de la marque ... Concepts / Guide de Style\n4. Création du HTML ... Sémantique / Liaison au contenu référençable (BDD, fichiers).\n5. Habillage CSS ... Responsive Web Design ... Interaction JavaScript ... chargement asynchrone.", "dates" : { "published" : { "$date" : 1478727660000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : false }, "script" : "", "stylesheet" : "", "title" : "Les PSD ne sont pas des sites web !", "urn" : "les-psd-ne-sont-pas-des-sites-web" }
{ "__v" : 0, "_id" : { "$oid" : "5613f26670877cd335a4b897" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48c8" } ], "content" : "Si vous avez déjà tenté d'[installer des modules NPM pour Node.js](https://blog.lesieur.name/installer-et-utiliser-nodejs-sous-windows/#la-documentation-les-modules-et-le-principe) via la commande `npm install <package> [options]` sous Windows, vous avez probablement déjà eu des soucis d'installation et abandonné l'idée. Peut-être même que vous ne vous êtes pas lancé dans l'aventure Node.js pour ces raisons ? Effectivement, certains modules ont besoin de **Python** pour s'installer et d'autres de **Visual Studio**. Il y en à même, plus rare, qui on besoin de **GIT**.\n\nPar exemple, [NodeAtlas](https://github.com/Haeresis/NodeAtlas) est un module qui nécessite que Python soit installé pour que les fonctions permettant l'optimisation d'images s'installent correctement sous Windows. [Socket.io](https://github.com/socketio/socket.io) a, lui, besoin de Visual Studio pour être installé sans quoi il ne fonctionnera pas.\n\nVoici **la procédure d'installation des pré-requis nécessaires pour faire fonctionner Node.js et tous ses modules NPM sous Windows** ainsi qu'une aide à la résolution de problèmes divers après installation.\n\n\n\n\n\n## Étape 1 : Installer Python ##\n\nPython 2.7 (et non les versions 3.X ou 2.6.X et précédente) est requis par l'installeur npm pour installer les addons à compiler.\n\n1. Rendez-vous sur [python.org](https://www.python.org/) pour [télécharger la dernière version stable de Python 2.7](https://www.python.org/download/releases/2.7/) du Windows MSI Installer afin d'installer la version x86 ou x86-64 en fonction de votre système d'exploitation.\n\n2. Lancez l'installeur et assurez vous d'ajouter Python à votre variable d'environnement PATH.\n\n3. Acceptez l'« installation pour tous les utilisateurs ».\n\n4. Acceptez le chemin d'installation par défaut « C:\\Python27 ».\n\n\n\n\n\n## Étape 2 : Installer GIT ##\n\nGIT est nécessaire pour l’installation de package en provenance de GitHub ou autre plateforme GIT. Bien que ces modules soient rares, il ne sont pas inexistant. Vous pourrez donc également les installer.\n\n1. Rendez-vous sur [git-scm.com](http://git-scm.com/download) et téléchargez la dernière version pour Windows.\n\n2 Lancez l'installeur.\n\n3. Acceptez la localisation par défaut.\n\n4. Accepter l'icône de démarrage menu.\n\n5. Accepter les composants associés.\n\n6 Modifiez « Adjusting your PATH environment » to « Use Git from Windows Command Prompt ».\n\n7. Acceptez la valeur « Configuring the line ending conversions » par défaut.\n\n\n\n\n\n## Étape 3 : Installer Visual Studio ##\n\nVisual Studio 2012 ou plus est requis par npm pour installer les addons à compiler. *Notez bien que gcc, mingw, cygwin, et les autres compilateurs Windows non-Microsoft ne sont pas supporté par Node.js.*\n\nSi vous utilisez actuellement Windows 7, 8 ou même 10, vous pouvez à la place utiliser Visual Studio C++ 2013 pour Windows Desktop (Express). Visual Studio Express est gratuit et est plus adéquat pour un support de Node.js.\n\n1. [Téléchargez Visual Studio](https://www.microsoft.com/fr-fr/download/details.aspx?id=44914).\n\n2. Cliquez sur « Download » et sélectionnez « wdexpress_full.exe ».\n\n3. Lancez l'installeur et acceptez la localisation par défaut. C'est une grosse installation qui peut prendre longtemps !\n\n\n\n\n\n## Étape 4 : Installer Node.js ##\n\nSi vous aviez déjà installé Node.js avant de réaliser les étapes de cet article, vous pouvez toujours en profiter pour le mettre à jour avec la dernière version. Sinon téléchargez le pour la première fois.\n\n1. Allez sur [nodejs.org](https://nodejs.org/en/) et installez la version appropriée pour votre système d'exploitation. \n\n2. Installez Node.js en suivant les instructions de l'installeur. [Plus de détails par ici si vous le souhaitez](https://blog.lesieur.name/installer-et-utiliser-nodejs-sous-windows/).\n\n\n\n\n\n## Vérifier que tout fonctionne correctement ##\n\nSi vous rencontrez des difficultés à installer des modules NPM, essayez les étapes suivantes pour identifier un problème de votre côté.\n\n1. Redémarrez Windows pour être sur que toutes les configurations est pris effet.\n\n2. Vérifiez que tous les pré-requis soient correctement installés et accessibles :\n\n - La commande `python --version` doit retourner `2.7.x`\n - La commande `node --version` doit retourner `v0.10.x` ou plus.\n - La commande `npm --version` doit retourner `1.x` ou plus.\n\n3. Assurez vous que `npm -g prefix` pointe au même endroit que `echo %NODE_PATH%`(avec `\\node_modules` en plus à la fin).\n\n4. Vérifiez qu'un simple module NPM peut-être installé :\n\n - Avec `npm install -g semver`\n - et `semver --help` qui doit afficher l'aide.\n\n5. Assurez vous que si vous avez plusieurs version de Python ou Visual Studio sur votre machine, les astuces dans la partie « Astuces » ci-après ne résolvent pas le problème.\n\n6. Assurez vous que les addons à compiler peuvent être installées :\n\n - Avec `npm install -g socket.io` qui doit compiler sans erreur.\n\nSi vous avez toujours des erreurs et que toutes les étapes précédentes sont valides, vous pouvez reporter le fichier `npm-debug.log` laissé par npm dans le tracker d'issue du/des développeur(s) du module npm que vous tentez d'installer pour obtenir de l'aide.\n\nN'hésitez pas à laisser plus d'étapes de vérifications dans les commentaires de cet article, je les mettrais à jour ici même.\n\n\n\n\n\n## Astuces ##\n\n- Si vous avez plusieurs versions de Python d'installées, vous pouvez sélectionner celle utilisée par npm pour compiler les addons :\n\n - `npm config set python C:/Python2.7/python`\n\n- Si vous avez plusieurs versions de Microsoft Visual Studio d'installées, vous pouvez sélectionner celle utilisée par npm pour compiler les addons :\n\n - Par défaut (et récursivement) `npm config set msvs_version 2013` (si votre version est 2013) ou\n - Ponctuellement `npm install [options] <module-name> --msvs_version=2013` lors de l'installation d'un module.", "dates" : { "published" : { "$date" : 1444147800000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Installer n'importe quel module NPM Node.js sous Windows", "urn" : "installer-tous-les-modules-npm-node-js-sous-windows" }
{ "__v" : 0, "_id" : { "$oid" : "5620ee00d1b7fe136fc20058" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b9" }, { "$oid" : "5310456355dfd5f7698d48cb" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "56c4ad62675345bb2d63fced" }, { "$oid" : "5310456355dfd5f7698d48cc" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48ba" } ], "content" : "<div class=\"h1-like\"><span>Vanilla JS</span><img src=\"media/images/upload/vanillajs.jpg\" width=\"200\" alt=\"Vanilla JS\"></div>\n\n<p class=\"lead\"><strong><span class=\"vanillajs\">Vanilla JS</span> est <span class=\"mask\">un framework</span> rapide, léger et multi-plateforme pour créer d'incroyables et puissantes applications JavaScript</strong></p>\n\n\n\n\n\n## Introduction ##\n\n[L'équipe de <span class=\"vanillajs\">Vanilla JS</span>](https://twitter.com/HaeresisDotFr) maintient le moindre petit octet de code <span class=\"mask\">du framework</span> et travaille dur chaque jour pour être sûr qu'il reste léger et intuitif. Qui utilise <span class=\"vanillajs\">Vanilla JS</span> ? Content que vous vous le demandiez ! En voici quelques uns :\n<ul class=\"used-by\">\n    <li>Google</li>\n    <li>Facebook</li>\n    <li>YouTube</li>\n    <li>Yahoo</li>\n    <li>Wikipedia</li>\n    <li>Windows Live</li>\n    <li>Twitter</li>\n    <li>Amazon</li>\n    <li>LinkedIn</li>\n    <li>MSN</li>\n    <li>eBay</li>\n    <li>Microsoft</li>\n    <li>Tumblr</li>\n    <li>Apple</li>\n    <li>Pinterest</li>\n    <li>PayPal</li>\n    <li>Reddit</li>\n    <li>Netflix</li>\n    <li>Stack Overflow</li>\n</ul>\n\nEn fait, <span class=\"vanillajs\">Vanilla JS</span> est déjà utilisé sur plus de sites que jQuery, Prototype JS, MooTools, YUI, et Google Web Toolkit - <em>réunis</em> !\n\n\n\n\n\n## Télécharger ##\n\nPrêt à utiliser <span class=\"vanillajs\">Vanilla JS</span> ? Choisissez exactement ce dont vous avez besoin !\n<div class=\"customizer-options\">\n    <label class=\"selected disabled\"><input type=\"checkbox\" name=\"core\" checked=\"checked\" disabled=\"disabled\"> Core Functionality</label>\n    <label><input type=\"checkbox\">AJAX</label>\n    <label><input type=\"checkbox\">DOM (Parcours / Sélections)</label>\n    <label><input type=\"checkbox\">Prototype-based Object System</label>\n    <label><input type=\"checkbox\">Animations</label>\n    <label><input type=\"checkbox\">Event System</label>\n    <label><input type=\"checkbox\">Regular Expressions</label>\n    <label><input type=\"checkbox\">Closures</label>\n    <label><input type=\"checkbox\">Math Library</label>\n    <label><input type=\"checkbox\">Array Library</label>\n    <label><input type=\"checkbox\">String Library</label>\n    <label><input type=\"checkbox\">Date Library</label>\n    <label><input type=\"checkbox\">Functions as first-class objects</label>\n    <h3>Options</h3>\n    <label><input type=\"checkbox\">Minifier le code source</label>\n    <label><input type=\"checkbox\">Sortie en UTF8</label>\n    <label><input type=\"checkbox\">Utiliser des retours \"CRLF\" (Windows)</label>\n</div>\n<div class=\"customizer-estimate\">\n    <strong>Taille du fichier :</strong>\n    <span class=\"customizer-estimate-uncompressed\"><span class=\"value\"><span class=\"no-readable\">0 octets</span><span class=\"readable\">0 Ko</span></span><span class=\"loading\"><span class=\"loader\"></span></span> </span> non minifié,\n    <span class=\"customizer-estimate-gzipped\" class=\"\"><span class=\"value\"><span class=\"no-readable\">34 octets</span><span class=\"readable\">0.03 Ko</span></span><span class=\"loading\"><span class=\"loader\"></span></span></span> gzippé.\n    (<a class=\"human-size\" href=\"javascript:;\"><span class=\"no-readable\">Taille lisible</span><span class=\"readable\">Taille réelle</span></a>)\n</div>\n\n<form class=\"download\" action=\"media/scripts/upload/vanilla.js.gz\" method=\"post\">\n    <button>Télécharger</button> <a href=\"https://github.com/Haeresis/vanilla-js\">Source sur GitHub</a> / <a href=\"https://www.npmjs.com/package/vanilla-js-dom\">Npm Package</a>\n</form>\n\n[![Faites un don](https://img.shields.io/badge/don-%E2%9D%A4-ddddff.svg)](https://www.paypal.me/BrunoLesieur/5) [![Build Passing](https://img.shields.io/badge/build-passing-brightgreen.svg)](https://github.com/Haeresis/NodeAtlas) [![Version 5.6](https://img.shields.io/badge/version-5.6-brightgreen.svg)](https://github.com/Haeresis/NodeAtlas) [![Technical Debt Ratio](https://img.shields.io/badge/debt_ratio-0%25-brightgreen.svg)](http://docs.sonarqube.org/display/PLUG/JavaScript+Plugin)\n\n\n\n\n\n## Témoignages ##\n\n<div class=\"testimonials\">\n    <blockquote class=\"testimonial\"><em>« Le support natif de HTML5 et les autres technologies modernes on fait de Vanilla JS mon préféré, petit à petit. »</em></blockquote>\n    <blockquote class=\"testimonial is-displayed\"><em>« Vanilla JS est un concentré d'objet, il est taillé pour des applications JavaScript Orientées Objet. »</em></blockquote>\n<blockquote class=\"testimonial\"><em>« Vanilla JS est le <span class=\"mask\">framework</span> JavaScript le plus simple et compréhensif que j'ai jamais utilisé. »</em></blockquote>\n    <blockquote class=\"testimonial\"><em>« Vous ne trouverez pas plus rapide que Vanilla JS ! »</em></blockquote>\n</div>\n\n\n\n\n\n## Commencer avec Vanilla JS ##\n\n[L'équipe de <span class=\"vanillajs\">Vanilla JS</span>](https://twitter.com/HaeresisDotFr) est fière du fait que c'est **le code <span class=\"mask\">de framework</span> le plus léger que vous puissiez trouver** ; en utilisant notre **stratégie de déploiement**, vos visiteurs auront déjà chargés en mémoire <span class=\"vanillajs\">Vanilla JS</span> avant que la moindre requête n'est été faite à votre site !\n\nPour utiliser <span class=\"vanillajs\">Vanilla JS</span>, mettez juste le code suivant n'importe où dans votre application HTML :\n\n```html\n<script src=\"chemin/vers/vanilla.js\"></script>\n```\n\nQuand vous êtes prêt à déployer votre application dans votre environnement de production, optez pour la plus rapide des méthodes, voyez plutôt :\n\n<pre class=\"prettyprint linenums\"><code class=\"lang-html\"> </code></pre>\n\n**C'est tout - pas de code**. <span class=\"vanillajs\">Vanilla JS</span> est *tellement populaire* que les navigateurs le chargent automatiquement !\n\n\n\n\n## Comparaison de vitesse d'exécution ##\n\nVoici quelques exemples démontrant ô combien <span class=\"vanillajs\">Vanilla JS</span> est vraiment rapide. Quand <span class=\"vanillajs\">Vanilla JS</span> réalise 100 opérations, les autres en réalisent :\n\n### Retrouver un élément du DOM par ID ###\n\n<div class=\"table three\">\n<table>\n    <tr>\n        <th></th>\n        <th>100 ops <span class=\"vanillajs\">Vanilla JS</span></th>\n        <th>Code</th>\n    </tr>\n    <tr>\n        <td><span class=\"vanillajs\">Vanilla JS</span></td>\n        <td><span class=\"opssec\">100</span><span class=\"bar\" style=\"width:100%\"></span></td>\n        <td>[document.getElementById(\"vanilla\");](http://codepen.io/Haeresis/pen/RWeqaB)</td>\n    </tr>\n    <tr>\n        <td>Dojo</td>\n        <td><span class=\"opssec\">92</span><span class=\"bar\" style=\"width:92%\"></span></td>\n        <td>[dojo.byId(\"dojo\");](http://codepen.io/Haeresis/pen/yYQjxp)</td>\n    </tr>\n    <tr>\n        <td>Prototype JS</td>\n        <td><span class=\"opssec\">57</span><span class=\"bar\" style=\"width:57%;\"></span></td>\n        <td>[$(\"prototype\");](http://codepen.io/Haeresis/pen/yYQjEP)</td>\n    </tr>\n    <tr>\n        <td>jQuery</td>\n        <td><span class=\"opssec\">42</span><span class=\"bar\" style=\"width:42%;\"></span></td>\n        <td>[$(\"#jquery\");](http://codepen.io/Haeresis/pen/EVOLLe)</td>\n    </tr>\n    <tr>\n        <td>MooTools</td>\n        <td><span class=\"opssec\">24</span><span class=\"bar\" style=\"width:24%;\"></span></td>\n        <td>[document.id(\"mootools\");](http://codepen.io/Haeresis/pen/gaQzQr)</td>\n    </tr>\n</table>\n</div>\n\n### Retrouver 10 éléments du DOM par tag name ###\n\n<div class=\"table three\">\n<table>\n    <tr>\n        <th></th>\n        <th>100 ops <span class=\"vanillajs\">Vanilla JS</span></th>\n        <th>Code</th>\n    </tr>\n    <tr>\n        <td><span class=\"vanillajs\">Vanilla JS</span></td>\n        <td><span class=\"opssec\">100</span><span class=\"bar\" style=\"width:100%\"></span></td>\n        <td>[document.getElementsByTagName(\"div\");](http://codepen.io/Haeresis/pen/BoGVzd)</td>\n    </tr>\n    <tr>\n        <td>Prototype JS</td>\n        <td><span class=\"opssec\">25</span><span class=\"bar\" style=\"width:25%;\"></span></td>\n        <td>[Prototype.Selector.select(\"div\", document);](http://codepen.io/Haeresis/pen/LpXrOG)</td>\n    </tr>\n    <tr>\n        <td>jQuery</td>\n        <td><span class=\"opssec\">21</span><span class=\"bar\" style=\"width:21%;\"></span></td>\n        <td>[$(\"div\");](http://codepen.io/Haeresis/pen/BoGVmJ)</td>\n    </tr>\n    <tr>\n        <td>Dojo</td>\n        <td><span class=\"opssec\">3</span><span class=\"bar\" style=\"width:3%;\"></span></td>\n        <td>[dojo.query(\"div\");](http://codepen.io/Haeresis/pen/dYQKJX)</td>\n    </tr>\n    <tr>\n        <td>MooTools</td>\n        <td><span class=\"opssec\">2</span><span class=\"bar\" style=\"width:2%;\"></span></td>\n        <td>[Slick.search(document, \"div\", new Elements);](http://codepen.io/Haeresis/pen/qOQKxO)</td>\n    </tr>\n</table>\n</div>\n\n### Vanilla JS vs jQuery ###\n\n#### Retrouver 10 éléments du DOM par class name ####\n\n<div class=\"table three\">\n<table>\n    <tr>\n        <th></th>\n        <th>100 ops <span class=\"vanillajs\">Vanilla JS</span></th>\n        <th>Code</th>\n    </tr>\n    <tr>\n        <td><span class=\"vanillajs\">Vanilla JS</span></td>\n        <td><span class=\"opssec\">100</span><span class=\"bar\" style=\"width:100%\"></span></td>\n        <td>[document.getElementsByClassName(\"vanilla\");](http://codepen.io/Haeresis/pen/ZbmRMN)</td>\n    </tr>\n    <tr>\n        <td>jQuery</td>\n        <td><span class=\"opssec\">17</span><span class=\"bar\" style=\"width:17%;\"></span></td>\n        <td>[$(\".jquery\");](http://codepen.io/Haeresis/pen/jbQKeQ)</td>\n    </tr>\n</table>\n</div>\n\n#### Retrouver un élément du DOM avec le sélecteur `<#id> .inner span` ####\n\n<div class=\"table three\">\n<table>\n    <tr>\n        <th></th>\n        <th>100 ops <span class=\"vanillajs\">Vanilla JS</span></th>\n        <th>Code</th>\n    </tr>\n    <tr>\n        <td><span class=\"vanillajs\">Vanilla JS</span></td>\n        <td><span class=\"opssec\">100</span><span class=\"bar\" style=\"width:100%\"></span></td>\n        <td>[document.querySelector(\"#vanilla .inner span\");](http://codepen.io/Haeresis/pen/PPxaVQ)</td>\n    </tr>\n    <tr>\n        <td>jQuery</td>\n        <td><span class=\"opssec\">33</span><span class=\"bar\" style=\"width:33%;\"></span></td>\n        <td>[$(\"#jquery .inner span\");](http://codepen.io/Haeresis/pen/YyRvgQ)</td>\n    </tr>\n</table>\n</div>\n\n#### Retrouver 10 éléments du DOM avec le sélecteur `<.className> .inner span` ####\n\n<div class=\"table three\">\n<table>\n    <tr>\n        <th></th>\n        <th>100 ops <span class=\"vanillajs\">Vanilla JS</span></th>\n        <th>Code</th>\n    </tr>\n    <tr>\n        <td><span class=\"vanillajs\">Vanilla JS</span></td>\n        <td><span class=\"opssec\">100</span><span class=\"bar\" style=\"width:100%\"></span></td>\n        <td>[document.querySelectorAll(\".vanilla .inner span\");](http://codepen.io/Haeresis/pen/gaQKJv)</td>\n    </tr>\n    <tr>\n        <td>jQuery</td>\n        <td><span class=\"opssec\">51</span><span class=\"bar\" style=\"width:51%;\"></span></td>\n        <td>[$(\".jquery .inner span\");](http://codepen.io/Haeresis/pen/ojQyrZ)</td>\n    </tr>\n</table>\n</div>\n\n### Performance des sélecteurs Vanilla JS ###\n\nLes tests sont tous effectués sur le code suivant `<section id=\"vanilla\" class=\"vanilla\"><article class=\"inner\"><div class=\"target\" id=\"target\"></div></article></section>`.\n\n<div class=\"table two\">\n<table>\n    <tr>\n        <th>100 ops <span class=\"vanillajs\">Vanilla JS</span></th>\n        <th>Selectionner le noeud `<div class=\"target\" id=\"target\"></div>`</th>\n    </tr>\n    <tr>\n        <td><span class=\"opssec\">100</span><span class=\"bar\" style=\"width:100%\"></span></td>\n        <td>[document.getElementsByTagName(\"div\");](http://codepen.io/Haeresis/pen/PPxdWo)</td>\n    </tr>\n    <tr>\n        <td><span class=\"opssec\">99</span><span class=\"bar\" style=\"width:99%\"></span></td>\n        <td>[document.getElementById(\"target\");](http://codepen.io/Haeresis/pen/xwQaEz)</td>\n    </tr>\n    <tr>\n        <td><span class=\"opssec\">96</span><span class=\"bar\" style=\"width:96%\"></span></td>\n        <td>[document.getElementsByClassName(\"target\");](http://codepen.io/Haeresis/pen/epQLBG)</td>\n    </tr>\n    <tr>\n        <td><span class=\"opssec\">68</span><span class=\"bar\" style=\"width:68%\"></span></td>\n        <td>[document.querySelector(\".vanilla .inner div\");](http://codepen.io/Haeresis/pen/qOQMRJ)</td>\n    </tr>\n    <tr>\n        <td><span class=\"opssec\">35</span><span class=\"bar\" style=\"width:35%\"></span></td>\n        <td>[document.querySelectorAll(\".vanilla .inner div\");](http://codepen.io/Haeresis/pen/epQLve)</td>\n    </tr>\n</table>\n</div>\n\n\n\n\n\n## Passer de jQuery à Vanilla JS ##\n\nVous trouverez ici la liste non exhaustive de tâches courantes dans <span class=\"vanillajs\">Vanilla JS</span> en comparaison avec (par exemple) jQuery.\n\n*Effectivement, lors de la création d'API, il est souvent plus judicieux de développer sans dépendance à jQuery (par exemple) et de lui préférer seulement <span class=\"mask\">une dépendance à</span> <span class=\"vanillajs\">Vanilla JS</span>.*\n\n**Légende**\n\nPour bien comprendre les types d'objets représentés, utilisez cette liste :\n\n```html\n<div class=\"example\">\n  <span>(Text into) Html Element</span>\n  <!-- Comment Element -->\n  Text Element\n  <span>(Text into) Html Element</span>\n</div>\n```\n\n- `querySelector(\".example\")` retourne un `HTMLElement`.\n- `querySelector(\".example\").children` retourne une `HTMLCollection`, chaque item de la collection est un `HTMLElement` soit deux `[span, span]`.\n- `querySelector(\".example\").childNodes` retourne une `NodeList`, chaque item de la collection est un `Node`, ici sept `[text, span, text, comment, text, span, text]`.\n- `querySelector(\".example\").childNodes[0]` retourne un `Node` de `typeNode` 3, soit du texte. (`...nodeList[3]` est de `typeNode` 8 soit un commentaire).\n\n### .Node #Selecteur ###\n\n#### <span>#id</span> ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir un noeud par son ID...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlElement = $(\"#id\")[0];</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlElement = document.getElementById(\"id\");</code></pre>\n    </blockquote>\n</div>\n\n#### .classname #id tagname ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir un noeud avec un sélecteur...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlElement = $(\"#id .classname tagname\")[0];</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlElement = document.querySelector(\"#id .classname tagname\");</code></pre>\n    </blockquote>\n</div>\n\n#### [.classname #id tagname] ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir plusieurs noeuds avec un sélecteur...</p>\n<pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(\"#id .classname tagname\").each(function (i, htmlElement) {\n    htmlElement;\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n<pre class=\"prettyprint linenums\"><code class=\"lang-js\">var nodeList = document.querySelectorAll(\"#id .classname tagname\"); // Not Live (Snapshot)\n[].forEach.call(nodeList, function (node) {\n    node;\n});</code></pre>\n    </blockquote>\n</div>\n\n#### [.classname] ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir un noeud par son Tag Name...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(\".classname\").each(function (i, htmlElement) {\n    htmlElement;\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlCollection = document.getElementsByClassName(\"classname\"); // Live\n// var nodeList = document.querySelectorAll(\".classname\"); // Not Live (Snapshot)\n[].forEach.call(htmlCollection, function (htmlElement) {\n    htmlElement;\n});</code></pre>\n    </blockquote>\n</div>\n\n#### [name] ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir un noeud par son attribut Name...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$('[name=\"classname\"]').each(function (i, htmlElement) {\n    htmlElement;\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var nodeList = document.getElementsByName(\"name\"); // Live\n// var nodeList = document.querySelectorAll(\"[name=name]\"); // Not Live (Snapshot)\n[].forEach.call(nodeList, function (node) {\n    node;\n});</code></pre>\n    </blockquote>\n</div>\n\n#### [tagname] ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir un noeud par son Tag Name...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(\"tagname\").each(function (i, htmlElement) {\n    htmlElement;\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlCollection = document.getElementsByTagName(\"tagname\"); // Live\n// var nodeList = document.querySelectorAll(\"tagname\"); // Not Live (Snapshot)\n[].forEach.call(htmlCollection, function (htmlElement) {\n    htmlElement;\n});</code></pre>\n    </blockquote>\n</div>\n\n#### Inverted Loop ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Parcourir les noeuds dans leur ordre inverse...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$($(\".className\").get().reverse()).each(function (i, htmlElement) {\n    htmlElement;\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlCollection = document.getElementsByClassName(\"className\"), // Live\n    i = htmlCollection.length;\nwhile (htmlElement = htmlCollection[--i]) {\n    htmlElement;\n}</code></pre>\n    </blockquote>\n</div>\n\n### ATTRIBUTS\n\n#### Add Class ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Ajouter une classe...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).addClass(&lt;className>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.classList.add(&lt;className>);</code></pre>\n    </blockquote>\n</div>\n\n#### Get Attribute ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir un attribut d'un noeud HTML...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).attr(&lt;attributeName>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.getAttribute(&lt;attributeName>);</code></pre>\n    </blockquote>\n</div>\n\n#### Get Data ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir une donnée d'un noeud HTML...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).data(&lt;dataName>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.getAttribute(&lt;\"data-\" + dataName>);</code></pre>\n    </blockquote>\n</div>\n\n#### Get Value ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir la valeur d'un champ de formulaire...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).value();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.value;</code></pre>\n    </blockquote>\n</div>\n\n#### Has Class ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Vérifier la présence d'une classe...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).hasClass(&lt;className>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.classList.contains(&lt;className>);</code></pre>\n    </blockquote>\n</div>\n\n#### Remove Attribute ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Retirer un attribut...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).removeAttr(&lt;attributeName>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.removeAttribute(&lt;attributeName>);</code></pre>\n    </blockquote>\n</div>\n\n#### Remove Class ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Retirer une classe...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).removeClass(&lt;className>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.classList.remove(&lt;className>);</code></pre>\n    </blockquote>\n</div>\n\n#### Remove Data ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Retirer une donnée d'un noeud HTML...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).removeData(&lt;dataName>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.removeAttribute(&lt;\"data-\" + dataName>);</code></pre>\n    </blockquote>\n</div>\n\n#### Set Attribute ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Définir un attribut d'un noeud HTML...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).attr(&lt;attributeName>, &lt;value>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.setAttribute(&lt;attributeName>, &lt;value>);</code></pre>\n    </blockquote>\n</div>\n\n#### Set Data ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Définir une donnée d'un noeud HTML...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).data(&lt;dataName>, &lt;value>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.setAttribute(&lt;\"data-\" + dataName>, &lt;value>);</code></pre>\n    </blockquote>\n</div>\n\n#### Set Value ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Définir la valeur d'un champ de formulaire...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).value(&lt;value>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.value = &lt;value>;</code></pre>\n    </blockquote>\n</div>\n\n#### Toggle Class ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Retirer ou ajouter une classe...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).toggleClass(&lt;className>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.classList.toggle(&lt;className>);</code></pre>\n    </blockquote>\n</div>\n\n### AJAX ###\n\n#### GET ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Enyoyer des informations à une URL par méthode GET...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.ajax({\n  type: \"GET\",\n  url: &lt;url>,\n  data: &lt;data>\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var get = new XMLHttpRequest();\nget.open(\"GET\", &lt;url>, true);\nget.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\nget.send(&lt;data>);</code></pre>\n    </blockquote>\n</div>\n\n#### JSON ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Récupérer des informations au format JSON...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">function getJSON(url, next) {\n    $.getJSON(url, function (data) {\n      next(null, data);\n    }).error(function () {\n      next(new Error(\"There was a connection error of some sort.\"));\n    });\n}\n\ngetJSON(&lt;url>, function (err, data) {\n    if (err) {\n      return err;\n    }\n\n    data;\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">function getJSON(url, next) {\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.send();\n\n    request.addEventListener(\"load\", function () {\n        if (request.status < 200 && request.status >= 400) {\n            return next(new Error(\"We reached our target server, but it returned an error.\"));\n        }\n\n        next(null, JSON.parse(request.responseText));\n    });\n\n    request.addEventListener(\"error\", function () {\n        next(new Error(\"There was a connection error of some sort.\"));\n    });\n}\n\ngetJSON(&lt;url>, function (err, data) {\n    if (err) {\n      return err;\n    }\n\n    data;\n});</code></pre>\n    </blockquote>\n</div>\n\n#### POST ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Enyoyer des informations à une URL par méthode POST...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.ajax({\n  type: \"POST\",\n  url: &lt;url>,\n  data: &lt;data>\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var post = new XMLHttpRequest();\npost.open(\"POST\", &lt;url>, true);\npost.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\npost.send(&lt;data>);</code></pre>\n    </blockquote>\n</div>\n\n#### Request / Response ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Récupérer le contenu d'une URL...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">function request(url, next) {\n    $.ajax({\n        type: 'GET',\n        url: url,\n        success: function(response) {\n          next(null, response);\n        },\n        error: function() {\n          next(new Error(\"There was a connection error of some sort.\"));\n        }\n    });\n}\n\nrequest(&lt;url>, function (err, response) {\n    if (err) {\n      return err;\n    }\n\n    response;\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">function request(url, next) {\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.send();\n\n    request.addEventListener(\"load\", function () {\n        if (request.status < 200 && request.status >= 400) {\n            return next(new Error(\"We reached our target server, but it returned an error.\"));\n        }\n\n        next(null, request.responseText);\n    });\n\n    request.addEventListener(\"error\", function () {\n        return next(new Error(\"There was a connection error of some sort.\"));\n    });\n}\n\nrequest(&gt;url>, function (err, response) {\n    if (err) {\n      return err;\n    }\n\n    response;\n});</code></pre>\n    </blockquote>\n</div>\n\n### ÉFFETS ###\n\n#### Animation ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Animer une propriété...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">function fadeIn($element, speed, next) {\n    $element.css(\"opacity\", \"0\").animate({ opacity: 1 }, speed, next);\n}\nfadeIn($(&lt;htmlElement>), 2000, function () {\n  $(this).css(\"opacity\", \"\");\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">function fadeIn(htmlElement, speed, next) {\n    var last = +new Date(),\n        tick = function () {\n            htmlElement.style.opacity = +htmlElement.style.opacity + (new Date() - last) / speed;\n\n            last = +new Date();\n\n            if (+htmlElement.style.opacity < 1) {\n                requestAnimationFrame(tick);\n            } else if (next) {\n                next.call(htmlElement);\n            }\n        };\n\n    htmlElement.style.opacity = 0;\n    tick();\n}\n\nfadeIn(&lt;htmlElement>, 2000, function () {\n    this.style.opacity = '';\n});</code></pre>\n    </blockquote>\n</div>\n\n#### Hide ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Cacher un élément...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).hide();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.style.display = \"none\";</code></pre>\n    </blockquote>\n</div>\n\n#### Show ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Afficher un élément...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).show();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.style.display = \"\";</code></pre>\n    </blockquote>\n</div>\n\n### ÉVÈNEMENTS ###\n\n#### Hover ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Équivalent du hover CSS en JavaScript...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).hover(&lt;eventHandlerMouseIn>, &lt;eventHandlerMouseOut>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.addEventListener(\"mouseenter\", &lt;eventHandlerMouseIn>);\n&lt;htmlElement>.addEventListener(\"mouseleave\", &lt;eventHandlerMouseOut>);</code></pre>\n    </blockquote>\n</div>\n\n#### Load ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Attendre que le DOM et les fichiers externes (images, styles, scripts) soient chargés...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(window).load(function () {\n    // I am full loaded.\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">window.addEventListener(\"load\", function () {\n    // I am full loaded.\n});</code></pre>\n    </blockquote>\n</div>\n\n#### Off ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Se désabonner d'un évènement...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).off(&lt;eventName>, &lt;eventHandler>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.removeEventListener(&lt;eventName>, &lt;eventHandler>);</code></pre>\n    </blockquote>\n</div>\n\n#### On ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>S'abonner à un évènement...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).on(&lt;eventName>, &lt;eventHandler>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.addEventListener(&lt;eventName>, &lt;eventHandler>);</code></pre>\n    </blockquote>\n</div>\n\n#### One ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>S'abonner à un évènement une seule fois...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).one(&lt;eventName>, function () {});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.addEventListener(&lt;eventName>, function callee(event) {\n    event.target.removeEventListener(e.type, callee);\n});</code></pre>\n    </blockquote>\n</div>\n\n#### Ready ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Attendre que le DOM soit chargé...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(document).ready(function () {\n    // I am ready to be manipulate.\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">document.addEventListener(\"DOMContentLoaded\", function () {\n    // I am ready to be manipulate.\n});</code></pre>\n    </blockquote>\n</div>\n\n#### Trigger ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Déclencher un évènement...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var event = jQuery.Event(\"click\");\nevent.test = true;\n\n$(&lt;htmlElement>).click(function (event) {\n    event.test; // undefined by click, true by trigger.\n});\n$(&lt;htmlElement>).trigger(event);\n// $(&lt;htmlElement>).trigger(\"click\"); // Shortcut without test property.</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var event = new Event(\"click\");\nevent.test = true;\n\n&lt;htmlElement>.addEventListener(\"click\", function (event) {\n    event.test; // undefined by click, true by trigger.\n});\n&lt;htmlElement>.dispatchEvent(event);</code></pre>\n    </blockquote>\n</div>\n\n### FILTRES ###\n\n#### Filter ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Retirer des noeuds d'une liste d'après des instructions...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;selector>).filter(function (i, htmlElement) {\n    return &lt;filterCondition>;\n}).each(function (i, htmlElement) {\n    htmlElement;\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var nodeList = document.querySelectorAll(&lt;selector>);\n\nnodeList = [].filter.call(nodeList, function (node) {\n    return &lt;filterCondition>;\n});\n\n[].forEach.call(nodeList, function (node) {\n    node;\n});</code></pre>\n    </blockquote>\n</div>\n\n#### First ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Sélectionner le premier noeud d'une liste...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;selector>).first();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlCollection>.item(0);\n// &lt;htmlCollection>[0]</code></pre>\n    </blockquote>\n</div>\n\n#### Has ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Quels noeuds contiennent l'élément enfant...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;selector>).has(&lt;matchesChildSelector>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var nodeList = document.querySelectorAll(&lt;selector>);\n[].filter.call(nodeList, function (node) {\n    return node.querySelector(&lt;matchesChildSelector>);\n});</code></pre>\n    </blockquote>\n</div>\n\n#### Is ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Est-ce qu'au moins un noeud correspond...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;selector>).is(&lt;matchesSelector>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var nodeList = document.querySelectorAll(&lt;selector>);\n[].some.call(nodeList, function (node) {\n    return node.matches(&lt;matchesSelector>);\n});</code></pre>\n    </blockquote>\n</div>\n\n#### Item ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Sélectionner un noeud à l'index souhaité d'une liste...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;selector>).eq(&lt;index>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlCollection>.item(&lt;index>);\n// &lt;htmlCollection>[&lt;index>]</code></pre>\n    </blockquote>\n</div>\n\n#### Last ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Sélectionner le dernier noeud d'une liste...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;selector>).last();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlCollection>.item(&lt;htmlCollection>.length - 1);\n// &lt;htmlCollection>[&lt;htmlCollection>.length - 1]</code></pre>\n    </blockquote>\n</div>\n\n#### Not ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Récupérer les noeuds qui ne correspondent pas...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;selector>).not(&lt;matchesSelector>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var nodeList = document.querySelectorAll(&lt;selector>);\n[].filter.call(nodeList, function (node) {\n    return !node.matches(&lt;matchesSelector>);\n});</code></pre>\n    </blockquote>\n</div>\n\n#### Slice ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Sélectionner une portion de noeuds dans une liste...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;selector>).slice(&lt;startIndex>, &lt;endIndex>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var nodeList = document.querySelectorAll(&lt;selector>);\n[].slice.call(nodeList, &lt;startIndex>, &lt;endIndex>);</code></pre>\n    </blockquote>\n</div>\n\n### MANIPULATION ###\n\n#### Append ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Déplacer un noeud dans un autre noeud, à la fin...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).append($(&lt;appendHtmlElement>));\n// $(&lt;htmlElement>).append(&lt;htmlString>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.appendChild(&lt;appendHtmlElement>);\n// &lt;htmlElement>.insertAdjacentHTML(\"beforeEnd\", \"&lt;htmlString>\");</code></pre>\n    </blockquote>\n</div>\n\n#### Clone ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Dupliquer un noeud...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).clone();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.cloneNode(true);</code></pre>\n    </blockquote>\n</div>\n\n#### Compare ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Comparer deux noeuds du DOM...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var $a = $(&lt;selectorToFirstHtmlElement>).find(&lt;selectorToSecondHtmlElement>);\n    $b = $(&lt;selectorToSecondElement>);\n\n$a.is($b);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var temp = document.getElementsByTagName(&lt;selectorToFirstHtmlElement>)[0],\n    a = temp.getElementsByTagName(&lt;selectorToSecondHtmlElement>)[0],\n    b = document.querySelector(&lt;selectorToSecondHtmlElement>);\n\n(a === b);</code></pre>\n    </blockquote>\n</div>\n\n#### Contains ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Savoir si un noeud est le fils d'un autre...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.contains($(&lt;htmlElement>), $(&lt;childHtmlElement>));</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">(&lt;htmlElement> !== &lt;childHtmlElement>) && &lt;htmlElement>.contains(&lt;childHtmlElement>);</code></pre>\n    </blockquote>\n</div>\n\n#### Create ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Créer un nouveau noeud HTML...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;&lt;tagString>>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">document.createElement(&lt;tagString>);</code></pre>\n    </blockquote>\n</div>\n\n#### Empty ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Effacer tout le contenu d'un noeud...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).empty();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.innerHTML = \"\";</code></pre>\n    </blockquote>\n</div>\n\n#### Get HTML ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir le HTML interne d'un élément...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).html();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.innerHTML;</code></pre>\n    </blockquote>\n</div>\n\n#### Get Node HTML ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir le HTML d'un élément (lui y compris)...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(\"&lt;div>\").append($(&lt;htmlElement>).clone()).html();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.outerHTML;</code></pre>\n    </blockquote>\n</div>\n\n#### Get Text ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir le texte interne d'un objet...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).text();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.textContent;</code></pre>\n    </blockquote>\n</div>\n\n#### Index From Parent ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Connaître la position d'un noeud dans son parent...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).index();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">[].slice.call(&lt;htmlElement>.parentNode.children).indexOf(&lt;htmlElement>);</code></pre>\n    </blockquote>\n</div>\n\n#### Insert After ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Créer un noeud après un noeud...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).after($(&lt;afterHtmlElement>));\n// $(&lt;htmlElement>).after(&lt;htmlString>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.parentNode.insertBefore(&lt;afterHtmlElement>, &lt;htmlElement>.nextElementSibling);\n// &lt;htmlElement>.insertAdjacentHTML(\"afterend\", &lt;htmlString>);</code></pre>\n    </blockquote>\n</div>\n\n#### Insert Before ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Créer un noeud avant un noeud...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).before($(&lt;beforeHtmlElement>));\n// $(&lt;htmlElement>).before(&lt;htmlString>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.parentNode.insertBefore(&lt;beforeHtmlElement>, &lt;htmlElement>);\n// &lt;htmlElement>.insertAdjacentHTML(\"beforebegin\", &lt;htmlString>);</code></pre>\n    </blockquote>\n</div>\n\n#### Prepend ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Déplacer un noeud dans un autre noeud, au début...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).prepend($(&lt;prependHtmlElement>));\n// $(&lt;htmlElement>).prepend(&lt;htmlString>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.insertBefore(&lt;prependHtmlElement>, &lt;htmlElement>.firstChild);\n// &lt;htmlElement>.insertAdjacentHTML(\"afterBegin\", \"&lt;htmlString>\");</code></pre>\n    </blockquote>\n</div>\n\n#### Remove ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Retirer un noeud du DOM...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).remove();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.parentNode.removeChild(&lt;htmlElement>);</code></pre>\n    </blockquote>\n</div>\n\n#### Remove Children ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Retirer tous les enfants d'un noeud du DOM...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).empty();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">while (&lt;htmlElement>.firstChild) {\n    &lt;htmlElement>.removeChild(&lt;htmlElement>.firstChild);\n}\n// &lt;htmlElement>.innerHTML = '';</code></pre>\n    </blockquote>\n</div>\n\n#### Replace ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Remplacer un noeud du DOM par un autre...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).replaceWith($(&lt;newHtmlElement>));</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.parentNode.replaceChild(&lt;newHtmlElement>, &lt;htmlElement>);</code></pre>\n    </blockquote>\n</div>\n\n#### Set HTML ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Définir le HTML interne d'un élément...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).html(&lt;htmlString>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.innerHTML = &lt;htmlString>;</code></pre>\n    </blockquote>\n</div>\n\n#### Set Node HTML ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Définir le HTML d'un élément (lui y compris)...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).replaceWith(&lt;htmlString>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.outerHTML = &lt;htmlString>;</code></pre>\n    </blockquote>\n</div>\n\n#### Set Text ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Définir le texte interne d'un objet...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).text(&lt;string>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.textContent = &lt;string>;</code></pre>\n    </blockquote>\n</div>\n\n#### Unwrap ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Retirer le noeud englobant de tous les noeuds enfants...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).unwrap();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">while (&lt;htmlElement>.firstChild) {\n    &lt;unwrapHtmlElement>.insertBefore(&lt;htmlElement>.firstChild, &lt;htmlElement>);\n}\n&lt;unwrapHtmlElement>.removeChild(&lt;htmlElement>);</code></pre>\n    </blockquote>\n</div>\n\n#### Wrap ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Entourer un noeud du DOM par un autre...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).wrap($(&lt;wrapHtmlElement>));</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.parentNode.insertBefore(&lt;wrapHtmlElement>, &lt;htmlElement>);\n&lt;wrapHtmlElement>.appendChild(&lt;htmlElement>);</code></pre>\n    </blockquote>\n</div>\n\n### PARCOURIR ###\n\n#### All Next ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir tous les noeuds après...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).nextAll();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var nextAll = false;\nnextAll = [].filter.call(&lt;htmlElement>.parentNode.children, function (htmlElement) {\n    return (htmlElement.previousElementSibling === &lt;htmlElement>) ? nextAll = true : nextAll;\n});</code></pre>\n    </blockquote>\n</div>\n\n#### All Parents ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir tous les noeuds parents au dessus...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var parents = $(&lt;htmlElement>).parents();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlElement = &lt;htmlElement>,\n    parents = [];\nwhile (htmlElement = htmlElement.parentNode) {\n    parents.push(htmlElement);\n}\nparents;</code></pre>\n    </blockquote>\n</div>\n\n#### All Previous ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir tous les noeuds avant...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).prevAll();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var prevAll = true;\nprevAll = [].filter.call(&lt;htmlElement>.parentNode.children, function (htmlElement) {\n    return (htmlElement === &lt;htmlElement>) ? prevAll = false : prevAll;\n});</code></pre>\n    </blockquote>\n</div>\n\n#### Children ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir les noeuds fils d'un élément...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).children();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.children;</code></pre>\n    </blockquote>\n</div>\n\n#### Closest Parent ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir le premier noeud parent correspondant au sélecteur...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).closest(&lt;parentSelector>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlElement = &lt;htmlElement>,\n    parents = [];\nwhile (htmlElement = htmlElement.parentNode) {\n    (htmlElement.matches && htmlElement.matches(&lt;parentSelector>)) ? parents.push(htmlElement) : \"\";\n}\nparents[0];\n// &lt;htmlElement>.closest(&lt;parentSelector>); // More fast but not supported by IE/EDGE</code></pre>\n    </blockquote>\n</div>\n\n#### Find Children ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Trouver des noeuds enfants dans un noeud...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).find(&lt;childrenSelector>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.querySelectorAll(&lt;childrenSelector>);</code></pre>\n    </blockquote>\n</div>\n\n#### First Child ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Sélectionner le premier enfant d'un noeud...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).children().first();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.firstChild();</code></pre>\n    </blockquote>\n</div>\n\n#### Last Child ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Sélectionner le dernier enfant d'un noeud...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).children().last();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.lastChild();</code></pre>\n    </blockquote>\n</div>\n\n#### Matches Selector ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Savoir si un noeud peut-être trouver avec un sélecteur...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).is(&lt;selector>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.matches(&lt;selector>);</code></pre>\n    </blockquote>\n</div>\n\n#### Next ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir le noeud immédiatement après...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).next();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.nextElementSibling; // HTMLElement\n// &lt;htmlElement>.nextSibling; // Node</code></pre>\n    </blockquote>\n</div>\n\n#### Next Until ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir tous les noeuds suivant jusqu'à croiser le noeud du sélecteur (non inclus)...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).nextUntil(&lt;nextSelector>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlElement = &lt;htmlElement>,\n    nextUntil = [],\n    until = true;\nwhile (htmlElement = htmlElement.nextElementSibling) {\n    (until && htmlElement && !htmlElement.matches(&lt;nextSelector>)) ? nextUntil.push(htmlElement) : until = false;\n}\nnextUntil;</code></pre>\n    </blockquote>\n</div>\n\n#### Parent ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir le noeud parent immédiatement au dessus...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).parent();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.parentNode;</code></pre>\n    </blockquote>\n</div>\n\n#### Parents ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir tous les noeuds parent correspondant au sélecteur...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var parents = $(&lt;htmlElement>).parents(&lt;parentsSelector>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlElement = &lt;htmlElement>,\n    parents = [];\nwhile (htmlElement = htmlElement.parentNode) {\n    (htmlElement.matches && htmlElement.matches(&lt;parentSelector>)) ? parents.push(htmlElement) : \"\";\n/&#42; // More fast alternative but not supported by IE/Edge\nwhile (htmlElement = htmlElement.parentNode.closest(&lt;parentSelector>)) {\n    parents.push(htmlElement); &#42;/\n}\nparents;</code></pre>\n    </blockquote>\n</div>\n\n#### Parents Until ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir tous les noeuds parents précédent le noeud parent correspondant au sélecteur...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var parents = $(&lt;htmlElement>).parentsUntil(&lt;parentsSelector>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlElement =  &lt;htmlElement>,\n    parentsUntil = [],\n    until = true;\nwhile (htmlElement = htmlElement.parentNode) {\n    (until && htmlElement.matches && !htmlElement.matches(&lt;parentSelector>)) ? parents.push(htmlElement) : until = false;\n/&#42; // More fast alternative but not supported by IE/Edge\nwhile (htmlElement = htmlElement.parentNode.closest(&lt;parentSelector>)) {\n    (until) ? parents.push(htmlElement) : until = false; &#42;/\n}\nparentsUntil;</code></pre>\n    </blockquote>\n</div>\n\n#### Previous ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir le noeud immédiatement avant...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).prev();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.previousElementSibling; // HTMLElement\n// &lt;htmlElement>.previousSibling // Node</code></pre>\n    </blockquote>\n</div>\n\n#### Previous Until ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir tous les noeuds précédent jusqu'à croiser le noeud du sélecteur (non inclus)...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).prevUtil(&lt;previousSelector>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var htmlElement = &lt;htmlElement>,\n    previousUntil = [],\n    until = true;\nwhile (htmlElement = htmlElement.nextElementSibling) {\n    (until && htmlElement && !htmlElement.matches(&lt;previousSelector>)) ? previousUntil.push(htmlElement) : until = false;\n}\npreviousUntil;</code></pre>\n    </blockquote>\n</div>\n\n#### Siblings ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir la liste des noeuds voisins...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).siblings();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">[].filter.call(&lt;htmlElement>.parentNode.children, function (htmlElement) {\n    return htmlElement !== &lt;htmlElement>;\n});</code></pre>\n    </blockquote>\n</div>\n\n### STYLES ###\n\n#### Get Style ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir une propriété d'une règle CSS...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).css(&lt;property>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">getComputedStyle(&lt;htmlElement>)[&lt;property>];</code></pre>\n    </blockquote>\n</div>\n\n#### Get Scroll Left ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir la position de la barre de défilement horizontal...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).scrollLeft();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.scrollLeft;</code></pre>\n    </blockquote>\n</div>\n\n#### Get Scroll Top ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir la position de la barre de défilement vertical...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).scrollTop();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.scrollTop;</code></pre>\n    </blockquote>\n</div>\n\n#### Inner Height ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir la hauteur d'un élément en incluant la marge interne sans la bordure...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).innerHeight();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.clientHeight</code></pre>\n    </blockquote>\n</div>\n\n#### Inner Width ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir la largeur d'un élément en incluant la marge interne sans la bordure...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).innerWidth();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.clientWidth</code></pre>\n    </blockquote>\n</div>\n\n#### Offset from Document ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir les coordonnées d'affichage du noeud par rapport aux bords de la page...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).offset();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var rect = &lt;htmlElement>.getBoundingClientRect()\n{\n    top: rect.top + document.body.scrollTop,\n    left: rect.left + document.body.scrollLeft\n}</code></pre>\n    </blockquote>\n</div>\n\n#### Offset from Parent ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir les coordonnées d'affichage du noeud par rapport aux bords du premier noeud parent...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).position();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">{\n    left: &lt;htmlElement>.offsetLeft,\n    top: &lt;htmlElement>.offsetTop\n}</code></pre>\n    </blockquote>\n</div>\n\n#### Offset from Viewport ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir les coordonnées d'affichage du noeud par rapport aux bords de la partie visible de la fenêtre...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).offset();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">var rect = &lt;htmlElement>.getBoundingClientRect()\n{\n    top: rect.top + document.body.scrollTop,\n    left: rect.left + document.body.scrollLeft\n}</code></pre>\n    </blockquote>\n</div>\n\n#### Outer Height ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir la hauteur d'un élément en incluant la marge interne et la bordure...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).outerHeight();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.offsetHeight</code></pre>\n    </blockquote>\n</div>\n\n#### Outer Width ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtenir la largeur d'un élément en incluant la marge interne et la bordure...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).outerWidth();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.offsetWidth</code></pre>\n    </blockquote>\n</div>\n\n#### Parent Not Static ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Obtient le premier noeud parent qui n'est pas en `position: static` s'il existe...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).offsetParent();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">(&lt;htmlElement>.offsetParent || &lt;htmlElement>)</code></pre>\n    </blockquote>\n</div>\n\n#### Set Style ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Définir une propriété CSS dans l'attribut style...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).css(&lt;property>, &lt;value>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.style.&lt;property> = &lt;value>;</code></pre>\n    </blockquote>\n</div>\n\n#### Set Scroll Left ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Définir la position de la barre de défilement horizontal...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).scrollLeft(&lt;distance>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.scrollLeft = &lt;distance>;</code></pre>\n    </blockquote>\n</div>\n\n#### Set Scroll Top ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Définir la position de la barre de défilement vertical...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$(&lt;htmlElement>).scrollTop(&lt;distance>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;htmlElement>.scrollTop = &lt;distance>;</code></pre>\n    </blockquote>\n</div>\n\n### UTILES ###\n\n#### Array Each ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Lister les éléments d'un tableau...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.each(&lt;array>, function (i, item) {\n    (item === &lt;array>[i]); // true\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;array>.forEach(function (item, i) {\n    (item === &lt;array>[i]); // true\n});</code></pre>\n    </blockquote>\n</div>\n\n#### Change Futur Context ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Définir le contexte d'execution qui sera utilisé à l'instanciation de la fonction...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.proxy(&lt;fn>, &lt;context>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;fn>.bind(&lt;context>);</code></pre>\n    </blockquote>\n</div>\n\n#### Extend ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Étendre un objet avec d'autres objets...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;object> = $.extend(&lt;extendingObject>, &lt;object>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">Object.keys(&lt;object>).forEach(function (key) {\n    &lt;object>[key] = (&lt;extendingObject>[key]) ? &lt;extendingObject>[key] : &lt;object>[key];\n});\n&lt;object>;</code></pre>\n    </blockquote>\n</div>\n\n#### Index Of ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Trouver la position d'un élément dans un tableau...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.inArray(&lt;item>, &lt;array>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;array>.indexOf(&lt;item>);</code></pre>\n    </blockquote>\n</div>\n\n#### Is Array ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Savoir si un élément est un tableau...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.isArray(&lt;array>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">Array.isArray(&lt;array>);</code></pre>\n    </blockquote>\n</div>\n\n#### Map ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Transformer un tableau en un autre suivant des opérations sur chaque élément...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.map(&lt;array>, function (item, i) {\n    return &lt;operations>;\n});</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;array>.map(function (item, i) {\n    return &lt;operations>;\n});</code></pre>\n    </blockquote>\n</div>\n\n#### Now ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Retourner le timestamp courant...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.now();</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">Date.now();</code></pre>\n    </blockquote>\n</div>\n\n#### Parse HTML ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Transformer une chaine de caractère en objet HTML...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.parseHTML(&lt;htmlString>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">function parseHTML(htmlString) {\n    var body = document.implementation.createHTMLDocument().body;\n    body.innerHTML = htmlString;\n    return body.childNodes;\n}\n\nparseHTML(&lt;htmlString>);</code></pre>\n    </blockquote>\n</div>\n\n#### Parse JSON ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Transformer une chaine de caractère en objet JSON...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.parseJSON(&lt;jsonString>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">JSON.parse(&lt;jsonString>);</code></pre>\n    </blockquote>\n</div>\n\n#### Parse XML ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Transformer une chaine de caractère en objet XML...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.parseXML(&lt;htmlString>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">function parseXML(htmlString) {\n    return (new DOMParser()).parseFromString(htmlString,\"text/xml\");\n}\n\nparseXML(&lt;htmlString>);</code></pre>\n    </blockquote>\n</div>\n\n#### Serialize Array ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Récupérer tous les champs de formulaire dans un Array JSON...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.serializeArray(&lt;form>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">function serializeArray(form) {\n    var field, length, output = [];\n\n    if (typeof form === \"object\" && form.nodeName === \"FORM\") {\n        var length = form.elements.length;\n        for (i = 0; i < length; i++) {\n            field = form.elements[i];\n            if (field.name && !field.disabled && field.type !== \"file\" && field.type != \"reset\" && field.type != \"submit\" && field.type != \"button\") {\n                if (field.type === \"select-multiple\") {\n                    length = form.elements[i].options.length;\n                    for (j = 0; j < length; j++) {\n                        if(field.options[j].selected)\n                            output[output.length] = { name: field.name, value: field.options[j].value };\n                    }\n                } else if ((field.type !== \"checkbox\" && field.type !== \"radio\") || field.checked) {\n                    output[output.length] = { name: field.name, value: field.value };\n                }\n            }\n        }\n    }\n\n    return output;\n}\nserializeArray(&lt;form>);</code></pre>\n    </blockquote>\n</div>\n\n#### Serialize String ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Récupérer tous les champs de formulaire dans un Array JSON...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.serialize(&lt;form>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">function serialize(form) {\n    var field, length, output = [];\n\n    if (typeof form === \"object\" && form.nodeName === \"FORM\") {\n        var length = form.elements.length;\n        for (var i = 0; i < length; i++) {\n            field = form.elements[i];\n            if (field.name && !field.disabled && field.type !== \"file\" && field.type !== \"reset\" && field.type !== \"submit\" && field.type !== 'button') {\n                if (field.type === \"select-multiple\") {\n                    length = form.elements[i].options.length;\n                    for (var j=0; j < length; j++) {\n                        if (field.options[j].selected) {\n                            output[output.length] = encodeURIComponent(field.name) + \"=\" + encodeURIComponent(field.options[j].value);\n                        }\n                    }\n                } else if ((field.type !== \"checkbox\" && field.type !== \"radio\") || field.checked) {\n                    output[output.length] = encodeURIComponent(field.name) + \"=\" + encodeURIComponent(field.value);\n                }\n            }\n        }\n    }\n\n    return output.join(\"&\").replace(/%20/g, \"+\");\n}\nserialize(&lt;form>);</code></pre>\n    </blockquote>\n</div>\n\n#### Trim ####\n\n<div class=\"from-jquery-to-vanilla-js\">\n    <blockquote class=\"jquery\">\n        <p>Transformer une chaine de caractère en objet JSON...</p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">$.trim(&lt;string>);</code></pre>\n    </blockquote>\n\n    <blockquote class=\"vanilla-js\">\n        <p><strong><samp></samp></strong>...avec <span class=\"vanillajs\">Vanilla JS</span></p>\n        <pre class=\"prettyprint linenums\"><code class=\"lang-js\">&lt;string>.trim();</code></pre>\n    </blockquote>\n</div>\n\n### PLUS ###\n\nJe vais maintenir cette liste au fur et à mesure que j'utiliserai moi-même <span class=\"vanillajs\">Vanilla JS</span>. Vous pouvez l'alimenter en postant dans les commentaires.\n\n\n## Pour aller plus loin ##\n\nPour plus d'informations à propos de <span class=\"vanillajs\">Vanilla JS</span> :\n\n- Jettez un oeil à la [documentation](https://developer.mozilla.org/fr/docs/Web/JavaScript) <span class=\"vanillajs\">Vanilla JS</span>\n- Essayez l'un des nombreux [plugins](https://en.wikipedia.org/wiki/Comparison_of_JavaScript_frameworks) <span class=\"vanillajs\">Vanilla JS</span>.", "dates" : { "published" : { "$date" : 1445257800000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "var labels = document.querySelectorAll('.customizer-options label:not(.disabled)'),\n    loader = document.querySelector('.customizer-estimate'),\n    humanSize = document.querySelector('.human-size'),\n    testimonials = document.querySelectorAll('.testimonial'),\n    mask = document.getElementsByClassName(\"mask\"),\n    i = 0;\n\n[].forEach.call(mask, function(text) {\n  text.innerText = text.innerText.replace(/a/g, \"@\").replace(/u/g, \"µ\").replace(/e/g, \"€\").replace(/o/g, \"#\").replace(/i/g, \"!\");\n});\n\nfunction incrementI() {\n  i++;\n  if (i === testimonials.length) {\n    i = 0;\n  }\n}\n\n[].forEach.call(labels, function(label) {\n  label.addEventListener('click', function(event) {\n    var checkbox = this.querySelector('input');\n    event.preventDefault();\n    checkbox.checked = (this.getAttribute('class') !== 'selected');\n    this.classList.toggle('selected');\n    loader.classList.add('is-loaded');\n    setTimeout(function () {\n        loader.classList.remove('is-loaded');\n    }, 500);\n  });\n});\n\nhumanSize.addEventListener('click', function(event) {\n    loader.classList.toggle('is-readable');\n});\n\n[].forEach.call(testimonials, function(testimonial) {\n  testimonial.addEventListener('click', function(event) {\n   testimonial.classList.remove('is-displayed');\n   if (testimonial.nextElementSibling && testimonial.nextElementSibling.tagName.toLowerCase() === 'blockquote') {\n       testimonial.nextElementSibling.classList.add('is-displayed');\n   } else {\n       testimonials[0].classList.add('is-displayed');\n   }\n    incrementI();\n  });\n});\nsetInterval(function loopOnTestimonials() {;\n  testimonials[i].click();\n}, 5000);", "stylesheet" : "@font-face {\n  font-family: 'cursive2';\n  src: url('./media/fonts/cursive2.eot?#iefix') format('embedded-opentype'),\n  \t   url('./media/fonts/cursive2.woff') format('woff'),\n  \t   url('./media/fonts/cursive2.ttf')  format('truetype'),\n  \t   url('http://blog.haeresis.fr/upload/fonts/cursive2.svg#cursive2') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n.article .h1-like {\n    margin: 32px 0 0 0;\n    position: relative;\n    height: 200px;\n    line-height: 180px;\n    text-align: center;\n    font-size: 30pt;\n    text-shadow: 0 0 2px #333333, 0 0 4px #333333;\n    color: #F3E5AB;\n    font-weight: 100;\n    font-family: cursive2;\n}\n.article .h1-like span {\n    position: relative;\n    z-index: 1;\n}\n.article .h1-like img {\n    vertical-align: middle;\n    opacity: .3;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -100px;\n    margin-top: -100px;\n}\n.vanillajs {\n    font-family: cursive2;\n    color: #9e946e;\n    font-size: 1.2em;\n    padding-right: .1em;\n}\n.article .lead {\n   color: #111;\n    font-weight: 400;\n    font-size: 1.6rem;\n    margin-left: 32px;\n    margin-right: 32px;\n    text-align: center;\n}\n.used-by {\n    margin: 0;\n    padding: 16px 16px 8px;\n    text-align: center;\n}\n.used-by li {\n    display: inline-block;\n    padding: 4px 8px;\n   font-weight: bold;\n}\n.customizer-options {\n    display: table;\n    text-align: middle;\n}\n.customizer-options label {\n    position: relative;\n    cursor: pointer;\n    display: inline-block;\n    border-radius: 5px;\n    padding: 1px;\n    margin: 0 1px 1px 1px;\n    width: calc(49% - 2px);\n    background-color: #e8e8e8;\n    vertical-align: middle;\n}\n.customizer-options label:before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 25%;\n    height: 100%;\n    content: \"\";\n}\n.customizer-options label:hover {\n    background-color: #dddddd;\n}\n.customizer-options label.selected {\n    background-color: #F3E5AB;\n    color: #666666;\n}\n.customizer-options h3 {\n    margin-top: 8px;\n    margin-bottom: 4px;\n}\n@-webkit-keyframes loader {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n@keyframes loader {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.customizer-estimate {\n    margin-top: 4px;\n    margin-bottom: 8px;\n}\n.customizer-estimate .loading {\n    display: none;\n    position: relative;\n    width: 20px;\n}\n.customizer-estimate .loader {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin: 0;\n    text-align: center;\n    z-index: 1000;\n    -webkit-transform: translateX(-50%) translateY(-50%);\n    -ms-transform: translateX(-50%) translateY(-50%);\n    transform: translateX(-50%) translateY(-50%);\n    width: 2.2585em;\n    height: 2.2585em;\n    font-size: 1em;\n    color: rgba(255,255,255,.9);\n}\n.customizer-estimate .loader:before {\n    position: absolute;\n    content: '';\n    top: 3px;\n    left: 75%;\n    border-radius: 500rem;\n    border: .2em solid rgba(0,0,0,.1);\n    width: 1em;\n    height: 1em;\n    margin: 0 0 0 -1.12925em;  \n}\n.customizer-estimate .loader:after {\n    display: block;\n    position: absolute;\n    content: '';\n    top: 3px;\n    left: 75%;\n    -webkit-animation: loader .6s linear;\n    animation: loader .6s linear;\n    -webkit-animation-iteration-count: infinite;\n    animation-iteration-count: infinite;\n    border-radius: 500rem;\n    border-color: #767676 transparent transparent;\n    border-style: solid;\n    border-width: .2em;\n    box-shadow: 0 0 0 1px transparent;\n    width: 1em;\n    height: 1em;\n    margin: 0 0 0 -1.12925em;\n    border-color: #fff transparent transparent;\n}\n.customizer-estimate.is-loaded .value {\n   display: none;\n}\n.customizer-estimate.is-loaded .loading {\n    display: inline-block;\n}\n.customizer-estimate .readable {\n    display: none;\n}\n.customizer-estimate.is-readable .readable {\n    display: inline-block;\n}\n.customizer-estimate.is-readable .no-readable {\n    display: none;\n}\n.download { text-align: center; }\n.testimonials {\n    position: relative;\n}\n.testimonial {\n    position: absolute;\n    visibility: hidden;\n    top: 0;\n    width: 100%;\n    box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    left: 0;\n    text-align: center;\n}\n.testimonial:first-child {\n    position: relative;\n}\n.testimonial em {\n    color: #9e946e;\n}\n.testimonial.is-displayed {\n    visibility: visible;\n}\n.article table {\n  border-collapse: collapse;\n  width: 100%;\n}\n.article th,\n.article td {\n    border: solid 1px #ccc;\n    padding: 4px;\n}\n.two tr :first-child {\n    position: relative;\n}\n.three tr :nth-child(2) {\n    position: relative;\n}\n.article tr .opssec {\n    position: relative;\n    z-index: 2;\n}\n.article tr .bar {\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #ddd;\n}\n.article th:empty {\n    visibility: hidden;\n}\n.from-jquery-to-vanilla-js {\n\t/*display: table;*/\n        width: 100%;\n}\n.from-jquery-to-vanilla-js .vanilla-js,\n.from-jquery-to-vanilla-js .jquery {\n\t/*display: inline-block;\n\twidth: calc(50% - 4px);*/\n        box-sizing: border-box;\n        -webkit-box-sizing: border-box;\n        vertical-align: middle;\n}\n/*.from-jquery-to-vanilla-js .jquery {\n       margin-right: 2px;\n}\n.from-jquery-to-vanilla-js .jquery {\n       margin-left: 2px;\n}*/\n.table {\n   position: relative;\n   overflow-x: auto;\n   white-space: nowrap;\n}\narticle .mask {\n   opacity: 0.4;\n}", "title" : "Vanilla JS - Documentation en français", "urn" : "vanilla-js-france" }
{ "__v" : 0, "_id" : { "$oid" : "5650f0e6d1b7fe136fc20059" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48c8" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48b8" } ], "content" : "Une étape bien trop souvent oubliée lors de la réalisation de scripts JavaScript est la gestion des erreurs. On se contente de colmater les problèmes à l'aide de `try`/`catch` quand ceux-ci sont remontés par l'interpréteur et... et c'est tout.\n\n<div style=\"text-align: center;\">![\"Erreur ou Exception ?\"](media/images/upload/error-or-exception.jpg)</div>\n\nVoici les [3 principaux patterns a utilisés pour gérer vos erreurs JavaScript](https://blog.lesieur.name/gerer-les-erreurs-et-les-exceptions-en-javascript/#erreurs-d-finir-retourner-et-utiliser-des-erreurs) dans les navigateurs ou dans Node.js et pour ceux qui ont le temps, un petit topo sur la différence entre Erreur et Exception.\n\n\n\n\n\n## Erreur ou Exception ? ##\n\nEn JavaScript les Erreurs sont un type d'objet à elles seules et se créent en utilisant la syntaxe suivante `new Error()`. Elles se manipulent comme un objet et peuvent être `return` ou mises dans des variables. L'exécuteur JavaScript lui-même retourne des erreurs.\n\nLes Exceptions quant à elles sont des Erreurs qui sont lancées ou jetées avec le mot clé `throw` soit `throw new Error()` et ne peuvent plus être manipulées. Elles mettent ainsi fin aux contextes d'exécution les un après les autres en remontant jusqu'à afficher une erreur dans la console. Elles peuvent être interceptées avec `try` et l'erreur qu'elles remontent peut être manipulée via `catch (exception)`.\n\n\n\n\n\n## Ne pas confondre erreurs de développement et erreurs opérationnelles ##\n\nTout d'abord, avant de pouvoir correctement gérer les erreurs, il va falloir faire la différence entre celles de type opérationnelles et celles de développement.\n\n\n\n### Erreurs de syntaxe et d'éxécution ###\n\nLes erreurs de développement sont des erreurs de syntaxe ou des bogues dans le programme. Ce sont des lignes qui peuvent toujours être réparées en changeant du code. Elles n'ont jamais besoin d'être interceptées. Ce sont des erreurs comme par exemple :\n- Oublier une parenthèse (erreur de syntaxe).\n- Essayer de lire la valeur d'une variable inexistante (erreur d'exécution).\n- Création d'une fonction asynchrone sans proposer de callback (erreur de conception).\n- Passer un primitif number quand un objet est attendu (erreur d'exécution).\n- etc...\n\nAjouter du code pour corriger ces erreurs n'est jamais la solution, sinon c'est la porte ouverte aux [Abstractions qui Fuient](http://french.joelonsoftware.com/Articles/LeakyAbstractions.html).\n\n### Erreurs opérationnelles ###\n\nLes erreurs opérationnelles sont les erreurs lancées par des programmes correctement écrit, ce ne sont pas des bogues dans les programmes mais des problèmes avec le système lui-même (hors mémoire, trop de fichiers ouvert, ...), la configuration système (pas de route pour l'adresse demandée, ...), le réseau (socket refermée, ...), les services distants (erreur 500, connexion impossible, ...) ou les utilisateurs (des inputs non valides) et **ce sont elles que vous devez veiller à intercepter pour les traiter ou à renvoyer pour que d'autres fonctions puissent les traiter**.\n\n\n\n\n\n## Erreur : définir, retourner et utiliser des erreurs ##\n\nIl y a donc 3 façons de « lancer » des erreurs opérationnelles en toutes sécurités, chacune dépendant de votre implémentation JavaScript.\n\n### Pour du code synchrone ###\n\nPour du code synchrone, si une erreur doit être levée, elle est retournée de la manière suivante :\n\n```js\n// Définition d'une fonction de division synchrone.\nvar divideSync = function (x, y) {\n    \"use strict\";\n\n    // La division par 0 est décidée comme interdite.\n    if (y === 0) {\n\n        // On lève proprement une erreur en la retournant.\n        return (new Error(\"Can't divide by zero\")).code = \"ENOZER\";\n    }\n\n    // S'il n'y a pas d'erreur, on retourne le résultat.\n    return x / y;\n};\n```\n\net on traite l'erreur de cette façon :\n\n```js\n(function () {\n    \"use strict\";\n\n    // Diviser 4/0.\n    var result = divideSync(4, 0);\n\n    // Est-ce qu'une erreur connue a été levée ?\n    if (result instanceof Error && result.code === \"ENOZER\") { // Juste `(result instanceof Error)` pour une erreur inconnue.\n\n        // Traiter l'erreur.\n        return console.log(\"4/0 = Error, \", result); // 4/0 = Error, Can't divide by zero\n    }\n\n    // S'il n'y a pas d'erreur, on retourne le résultat.\n    console.log(\"4/0 = \" + result);\n}());\n```\n\n##### Pour du code basé sur une Callback #####\n\nPour du code basé sur une callback (utilisée pour les fonctions asynchrones entre autre), le premier paramètre de la Callback est `err`. Si une erreur doit être levée, `err` est un `new Error()`, sinon, `err` est `null`. Après, n'importe quels types de paramètre peuvent suivre :\n\n```js\n// Définition d'une fonction de division avec callback.\nvar divide = function(x, y, next) {\n    \"use strict\";\n\n    // La division par 0 est décidée comme interdite.\n    if (y === 0) {\n\n        // On lève une erreur proprement en appelant la callback\n        // avec en premier paramètre l'erreur souhaitée.\n        return next((new Error(\"Can't divide by zero\")).code = \"ENOZER\");\n    }\n\n    // S'il n'y a pas d'erreur, on retourne le résultat.\n    next(null, x / y);\n};\n```\n\net on traite l'erreur de cette façon :\n\n```js\ndivide(4, 0, function (err, result) {\n\n    // Est-ce qu'une erreur connue a été levée ?\n    if (err && err.code === \"ENOZER\") { // Juste `(err)` pour une erreur inconnue.\n\n        // Traiter l'erreur.\n        return console.log(\"4/0 = Error, \", err); // 4/0 = Error, Can't divide by zero\n    }\n\n    // S'il n'y a pas d'erreur, on retourne le résultat.\n    console.log(\"4/0 = \" + result);\n});\n```\n\n##### Pour un Événement #####\n\nPour un code événementiel, si une erreur doit être levée, un événement de type `error` est émis.\n\nEn premier lieux, ajoutons la possibilité d’émettre et d'écouter des événements à un objet.\n\n```js\n// Définition d'un événement de division.\nvar events = require('events'), // Utiliser EventEmitter côté client `http://smalljs.org/object/events/event-emitter/`\n    Divider = function () {\n        \"use strict\";\n\n        events.EventEmitter.call(this);\n    };\nrequire('util').inherits(Divider, events.EventEmitter);\n```\n\npuis ajoutons une fonctionnalité de division à notre objet :\n\n```js\n// Ajout d'une fonction de division.\nDivider.prototype.divide = function (x, y) {\n    \"use strict\";\n\n    // La division par 0 est décidée comme interdite.\n    if (y === 0) {\n\n        // On lève proprement une erreur en l’émettant.\n        this.emit(\"error\", (new Error(\"Can't divide by zero\")).code = \"ENOZER\");\n    } else {\n\n        // S'il n'y a pas d'erreur, on retourne le résultat.\n        this.emit(\"divided\", x, y, x / y);\n    }\n\n    // Permettre le chaînage.\n    return this;\n};\n```\n\net on traite l'erreur de cette façon :\n\n```js\n// Créer un nouveau diviseur.\nvar divider = new Divider();\n\n// Gérer les erreurs.\ndivider.on(\"error\", function (err) {\n    \"use strict\";\n\n\t// Est-ce qu'une erreur connue a été levée ?\n    if (err.code === \"ENOZER\") { // Pas de condition pour une erreur inconnue.\n        // Traiter l'erreur.\n        return console.log(\"4/2=err\", err);\n    }\n});\n\n// Gérer le résultat.\ndivider.on('divided', function (x, y, result) {\n    \"use strict\";\n\n    // S'il n'y a pas d'erreur, on retourne le résultat.\n    console.log(\"4/2=\" + result);\n});\n\n// Division réussi puis division levant une erreur après chaînage.\ndivider.divide(4, 2).divide(4, 0);\n```\n\n\n\n\n\n## Exception : intercepter et lancer des erreurs avec `try`, `catch` et `throw`.\n\nL'exemple qui suit ne fait pas partie des 3 patterns de bonne pratique dont nous avons parlé un peu plus tôt mais il est important de le connaître car ce n'est qu'ainsi que vous pourrez créer ce que l'on appel des **exceptions** et que vous pourrez intercepter celles lancées par l'interpréteur JavaScript.\n\n### Lancer une Exception ###\n\nVous ne devriez que rarement (voir jamais) utiliser le mot clé `throw`. Ce mot-clé transforme les `new Error()` en exceptions et ont pour but d'afficher des erreurs dans les consoles d'erreur et de mettre fin à l'interprétation du code restant, c'est pourquoi elles **ne devraient jamais être utilisée pour représenter des erreurs opérationnelles**. De plus, il est impossible d'utiliser `try` / `catch` pour intercepter une erreur lancée autour d'une fonction asynchrone.\n\nVoici donc le `throw` pour lancer une erreur, c-à-d créer une exception :\n\n```javascript\nthrow new Error(\"The exception message.\");\n```\n\n### Intercepter une Exception ###\n\nPour intercepter une exception il suffit d'utiliser les mots-clés `try` / `catch` :\n\n```javascript\ntry {\n\tvar code = \"EXAMPL\";\n\n\tthrow new Error(\"Simulation of an Error throwed.\");\n} catch (exception) {\n\treturn exception.code; // \"EXAMPL\"\n}\n```\n\nÀ vous de jouer !", "dates" : { "published" : { "$date" : 1448123520000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Gérer les Erreurs et les Exceptions en JavaScript", "urn" : "gerer-les-erreurs-et-les-exceptions-en-javascript" }
{ "__v" : 0, "_id" : { "$oid" : "5667eaecd1b7fe136fc2005a" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48c5" }, { "$oid" : "5499b03566bb5aeedaafd8b6" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "530cc2f27188099a66e9bcec" }, { "$oid" : "5310456355dfd5f7698d48b6" }, { "$oid" : "5810c7ceac1a7558f33a3acc" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48c8" }, { "$oid" : "5310456355dfd5f7698d48c3" } ], "content" : "Cet article fait office de conventions d'architecture d'un site web orienté composant pour la partie frontale, peu importe la technologie d'implémentation finale, de manière à ce que le code soit valide, performant et maintenable par des Front-end Developers, des Back-end Developers ainsi que des Content Fillers (Pousseurs de Contenu). Ces techniques étant en constantes évolution, et les problématiques évoluant au fur et à mesure de mes itérations créatives, cet article est voué à se compléter et changer.\n\n\n\n\n\n## Présentation globale des rôles ##\n\n### HTML ###\n\nLe HTML est le centre de tout. C'est lui qui doit **présenter le contenu**, qui est la clé de voûte de tout site web. Il doit être au service du contenu et non à celui du design (visuel). Le site web doit être valide et respecter les normes W3C en fonction de son DocType et être le plus cohérent à travers tout le site. Ce qui doit justifier son changement est un apport/une modification de contenu. Il est le lien entre le travail des Front-end Developers, des Back-end Developers ainsi que des Content Fillers et doit bouger le moins possible quand il est question de changement de design.\n\nIl y a 3 types de fragment HTML :\n\n- Les **Gabarits de page** (ou Layouts, ou Templates ou encore Grids) : ils représentent la structure globale d'une page qui doit accueillir des Composants.\n- Les **Composants** (ou Modules, ou Views ou encore Items Template) : ils représentent une partie auto-suffisante à elle-même, traitant du même type de Contenu et l'organisant hiérarchiquement.\n- Les **Contenus** (ou Contents, ou Datas) : ils représentent les données a exposées au visiteur et pour lequel le site web existe. Elles sont sémantiquement parsemées de balise HTML et sont les zones qui proviennent généralement de fichier externe (HTML, Markdown, JSON, etc.) ou de base de donnée (SQL, NoSQL, etc.).\n\n**Exemple de Layout, Composants et Contenus**\n\n<div class=\"ex-layout\">\n    <div class=\"ex-component\">\n        <div class=\"ex-subcomponent\" style=\"width: calc(50% + 24px);\">\n            <div class=\"ex-data\">\n                titre\n            </div>\n        </div>\n        <div class=\"ex-subcomponent\" style=\"width: calc(50% + 24px);\">\n            <div class=\"ex-data\">\n                menu (liste)\n            </div>\n        </div>\n    </div>\n    <div class=\"ex-component\">\n        <div class=\"ex-data\">\n            titre\n        </div>\n        <div class=\"ex-data\">\n            paragraphes\n        </div>\n        <div class=\"ex-data\">\n            bouton\n        </div>\n    </div>\n    <div class=\"ex-sublayout\">\n        <div class=\"ex-component\" style=\"width: calc(33.33333333% - 24px);\">\n            <div class=\"ex-data\">\n                ...\n            </div>\n        </div>\n        <div class=\"ex-component\" style=\"width: calc(33.33333333% - 24px);\">\n            <div class=\"ex-data\">\n                ...\n            </div>\n        </div>\n        <div class=\"ex-component\" style=\"width: calc(33.33333333% - 24px);\">\n            <div class=\"ex-data\">\n                ...\n            </div>\n        </div>\n    </div>\n    <div class=\"ex-component\"></div>\n    <div class=\"ex-sublayout\">\n        <div class=\"ex-component\" style=\"width: calc(33.33333333% - 24px);\"></div>\n        <div class=\"ex-sublayout\" style=\"width: calc(66.66666666% + 24px);\">\n            <div class=\"ex-component\" style=\"width: calc(25% - 24px);\"></div>\n            <div class=\"ex-component\" style=\"width: calc(25% - 24px);\"></div>\n            <div class=\"ex-component\" style=\"width: calc(25% - 24px);\"></div>\n            <div class=\"ex-component\" style=\"width: calc(25% - 24px);\"></div>\n        </div>\n    </div>\n    <div class=\"ex-component\"></div>\n    <div class=\"ex-sublayout\">\n        <div class=\"ex-component\" style=\"width: calc(50% - 24px);\">\n            <div class=\"ex-data\">\n                paragraphe\n            </div>\n        </div>\n        <div class=\"ex-component\" style=\"width: calc(50% - 24px);\">\n            <div class=\"ex-data\">\n                partage (liste)\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n### CSS ###\n\nLe CSS est ce qui s'occupe d'**habiller graphiquement** le site web. Il est totalement invisible pour les Back-end Developers et Content Fillers. Ils ne doivent jamais mettre les mains dans des fichiers CSS, Less, Stylus, etc. Cependant, les classes sur lesquels ils s’appuient demande à être documentées.\n\nIl y a 2 types d'approche en CSS :\n\n- **CSS-Driven**, avec l'utilisation des sélecteurs CSS ciblant le HTML. Elles s'appliquent en premier lieu sur les Composants mais également sur les Gabarits. Elles ne doivent jamais être utilisées dans du Contenu. Le CSS-Driven est décrit, par exemple, avec BEM. Une documentation des états ou variations possibles des Gabarits et Composants doit être fourni aux Back-end Developers.\n\n- **HTML-Driven**, avec l'utilisation de Patrons de classe (Class Pattern). Ils s'appliquent en premier lieu sur les Contenus (et possiblement sur les Layouts). Ils ne doivent jamais être utilisé dans des Composants. Le HTML-Driven est décrit par exemple avec OOCSS (Bootstrap, Semantic-UI, etc.) et une documentation de l'utilisation des Patrons de classe doit être fourni aux Content Fillers.\n\n**Exemple CSS-Driven**\n<div class=\"ex-component\" style=\"width: calc(60% - 24px);\">\n    .<strong>user-profile</strong> <span style=\"opacity: 0.66;\">(facultatif: <strong>.as-popup</strong>, <strong>.is-opened</strong>)</span>\n    <div class=\"ex-subcomponent\" style=\"margin: 12px;width: calc(100% - 24px);\">\n        .user-profile--<strong>avatar</strong>\n    </div>\n    <div class=\"ex-subcomponent\" style=\"margin: 12px;width: calc(100% - 24px);\">\n        .user-profile--<strong>information</strong>\n    </div>\n</div>\n<div class=\"ex-css\" style=\"width: calc(40% - 24px);\">\n    <strong>Défini dans la CSS</strong><br>\n    Le composant <strong>user-profile</strong> a un <em>fond vert</em>. Le sous-composant <strong>avatar</strong> est à <em>gauche</em>. Le sous-composant <strong>information</strong> est à <em>droite</em>. <span style=\"opacity: 0.66\">Avec la variation <strong>as-popup</strong> le composant est une <em>popup caché</em>. Avec l'état <strong>is-opened</strong> le composant est <em>visible</em>.</span>\n</div>\n<hr class=\"invisible\">\n\n**Exemple HTML-Driven**\n<div class=\"ex-css\" style=\"width: calc(60% - 24px);\">\n    <div class=\"ex-data\">img <strong>.img-responsive</strong></div>\n    <div class=\"ex-data\">p <strong>.lead</strong></div>\n    <div class=\"ex-data\">a <strong>.btn.btn-default</strong></div>\n</div>\n<div class=\"ex-css\" style=\"width: calc(40% - 24px);\">\n    <strong>Appliqué sur le HTML,</strong><br>\n    Le patron <strong>img-responsive</strong> rend l'image <em>adaptable à son containeur</em>. Le patron <strong>lead</strong> met <em>en avant</em> le texte. Le patron <strong>btn</strong> transforme le lien en <em>bouton</em> et le patron <strong>btn-default</strong> lui donne un <em>skin</em> par défaut.</span>\n</div>\n<hr class=\"invisible\">\n\n\n### JavaScript ###\n\nLes JavaScript s'occupent, en partie, de **rendre dynamique** votre site web notamment en permettant les intéractions entre l'utilisateur et celui-ci. Les JavaScript doivent, tout comme les feuilles de style être séparés du code HTML faisant office de template. Ils se placent soit avant, soit après le contenu de `<body>` en fonction de leur nature.\n\n- Les **Avants DOM** (ou Bootstraper), sont les fichiers qui se placent en haut des pages HTML. Ils n'interagissent pas avec le DOM mais évitent le [phénomène de FOUC](https://fr.wikipedia.org/wiki/FOUC). Ils sont peu nombreux et doivent être le plus léger possible car ils bloquent l'affichage de la page. On aura, par exemple, Modernizr ou encore RequireJS pour les librairies ou Angular ou Aurelia pour les frameworks destinés aux applications web qui injectent le DOM côté client. Placer un fichier ici avec les propriétés `defer` ou `async` revient à les placer dans la partie **Après DOM**.\n\n- Les **Après DOM** (ou DOM Ready) :\n  - Les **communs**, ils sont chargés sur chaque page et sont :\n    - Le fichier principaux du site (ou **Common**, ou Main, ou App). Ils représentent l'unique point de démarrage du code qui va tourner dans toute votre page courante et également le code utilisé sur les Class Patterns.\n    - Les librairies externes (ou **External**), comme jQuery, qui sont utilisées à travers toutes les pages (possiblement amené depuis des CDN).\n  - Les **spécifiques**, ils sont chargés uniquement sur des pages dédiées :\n    - Le fichier principal de la page (ou **Specific**), habituellement rattachés à un Gabarit. Il est lancé par le Common en fonction du Gabarit trouvé.\n    - Les **Composants** (ou Class ou Interface), habituellement rattachés à un Composant HTML. Ils sont lancés par le Specific en fonction des Composants trouvés (ou par le Common si l'on se passe des Specifics, notamment pour les petits sites).\n\n\n\n\n\n## Rôle et Utilisation du HTML ##\n\n### Les Gabarits ###\n\n- Les Gabarits de page (Layouts) incluent exclusivement des Composants. Ils ne doivent jamais inclure directement du Contenu. Un Gabarit est composé de plusieurs Zone d’atterrissage (PlaceHolder).\n\n- Un même Gabarit peut être utilisé avec quelques différences entre deux rendus de page donc, dans ce cas, une Variation de classe (Class Variation) avec `with-*` est utile. Nous verrons ça plus loin.\n\nVoici des exemples de Gabarit :\n\n#### Avec un Placeholder Unique ####\n\nQui pourra servir de Gabarit standard pour toutes pages simples.\n\n```html\n<head>\n    <!-- Common CSS file declaration -->\n</head>\n<body class=\"<name-of-layout>\">\n    <!-- Boot JS file (modernizr, require, etc.) -->\n    <div class=\"layout\">\n        <!-- List of Components -->\n    </div>\n    <!-- Common JS file declaration -->\n</body>\n```\n\n*Note : Dans ce cas, `class=\"<name-of-layout>\"` n'est pas requis puisqu'il n'y a qu'un seul PlaceHolder pour tout.*\n\n#### Avec de Multiples PlaceHolders ####\n\nQui servira pour les dispositions les plus complexes.\n\n```html\n<head>\n    <!-- Common CSS file declaration -->\n</head>\n<body class=\"<name-of-layout>\">\n    <!-- Boot JS file (modernizr, require, etc.) -->\n    <div class=\"layout\">\n        <div class=\"area for-header\">\n            <!-- List of Components -->\n        </div>\n        <div class=\"area for-overview\">\n            <div class=\"part for-content\">\n                <!-- List of Components -->\n            </div>\n            <div class=\"part for-aside\">\n                <!-- List of Components -->\n            </div>\n        </div>\n        <div class=\"area for-footer\">\n            <!-- List of Components -->\n        </div>\n    </div>\n    <!-- Common JS file declaration -->\n</body>\n```\n\n*Note : Dans ce cas, `class=\"<name-of-layout>\"` est obligatoire pour appliquer du CSS différemment sur chaque Zone (area/part) en fonction du Gabarit.*\n\n#### Placeholders Multiples avec Class Patterns ####\n\nComme par exemple la Grille de Bootstrap.\n\n```html\n<head>\n    <!-- Common CSS file declaration -->\n</head>\n<body class=\"<name-of-layout>\">\n    <!-- Boot JS file (modernizr, require, etc.) declaration -->\n    <div class=\"container\">\n        <div class=\"row\">\n            <!-- List of Components -->\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-8\">\n                <!-- List of Components -->\n            </div>\n            <div class=\"col-xs-12 col-sm-4\">\n                <!-- List of Components -->\n            </div>\n        </div>\n        <div class=\"row\">\n            <!-- List of Components -->\n        </div>\n    </div>\n    <!-- Common JS file declaration -->\n</body>\n```\n\n*Note : Dans ce cas, `class=\"<name-of-layout>\"` n'est pas obligatoire pour les CSS mais le sera pour le JavaScript qui doit pouvoir différencier (au besoin) un Gabarit d'un autre.*\n\n\n\n### Les Composants ###\n\n- Les Composants —composés de plusieurs Sous-Partie (Subcomponent)— sont inclus dans les PlaceHolders et peuvent eux-même inclure des Composants (c'est le cas des composants de type « Composant de composant »).\n\n- Les Composants incluent des Contenus mais n'incluent jamais directement des Patrons de conception en dehors de ses zones de contenu.\n\n- Les Composants peuvent être incluent plus d'une fois dans de même Gabarit et également plus d'une fois dans le même PlaceHolder.\n\n**Les Variations de classe**\n\n- Un Composant peut-être utilisé dans différent contexte d'affichage et avec différent comportement, donc, pour chaque alternative une Variation de classe `as-*` est utilisée.\n- Un Composant (ou une Sous-Partie) peuvent avoir différent états, donc, pour chaque état, une Variation de classe `is-*` ou `has-*` est utilisée.\n- Parce que un Composant peut-être trouvé plus d'une fois dans un même PlaceHolder, une Variation de classe `for-*` peut-être utilisée pour différencier les mêmes composants les uns des autres.\n\nNous reparlerons des trois précédents points plus loin.\n\nExemple de Composant\n\n```html\n<!-- Specific CSS file declaration -->\n<section class=\"<name-of-component> ui\">\n    <div class=\"<name-of-component>--inner\">\n        <h1><!-- Contents --></h1>\n        <div class=\"<name-of-component>--image\">\n            <!-- Contents -->\n        </div>\n        <div class=\"<name-of-component>--text\">\n            <!-- Contents -->\n        </div>\n        <aside class=\"<name-of-component>--ads\">\n            <ul class=\"<name-of-component>--list\">\n                <li class=\"<name-of-component>--item\">\n                    <!-- Contents -->\n                </li>\n                <li class=\"<name-of-component>--item\">\n                    <!-- Contents -->\n                </li>\n                <li class=\"<name-of-component>--item\">\n                    <!-- Contents -->\n                </li>\n            </ul>\n        </aside>\n    </div>\n</section>\n<!-- Specific JS file declaration -->\n```\n\n**Les `--` indique une Sous-Partie du même Composant. Il est possible de créer autant de sous profondeur de Sous-Partie que souhaité.**\n\n*Note : Un Composant doit avoir au moins deux balises HTML imbriquées pour le représenter afin de pouvoir être totalement habillé avec du CSS de toutes les manières possible. [Voir ce CodePen](http://codepen.io/Haeresis/pen/bdXymY) (`.<name-of-component>--inner` est juste nommé `.ui`).*\n\n#### Boucler sur eux même ####\n\nUn composant peut boucler sur lui même afin d’apparaître comme une liste ou de lier son contenu à une liste d'élément en base de donnée. Un `<ul>` est grandement recommandé dans ce cas puisque chaque item est censé être identique dans sa structure de Composant (mais pas forcément de Contenu).\n\nExemple de Composant\n\n```html\n<!-- Specific CSS file declaration -->\n<section class=\"<name-of-component> ui\">\n    <div class=\"<name-of-component>--inner\">\n        <ul class=\"<name-of-component>--multiple\">\n            <!-- start loop -->\n            <li class=\"<name-of-component>--single\">\n                <h1><!-- Contents --></h1>\n                <!-- All HTML Here -->\n            </li>\n            <!-- some items -->\n            <li class=\"<name-of-component>--single\">\n                <h1><!-- Contents --></h1>\n                <!-- All HTML Here -->\n            </li>\n            <!-- some items -->\n            <li class=\"<name-of-component>--single\">\n                <h1><!-- Contents --></h1>\n                <!-- All HTML Here -->\n            </li>\n            <!-- end loop -->\n        </ul>\n    </div>\n</section>\n<!-- Specific JS file declaration -->\n```\n\n\n\n### Les Contenus ###\n\nLes Contenus se trouvent uniquement dans les Composants, dans les zones de contenu. Seul les Patrons de conception (Class Pattern) doivent être utilisés dans ses parties et documentés pour être également à la disposition des Content Filler. C'est par exemple le cas de [Bootstrap](http://getbootstrap.com/css/).\n\nIl y a donc cinq zones de Contenu dans ce Composant\n\n```html\n<section class=\"article ui\">\n    <div class=\"article--inner\">\n        <div class=\"article--text\">\n            <h2><!-- Content A Title --></h2>\n            <!-- Contents A Text -->\n            <div class=\"article--others\">\n                <ul class=\"article--others--list\">\n                    <li class=\"article--others--item\">\n                        <!-- Content B Image -->\n                        <div class=\"article--others--text\">\n                            <h2><!-- Contents B Title --></h2>\n                            <!-- Content B Text -->\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</section>\n```\n\nLes Contenus sont par exemple :\n\n*Content A Title*\n\n```html\n<span class=\"text-large reversed\">I'am the<br>Main Title</span>\n```\n\n*Content A Text*\n\n```html\n<h2 class=\"text-center\">I'am a Subtitle</h2>\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n<ul>\n    <li>Lorem ipsum dolor sit amet</li>\n    <li>Lorem ipsum dolor sit amet</li>\n</ul>\n```\n\n*Content B Image*\n\n```html\n<img src=\"source.png\" alt=\"I'am the Image Description\" class=\"img-responsive\">\n```\n\n*Content B Title*\n\n```html\nI'am an other Article\n```\n\n*Content A Text*\n\n```html\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n<p><button class=\"btn btn-hugh\">See more</button></p>\n```\n\n\n\n### Variation de classe ###\n\nIl y a beaucoup de prefixe de classe utilisés pour les variations de classe, en voici leur définition.\n\n- `as-*` : défini un comportement alternatif ou un rendu alternatif pour un Composant ou une Sous-Partie de composant. _Exemple: `class=\"<name-of-component> as-popup\"` peut signifier que le Composant standard `<name-of-component>` est affiché cette fois comme une popup. Ainsi en JavaScript, la classe `.as-popup` la possibilité d'afficher ou de masquer le Composant._\n\n- `with-*` : défini un comportement alternatif ou un rendu alternatif pour un Gabarit. _Exemple: `class=\"<name-of-layout> with-ads\"` peut signifier qu'un Background publicitaire peut-être affiché dans cette configuration._\n\n- `is-*` : défini un état alternatif sur un Composant ou une Sous-Partie de composant. _Exemple: `class=\"<name-of-component> is-opened\"` peut signifier que le Composant `<name-of-component>` est actuellement ouvert et visible. Ainsi en JavaScript, l'action du clique sur une zone précise peut enlever la classe `.is-opened` et par conséquent fermer le Composant._\n\n- `has-*` : défini un état alternatif sur un Composant ou une Sous-Partie de composant. _Exemple: `class=\"<name-of-component> has-more-one-item\"` peut signifier que le Composant `<name-of-component>` contient au moins deux éléments et qu'il doit s'afficher comme une liste._\n\n- `for-*` : défini un id sur un Composant parce que si un Composant est utilisé plus d'une fois dans le même Placeholder, il est important d'avoir une classe différente pour les différencier au besoin. _Exemple: `class=\"<name-of-component> for-article\"` peut signifier que le Composant est utilisé pour afficher du texte faisant office de contenu principale et `class=\"<name-of-component> for-aside\"` peut signifier tout autre chose._\n\n- `to-*` : défini une étape d'attente en début de changement d'état pour manager une animation. _Exemple: `class=\"<name-of-component> to-open\"` peut signifier que `<name-of-component>` est en état d'ouverture depuis son état fermé vers son état ouvert et qu'il faut démarrer une augmentation de l'opacité. Quand l'animation est fini, le `is-*` peut-être mis._ [Un exemple ici](http://codepen.io/Haeresis/pen/OyoOEV).\n\n- `from-*` : défini une étape d'attente pour manager une animation du retour à l'état initial. _Exemple: `class=\"<name-of-component> from-open\"` peut signifier que le Composant `<name-of-component>` va être fermé et qu'il est temps de diminuer l'opacité de l'élément. Quand l'animation est finie, les classes `is-*` et `from-*` sont retirées._ [Un exemple ici](http://codepen.io/Haeresis/pen/OyoOEV).\n\n**Toutes les Variations de classe doivent être documentées pour être utilisable par les Back-end.**\n\n\n\n### Lire et comprendre le nommage du DOM ###\n\n- Si vous voyez une classe sur `body` sans les autres prefix, C'est un nom de Gabarit.\n- Si vous voyez une classe immédiatement suivit de la classe `.ui` et sans les autres prefix, C'est un nom de composant.\n- Si vous voyez une classe finissant par `*--multiple` et `*--single` cela concerne un composant répétable.\n- Si vous voyez une classe contenant des `--`, c'est une Sous-Partie de composant.\n- Si vous voyez une classe avec le préfixe `.as-`, c'est un rendu et/ou un comportement alternatif sur un Composant par rapport à l'état standard.\n- Si vous voyez une classe avec le préfixe `.with-`, c'est un rendu et/ou un comportement alternatif sur un Gabarit par rapport à l'état standard.\n- Si vous voyez une classe avec le préfixe `.is-`, c'est la description d'un état de Composant ou Sous-Partie de composant alternatif.\n- Si vous voyez une classe avec le préfixe `.has-`, c'est la description d'un état de Composant ou Sous-Partie de composant alternatif.\n- Si vous voyez une classe avec le préfixe `.for-`, c'est pour un rendu ou comportement spécifique sur une unique version d'un Composant.\n- Si vous voyez une classe avec le préfixe `.to-`, c'est un état de transition vers un autre état.\n- Si vous voyez une classe avec le préfixe `.from-`, c'est un état de transition de retour à l'état initial.\n- Si vous ne voyez aucune des classes listées avant, c'est un Patron de conception.\n\n\n\n### Choisir la Sémantique de vos balise ###\n\nIl n'y au plus qu'un seul `<header>` et `<footer>` sous le `<body>`. Le `<h1>` principale ce trouve également dans cette partie. Sous le `<body>` il y a une hiérarchie de `<h1-h6>` avec un unique `<h1>` jusqu'à ce que vous trouviez une balise :\n\n- `<section>`,\n- `<article>`,\n- `<nav>` ou\n- `<aside>`.\n\nChacune de ces balises arrête la propagation de la hierarchie `<h1-h6>` des balises parente et commence leur propre hiérarchie de `<h1-h6>` (avec seulement un `<h1>`). Chacune de ces balises peuvent aussi avoir leur propre `<header>` et `<footer>`.\n\nDe manière à pouvoir rendre déplaçable et réutilisable chaque Composant, nous avons deux manières d'organiser notre structure.\n\n#### Sémantique sur le Gabarit ####\n\nIci on place `<section>`, `<article>`, `<nav>` et `<aside>` sur le Gabarit dans les aires réservées des PlaceHolder. Mais dans ce cas, seul des Composants commençant par des `<div>` peuvent être insérés.\n\n**Layout**\n\n```html\n<body class=\"products\">\n    <div class=\"layout\">\n        <section class=\"area for-overview\">\n            <!-- One Component Here -->\n        </section>\n    </div>\n</body>\n```\n\n**Component**\n\n```html\n<div class=\"product ui\">\n    <div class=\"product--inner\">\n        <header><!-- Content Title --></header>\n        <!-- Content Text -->\n    </div>\n</div>\n```\n\n**Contents**\n\n```html\n<h1>A product</h1>\n```\n\n```html\n<h2>Subtitle</h2>\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n```\n\n#### Sémantique dans le Composant ####\n\nIci on place `<section>`, `<article>`, `<nav>` et `<aside>` sur le Composant. Dans ce cas, un Composant ne peuvent pas être utilisé dans un autre type que celui pour lequel il est destiné.\n\n**Layout**\n\n```html\n<body class=\"products\">\n    <div class=\"layout\">\n        <div class=\"area for-overview\">\n            <!-- Multiple Component Here -->\n        </div>\n    </div>\n</body>\n```\n\n**Component**\n\n```html\n<section class=\"product ui\">\n    <div class=\"product--inner\">\n        <header><!-- Content Title --></header>\n        <!-- Content Text -->\n    </div>\n</section>\n```\n\n**Contents**\n\n```html\n<h1>A product</h1>\n```\n\n```html\n<h2>Subtitle</h2>\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\n```\n\n#### Gommer les inconvénient des deux approches ####\n\n[Vous trouverez dans cet article des pistes et une solution exemple pour embarquer le type du Composant sur lui-même tout en pouvant en changer en fonction de vos envies](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/#des-components-r-ellement-d-pla-able-partout).\n\n\n### Comment créer des Emails correctes ? ###\n\nPour permettre à vos emails HTML d'être lisible dans la plupard des clients mail, il est nécessaire de ne les réaliser qu'avec du HTML4 et d'utiliser des attributs HTML (voir des balises) à la place des attributs `style`.\n\nN'utiliser pas non plus de `<div>` brut utilisez une cascade de `<table>`, `<tr>`, `<td>` etc.\n\nPar exemple, n'utilisez pas `<div style=\"text-align: center\">` mais `<center>`. Pour créer une version HTML5 de vos emails HTML4 pour le web, vous pouvez les transformer automatiquement avec [NodeAtlas](https://github.com/Haeresis) par exemple.\n\n\n\n\n\n## Rôle et Utilisation du CSS ##\n\n### La Spécificité des Sélecteurs ###\n\nC'est l'aspect le plus fondamental du fonctionnement CSS et c'est celui qui pause le plus problème. Parceque les règles CSS sont comme des Variables Globales Mutables en JavaScript, car une propriété :\n\n- Peut **être redéfini**.\n- Il y a un **Niveau de Spécifité** pour chaque sélecteur (voir [les règles](https://www.w3.org/TR/css3-selectors/#specificity)). En cas de spécificité égale sur deux règles s'appliquant sur le même élément : c'est la place des lignes qui compte.\n- L'**Ordre** de la CSS a une importance.\n\n**Exemple**\n\n| Sélecteur                | Spécificité | Description                     |\n|--------------------------|------------:|---------------------------------|\n| `*`                      |   0.0.0.0   | tout                            |\n| `li`                     |   0.0.0.1   | tag                             |\n| `ul li`                  |   0.0.0.2   | tag + tag                       |\n| `li::first-letter`       |   0.0.0.2   | tag + pseudo-element            |\n| `ul li div`              |   0.0.0.3   | tag+ tag + tag                  |\n| `.teal`                  |   0.0.1.0   | class .                         |\n| `li:nth-child(1)`        |   0.0.1.1   | pseudo-class . tag              |\n| `ul + *[rel=up] li`      |   0.0.1.2   | all + attribut . tag + tag      |\n| `li.red.level`           |   0.0.2.1   | class + class . tag             |\n| `ul.blue ol li.blue`     |   0.0.2.3   | class + class . tag + tag + tag |\n| `li.orange.orange.level` |   0.0.3.1   | class + class + class . tag     |\n| `#my-id`                 |   0.1.0.0   | id . .                          |\n| `#my-id.teal`            |   0.1.1.0   | id . class                      |\n| `#my-id.teal`            |   1.1.0.0   | **inline** . id .               |\n\n[Voir des exemples Live](http://codepen.io/Haeresis/pen/oLzdaR)\n\nEt si le mot clé `!important` est ajouté à la fin de n'importe quelle valeur de propriété elle passe devant toute autre. Soyez prudent en l'utilisant ([voici un cas d'utilisation justifié](http://codepen.io/Haeresis/pen/JYRLgr)).\n\n\nVous pouvez [voir la spécificiter des sélecteurs grace à cet outil](https://specificity.keegan.st/).\n\n\n\n### Deux approches d'utilisation du CSS ###\n\nIl y a deux façons d'appliquer des styles CSS sur du HTML. La manière CSS-Driven ou piloté par la feuille de style ou la manière HTML-Driven ou piloté par les Classes dans les balises HTML.\n\n**CSS-Driven**\n\nNous avons une structure HTML figée. Nous nommons tous les éléments de notre structure\n\n```html\n<section class=\"<name-of-component> ui\">\n    <div class=\"<name-of-component>--inner\">\n        <div class=\"<name-of-component>--text\">\n        </div>\n    </div>\n</section>\n```\n\npour pouvoir y faire référence depuis la feuille CSS. C'est une approche type BEM.\n\n```css\n.<name-of-component>--inner {\n    font-weight: bold;\n}\n```\n\nNous venons d'habiller une partie HTML.\n\n**HTML-Driven**\n\nNous avons une feuille CSS figée. Nous nommons nos règles de manière à créer des Patrons de conception (Class Pattern)\n\n```css\n.bold {\n    font-weight: bold;\n}\n```\n\nde manière à pouvoir les appliquer comme on le souhaite sur une structure HTML éditable.\n\n```html\n<p class=\"bold\">Lorem ipsum</p>\n```\n\nNous avons créer le Patron de conception `.bold`.\n\n#### Comment appliquer chaque approche ? ####\n\nLe plus important est de ne jamais enfermer les composants HTML dans des « Pattern emprisonnant » car vous ne pourrez pas l'habiller avec du sens dans un autre contexte.\n\nD'un autre côté, parceque les Content Fillers ne doivent jamais toucher au fichier CSS, il est important de leur créer des Patrons de conception pour le contenu. Sachez que via des balises `<style>` ou attribut `style` il est tout à fait acceptable qu'un Content Filler altère de l'affichage **dans une zone de contenu**.\n\nPour finir, pour les Gabarits de page, les deux approches sont envisageable, cela dépend se si votre système gère plus facilement le changement de Gabarit (Layout) ou le changement de CSS si vous souhaitez utiliser différentes grilles.\n\n\n\n### Less/Stylus vous aide à utiliser Bootstrap ###\n\nVotre meilleur ami pour la maintenance des feuilles CSS et pour garder votre HTML le plus clair possible est [Less](http://lesscss.org/) ou encore [Stylus](http://stylus-lang.com/).\n\nIl est possible de manager les deux avec [NodeAtlas](https://www.npmjs.com/package/node-atlas) avec ses simples `webconfig.json`\n\n```\n{\n    \"enableLess\": true,\n    \"assetsRelativePath\": \"/\"\n}\n```\n\nou\n\n```\n{\n    \"enableStylus\": true,\n    \"assetsRelativePath\": \"/\"\n}\n```\n\nplacés à la racine de votre dossier de site. Et avec la commande CLI `nodeatlas --browse`.\n\n#### Exemple de Less pour les Gabarits, Composants et Contenus ####\n\nDans le but d'habiller le HTML suivant :\n\n```html\n<section class=\"follow-me ui <!-- Variation Class -->\">\n    <div class=\"follow-me--inner\">\n        <div class=\"follow-me--image\">\n            <!-- Content Image -->\n        </div>\n        <div class=\"follow-me--text\">\n            <!-- Content Text -->\n        </div>\n    </div>\n</section>\n```\n\nvous pourrez utiliser l'implémentation Less suivante dans le fichier `component.follow-me.less` :\n\n```less\n/* Import Bootstrap Class Pattern. */\n@import (reference) 'bootstrap/bootstrap.less';\n\n/* Import your own Class Pattern. */\n@import (reference) 'common.less';\n\n/* Name your Component. */\n@componentName: e('.follow-me');\n\n/* Outer Wrapper Design. */\n@{componentName} {\n\n    /* Initial State. */\n    display: none;\n\n    /* Opened State. */\n    &.is-opened {\n        display: block;\n    }\n\n    /* Clickable State. */\n    &.is-closable {\n        cursor: pointer;\n    }\n\n    /* ... */\n\n    /* Overload of Class Pattern for this Component. */\n    .arrowed {\n        /* ... */\n        span {\n            /* ... */\n        }\n    }\n    .gap {\n        /* ... */\n    }\n\n    /* Inner Wrapper Design. */\n    &--inner {\n        /* ... */\n    }\n\n    /* Subcomponent Design. */\n\n    &--image {\n        .make-md-col(4);\n        /* ... */\n    }\n\n    &--text {\n        .make-md-col(8);\n        /* ... */\n    }\n\n    &--close,\n    /* Custom Component Class Pattern usable into Content part. */\n    .close {\n        /* ... */\n    }\n\n    /* Variation of this Component. */\n    &.as-v1 {\n        @{componentName}--inner {\n            background-color: #da5daf;\n        }\n        @{componentName}--text {\n            border: 1px solid #85214d;\n        }\n        /* ... */\n    }\n    &.as-v2 {\n        @{componentName}--inner {\n            background-color: #80a837;\n        }\n        @{componentName}--text {\n            border: 1px solid #3e6618;\n        }\n        /* ... */\n    }\n    &.as-v3 {\n        @{componentName}--inner {\n            background-color: #ed9364;\n        }\n        @{componentName}--text {\n            border: 1px solid #d6401c;\n        }\n        /* ... */\n    }\n}\n```\n\net avec ce fichier `common.less` par exemple\n\n```less\n/* Same design on all browser. */\n@import 'helpers/normalize.less';\n\n/* Use icones. */\n@import 'font-awesome/font-awesome-regular.less';\n\n/* Bootstrap Lib. */\n@import (reference) 'bootstrap/bootstrap.less';\n\n/* Font Awesome Lib. */\n@import (reference) 'font-awesome/font-awesome.less';\n\n/* Use more Font. */\n@import (css) 'https://fonts.googleapis.com/css?family=Muli';\n\n/* Just import Bootstrap Class Pattern you needed. */\n.text-center {\n    .text-center;\n}\n.text-left {\n    .text-left;\n}\n.text-right {\n    .text-right;\n}\n.img-responsive {\n    .img-responsive;\n    display: inline-block;\n}\n\n/* Your own Class Pattern for Content. */\n.arrowed {\n    /* ... */\n    span {\n        /* ... */\n    }\n}\n.gap {\n    /* ... */\n}\n\n/* Your Layout Implementation */\n.products {\n    &.for-overview {\n        .make-sm-col(8);\n    }\n    &.for-aside {\n        .make-sm-col(4);\n    }\n}\n\n/* ... */\n```\n\n\n\n### Inclusion par Référence ###\n\nPour Less, si vous importez en utilisant `@import (reference)` au lieu de simplement utiliser `@import` vous génèrerez dans le fichier de sortie uniquement le fragment de CSS souhaité en provenance de votre liste de Patron de conception. Par exemple avec la librairie Bootsrtap, vous pouvez importer tous les Patrons `col-XX-YY` par exemple. [Cela peut grandement alléger vos feuilles CSS](https://blog.lesieur.name/bootstrap-lisibilite-proprete-performance-optimisation-c-est-possible/).\n\n\n\n### La spécificité d'un sélecteur ne doit pas être trop lourde ##\n\n#### Sélectionner directement la cible ####\n\nVous devez accéder à un élément par sa classe :\n\n```less\n@{componentName} {\n    &--others--item {\n        /* Apply style */\n    }\n}\n// CSS\n// .article--others--item { /* Apply style */ }\n```\n\n#### Sélectionner un seul élément sans classe par sélecteur ####\n\nIl est possible qu'il y ai des éléments sans classes dans les Composants ou Sous-composants. Il devrait être permi de ne faire référence qu'à un, et un seul élément.\n\nCeci est autorisé\n\n```less\n@{componentName} {\n    &--others--item {\n        a {\n            /* Apply style */\n        }\n        span {\n            /* Apply style */\n        }\n    }\n}\n// CSS\n// .article--others--item a { /* Apply style */ }\n// .article--others--item span { /* Apply style */ }\n```\n\nmais ceci n'est PAS autorisé...\n\n```less\n@{componentName} {\n    &--others--item {\n        a {\n            /* Apply style */\n            span {\n                /* Apply style */\n            }\n        }\n    }\n}\n// CSS\n// .article--others--item a { /* Apply style */ }\n// .article--others--item a span { /* Apply style */ } // Too specified selector.\n```\n\nC'est mal. Vous devez ajouter dans ce cas des classes sur vos éléments pour directement pouvoir intéragir avec eux.\n\n```less\n@{componentName} {\n    &--others--item--span {\n        /* Apply style */\n    }\n}\n// CSS\n// .article--others--item--span { /* Apply style */ }\n```\n\nou (un élément sans classe autorisé)\n\n```less\n@{componentName} {\n    &--others--item {\n        span {\n            /* Apply style */\n        }\n    }\n}\n// CSS\n// .article--others--item--link span { /* Apply style */ }\n```\n\n#### Ajouter des Variations de classe pour changer le design ####\n\nVous pouvez améliorer la précision de la sélection en utilisant une Variation de classe.\n\nSur un Composant\n\n```less\n@{componentName} {\n    &.is-opened {\n        /* Apply style */\n    }\n}\n// CSS\n// .article.is-opened { /* Apply style */ }\n```\n\nou un Sous-Composant\n\n```less\n.is-opened {\n    @{componentName}--others--item--link  {\n        span {\n            /* Apply style */\n        }\n    }\n}\n// CSS\n// .is-opened .article--others--item--link span { /* Apply style */ }\n```\n\n*Note : Le code ci-dessous produit la même sortie que celui au dessus.*\n\n```less\n.is-opened {\n    @{componentName} {\n        &--others\n            &--item\n                &--link {\n                    span {\n                        /* Apply style */\n                    }\n                }\n            }\n        }\n    }\n}\n// CSS\n// .is-opened .article--others--item--link span { /* Apply style */ }\n```\n\n*La règle est la suivante : écrire en une seule ligne les composantes du sélecteur si il n'y a aucun sous-élément voisin utilisant le même chemin à référencer, sinon créer un nouveau sous bloque comme ci-dessous*\n\n```less\n.is-opened {\n    @{componentName}--others--item {\n        &--image  {\n            /* A new sibling Subcomponent */\n        }\n        &--link  {\n            span {\n                /* Apply style */\n            }\n        }\n    }\n}\n// CSS\n// .is-opened .article--others--item--image { /* A new sibling Subcomponent */ }\n// .is-opened .article--others--item--link span { /* Apply style */ }\n```\n\n\n\n\n\n## Rôle et Utilisation du JS ##\n\nDans le but de produire du code performant et maintenable, vous devriez passer à travers un outil comme JSLint et obtenir une sortie sans erreur. Si vous utilisez Sublim Text, vous pouvez installer [SublimeLinter-contrib-jslint](https://github.com/devdoc/SublimeLinter-jslint) pour éviter toute mauvaise pratique.\n\n\n\n### Règles et Patterns ###\n\n#### Éviter la surchauffe de cerveau (Brain Overload) ####\n\nPour commencer, observer autant que possible les règles suivantes :\n\n- Un fichier ne doit pas dépasser les 1000 lignes (commentaires inclus).\n- Une fonction ne doit pas dépasser les 100 lignes (commentaires inclus).\n- La complexité d'une fonction ne doit pas dépasser 10 [Tester la Complexité](http://jshint.com/).\n- Il ne doit pas y avoir plus de 3 niveaux de if/else/swich/try/etc. sans qu'on ai recours à une fonction.\n\n#### Déclarer tout ce que vous utilisez dans la page, et son usage ####\n\nDans tous les fichiers JavaScript Client, toutes les variables doivent être explicitement déclarée, même si vous savez que l'exécuteur JavaScript connait cette valeur par défaut ou qu'un autre fichier l'a déjà défini. Il est important de savoir ce qui va être utilisé à travers le fichier et de permettre le plus possible de pouvoir vous passer d'un ordre précis dans l'exécution des fichiers.\n\n**Exemple**\n\n```js\n/* jslint browser: true */\n/* global $ */\n\n// Define your usage of global object.\nvar website = website || {},\n\n    // Define your usage of `jQuery window` shortcut for this file.\n    $window = $window || $(window);\n\n// Define your usage of `website.component` namespace.\nwebsite.components = website.components || {};\n```\n\nObservez que seulement un `var` est déclaré au sommet de chaque fonction, pas plus. Si vous définissez vos variables dans le Champ lexical globale (Global Scope), attachez les à `window` ou définissez les dans le `var` global de votre fichier.\n\nLe Namespace global `website` va contenir tout le code JavaScript de votre site web. N'hésitez pas à utiliser `app` ou encore `application` si c'est une application web et non pas une simple page.\n\n#### Utiliser des Closure pour garder le champ lexical global propre ####\n\nLe code ci-dessus est défini dans le Champ lexical global. Si vous écrivez du code dans un fichier, n'écrivez jamais directement dans le Champ lexical global. Il y a deux manière de garder le Champ lexical global propre.\n\n##### Avec une Closure Statique Anonyme #####\n\nSi le code n'a pas besoin d'être instancié, faites juste comme ci-après. C'est le cas des controllers comme `common.js`.\n\n```js\n// Create a closure to scope all variables or function invisible from global scope.\n(function () {\n    \"use strict\";\n\n    var iAmAPrivateVariable_ForPublicExpositon = \"\",\n        iAmAPrivateVariable = \"\";\n\n    // No accessible in global scope.\n    iAmAPrivateVariable = \"i am only accessible in this closure\";\n\n    // Accessible to global scope with `website.iAmAPublicVariable`.\n    website.iAmAPublicVariable = iAmAPrivateVariable_ForPublicExpositon;\n}());\n```\n\nou exposé votre variable publique quand vous créer la Closure (ici `website` est publique et `publics` n'est accessible que dans la closure).\n\n```js\n// Pass an alias of `website` named `publics` only in this closure.\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    // Private Example\n    privates.addClassIsLoaded = function (view) {\n        view.classList.add(\"is-loaded\");\n    }\n\n    // Public Example\n    publics.loadComponents = function () {\n        /* See this part later */\n    };\n\n}(website));\n```\n\n##### Avec new Class #####\n\nS'il est important que le code puisse être instancié en fonction d'un contexte donné, créer une Classe est le mieux. Pour ne pas polluer le Champ lexical global, attachez la Class à un Namespace comme `website.components`.\n\n```js\nwindow.website = window.website || {};\nwebsite.components = website.components || {};\n\n// Create a Class for define JavaScript behavior of `<div class=\"lightbox\"></div>`.\nwebsite.components.Lightbox = function callee(selector) {\n    \"use strict\";\n\n    // Create private namespace for instanciable function (publics)\n    // and inner function (privates).\n    var publics = this,\n        statics = callee.prototype,\n        privates = {};\n\n    // Count number of instance for Lightbox.\n    statics.nbrOfInstance = (statics.nbrOfInstance) ? statics.nbrOfInstance + 1 : 1;\n    callee.nbrOfInstance = statics.nbrOfInstance;\n\n    // Define the selector by default for the HTML view of this Class.\n    publics.selector = selector || \".information\";\n\n    // Define all stuff to manage lightbox.\n    privates.openLightbox = function () { /* ... */ };\n    privates.moveLightbox = function () { /* ... */ };\n    privates.closeLightbox = function () { /* ... */ };\n\n    // Define a function to launch all mandatory behavior when a HTML view is parsed.\n    publics.init = function () {\n\n        // Set all function you want use to initialization.\n        privates.openLightbox();\n        privates.moveLightbox();\n        privates.closeLightbox();\n    };\n};\nwebsite.components.Lightbox.nbrOfInstance = 0;\n```\n\nEt initialisez tous les `<div class=\"lightbox\"></div>`\n\n```js\nvar Lightbox = website.components.Lightbox;\n(new Lightbox()).init();\n```\n\nou initialisez tous les `<div class=\"popup\"></div>`\n\n```js\nvar Lightbox = website.components.Lightbox;\n(new Lightbox(\".popup\")).init();\n```\n\nou initialisez `<div class=\"ads\"></div>`\n\n```js\nvar Lightbox = website.components.Lightbox,\n\tlightbox = new Lightbox();\nlightbox.selector = \"ads\";\nlightbox.init();\n```\n\nou comptez le nombre d'instance avec\n\n```js\nvar Lightbox = website.components.Lightbox,\n\tlightbox = new Lightbox();\nLightbox.nbrOfInstance; // 4\nlightbox.nbrOfInstance; // 4\n```\n\nou créer une fonction tierce...\n\n```js\n// This code is a focus on `website.loadComponents()` defined above.\npublics.loadComponents = function () {\n    var i, currentComponent, currentViews;\n\n    // Loop on all components\n    for (i in website.components) {\n\n        // Never forgot to use `hasOwnProperty` to not display other thing that personal object key.\n        if (website.components.hasOwnProperty(i)) {\n\n            // Work on current Component.\n            currentComponent = new website.components[i]();\n\n            // Obtain all `<div class=\"<currentComponent.selector>\"></div>`\n            currentViews = document.querySelectorAll(currentComponent.selector + \":not(.is-opened)\");\n            if (currentViews.length > 0) {\n\n                // Initialize Component.\n                allComponentsInstance.push(currentComponent.init());\n\n                // Tag this component as already initialize.\n                [].forEach.call(currentViews, addClassIsLoaded); // see before for \"addClassIsLoaded\" definition.\n            }\n        }\n    }\n};\n```\n\n...pour charger tous les composants que vous avez créer de cette manière :\n\n```\nwebsite.loadComponents();\n```\n\nEt si plutard, vous souhaitez ajouter `<div class=\"lightbox\"></div>` au DOM par XMLHttpRequest (Ajax), vous serez capable d'appliquer le JavaScript suivant :\n\n```js\nvar Lightbox = website.components.Lightbox;\n(new Lightbox(\".information:not(.is-loaded)\")).init();\n```\n\net de charger dès lors tous les composants (non déjà chargé) avec :\n\n```js\nwebsite.loadComponents();\n```\n\n#### Use Strict ####\n\nLe Champ lexical global (Global Scope) est une zone sauvage ou toutes les variables vont entrer en conflit ainsi la moindre chose décraré dans un Champ lexical dédié (Closure) est une bonne chose. C'est le but des fonctions anonyme comme :\n\n```js\n(function () {\n    \"use strict\";\n\n    // ...\n}())\n```\n\nmais pourquoi utiliser le « strict mode » avec `\"use strict\";` ?\n\nLes exécuteurs JavaScript acceptent toute sorte de manière d'écrire du JavaScript ainsi que du code qui n'a pas été standardisé, du code déprécié ou du code non optimisé dans le but de supporter du code JavaScript ancien. Pour ne pas permettre à l'exécuteur de faire tourner du vieux code étrange et de lever une Exception pour aider au développement, il faut ajouter `\"use strict\";` et toutes les variables dans le champ lexical courant (le contexte d'exécution courant) ainsi que les contextes enfants vont lever une Exception si le code ne respecte pas les standards. C'est une bonne pratique de nos jours, ne l'oubliez pas pour ne pas exécuter du code démoniaque !\n\n*Note : vous pouvez aussi l'utiliser dans une fonction nommée ou à instancier ainsi que dans le champ lexical global si vous le souhaitez.*\n\n#### Plus de règle JavaScript ####\n\nPour respecter toutes les règles, suivez ces règles : [Quality JavaScript Rules](http://nemo.sonarqube.org/coding_rules#languages=js)\n\n\n\n### Changement d'État des Éléments ###\n\nSi vous souhaitez changer l'état d'un élément, vous pouvez le faire en suivant les étapes suivantes :\n\n#### Standard ####\n- Créer une classe `.is-*` avec tout le changement de design associé dans votre fichier CSS (ou Less/Stylus).\n- Ajouter la classe `is-*` ou retirez là de l'élément en question pour changer son état.\n- Vérifier l'existance de `is-*` pour savoir dans quel état est actuellement l'élément.\n\n#### Avec Animation ####\n- Utiliser avant la classe `is-*` une classe `to-*` pour démarrer l'animation de transition entre deux états.\n- Utiliser après la classe `is-*` une classe `from-*` s'il existe une transition de retour à l'état précédent.\n- Utiliser les propriétés CSS3 keyframe, animation, transform, etc. pour créer des animations sur des éléments dont les paramètres sont statics. Utiliser une librairie d'animation si les valeurs sont variables en fonction du contexte.\n\n#### Exemple ####\n\nTrouvez dans cet exemple comment permettre un changement d'état animé : [Change Element State](http://codepen.io/Haeresis/pen/OyoOEV).\n\n\n\n### Validation de Formulaire ###\n\nPour valider un formulaire il n'est pas nécéssaire d'écrire une seule ligne de JavaScript dans la majorité des cas. Utilisez juste ses trois fichiers :\n\n- [jQuery](http://jquery.com/) [//code.jquery.com/jquery-2.1.4.min.js](//code.jquery.com/jquery-2.1.4.min.js) (Utilisez comme une librairie pour wrapper élément Nodes dans le DOM).\n- [jQuery Validation Plugin](http://jqueryvalidation.org/) [//cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js](//cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js) (Applique différentes règles pré-définies sur les champs souhaités)\n- [jQuery Validation Unobstrusive Plugin](https://www.nuget.org/packages/jQuery.Validation.Unobtrusive/) [//ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.min.js](//ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.min.js) (Applique automatiquement les règles en ciblant les éléments avec l'attribut `data-*`).\n\n*Note: ce couple de fichier fonctionne ensemble mais si vous utilisez la dernière version pour l'un, en cas de problème, utilisez la dernière version pour les deux autres.*\n\nVous trouverez ici un cas d'usage complet de l'utilisation de chaque champ : [Exemple d'utilisation avec chaque champ](http://codepen.io/Haeresis/pen/AzJgF/)\n\nEt si un champ est injecté plus tard dans le DOM, **après** l'inclusion du fichier unobstrusive, utilisez `$.validator.unobtrusive.parse(<selectorForm>);` pour faire fonctionner les nouveaux formulaires/champs avec unobstrusive.\n\nSi une validation est plus complexe, vous pouvez trouver [la documentation de jQuery Validate ici](http://jqueryvalidation.org/documentation/) ou vous tourner vers un Data Binder comme [Angular](https://angularjs.org/).\n\n\n\n### Étendre une Classe ###\n\nQuand vous souhaitez étendre une classe depuis une autre (héritage), vous devez en plus d'étendre la classe, bien penser a étendre les fonctions de son prototype. Si une classe doit hériter de plusieurs classe, alors ce que vous souhaitez est une interface (voir plus loin).\n\nQuand votre classe est un model pour une vue HTML, ajoutez la dans `website.components` mais si c'est purement une classe de model de donnée, ajoutez là dans `website.models`.\n\nEssayons donc d'étendre cette classe par celle-ci :\n\n**Class Person**\n\n```js\n/* jslint browser: true */\n\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\nwebsite.models.Person = function (firstname, lastname) {\n    this.firstname = firstname || \"No firstname\";\n    this.lastname = lastname || \"No lastname\";\n};\nwebsite.models.Person.prototype.age = \"No age\";\n```\n\n**Class User**\n\n```js\n/* jslint browser: true */\n\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\nwebsite.models.User = function (id, password, firstname, lastname) {\n    website.models.Person.call(this, firstname, lastname);\n\n    this.id = id;\n    this.password = password;\n};\nwebsite.models.User.prototype = Object.create(website.models.Person.prototype);\nwebsite.models.User.prototype.constructor = website.models.User;\n```\n\n**Controller**\n\n```js\n/* jslint browser: true */\n\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\n(function () {\n    var user = new website.models.User(\"Haeresis\", \"myPassword\");\n    user.age = 18;\n\n    user.id; // \"Haeresis\"\n    user.password; // \"myPassword\"\n    user.firstname; // \"No firstname\"\n    user.lastname; // \"No lastname\"\n    user.age; // 18\n}());\n```\n\n\n\n### Implementer un Mixin ###\n\nQuand une fonction est utilisable par plus d'une fonction anonyme, n'hésitez pas à la placer dans le namespace `website` comme `loadComponents` dans l'exemple précédent.\n\n\nMais quand une fonction est partagée par plus d'une classe, vous pouvez créer cette fonction dans des interfaces ou mixins et l'implémenter dans les différentes classes. Un mixin est comme une classe mais son usage est uniquement d'étendre une classe, jamais d'être instanciée elle-même.\n\nAinsi nous pouvons implémenter ces deux mixins dans cette classe.\n\n**Interface Age**\n\n```js\n/* jslint browser: true */\n\nvar website = window.website || {};\nwebsite.mixins = website.mixins || {};\n\nwebsite.mixins.Age = function () {\n    this.age = \"18\";\n};\n```\n\n**Interface Firstname**\n\n```js\n/* jslint browser: true */\n\nwindow.website = window.website || {};\nwebsite.mixins = website.mixins || {};\n\nwebsite.mixins.Firstname = function () {\n    this.firstname = \"Bruno\";\n};\n```\n\n**Class Person**\n\n```js\n/* jslint browser: true */\n\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\nwebsite.mixins = website.mixins || {};\n\nwebsite.classes.Person = function () {\n    website.mixins.Firstname.call(this);\n    website.mixins.Age.call(this);\n\n    var publics = this;\n\n    publics.lastname = \"Lesieur\";\n};\n```\n\n*Note : si un même nom de propriété ou de fonction existe entre deux interfaces, c'est la dernière interface chargée qui remporte le conflit !*\n\n**Controller**\n\n```js\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\n(function () {\n    var person = new website.models.Person();\n\n    person.lastname; // \"Lesieur\"\n    person.firstname; // \"Bruno\"\n    person.age; // 18\n}());\n```\n\n\n\n### Travailler sans Namespace ###\n\nSi nous attachons tout dans le namespace `website` c'est pour ne pas entrer en conflit avec des classes déjà existantes. Le pattern pour éviter les conflits est d'exposer une méthode `noConflict()` dans la classe directement définie dans le scope `global`.\n\nVoir plus bas:\n\n```js\n(function (factory) {\n    var initialClass = window.MyClass,\n        api = window.MyClass = factory;\n    api.noConflict = function () {\n        window.MyClass = initialClass;\n        return api;\n    };\n}(function () {\n    // Standard definition of class here.\n}));\n```\n\net si la classe globale `MyClass` existe déjà, utilisez un nouveau nom de classe avec la méthode `noConflict()` pour restaurer l'objet `MyClass` d'origine.\n\n```js\nvar MyClass2 = MyClass.noConflict();\n```\n\n\n\n### Classe pour environnement Multiple ###\n\nDans le but de permettre à la classe `MyClass` de fonctionner aussi bien avec Vanilla JS, un loader de module JS ou Node.js, créez une `factory` comme ci-après.\n\n```js\n(function (root, factory) {\n\tvar root.MyClass = factory;\n    if (typeof define === \"function\" && define.amd) {\n        define(function () {\n            return factory;\n        });\n    }\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = factory;\n    }\n}(this, function () {\n    // Normal definition of class here.\n}));\n```\n\n\n\n### Autres Comportements ###\n\n#### Getter, Setter et Chaînage ####\n\nUn pattern de chaînage (populaire en jQuery par exemple), consiste à fournir une référence aux propriétés privées d'une classe instanciée depuis l’extérieur. La méthode utilisée renvoi la valeur souhaitée en mode Getter et permet de la modifier en mode Setter. En mode Setter, l'objet alors retourné n'est pas la valeur mais l'objet instancié pour permettre « le chaînage ».\n\n**Class**\n\n```js\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\nwebsite.models.Person = function (firstname, lastname) {\n    var publics = this,\n        privates = {};\n\n    privates.firstname = (firstname) ? publics.firstname(firstname) : \"No firstname\";\n    privates.lastname = (lastname) ? publics.lastname(lastname) : \"No lastname\";\n\n    publics.firstname = function (firstname) {\n        if (typeof firstname === \"undefined\") {\n            return privates.firstname;\n        } else {\n            privates.firstname = firstname;\n            return publics;\n        }\n    };\n\n    publics.lastname = function (lastname) {\n        if (typeof lastname === \"undefined\") {\n            return privates.lastname;\n        } else {\n            privates.lastname = lastname;\n            return publics;\n        }\n    };\n};\n```\n\n**Controller**\n\n```js\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\n(function () {\n    var person = (new website.models.Person())\n        .firstname(\"Bruno\")\n        .lastname(\"Lesieur\");\n\n    console.log(person.firstname()); // \"Bruno\"\n    console.log(person.lastname()); // \"Lesieur\"\n}());\n```\n\n#### Forcer le contexte d'exécution ####\n\nVous pouvez forcer une classe a ne jamais permettre un autre contexte d'exécution que le sien d'être utilisé. Cela vous permet de ne pas utiliser le mot clé `new` depuis un appel extérieur.\n\n**Class**\n\n```js\nvar website = window.website || {};\nwebsite.models = website.models || {};\n\nwebsite.models.Person = function callee(firstname, lastname) {\n    if (!(this instanceof callee)) {\n        return new callee();\n    }\n\n    this.firstname = firstname || \"No firstname\";\n    this.lastname = lastname || \"No lastname\";\n};\n```\n\n**Controller**\n\n```js\nvar website = window.website || {};\nwebsite.models = website.models || {};\n\n(function () {\n    (new website.models.Person() instanceof website.models.Person); // true\n    (website.models.Person() instanceof website.models.Person); // true\n}());\n```\n\n\n### Gérer les erreurs ###\n\nIl y a 3 manières de proprement lever les erreurs, pour un code synchrone, un code asynchrone ou un événement : [voir par ici](https://blog.lesieur.name/gerer-les-erreurs-et-les-exceptions-en-javascript/).\n\n\n\n### Documentation ###\n\nDe manière à documenter votre code, utilisez le [JSDoc npm CLI](https://www.npmjs.com/package/jsdoc). Vous trouverez tout [ce qu'il vous faut pour la documentation ici](http://usejsdoc.org/).\n\n- [Un exemple avec ce faux site Munchkin](https://www.lesieur.name/test-case-atlas/) et [son code source](https://github.com/Haeresis/TestCaseAtlas).\n\nPar exemple la page « [Home](https://www.lesieur.name/test-case-atlas/homepage.html) » possède le composant « [Hero](https://www.lesieur.name/test-case-atlas/components/hero.html) » qui est documenter [pour le CSS](https://www.lesieur.name/test-case-atlas/documentation/design/hero.html) et [pour le JS](https://www.lesieur.name/test-case-atlas/documentation/behaviors/module-munchkin-ws.ui.Hero.html).\n\n*Première parution : le 08 Octobre 2015 à 17h48*", "dates" : { "published" : { "$date" : 1475750880000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "article ul ul {\n    margin-top: 0;\n    margin-bottom: 16px;\n}\n.invisible {\n    clear: left;\n    height: 0;\n    border: 0;\n}\n.ex-css {\n    float: left;\n    width: calc(100% - 24px);\n    margin: 0 6px 6px; padding: 0 6px;\n}\n.ex-subcomponent,\n.ex-layout,\n.ex-sublayout,\n.ex-component {\n    position: relative;\n    -webkit-box-sizing: border-box;\n       -moz-box-sizing: border-box;\n            box-sizing: border-box;\n    float: left;\n    width: calc(100% - 24px);\n    -webkit-hyphens: auto;\n       -moz-hyphens: auto;\n        -ms-hyphens: auto;\n            hyphens: auto;\n    overflow: hidden;\n}\n.ex-subcomponent:after,\n.ex-layout:after,\n.ex-sublayout:after,\n.ex-component:after {\n    -webkit-hyphens: auto;\n       -moz-hyphens: auto;\n        -ms-hyphens: auto;\n            hyphens: auto;\n    overflow: hidden;\n}\n\n.ex-layout { z-index: 2; margin: 12px; padding: 11px; border: 1px solid #98C379; position: relative; }\n.ex-layout:before { position: absolute; top: 0; left: 4px; content: \"Gabarit\"; color: #98C379; }\n\n.ex-sublayout { z-index: 2; margin: -12px; padding: 11px; border: 1px dashed #98C379; position: relative; width: calc(100% + 24px); }\n.ex-sublayout:before { position: absolute; top: 0; right: 4px; content: \"Sous-Gabarit\"; color: #98C379; }\n\n.ex-component { z-index: 1; margin: 12px; padding: 11px; border: 1px solid #E06C75; position: relative; }\n.ex-component:before { position: absolute; top: 0; left: 4px; content: \"Composant\"; color: #E06C75; }\n\n.ex-subcomponent { z-index: 3; margin: -12px; padding: 11px; border: 1px dashed #E06C75; position: relative; width: calc(100% + 24px); }\n.ex-subcomponent:before { position: absolute; top: 0; right: 4px; content: \"Sous-Composant\"; color: #E06C75; }\n\n.ex-data { z-index: 3; margin: 12px; padding: 11px; border: 1px solid #ABB2BF; position: relative; }\n.ex-data:before { position: absolute; top: 0; left: 4px; content: \"Contenu\"; color: #ABB2BF; }\n\n.article table {\n  border-collapse: collapse;\n  width: 100%;\n}\n.article th,\n.article td {\n    border: solid 1px #ccc;\n    padding: 4px;\n}\n.two tr :first-child {\n    position: relative;\n}\n.three tr :nth-child(2) {\n    position: relative;\n}\n.article tr .opssec {\n    position: relative;\n    z-index: 2;\n}\n.article tr .bar {\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #ddd;\n}\n.article th:empty {\n    visibility: hidden;\n}\n.article img {\n    max-width: 100%;\n}", "title" : "Séparations et mise en application des rôles du HTML / CSS / JavaScript", "urn" : "conventions-html-css-js-et-architecture-front-end" }
{ "__v" : 0, "_id" : { "$oid" : "56c4274bd1b7fe136fc2005b" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48ce" }, { "$oid" : "56c4ad05675345bb2d63fcec" }, { "$oid" : "54f042102ae5a068f260dae2" } ], "content" : "AngularJS est un régale pour toute création d'Application Web de petite et moyenne taille. J'entends par là, des ensembles d'interfaces web ou l'utilisateur est sollicité à participer au remplissage de contenu par l'intermédiaire de champs, listes, boutons, etc.\n\n<div style=\"text-align: center;\"><img src=\"media/images/upload/AngularJS-large.png\" alt=\"AngularJS\" style=\"max-width: 100%;\"></div>\n\nLe principe est le suivant : sortir le contenu utile du HTML pour le ranger dans un scope JavaScript afin de le manipuler plus aisément et parsemer le HTML de référence à ce scope de contenu. L'avantage est que le contenu a sa propre vie, et n'est plus figé dans le HTML et surtout **toute mise à jour de contenu dans le JavaScript entraîne sa mise à jour dans le HTML**, bien pratique.\n\nLe revers de la médaille est que la source HTML mangée par les moteurs de recherche pour le référencement ne ressemble plus qu'à un ensemble de variables, et les balises et attributs HTML rencontrés font pâlir n'importe quel validateur W3C.\n\nC'est parti pour un tutoriel vous expliquant comment contenter le W3C pour pouvoir correctement implémenter vos recommandations SEO avec AngularJS.\n\n\n\n\n\n## AngularJS pour du contenu interactif ##\n\nConstruire son Site Web intégralement avec AngularJS, alors que son but est de présenter du contenu au visiteur et aux moteurs de recherche est le meilleur moyen de faire un magnifique site introuvable.\n\nCependant, parsemer un Site Web de divers mécanismes apportés par la librairie AngularJS sur les formulaires ou le contenu extensible est un jeu d'enfant et n'entrave en rien un bon référencement et de bonnes pratiques HTML, à condition de respecter les guidelines que va vous fournir cet article.\n\n\n\n\n\n## Les `ng-*` deviennent des `data-ng-*` ##\n\nPartons d'un pattern extrêmement simple :\n\n**HTML**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Angular pour le W3C et le SEO</title></script>\n</head>\n<body>\n    <!-- AngularJS, applique toi ! -->\n    <div ng-app=\"\">\n        <p>\n            Écrivez dans ce champ :<br>\n            <!-- Choisi ton contenu dans `content` -->\n            <input type=\"text\" ng-model=\"content\"><br>\n            Résultat : {{ content }}\n        </p>\n    </div>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js\">\n</body>\n</html>\n```\n\n**Démo**\n\n<div data-ng-app=\"\" class=\"demo\">\n    <p>\n        Écrivez dans ce champ :<br>\n        <input type=\"text\" data-ng-model=\"content\"><br>\n        Résultat : {{ content }}\n    </p>\n</div>\n\n> *`Non`* **Ce qui ne va pas**\n\n> La voix du W3C ne se fait pas prier et vous recevrez les remontrances suivantes :\n- Error: Attribute `ng-app` not allowed on element `div` at this point.\n- Error: Attribute `ng-model` not allowed on element `input` at this point.\n\n> car effectivement il n'est pas possible d'inventer ses propres attributs en HTML5 à moins de les préfixer par `data-`.\n\n<hr class=\"invisible\">\n\n> **`Oui`** **Ce qu'il faut faire**\n\n> Pour régler ce point, préfixez tous les attributs de AngularJS avec `data-` ce qui nous donne :\n\n> ```\n<div data-ng-app=\"\">\n    <p>\n        Écrivez dans ce champ :<br>\n        <input type=\"text\" data-ng-model=\"content\"><br>\n        Résultat : {{ content }}\n    </p>\n</div>\n```\n\n\n\n\n\n## Utilisez `data-ng-bind` plutôt que `{{ }}` ##\n\nImaginons ce texte qui est massacré pour les moteurs de recherche.\n\n```\n<!-- ... -->\n<!-- Appelons par défaut notre personnage John Doe -->\n<div data-ng-app=\"\" data-init=\"name='John Doe'\">\n   <h1>L'histoire dont « qui vous voulez » est le zéro</h1>\n   <p>\n       Quel nom pour l'histoire ?<br>\n       <!-- Renommez John ! -->\n       <input type=\"text\" data-ng-model=\"name\">\n   </p>\n   <!-- Pas de nom, pas d'histoire ! -->\n   <p data-ng-show=\"name\">\n       Voici l'histoire de {{ name }}. {{ name }} était amoureux d'une princesse, \n       mais n'était pas prince. \n       {{ name }} mourru très vieux sans jamais avoir épousé sa princesse \n       —{{ name }} n'ayant effectivement pas réussi à se faire adopter par un noble—.   \n   </p>\n</div>\n<!-- ... -->\n```\n\n**Démo**\n\n<div id=\"app2\" data-ng-app=\"example2\" data-ng-controller=\"controller2\" class=\"demo\">\n   <p>L'histoire dont « qui vous voulez » est le zéro</p>\n   <p>\n       Quel nom pour l'histoire ?<br>\n       <input type=\"text\" data-ng-model=\"name\">\n   </p>\n   <p data-ng-show=\"name\">\n       Voici l'histoire de <span data-ng-bind=\"name\">John Doe</span>. <span data-ng-bind=\"name\">John Doe</span> était amoureux d'une princesse, \n       mais n'était pas prince. \n       <span data-ng-bind=\"name\">John Doe</span> mourru très vieux sans jamais avoir épousé sa princesse \n       —<span data-ng-bind=\"name\">John Doe</span> n'ayant effectivement pas réussi à se faire adopter par un noble—.   \n   </p>\n</div>\n\n> *`Non`* **Ce qui ne va pas**\n\n> Ici le soucis est pour les moteurs de recherche. S'ils souhaitent indexer votre histoire, ils n'entendront jamais parler du brave John Doe mais d'un certain `{{ name }}`.\n\n<hr class=\"invisible\">\n\n> **`Oui`** **Ce qu'il faut faire**\n\n> Pour solutionner ce problème il faut tout simplement remplacer `{{ name }}` par `<span data-ng-bind=\"name\">John Doe</span>` ainsi les moteurs de recherche pourront inscrire « la gloire » de John Doe dans l'histoire.\n\n> ```\n<!-- ... -->\n<div data-ng-app=\"\" data-init=\"name='John Doe'\">\n   <p>L'histoire dont « qui vous voulez » est le zéro</p>\n   <p>\n       Quel nom pour l'histoire ?<br>\n       <input type=\"text\" data-ng-model=\"name\">\n   </p>\n   <p data-ng-show=\"name\">\n       Voici l'histoire de <span data-ng-bind=\"name\">John Doe</span>. <span data-ng-bind=\"name\">John Doe</span> était amoureux d'une princesse, \n       mais n'était pas prince. \n       <span data-ng-bind=\"name\">John Doe</span> mourru très vieux sans jamais avoir épousé sa princesse \n       —<span data-ng-bind=\"name\">John Doe</span> n'ayant effectivement pas réussi à se faire adopter par un roi—.   \n   </p>\n</div>\n<!-- ... -->\n```\n\n> Si votre application permettait à quelqu'un de changer le nom et de valider cela côté serveur dans une base de donnée, il verrait son changement en temps réel, mais les moteurs de recherche en affichant la page à partir de cet instant pourrait indexer le nouveau nom pour l'histoire.\n\n\n\n\n\n## Des Directives par attributs au lieu de balises ##\n\nIl est possible grâce à AngularJS de créer ses propres directives comme dans cet exemple :\n\nHTML\n\n```\n<div data-ng-app=\"new-directive\">\n    <unknown-markup-directive></unknown-markup-directive>\n</div>\n```\n\nJS\n\n```\nangular.module(\"new-directive\", []).directive(\"unknownMarkupDirective\", function() {\n    return {\n        template : \"<p>Ceci a été créé par une Directive !</p>\"\n    };\n});\n```\n\n**Démo**\n\n<div id=\"app4\" data-ng-app=\"example4\" class=\"demo\">\n    <div data-new-directive></div>\n</div>\n\n> *`Non`* **Ce qui ne va pas**\n\n> Le problème ici c'est que le code suivant `<unknown-markup-directive></unknown-markup-directive>` ne passe pas la validation car il n'est pas permis en HTML d'inventer ses propres balises. Cependant, l'utilisation de directives étant fort pratique il est intéressant de savoir qu'il est également possible de les utiliser en tant que nom d'attribut ou nom de classe.\n\n<hr class=\"invisible\">\n\n> **`Oui`** **Ce qu'il faut faire**\n\n> Aussi pour résoudre notre problème précédent, il suffit de faire comme suit :\n\n> HTML\n\n> ```\n<div data-ng-app=\"new-directive\">\n    <div data-new-directive></div>\n</div>\n```\n\n> JS\n\n> ```\nangular.module(\"new-directive\", []).directive(\"newDirective\", function() {\n    return {\n        /* On active l'utilisation de la directive avec un attribut ! */\n        restrict : \"A\",\n        template : \"<p>Ceci a été créé par une Directive !</p>\"\n    };\n});\n```\n\n\n\n\n\n## Initialiser le Scope depuis une source indexable ##\n\nQuand vous mettez en marche une application AngularJS avec un fichier JavaScript pour initialiser le `$scope` ou à travers `data-ng-init`, les informations sont bien attachées au couple View-Model (HTML-JS) mais rien n'est indexable par les moteurs de recherche. Voyez plutôt.\n\nHTML\n\n```\n<div data-ng-app=\"pokemon\" data-ng-controller=\"popular\">\n    <p>Pokemons Populaires</p>\n    <ul>\n        <li data-ng-repeat=\"pokemon in popularPokemons\">\n            {{ pokemon.name }} est populaire.\n            <span data-ng-if=\"pokemon.cover\">\n                <strong>Il est sur une pochette de jeu.</strong>\n            </span>\n            <span data-ng-if=\"!pokemon.cover\">\n                Il n'est pas sur une pochette de jeu.\n            </span> -\n            <a href=\"javascript:;\" data-ng-click=\"remove($index)\">Supprimer</a>\n        </li>\n    </ul>\n    <form data-ng-init=\"addPokemon={ cover: 'false' }\">\n        <strong>Vous en connaissez un autre ?</strong><br>\n        Nom : <input type=\"text\" data-ng-model=\"addPokemon.name\"><br>\n        <select data-ng-model=\"addPokemon.cover\">\n            <option value=\"false\">Il n'est pas sur une pochette de jeu.</option>\n            <option value=\"true\">Il est sur une pochette de jeu.</option>\n        </select>\n        <button data-ng-click=\"add()\" data-ng-disabled=\"!addPokemon.name\">Ajouter</button>\n    </form>\n</div>\n```\n\nJS\n\n```\nangular.module(\"pokemon\", []).controller(\"popular\", function($scope) {\n    $scope.popularPokemons = [\n        { name: \"Pikachu\", cover: true }, \n        { name: \"Bulbizarre\", cover: false }, \n        { name: \"Carapuce\", cover: false }, \n        { name: \"Dracaufeu\", cover: true }, \n        { name: \"Mewtwo\", cover: false }, \n    ];\n    $scope.add = function () {\n        $scope.addPokemon.cover = ($scope.addPokemon.cover === \"true\");\n        $scope.popularPokemons.push($scope.addPokemon);\n        $scope.addPokemon = { cover: \"false\" };\n    }\n    $scope.remove = function (pos) {\n        $scope.popularPokemons.splice(pos, 1);\n    }\n});\n```\n\n**Démo**\n\n<div id=\"app3\" data-ng-app=\"example3\" data-ng-controller=\"controller3\" class=\"demo\">\n    <p>Pokemons Populaires</p>\n    <ul class=\"popular-pokemon-list\">\n        <li data-ng-if=\"false\">\n            <span class=\"pokemon\">Pikachu</span> est populaire. \n            <span class=\"cover\">\n                <strong>Il est sur une pochette de jeu.</strong>\n            </span>\n        </li>\n        <li data-ng-if=\"false\">\n            <span class=\"pokemon\">Bulbizarre</span> est populaire. \n            <span>Il n'est pas sur une pochette de jeu.</span>\n        </li>\n        <li data-ng-if=\"false\">\n            <span class=\"pokemon\">Carapuce</span> est populaire. \n            <span> Il n'est pas sur une pochette de jeu.</span>\n        </li>\n        <li data-ng-if=\"false\">\n            <span class=\"pokemon\">Dracaufeu</span> est populaire. \n            <span class=\"cover\">\n                <strong>Il est sur une pochette de jeu.</strong>\n            </span>\n        </li>\n        <li data-ng-if=\"false\">\n            <span class=\"pokemon\">Mewtwo</span> est populaire. \n            <span>Il n'est pas sur une pochette de jeu.</span>\n        </li>\n        <template class=\"popular-pokemon-template\">\n        <li data-ng-repeat=\"pokemon in popularPokemons\">\n            {{ pokemon.name }} est populaire.\n            <span data-ng-if=\"pokemon.cover\">\n                <strong>Il est sur une pochette de jeu.</strong>\n            </span>\n            <span data-ng-if=\"!pokemon.cover\">\n                Il n'est pas sur une pochette de jeu.\n            </span> -\n            <a href=\"javascript:;\" data-ng-click=\"remove($index)\">Supprimer</a>\n        </li>\n        </template>\n    </ul>\n    <br>\n    <form data-ng-init=\"addPokemon={ cover: 'false' }\">\n        <strong>Vous en connaissez un autre ?</strong><br>\n        Nom : <input type=\"text\" data-ng-model=\"addPokemon.name\">\n        <select data-ng-model=\"addPokemon.cover\">\n            <option value=\"false\">Il n'est pas sur une pochette de jeu.</option>\n            <option value=\"true\">Il est sur une pochette de jeu.</option>\n        </select><br>\n        <button data-ng-click=\"add()\" data-ng-disabled=\"!addPokemon.name\">Ajouter</button>\n    </form>\n</div>\n\n> *`Non`* **Ce qui ne va pas**\n\n> Le problème ici, c'est que pour un indexeur de contenu, ce morceau de code n'a rien de très appétissant.\n\n> ```\n<ul>\n    <li data-ng-repeat=\"pokemon in popularPokemons\">\n        {{ pokemon.name }} est populaire.\n        <span data-ng-if=\"pokemon.cover\">\n            <strong>Il est sur une pochette de jeu.</strong>\n        </span>\n        <span data-ng-if=\"!pokemon.cover\">\n            Il n'est pas sur une pochette de jeu.\n        </span> -\n        <a href=\"javascript:;\" data-ng-click=\"remove($index)\">Supprimer</a>\n    </li>\n</ul>\n```\n\n> - Nous allons donc le cacher aux yeux de l'indexeur en expliquant que c'est un `<template>` avec la balise HTML5 associée.\n> - Nous allons également donner à manger le vrai contenu dans le code HTML source que nous allons cacher à l'utilisateur.\n> - Nous allons alimenter le `$scope` à partir du HTML comme référence et non plus le piéger dans le JavaScript.\n\n<hr class=\"invisible\">\n\n> **`Oui`** **Ce qu'il faut faire**\n\n> Modifions alors le code HTML qui va arriver du serveur et qui sera parfaitement indexable pour ce qui est du contenu et parfaitement ignoré pour ce qui est du template (la balise `<template>`).\n\n> HTML\n\n> ```\n<!-- ... Début identique à la précédente version ... -->\n<ul class=\"popular-pokemon-list\">\n    <li data-ng-if=\"false\">\n        <span class=\"pokemon\">Pikachu</span> est populaire. \n        <span class=\"cover\">\n            <strong>Il est sur une pochette de jeu.</strong>\n        </span>\n    </li>\n    <li data-ng-if=\"false\">\n        <span class=\"pokemon\">Bulbizarre</span> est populaire.\n        Il n'est pas sur une pochette de jeu.\n    </li>\n    <li data-ng-if=\"false\">\n        <span class=\"pokemon\">Carapuce</span> est populaire.\n        Il n'est pas sur une pochette de jeu.\n    </li>\n    <li data-ng-if=\"false\">\n        <span class=\"pokemon\">Dracaufeu</span> est populaire. \n        <span class=\"cover\">\n            <strong>Il est sur une pochette de jeu.</strong>\n        </span>\n    </li>\n    <li data-ng-if=\"false\">\n        <span class=\"pokemon\">Mewtwo</span> est populaire.\n        Il n'est pas sur une pochette de jeu.\n    </li>\n<template class=\"popular-pokemon-template\">\n    <li data-ng-repeat=\"pokemon in popularPokemons\">\n        {{ pokemon.name }} est populaire.\n        <span data-ng-if=\"pokemon.cover\">\n            <strong>Il est sur une pochette de jeu.</strong>\n        </span>\n        <span data-ng-if=\"!pokemon.cover\">\n            Il n'est pas sur une pochette de jeu.\n        </span> -\n        <a href=\"javascript:;\" data-ng-click=\"remove($index)\">Supprimer</a>\n    </li>\n</template>\n</ul>\n<!-- ... Fin identique à la précédente version ... -->\n```\n\n> Dans notre exemple précédent, tous les `data-ng-if` vont être retiré du DOM et la version contenu dans `<template>` va être exécuté par AngularJS après avoir été activé à l'aide du code suivant :\n\n> JS\n\n> ```\n/* Récupération du Template */\nvar template = document.getElementsByClassName(\"popular-pokemon-template\")[0],\n    /* Activation du Template par copie */\n    content = document.importNode(template.content, true),\n    /* Zone d'atterrissage du conteru de Template */\n    list = document.getElementsByClassName(\"popular-pokemon-list\")[0],\n    pokemons = list.getElementsByTagName(\"li\"),\n    popularPokemons = [];\n/* Alimentation du futur `Scope` Angular */\nArray.prototype.forEach.call(pokemons, function (pokemon) {\n    popularPokemons.push({ \n        name: pokemon.getElementsByClassName(\"pokemon\")[0].textContent, \n        cover: (pokemon.getElementsByClassName(\"cover\").length > 0) ? true : false\n    });\n});\n/* Dépôt du Template dans le DOM */\nlist.appendChild(content);\n```\n\n> La variable `popularPokemons` peut ensuite être associée au `Scope` initial de AngularJS.\n\n> ```\n/* Module AngularJS */\nangular.module(\"pokemon\", []).controller(\"popular\", function($scope) {\n    $scope.popularPokemons = popularPokemons;\n    /* ... Reste identique à la précédente version ... */\n});\n```\n\n> **Note :**\n\n> Libre à vous d'utiliser la techno côté serveur qui vous délivrera le HTML près à être indexé par les moteurs. Voici un exemple en Node.js avec le module [NodeAtlas](https://www.npmjs.com/package/node-atlas) (Utilisant le moteur de template `EJS 2`).\n\n> ```\n<!-- ... -->\n<ul class=\"popular-pokemon-list\">\n    <% for (var pokemon in pokemons) { %>\n    <li data-ng-if=\"false\">\n        <span class=\"pokemon\"><%- pokemon.name %></span> est populaire.\n        <% if (pokemon.cover) { %> \n        <span class=\"cover\">\n            <strong>Il est sur une pochette de jeu.</strong>\n        </span>\n        <% } else { %>\n        Il n'est pas sur une pochette de jeu.\n        <% } %> \n    </li>\n    <% } %> \n<template class=\"popular-pokemon-template\">\n    <li data-ng-repeat=\"pokemon in popularPokemons\">\n        {{ pokemon.name }} est populaire.\n        <span data-ng-if=\"pokemon.cover\">\n            <strong>Il est sur une pochette de jeu.</strong>\n        </span>\n        <span data-ng-if=\"!pokemon.cover\">\n            Il n'est pas sur une pochette de jeu.\n        </span> -\n        <a href=\"javascript:;\" data-ng-click=\"remove($index)\">Supprimer</a>\n    </li>\n</template>\n</ul>\n<!-- ... -->\n```\n\n## Délivrer du contenu derrière chaque URL ##\n\nSi vous utilisez AngularJS pour quelque chose de plus complet que la vérification de formulaire, il est possible que votre site n'est qu'une seule et unique url d'entrée actuellement.\n\nAinsi à la page `http://www.mon-site.com/` vous faites tourner le code suivant :\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Angular pour le W3C et le SEO</title>\n</head>\n<body>\n    <!-- AngularJS, applique toi ! -->\n    <div data-ng-app=\"app\" data-ng-controller=\"main\">\n        <div data-main-module></div>\n    </div>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js\"></script>\n</body>\n</html>\n```\n\nJS\n\n```\nangular.module(\"app\", []).controller(\"main\", function($scope, $location, $sce) {\n    // Liste de vos différentes pages.\n    var content = {\n        \"/\": \"<div><!-- Contenu de Home --></div>\",\n        \"/products/\": \"<div><!-- Contenu de Products --></div>\",\n        \"/contact/\": \"<div><!-- Contenu de Contacts --></div>\",\n    };\n    // Afficher la bonne page en fonction du changement d'url.\n    $scope.$on(\"$locationChangeStart\", function (event, next) {\n        var hash = /\\/#(\\/[a-z]*\\/?)/g.exec(next);\n        $scope.content = $sce.trustAsHtml(content[hash ? hash[1] : \"/\"]);\n    });\n    // Changer artificiellement d'url.\n    $scope.goTo = function (url) {\n        $location.path(url).replace();\n    }\n}).directive(\"mainModule\", function() {\n        return {\n            restrict : \"A\",\n            template : \"<div data-ng-bind-html='content'></div>\" + \n                       \"<button data-ng-click=\\\"goTo('/')\\\">Accueil</button>\" + \n                       \"<button data-ng-click=\\\"goTo('/products/')\\\">Produits</button>\" + \n                       \"<button data-ng-click=\\\"goTo('/contact/')\\\">Contactez-nous</button>\"\n    };\n});\n```\n\net en cliquant sur chaque lien vous allez afficher les urls :\n\n- http://www.mon-site.com/#/\n- http://www.mon-site.com/#/products/\n- http://www.mon-site.com/#/contact/\n\navec pour chacune un contenu différent\n\n**Démo**\n\n<div id=\"app5\" data-ng-app=\"example5\" data-ng-controller=\"controller5\" class=\"demo\">\n    <div data-main-module></div>\n</div>\n\n> *`Non`* **Ce qui ne va pas**\n\n> Vous constaterez en changeant de page via les boutons que vos urls contiennent toutes des `#`. Cela signifie que vous n'avez pas changé de page car tout ce qui suit ce caractère n'est pas interprété par les moteurs de recherche. L'intégralité de votre site aux yeux de Google se résume a une unique page HTML... vide...\n\n> Nous avons également ajouté nous même du code JavaScript pour lier le changement d'url à l'état de la page, c-à-d que si vous changez à la main l'url de votre bar d'adresse pour une autre page existante celle-ci va s'afficher ce qui vous permet au moins de partager des urls avec `#` avec vos amis et qu'ils puissent arriver tout de même sur la bonne page.\n\n> Il y a deux choses à faire pour rendre cela SEO friendly.\n\n> - Il ne faut plus que les adresses contiennent de `#`, mais que ce soit de vrais adresses consultables si je me rends dessus.\n> - Il faut qu'en me rendant à chaque adresse directement, il y ai un code source initial en « response » à la « request » serveur qui puisse être indexé par des moteurs de recherche.\n\n<hr class=\"invisible\">\n\n> **`Oui`** **Ce qu'il faut faire**\n\n> L'unique page précédente devient alors trois pages distinctes :\n\n> - http://www.mon-site.com/\n> - http://www.mon-site.com/products/\n> - http://www.mon-site.com/contact/\n\n> avec sur chaque page, au retour « response » du serveur, le contenu dédié à la page.\n\n> **/**\n> ```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Accueil</title>\n</head>\n<body>\n    <!-- AngularJS, applique toi ! -->\n    <div data-ng-app=\"app\" data-ng-controller=\"main\">\n        <div data-ng-if=\"false\"><!-- Contenu de Home --></div>\n        <div data-main-module></div>\n    </div>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js\"></script>\n    <script src=\"app.js\"></script>\n</body>\n</html>\n```\n\n> **/products/**\n> ```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Notre Wallpaper</title>\n</head>\n<body>\n    <!-- AngularJS, applique toi ! -->\n    <div data-ng-app=\"app\" data-ng-controller=\"main\">\n        <div data-ng-if=\"false\"><!-- Contenu de Products --></div>\n        <div data-main-module></div>\n    </div>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js\"></script>\n    <script src=\"app.js\"></script>\n</body>\n</html>\n```\n\n> **/contact/**\n> ```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>Contactez-nous</title>\n</head>\n<body>\n    <!-- AngularJS, applique toi ! -->\n    <div data-ng-app=\"app\" data-ng-controller=\"main\">\n        <div data-ng-if=\"false\"><!-- Contenu de Contact --></div>\n        <div data-main-module></div>\n    </div>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js\"></script>\n    <script src=\"app.js\"></script>\n</body>\n</html>\n```\n\n> C'est ensuite que le code JavaScript va être parsé et que le pushState de AngularJS va être activé pour permettre aux utilisateur de changer l'adresse dynamiquement (sans rechargement de page, c-à-d sans request/response) et de charger les contenus.\n\n> JS\n\n> **app.js**\n\n> ```js\nangular.module(\"app\", []).config(function($locationProvider) {\n    $locationProvider.html5Mode(true);\n}).controller(\"main\", function($scope, $location, $sce) {\n    // Liste de vos différentes pages.\n    var content = {\n        \"/\": \"<div><!-- Contenu de Home --></div>\",\n        \"/products/\": \"<div><!-- Contenu de Products --></div>\",\n        \"/contact/\": \"<div><!-- Contenu de Contacts --></div>\",\n    };\n    // Changer d'url.\n    $scope.goTo = function (url) {\n        $location.path(url).replace();\n        $scope.content = $sce.trustAsHtml(content[url]);\n    }\n    // Charger la bonne page selon l'url\n    $scope.content = $sce.trustAsHtml(content[$location.url()]);\n}).directive(\"mainModule\", function() {\n        return {\n            restrict : \"A\",\n            template : \"<div data-ng-bind-html='content'></div>\" + \n                       \"<button data-ng-click=\\\"goTo('/')\\\">Accueil</button>\" + \n                       \"<button data-ng-click=\\\"goTo('/products/')\\\">Produits</button>\" + \n                       \"<button data-ng-click=\\\"goTo('/contact/')\\\">Contactez-nous</button>\"\n    };\n});\n```\n\n> **Comment ça marche ?**\n\n> Quand un moteur de recherche affiche l'une des trois pages, celle-ci est indexé via sont url avec le contenu déjà présent dessus dans la source de la « response ».\n\n> Quand un utilisateur affiche l'une des trois pages, son contenu initial est caché et `app.js` fait tourner l'application en chargeant le bon contenu en fonction de l'url. Après quoi, chaque fois que l'utilisateur changera de page, sa page ne se rechargera pas (le code source initial sera toujours celui de la page d'arrivée) mais sa barre d'adresse changera bien et AngularJS mettra le contenu à jour. S'il actualise la page depuis une autre url après navigation à travers plusieurs page, c'est la nouvelle page que sera chargé depuis la « response » et le cycle recommencera.\n\n> Ce mécanisme est bien entendu possible avec le routage officiel d'AngularJS avec `$routeProvider` et vous êtes libre d'utiliser la technologie Back-end de votre choix pour afficher le bon contenu source derrière chaque url de votre site en retour de la « response ».\n\n> *Exemple Live*\n\n> Sur mon <a href=\"https://www.lesieur.name/\">site de présentation</a> réalisé avec [NodeAtlas](https://github.com/Haeresis/NodeAtlas), en arrivant par l'une de ses urls :\n\n> - https://www.lesieur.name/bienvenue/\n> - https://www.lesieur.name/bepo/\n> - https://www.lesieur.name/a-propos/\n> - Etc.\n\n> le code source de la « response » sera uniquement celui de l'onglet ouvert. Tous le contenu des autres onglets sera chargé ultérieurement via des requêtes asynchrones. En changeant d'onglet, l'adresse changera mais pas le code source (la page ne sera pas rechargée, il n'y aura plus de « request / response »). Si vous rechargez la page depuis une autre url que celle d'arrivée, alors une « request / response » sera effectué avec seulement le contenu de cette page, et le reste viendra par contenu asynchrone, etc.\n\n\n\n\n\n## Vos astuces W3C et SEO ? ##\n\nIl doit exister d'autres situations ou de bonnes pratiques permettraient à du code AngularJS d'être parfaitement référencé aussi j'alimenterai cet article avec d'autres exemples dans le futur.\n\nEt vous ? Des méthodes à partager ? ", "dates" : { "published" : { "$date" : 1455722400000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "function angularProcess() {\n    var example2 = angular.module(\"example2\", []),\n        example3 = angular.module(\"example3\", []),\n        example4 = angular.module(\"example4\", []),\n        example5 = angular.module(\"example5\", []),\n        template = document.getElementsByClassName(\"popular-pokemon-template\")[0],\n        content = document.importNode(template.content, true),\n        list = document.getElementsByClassName(\"popular-pokemon-list\")[0],\n        pokemons = list.getElementsByTagName(\"li\"),\n        popularPokemons = [];\n\n    Array.prototype.forEach.call(pokemons, function (pokemon) {\n        popularPokemons.push({ \n            name: pokemon.getElementsByClassName(\"pokemon\")[0].textContent, \n            cover: (pokemon.getElementsByClassName(\"cover\").length > 0) ? true : false\n        });\n    });\n\n    list.appendChild(content);\n\n    example2.controller(\"controller2\", function($scope) {\n        $scope.name = \"John Doe\";\n    });\n\n    example5.config(function($locationProvider) {\n        //$locationProvider.html5Mode(true);\n    }).controller(\"controller5\", function($scope, $location, $sce) {\n        var content = {\n            \"/\": \"<h2 style=\\\"margin-top: 0\\\">Bienvenue !</h2><p>Utilisez les boutons pour naviguer.</p>\",\n            \"/products/\": \"<h2 style=\\\"margin-top: 0\\\">Notre Wallpaper<h2><p style=\\\"margin-top: 0\\\"><img style=\\\"max-width: 100%;margin-top: 0\\\" src=\\\"http://blog.haeresis.fr/upload/image/the_moment_by_dzsurnik.jpg\\\" alt=\\\"The Moment\\\"></p>\",\n            \"/contact/\": \"<h2 style=\\\"margin-top: 0\\\">Contactez-nous</h2><p><input type=\\\"text\\\"></p>\",\n        };\n        $scope.$on(\"$locationChangeStart\", function (event, next) {\n            var hash = /\\/#(\\/[a-z]*\\/?)/g.exec(next);\n            $scope.content = $sce.trustAsHtml(content[hash ? hash[1] : \"/\"]);\n        });\n        $scope.goTo = function (url) {\n            $location.path(url).replace();\n        }\n    }).directive(\"mainModule\", function() {\n        return {\n            restrict : \"A\",\n            template : \"<div data-ng-bind-html='content'></div>\" + \n                       \"<button data-ng-click=\\\"goTo('/')\\\">Accueil</button>\" + \n                       \"<button data-ng-click=\\\"goTo('/products/')\\\">Produits</button>\" + \n                       \"<button data-ng-click=\\\"goTo('/contact/')\\\">Contactez-nous</button>\"\n        };\n    });\n\n    example4.directive(\"newDirective\", function() {\n        return {\n            restrict : \"A\",\n            template : \"<p>Ceci a été créer par une Directive !</p>\"\n        };\n    });\n\n    example3.controller(\"controller3\", function($scope) {\n        $scope.popularPokemons = [\n            { name: \"Pikachu\", cover: true }, \n            { name: \"Bulbizarre\", cover: false }, \n            { name: \"Carapuce\", cover: false }, \n            { name: \"Dracaufeu\", cover: true }, \n            { name: \"Mewtwo\", cover: false }, \n        ];\n        $scope.add = function () {\n            $scope.addPokemon.cover = ($scope.addPokemon.cover === \"true\");\n            $scope.popularPokemons.push($scope.addPokemon);\n            $scope.addPokemon = { cover: \"false\" };\n        }\n        $scope.remove = function (pos) {\n            $scope.popularPokemons.splice(pos, 1);\n        }\n    });\n\n    angular.bootstrap(document.getElementById(\"app2\"), ['example2']);\n    angular.bootstrap(document.getElementById(\"app3\"), ['example3']);\n    angular.bootstrap(document.getElementById(\"app4\"), ['example4']);\n    angular.bootstrap(document.getElementById(\"app5\"), ['example5']);\n}\n\n(function () {\n    var scr = document.createElement('script');\n    scr.src = \"https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.5.0/angular.js\";\n    document.body.appendChild(scr);\n\n    scr.addEventListener(\"load\", function () {\n        angularProcess();\n    });\n }());", "stylesheet" : ".demo {\n    border: 1px dashed #ccc;\n    padding: 6px;\n}\n.invisible {\n    display: none;\n}\n\narticle input {\n    max-width: 100%;\n}", "title" : "Utiliser AngularJS en respectant les recommandations W3C et SEO", "urn" : "utiliser-angularjs-en-respectant-les-recommandations-w3c-et-seo" }
{ "__v" : 0, "_id" : { "$oid" : "56cd70a3d1b7fe136fc2005c" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [], "content" : "Cet article a pour but de lister les « raccourcis » utilisable dans du JavaScript pour :\n\n- la lecture : comprendre les patterns que vous croiserez et pourquoi ils fonctionnent ainsi.\n- l'écriture : écrire moins pour alléger le poids de vos fichiers, de votre relecture ou encore gagner haut la main les challenge de [CodeFights](https://codefights.com/).\n\n\n\n\n\n## Qu'est ce qu'un « raccourcis » JavaScript ##\n\nIl faut être conscient ici que par « raccourcis » j'entends « la manière utilisant le moins de caractère pour parvenir à un même résultat dans un contexte donné ». Cela implique donc que la mécanique interne des interpréteurs JavaScript sera différente et par conséquent le temps d’exécution également.\n\n**Légende**\n\nTout le long de cette page vous croiserez essentiellement :\n\n> ``` js\n/**\n * Des exemples \n * de *code long*\n * ...\n */\n```\n\n<hr class=\"invisible\">\n\n> ```js\n// ...transformé en **code court**.\n```\n> **`Comprendre`**\n\n<p class=\"know-more\">Et la possibilité d'en savoir plus</p>\n\n<div class=\"explaination\">\n<p>Le JavaScript est mon language préféré. Et je ne suis probablement pas le seul dans ce cas. C'est vraiment extraordinaire car dans mes jeunes années, c'était le language que je détestais le plus, le PHP semblait tellement plus simple. Après avoir fait un petit tour de C, C++, Java... j'ai fini par aprécier la structure complexe et ordonnée du C#, mais la simplicité du PHP me manquait. Était t-il possible de naviguer entre l'execution d'un code simple comme le PHP au besoin ou de créer des programme complexe et structuré comme en C#, avec le même language et si possible... dans le domaine du web ? Le JavaScript, certainement pas... comment un language de « bidouille » pouvait t-il être la réponse. Mais quelque chose n'allait pas.</p>\n\n<p>Comment jQuery pouvait t-il être aussi extraordinaire en étant écrit en JavaScript ? C'est la question qui m'a ammené là où j'en suis avec le JavaScript aujourd'hui. Avec un petit coup de pouce de Node.js.</p>\n\n<p>Ce qui a été le plus dur ? Comprendre le code des autres développeurs car j'ai rencontré des tas de patterns raccourcis que je ne comprenait pas au premier coup d'oeil et ce n'est qu'à force d'habitude et d'étude que j'ai pu tirer mon épingle du jeu.</p>\n\n<p>J'ai décider de compilé ici tout les raccourcis de code que j'ai pu rencontrer et/ou utiliser à ce jour : certain code sont plus « awesome » qu'utile, d'autres demande un certain contexte de variable pour être utilisé aussi c'est a vous de décider si oui ou non il constitue une bonne pratique dans vos équipes mais dès lors vous saurez les comprendre.</p>\n</div>\n\n\n\n\n\n## Création d'Objet et de Tableau ##\n\nOn commence avec deux raccourcis qui n'en sont pas vraiment et que vous connaissez forcément si vous utilisez l'écriture au format JSON. \n\n> ```js\nvar obj = new Object();\nobj.lastname = \"Lesieur\";\nobj.firstname = \"Bruno\";\nobj[\"birth date\"] = 27;\n// --ou--\nvar arr = new Array();\narr[0] = \"First\";\narr[1] = \"Second\";\narr[3] = \"Fourth\";\n```\n\n<hr class=\"invisible\">\n\n> ```js\nvar obj = {\n    lastname: \"Lesieur\",\n    firstname: \"Bruno\",\n    \"birth date\": 27\n}\n// --ou--\nvar arr = [\n    \"First\",\n    \"Second\",,\n    \"Fourth\"\n]\n```\n> **`Rien de plus`**\n\n\n\n\n\n## Création de variables groupées ##\n\nOn continue avec un autre raccourci qui n'en est pas vraiment un mais qui d'une part va vous économiser un nombre de `var` non négligeable et vous permette de ne plus courir après vos variables. \n\n> ```js\nvar c = \"Text\";\n/** … **/\nvar b = false;\n/** … **/\nif (b === false) { … }\nvar a;\nfor (var i = 0;…;…) { … }\n```\n\n<hr class=\"invisible\">\n\n> ```js\nvar i = 0,\n    c = \"Text\",\n    b = false,\n    a;\n/** … **/\nif (b === false) { … }\nfor (…;…;…) { … }\n```\n> **`Rien de plus`**\n\n\n\n\n\n## Existence d'une variable ##\n\nCe pattern est un raccourci pour évaluer une variable, dans la majorité des cas, savoir si elle existe ou si elle possède une valeur (Il y a 6 cas spéciaux à connaître dans en savoir plus).\n\n> ```js\nif (iLikeJavaScript == true) { … }\n// ou son contraire\nif (iDontLikeJavaScript != true) { … }\nif (iDontLikeJavaScript == false) { … }\n```\n\n<hr class=\"invisible\">\n\n> ```js\nif (iLikeJavaScript) { … }\n// ou son contraire\nif (!iDontLikeJavaScript) { … }\n```\n> **`Comprendre`**\n\n<p class=\"know-more\">En savoir plus</p>\n\n<div class=\"explaination\">\n<p>Le JavaScript est un langage faiblement typé ce qui signifie que</p>\n<ul>\n<li>chaque variable à un type (string, number, boolean, Object, null, undefined),</li> \n<li>chaque variable est transformée en fonction du contexte dans laquelle elle est analysée en un type équivalent.</li> \n</ul>\n<p>Dans un contexte de condition, comme dans un `if`, toutes les variables sont converties, le temps de l'analyse, en boolean.</p>\n<p>Si une variable vaut :</p>\n<ul>\n<li>`undefined` (de type undefined)</li> \n<li>`null` (de type null)</li> \n<li>`0` (de type number)</li> \n<li>`NaN` (de type number)</li> \n<li>`\"\"` (de type string)</li> \n<li>`false` (de type boolean)</li> \n</ul>\n<p>elle est évaluée à `false`.</p>\n<p>Dans tous les autres cas (`16`, `true`, `{}`, `[]`, `\"test\"`, `{ a: 1 }`, ...) elle est évaluée à `true`.</p>\n<p>Puisque `true == true`, `false == false`, `false != true`, `true` ou `!false` passe le test alors ce raccourcis est possible.</p>\n<p><strong>Attention :</strong> Ceci n'est pas une équivalence absolue pour `(iLikeJavaScript === true)` (notez les triple égales) qui ne valide la condition uniquement si `iLikeJavaScript` est de type boolean à l'origine uniquement.</p>\n</div>\n\n\n\n\n\n## Valeur par défaut ##\n\nUtile pour initialiser des Namespaces dans les fichiers où pour initialiser des valeurs par défaut dans les fonctions, l'affectation de valeur par défaut marche comme suit.\n\n> ```js\nif (variable1) {\n   variable2 = variable1;\n} else {\n   variable2 = \"default value\";\n}\n```\n\n<hr class=\"invisible\">\n\n> ```js\nvariable2 = variable1 || \"default value\";\n```\n> **`Comprendre`**\n\n<p class=\"know-more\">En savoir plus</p>\n\n<div class=\"explaination\">\n<p>Quand `variable1` utilise l'opérateur `||`, elle est convertie en type `boolean`. Si elle est `true`, alors elle remplit la condition, et le moteur JavaScript s'arrête là et l'affecte à `variable2`. Si elle vaut `false`, l'analyseur continue selon le souhait du `||`. Dans un contexte d'affectation, à la différence d'un contexte de condition, le dernier item de la liste est affecté, même s'il devait retourner `false` ainsi dans le cas suivant `exemple = NaN || \"\" || 0` le `0` est affecté la ou dans un `if` aucun élément n'aurait passé la validation.</p>\n</div>\n\n\n\n\n\n## Vérifier la validité ##\n\nUtile pour s'assurer qu'un objet existe bien avant de l'utiliser ou de l'affecter, la vérification marche comme suit.\n\n> ```js\nif (iAmAnything) {\n   iAmAFunction();\n}\n// -- ou --\nif (matrix) {\n    if (matrix[i]) {\n        if (matrix[i][j]) {\n            n = matrix[i][j];\n        }\n    }\n}\n```\n\n<hr class=\"invisible\">\n\n> ```js\n(iAmAnything && iAmAFunction)();\n// -- ou --\nn = matrix && matrix[i] && matrix[i][j];\n```\n> **`Comprendre`**\n\n<p class=\"know-more\">En savoir plus</p>\n\n<div class=\"explaination\">\n<p>Quand `variable1` utilise l'opérateur `||`, elle est convertie en type `boolean`. Si elle est `true`, alors elle remplit la condition, et le moteur JavaScript s'arrête là et l'affecte à `variable2`. Si elle vaut `false`, l'analyseur continue selon le souhait du `||`. Dans un contexte d'affectation, à la différence d'un contexte de condition, le dernier item de la liste est affecté, même s'il devait retourner `false` ainsi dans le cas suivant `exemple = NaN || \"\" || 0` le `0` est affecté la ou dans un `if` aucun élément n'aurait passé la validation.</p>\n</div>", "dates" : { "published" : { "$date" : 1478689080000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : false }, "script" : "var knowMores = document.getElementsByClassName(\"know-more\");\n\nArray.prototype.forEach.call(knowMores, function (knowMore) {\n    knowMore.addEventListener(\"click\", function (e) {\n        e.target.nextElementSibling.classList.toggle(\"is-opened\");\n    });\n});", "stylesheet" : ".invisible {\nheight: 0;\nvisibility: hidden;\nmargin: 0;\n}\n.explaination {\ndisplay:none;\n}\n.explaination.is-opened {\ndisplay: block;\n}\n.prettyprint + p {\n    margin-top: 0;\n    height: 0;\n    font-size: 0;\n}\n.know-more {\n    color: #48739E;\n    cursor: pointer;\n    margin-top: 0;\n    margin-left: 8px;\n}\n.know-more:hover {\n    color: #C00;\n}", "title" : "Comprendre les Raccourcis de Code en JavaScript", "urn" : "comprendre-les-raccourcis-de-code-en-javascript" }
{ "__v" : 0, "_id" : { "$oid" : "56fb9383d1b7fe136fc2005d" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "56c4ad05675345bb2d63fcec" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48ca" } ], "content" : "<p>Ce qui m'a interpellé la première fois que j'ai pu m'essayer à <a href=\"https://angularjs.org/\" target=\"_blank\">AngularJS</a>, c'est la possibilité offerte de sélectionner les Services que l'on souhaite en les récupérant par leur nom de paramètre, et non par leur position de paramètre. Ce concept n'existe pas en JavaScript et pourtant le fait est bien là <samp>function ($scope, $http)</samp> ou <samp>function ($http, $scope)</samp> renvoi les bon contenu de variable en fonction de leur nom et <samp>function (scope, $http)</samp> vous dit que <samp>scope</samp> n'existe pas !</p>\n<p>Comment cela est-il possible en JavaScript ? Il est possible de « simuler » un passage par nom de paramètre avec un type <samp>Object</samp>, mais là, il s'agit belle et bien de différents paramètres.</p>\n<p>Voici le petit exercice que je vous propose dans cet article, faire du « Reverse Engineering » sur le mécanisme « caché » permettant aux fonctions de rappel (callback) JavaScript de délivrer leurs paramètres par « nom de paramètre » en lieu et place du mécanisme natif qui est par « position de paramètre ».</p>\n<h2 id=\"position-vs-nom-de-param-tre\">Position VS Nom de paramètre</h2>\n<p>Précisons plus finement de quoi l'on parle dans les deux différents cas : nom ou position.</p>\n<h3 id=\"position-de-param-tre-par-l-exemple\">Position de paramètre par l'exemple</h3>\n<p>Habituellement (et nativement) en JavaScript, lorsqu'une callback vous fournit des paramètres, chaque position de paramètre vous permet de savoir à quoi celui-ci va vous servir. C'est sur cette position que s'appuie la documentation pour vous expliquer à quoi sert les paramètres. Prenons l'exemple de la fonction <samp>filter</samp> des <samp>Array</samp> en JavaScript :</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"com\">// Nous créons un tableau avec des strings.</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> nbrs </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"str\">\"zero\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"un\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"deux\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"trois\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"quatre\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"cinq\"</span><span class=\"pun\">];</span></code></li><li class=\"L2\"><code class=\"lang-js\"></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"com\">// Nous utilisons la fonction `filter` qui demande une</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"com\">// callback qui va expliquer comment le filtre doit s'appliquer</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"com\">// sur chaque élément du tableau un par un.</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"com\">// Cette callback nous fournit nativement les paramètres par</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"com\">// « Position de paramètre » ce qui signifie que...</span></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">nbrs</span><span class=\"pun\">.</span><span class=\"pln\">filter</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">item</span><span class=\"pun\">,</span><span class=\"pln\"> position</span><span class=\"pun\">,</span><span class=\"pln\"> all</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// Le premier paramètre est la valeur de chaque entrée (\"zero\", \"un\", etc.).</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// Le deuxième paramètre est l'index de chaque entrée.</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// Le troisième paramètre est le tableau complet.</span></code></li><li class=\"L2\"><code class=\"lang-js\"></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// Pour le premier tour de `filter` on a donc :</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// `item` qui vaut `\"zero\"`.</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// `position` qui vaut `0`.</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// `all` qui vaut `[\"zero\", \"un\", \"deux\", \"trois\", \"quatre\", \"cinq\"]`.</span></code></li><li class=\"L7\"><code class=\"lang-js\"></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// Pour le second tour de `filter` on a donc :</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// `item` qui vaut `\"un\"`.</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// `position` qui vaut `1`.</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// `all` qui vaut `[\"zero\", \"un\", \"deux\", \"trois\", \"quatre\", \"cinq\"]`.</span></code></li><li class=\"L2\"><code class=\"lang-js\"></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// Etc...</span></code></li><li class=\"L4\"><code class=\"lang-js\"></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// On filtre par indice pair le résultat et on obtient...</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">position </span><span class=\"pun\">%</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pln\"> </span><span class=\"pun\">===</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">?</span><span class=\"pln\"> </span><span class=\"kwd\">true</span><span class=\"pln\"> </span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">false</span><span class=\"pun\">;</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pun\">});</span></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"com\">// Résultat : `[\"zero\", \"deux\", \"quatre\"]`</span></code></li></ol></pre>\n<p>Comprenez bien ici que vous choisissez le nom des paramètres vous-même, car seule la position importe, aussi le code suivant fait la même chose :</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"pun\">[</span><span class=\"str\">\"zero\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"un\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"deux\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"trois\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"quatre\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"cinq\"</span><span class=\"pun\">].</span><span class=\"pln\">filter</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">o</span><span class=\"pun\">,</span><span class=\"pln\"> i</span><span class=\"pun\">,</span><span class=\"pln\"> a</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// Pour le premier tour de `filter` on a donc :</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// `o` qui vaut `\"zero\"`.</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// `i` qui vaut `0`.</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// `a` qui vaut `[\"zero\", \"un\", \"deux\", \"trois\", \"quatre\", \"cinq\"]`.</span></code></li><li class=\"L5\"><code class=\"lang-js\"></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// Etc...</span></code></li><li class=\"L7\"><code class=\"lang-js\"></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">!(</span><span class=\"pln\">i </span><span class=\"pun\">%</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pun\">});</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"com\">// Résultat : `[\"zero\", \"deux\", \"quatre\"]`</span></code></li></ol></pre>\n<p>Mais le code suivant non :</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"pun\">[</span><span class=\"str\">\"zero\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"un\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"deux\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"trois\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"quatre\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"cinq\"</span><span class=\"pun\">].</span><span class=\"pln\">filter</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">position</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// `position` vaut `\"zero\"`, puis `\"un\"`, puis...</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">!(</span><span class=\"pln\">position </span><span class=\"pun\">%</span><span class=\"pln\"> </span><span class=\"lit\">2</span><span class=\"pun\">);</span><span class=\"pln\"> </span><span class=\"com\">// `!NaN` équivaut à `true`, tout passe.</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pun\">});</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"com\">// Résultat : `[\"zero\", \"un\", \"deux\", \"trois\", \"quatre\", \"cinq\"]`</span></code></li></ol></pre>\n<blockquote>\n<p><strong>A retenir :</strong> c'est l'ordre dans lequel les paramètres sont fournit par une callback qui détermine ce que le paramètre contient et ceci est vrai pour tout programme JavaScript utilisant le mécanisme natif.</p>\n<p><em>Avantage :</em> on peut utiliser n'importe quel nom pour nommer son paramètre et l'utiliser dans la callback.</p>\n<p><em>Inconvénient :</em> il faut créer les paramètres 1 et 2 si l'on souhaite utiliser le paramètre 3.</p>\n</blockquote>\n<h3 id=\"nom-de-param-tre-par-l-exemple\">Nom de paramètre par l'exemple</h3>\n<p>Mais le petit tour de magie fait par AngularJS est que l'on ne récupère pas les paramètres par position mais par Nom de paramètre ce qui n'est pas possible en JavaScript. Aussi observons le code suivant.</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> app </span><span class=\"pun\">=</span><span class=\"pln\"> angular</span><span class=\"pun\">.</span><span class=\"pln\">module</span><span class=\"pun\">(</span><span class=\"str\">\"app\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[]);</span></code></li><li class=\"L1\"><code class=\"lang-js\"></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"com\">// On demande l'objet $scope en première position,</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"com\">// puis la fonction $http en seconde position...</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">app</span><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">\"ctrl\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">,</span><span class=\"pln\"> $http</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// ...et on affiche l'objet `ChildScope { ... }`...</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-js\"></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// ...ainsi que la fonction `function $http(requestConfig)`.</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$http</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pun\">});</span></code></li></ol></pre>\n<p>Jusque là, rien d'anormal me direz-vous ? Cela signifie que le premier paramètre délivre un objet, et le second une fonction. Effectivement.</p>\n<p>Mais la magie opère dès lors que vous demandez plutôt ceci.</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> app </span><span class=\"pun\">=</span><span class=\"pln\"> angular</span><span class=\"pun\">.</span><span class=\"pln\">module</span><span class=\"pun\">(</span><span class=\"str\">'app'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[]);</span></code></li><li class=\"L1\"><code class=\"lang-js\"></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"com\">// On demande la fonction $http en première position,</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"com\">// puis l'objet $scope en seconde position...</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">app</span><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">\"ctrl\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">$http</span><span class=\"pun\">,</span><span class=\"pln\"> $scope</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// ...et on affiche l'objet `ChildScope { ... }`...</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-js\"></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// ...ainsi que la fonction `function $http(requestConfig)`.</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$http</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pun\">});</span></code></li></ol></pre>\n<p>Et ça marche ! Exactement de la même manière que précédemment. Par contre, si je voulais que mon <samp>$http</samp> ici réclamé en première position s'appelle plutôt <samp>http</samp>, j'aurais des ennuis.</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">angular</span><span class=\"pun\">.</span><span class=\"pln\">module</span><span class=\"pun\">(</span><span class=\"str\">\"app\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[]).</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">\"ctrl\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">http</span><span class=\"pun\">,</span><span class=\"pln\"> $scope</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// ...et on affiche l'objet `ChildScope { ... }`...</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-js\"></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// ...et...</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">http</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"com\">// ...s'affiche `Error: [$injector:unpr] Unknown provider`...</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pun\">});</span></code></li></ol></pre>\n<blockquote>\n<p><strong>A retenir :</strong> AngularJS ne délivre pas le contenu de ses paramètres de callback en fonction de leur position, mais en fonction de leur nom.</p>\n<p><em>Avantage :</em> nous pouvons nous servir à travers tous les paramètres disponibles, dans l'ordre souhaité. « J'ai besoin du paramètre <samp>$http</samp> ? Ok, je le rajoute à la liste ».</p>\n<p><em>Inconvénient :</em> on ne peut pas utiliser n'importe quel nom pour nommer son paramètre et l'utiliser dans la callback sous peine d'avoir une erreur. Très handicapant pour minifier/offusquer son code JavaScript.</p>\n</blockquote>\n<h2 id=\"comment-angularjs-fournit-les-param-tres-par-nom-\">Comment AngularJS fournit les paramètres par nom ?</h2>\n<p>Pour répondre à cette question, nous allons entreprendre de recréer les objets et fonctions de l'exemple avec AngularJS pas à pas pour comprendre exactement à quel moment nous pouvons agir afin de « changer » le comportement natif du JavaScript.</p>\n<p><strong>Commençons donc par créer <samp>app</samp> et sa fonction <samp>module</samp>.</strong></p>\n<p>Aussi le code suivant :</p>\n<p><em>Définition</em></p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"com\">// Création de l'espace de nom `angular` utilisé par la librairie.</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> angular </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{};</span></code></li><li class=\"L2\"><code class=\"lang-js\"></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"com\">// Création d'une fonction `module` qui permettrait de</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"com\">// nommer mon module, et de passer le tableau `[]`</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"com\">// nécessaire à la création.</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">angular</span><span class=\"pun\">.</span><span class=\"pln\">module </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">name</span><span class=\"pun\">,</span><span class=\"pln\"> options</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">name</span><span class=\"pun\">);</span></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">    console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">options</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">{};</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pun\">};</span></code></li></ol></pre>\n<p>me permet d'exécuter cela :</p>\n<p><em>Application</em></p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> app </span><span class=\"pun\">=</span><span class=\"pln\"> angular</span><span class=\"pun\">.</span><span class=\"pln\">module</span><span class=\"pun\">(</span><span class=\"str\">\"app\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[]);</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"com\">// Log : `app`</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"com\">// Log : `[]`</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">app</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"com\">// Log : `Object {}`</span></code></li></ol></pre>\n<p><strong>Ajoutons maintenant la fonction <samp>controller</samp>.</strong></p>\n<p>Aussi le code suivant</p>\n<p><em>Définition</em></p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> angular </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{};</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">angular</span><span class=\"pun\">.</span><span class=\"pln\">module </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">name</span><span class=\"pun\">,</span><span class=\"pln\"> options</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-js\"></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">        </span><span class=\"com\">// Création d'une fonction `controller` qui permettrait de</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">        </span><span class=\"com\">// nommer mon controller, et de passer une callback avec</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">        </span><span class=\"com\">// les instructions à exécuter et récupérer nos fameux paramètres !</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pln\">        controller</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">name</span><span class=\"pun\">,</span><span class=\"pln\"> callback</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">            console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">name</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">            console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">callback</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-js\"></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">// On exécute la callback que l'on a passé en attribuant</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">// pour le moment deux paramètres.</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">            callback</span><span class=\"pun\">(</span><span class=\"str\">\"first parameter\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"second parameter\"</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"pun\">};</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pun\">};</span></code></li></ol></pre>\n<p>me permet d'exécuter cela</p>\n<p><em>Application</em></p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> app </span><span class=\"pun\">=</span><span class=\"pln\"> angular</span><span class=\"pun\">.</span><span class=\"pln\">module</span><span class=\"pun\">(</span><span class=\"str\">\"app\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[]);</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">app</span><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">\"ctrl\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">,</span><span class=\"pln\"> $http</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"com\">// Log : `ctrl`</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"com\">// Log : `function ($scope, $http) { ... }`</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"first parameter\"`</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$http</span><span class=\"pun\">);</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"second parameter\"`</span></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pun\">});</span></code></li></ol></pre>\n<p>Et là nous remarquons une belle piste. Nous sommes capable de connaître le nom des fonctions utilisées par la callback fournit dans la partie <strong>Application</strong> (<samp>console.log(callback);</samp>) avant de l'exécuter et de lui passer actuellement les paramètres <samp>\"first parameter\"</samp> et <samp>\"second parameter\"</samp>.</p>\n<blockquote>\n<p><strong><samp>Bingo.</samp></strong> <strong>C'est exactement comme cela que AngularJS procède. Le nom des paramètres est extrais à partir de</strong> <samp>callback.toString()</samp> <strong>grâce à une Expression régulière et diverses opérations de capture. Nous allons en reproduire une équivalence dans l'exemple suivant.</strong></p>\n</blockquote>\n<h2 id=\"extraction-des-param-tres-par-nom\">Extraction des paramètres par nom</h2>\n<p>Pour simuler une callback par Nom de paramètre il va falloir :</p>\n<ul>\n<li>Isoler la liste des paramètres pour en connaître leur nom.</li>\n<li>Affecter le bon contenu de paramètre à la bonne place dans la callback pour donner l'illusion d'une callback partageant ces paramètres par nom de paramètre.</li>\n</ul>\n<h3 id=\"isoler-la-liste-des-param-tres\">Isoler la liste des paramètres</h3>\n<p>La manière la plus rapide de parvenir à nos fins va être d'utiliser une expression régulière pour extraire la liste des paramètres de la fonction rendu par <samp>callback.toString()</samp>.</p>\n<p>Voici là liste des fonctions dans lesquels nous devons pouvoir récupérer les paramètres. J'ai volontairement ajouté des espaces inutiles pour être sur de tester tous les cas :</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"kwd\">function</span><span class=\"pln\"> test </span><span class=\"pun\">(</span><span class=\"pln\">  $http </span><span class=\"pun\">,</span><span class=\"pln\"> $scope  </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"pun\">...</span><span class=\"pln\"> </span><span class=\"pun\">};</span></code></li><li class=\"L1\"><code><span class=\"kwd\">function</span><span class=\"pln\"> test  </span><span class=\"pun\">(</span><span class=\"pln\">  $http  </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"pun\">...</span><span class=\"pln\"> </span><span class=\"pun\">};</span></code></li><li class=\"L2\"><code><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">  $scope</span><span class=\"pun\">,</span><span class=\"pln\"> $http  </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"pun\">...</span><span class=\"pln\"> </span><span class=\"pun\">};</span></code></li><li class=\"L3\"><code><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">  $http</span><span class=\"pun\">,</span><span class=\"pln\"> scope  </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"pun\">...</span><span class=\"pln\"> </span><span class=\"pun\">};</span></code></li><li class=\"L4\"><code><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">  $scope  </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"pun\">...</span><span class=\"pln\"> </span><span class=\"pun\">};</span></code></li><li class=\"L5\"><code><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">  </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"pun\">...</span><span class=\"pln\"> </span><span class=\"pun\">};</span></code></li><li class=\"L6\"><code><span class=\"pun\">(</span><span class=\"pln\"> $scop  </span><span class=\"pun\">,</span><span class=\"pln\">  $http</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"pun\">...</span><span class=\"pln\"> </span><span class=\"pun\">};</span></code></li><li class=\"L7\"><code><span class=\"pln\">$scope  </span><span class=\"pun\">=&gt;</span><span class=\"pln\">  </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"pun\">...</span><span class=\"pln\"> </span><span class=\"pun\">};</span></code></li><li class=\"L8\"><code><span class=\"pun\">(</span><span class=\"pln\">  $scope  </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"pun\">...</span><span class=\"pln\"> </span><span class=\"pun\">};</span></code></li><li class=\"L9\"><code><span class=\"pun\">(</span><span class=\"pln\">  </span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">=&gt;</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"pln\"> </span><span class=\"pun\">...</span><span class=\"pln\"> </span><span class=\"pun\">};</span></code></li></ol></pre><p>À l'aide d'outil comme <a href=\"https://regex101.com/#javascript\" target=\"_blank\">101Regex</a>, on arrive à une expression régulière comme celle-ci:</p>\n<blockquote>\n<p><samp>/^(?:function *[a-zA-Z0-9_$]*)? *\\(? *([a-zA-Z0-9_$, ]*) *\\)?/g</samp></p>\n</blockquote>\n<div class=\"hidden-explaination\" onclick=\"this.classList.toggle('hidden-explaination')\">\n<br>\n<button>Explication complète sur la RegExp en cliquant ici</button>\n<div>\n<br>\n<em>Note : nous ajoutons le paramètre <samp>m</samp> lors de nos tests pour tester tous nos cas de test dans <a href=\"https://regex101.com/#javascript\" target=\"_blank\">101Regex</a> mais il ne ferra pas parti de l'expression régulière finale.</em>\n<ul id=\"regexExplainer\" class=\"filetree treeview\">\n                  <li>\n                    <div class=\"first-folder\">\n                      <div><span class=\"expslash\">/</span><span class=\"treeview_pattern regex_colorizer\"><b>^</b><b class=\"g1\">(?:</b>function <b>*</b><i>[</i><i>a<b>-</b>zA<b>-</b>Z0<b>-</b>9_$</i><i>]</i><b>*</b><b class=\"g1\">)</b><b class=\"g1\">?</b> <b>*</b><b class=\"et\">\\(</b><b>?</b> <b>*</b><b class=\"g1\" data-groupnum=\"1\">(</b><i>[</i><i>a<b>-</b>zA<b>-</b>Z0<b>-</b>9_$, </i><i>]</i><b>*</b><b class=\"g1\" data-groupnum=\"1\">)</b> <b>*</b><b class=\"et\">\\)</b><b>?</b></span>\n                        <span class=\"expslash\">/</span><span class=\"treeview_pattern treeview_options\">gm</span></div>\n                    </div>\n                    <ul>\n                      <li>\n                        <div class=\"file\"><span class=\"token\">^</span> déclarer la position comme le début de la ligne</div>\n                      </li>\n                      <li>\n                        <div class=\"hitarea collapsable\"><i class=\"fa fa-caret-down\"></i></div>\n                        <div class=\"folder\"><span class=\"group\">(?:function <em>[a-zA-Z0-9_$]</em>)?</span> Groupe non capturant</div>\n                        <ul>\n                          <li>\n                            <div class=\"file\"><span class=\"note\">Quantifieur:</span> <span class=\"inner-quantifier\">?</span> Entre <span class=\"quantifier\">zero</span> et <span class=\"quantifier\">une</span> fois, autant de fois que possible, car en mode\n                              <span class=\"misc\">[greedy]</span>\n                            </div>\n                          </li>\n                          <li>\n                            <div class=\"file\"><span class=\"token\">function</span> concorde avec les caractères <span class=\"literal\">function</span> tel quel (sensible à la casse)</div>\n                          </li>\n                          <li>\n                            <div class=\"hitarea collapsable\"><i class=\"fa fa-caret-down\"></i></div>\n                            <div class=\"folder\"><span class=\"token\"> <em></em></span><em> concorde avec le caractère <span class=\"literal\"> </span> tel quel</em></div><em>\n                            </em><ul><em>\n                              </em><li><em>\n                                </em><div class=\"file\"><em><span class=\"note\">Quantifieur:</span> <span class=\"inner-quantifier\"></span></em> Entre <span class=\"quantifier\">zero</span> et <span class=\"quantifier\">une infinité</span> de fois, autant de fois que possible, car en mode\n                                  <span class=\"misc\">[greedy]</span></div>\n                              </li>\n                            </ul>\n                          </li>\n                          <li>\n                            <div class=\"hitarea collapsable\"><i class=\"fa fa-caret-down\"></i></div>\n                            <div class=\"folder\"><span class=\"treeCharclass\">[a-zA-Z0-9<em>$]<em></em></em></span><em><em> concorde avec un seul caractère de la liste précédente</em></em></div><em><em>\n                            </em></em><ul><em><em>\n                              </em><li><em>\n                                </em><div class=\"file\"><em><span class=\"note\">Quantifier:</span> <span class=\"inner-quantifier\"></span></em> Entre <span class=\"quantifier\">zero</span> et <span class=\"quantifier\">une infinité</span> de fois, autant de fois que possible, car en mode\n                                  <span class=\"misc\">[greedy]</span></div>\n                              </li>\n                              <li>\n                                <div class=\"file\"><span class=\"token\">a-z</span> un seul caractère entre <span class=\"literal\">a</span> et <span class=\"literal\">z</span> (sensible à la casse)</div>\n                              </li>\n                              <li>\n                                <div class=\"file\"><span class=\"token\">A-Z</span> un seul caractère entre <span class=\"literal\">A</span> et <span class=\"literal\">Z</span> (sensible à la casse)</div>\n                              </li>\n                              <li>\n                                <div class=\"file\"><span class=\"token\">0-9</span> un seul caractère entre <span class=\"literal\">0</span> et <span class=\"literal\">9</span></div>\n                              </li>\n                              </em><li><em>\n                                </em><div class=\"file\"><em><span class=\"token\"></span></em>$ concorde avec un caractère de la liste <span class=\"literal\"><em>$</em></span><em> tel quel</em></div><em>\n                              </em></li><em>\n                            </em></ul><em>\n                          </em></li><em>\n                        </em></ul><em>\n                      </em></li><em>\n                      <li>\n                        <div class=\"hitarea collapsable\"><i class=\"fa fa-caret-down\"></i></div>\n                        <div class=\"folder\"><span class=\"token\"> <em></em></span><em> concorde avec le caractère <span class=\"literal\"> </span> tel quel</em></div><em>\n                        </em><ul><em>\n                          </em><li><em>\n                            </em><div class=\"file\"><em><span class=\"note\">Quantifieur:</span> <span class=\"inner-quantifier\"></span></em> Entre <span class=\"quantifier\">zero</span> et <span class=\"quantifier\">une infinité</span> de fois, de fois, autant de fois que possible, car en mode\n                              <span class=\"misc\">[greedy]</span></div>\n                          </li>\n                        </ul>\n                      </li>\n                      <li>\n                        <div class=\"hitarea collapsable\"><i class=\"fa fa-caret-down\"></i></div>\n                        <div class=\"folder\"><span class=\"token\">(?</span> matches the character <span class=\"literal\">(</span> literally</div>\n                        <ul>\n                          <li>\n                            <div class=\"file\"><span class=\"note\">Quantifieur:</span> <span class=\"inner-quantifier\">?</span> Entre <span class=\"quantifier\">zero</span> et <span class=\"quantifier\">une</span> fois, de fois, autant de fois que possible, car en mode\n                              <span class=\"misc\">[greedy]</span>\n                            </div>\n                          </li>\n                        </ul>\n                      </li>\n                      <li>\n                        <div class=\"hitarea collapsable\"><i class=\"fa fa-caret-down\"></i></div>\n                        <div class=\"folder\"><span class=\"token\"> <em></em></span><em> matches the character <span class=\"literal\"> </span> literally</em></div><em>\n                        </em><ul><em>\n                          </em><li><em>\n                            </em><div class=\"file\"><em><span class=\"note\">Quantifieur:</span> <span class=\"inner-quantifier\"></span></em> Entre <span class=\"quantifier\">zero</span> et <span class=\"quantifier\">une infinité</span> de fois, autant de fois que possible, car en mode\n                              <span class=\"misc\">[greedy]</span></div>\n                          </li>\n                        </ul>\n                      </li>\n                      </em><li><em>\n                        <div class=\"hitarea collapsable\"><i class=\"fa fa-caret-down\"></i></div>\n                        </em><div class=\"folder\"><em><span class=\"capturinggrooup match1\">1st</span> groupe caturant <span class=\"group\">([a-zA-Z0-9</span></em>$, ]<em>)</em></div><em>\n                        </em><ul><em>\n                          </em><li><em>\n                            <div class=\"hitarea collapsable\"><i class=\"fa fa-caret-down\"></i></div>\n                            </em><div class=\"folder\"><em><span class=\"treeCharclass\">[a-zA-Z0-9_$, ]</span></em> concorde avec un seul caractère de la liste précédente</div>\n                            <ul>\n                              <li>\n                                <div class=\"file\"><span class=\"note\">Quantifier:</span> <span class=\"inner-quantifier\"><em></em></span><em> Entre <span class=\"quantifier\">zero</span> et <span class=\"quantifier\">une infinité</span> de fois, autant de fois que possible, car en mode\n                                  <span class=\"misc\">[greedy]</span></em></div><em>\n                              </em></li><em>\n                              <li>\n                                <div class=\"file\"><span class=\"token\">a-z</span> un seul caractère entre <span class=\"literal\">a</span> et <span class=\"literal\">z</span> (sensible à la casse)</div>\n                              </li>\n                              <li>\n                                <div class=\"file\"><span class=\"token\">A-Z</span> un seul caractère entre <span class=\"literal\">A</span> et <span class=\"literal\">Z</span> (sensible à la casse)</div>\n                              </li>\n                              <li>\n                                <div class=\"file\"><span class=\"token\">0-9</span> un seul caractère entre <span class=\"literal\">0</span> et <span class=\"literal\">9</span></div>\n                              </li>\n                              <li>\n                                <div class=\"file\"><span class=\"token\"><em>$, </em></span><em> concorde avec un caractère de la liste <span class=\"literal\"></span></em>$,  tel quel</div>\n                              </li>\n                            </em></ul><em>\n                          </em></li><em>\n                        </em></ul><em>\n                      </em></li><em>\n                      </em><li><em>\n                        <div class=\"hitarea collapsable\"><i class=\"fa fa-caret-down\"></i></div>\n                        </em><div class=\"folder\"><em><span class=\"token\"> </span></em> concorde avec le caractère <span class=\"literal\"> </span> tel quel</div>\n                        <ul>\n                          <li>\n                            <div class=\"file\"><span class=\"note\">Quantifieur:</span> <span class=\"inner-quantifier\"><em></em></span><em> Between <span class=\"quantifier\">zero</span> and <span class=\"quantifier\">unlimited</span> times, as many times as possible, giving back as needed\n                              <span class=\"misc\">[greedy]</span></em></div><em>\n                          </em></li><em>\n                        </em></ul><em>\n                      </em></li><em>\n                      </em><li><em>\n                        <div class=\"hitarea collapsable\"><i class=\"fa fa-caret-down\"></i></div>\n                        <div class=\"folder\"><span class=\"token\">)?</span> matches the character <span class=\"literal\">)</span> literally</div>\n                        </em><ul><em>\n                          </em><li><em>\n                            </em><div class=\"file\"><em><span class=\"note\">Quantifieur:</span> <span class=\"inner-quantifier\"></span></em> Entre <span class=\"quantifier\">zero</span> et <span class=\"quantifier\">une infinité</span> de fois, autant de fois que possible, car en mode\n                              <span class=\"misc\">[greedy]</span>\n                            </div>\n                          </li>\n                        </ul>\n                      </li>\n                      <li>\n                        <div class=\"file\"><span class=\"modifier\">g modifieur:</span> <strong>g</strong>lobale. Pour toutes concordances (pas de retour à la première capture)</div>\n                      </li>\n                      <li>\n                        <div class=\"file\"><span class=\"modifier\">m modifieur:</span> <strong>m</strong>ulti ligne. Fait que <span class=\"misc\">^</span> et <span class=\"misc\">$</span> concorde pour le début/la fin de chaque ligne (pas seulement le début/la fin de la chaine)</div>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n</div>\n</div>\n\n<p>Cette expression régulière nous extrait au regard des tests unitaires précédent ceci :</p>\n\n```js\n`  $http , $scope  `\n`  $http  `\n`  $scope, $http  `\n`  $http, scope  `\n`  $scope  `\n`  `\n` $scope  ,  $http`\n`$scope`\n`  $scope  `\n`  `\n```\n\n<h3 id=\"affectation-des-param-tres\">Affectation des paramètres</h3>\n<p>Après avoir obtenu de notre <samp>callback.toString()</samp> les paramètres suivant <samp>$http , $scope</samp> à l'aide de notre expression régulière, nous allons récupérer ces paramètres un par un. Nous allons ensuite retirer les espaces et injecter nos paramètres dans notre callback aux bonnes positions pour donner l'illusion d'une callback par nom de paramétrage en sortie. C'est parti !</p>\n<p><em>Définition</em></p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> angular </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{};</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">angular</span><span class=\"pun\">.</span><span class=\"pln\">module </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">name</span><span class=\"pun\">,</span><span class=\"pln\"> options</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">        controller</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">name</span><span class=\"pun\">,</span><span class=\"pln\"> callback</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-js\"></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">// Création de la RegExp d'extraction des paramètres réclamés.</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"kwd\">var</span><span class=\"pln\"> regex </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">/^(?:function *[a-zA-Z0-9_$]*)? *\\(? *([a-zA-Z0-9_$, ]*) *\\)?/</span><span class=\"pln\">g</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code class=\"lang-js\"></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"com\">// Exécution de la RegExp sur `callback.toString()` avec par exemple</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"com\">// `function test (  $http , $scope  ) { ... };`. Est obtenu comme valeur...</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">                params </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">((</span><span class=\"pln\">regex</span><span class=\"pun\">.</span><span class=\"pln\">exec</span><span class=\"pun\">(</span><span class=\"pln\">callback</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">())</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">]).</span><span class=\"pln\">slice</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">)[</span><span class=\"lit\">0</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">).</span><span class=\"pln\">split</span><span class=\"pun\">(</span><span class=\"str\">','</span><span class=\"pun\">),</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"com\">// ...pour `params` : `['$http', '$scope']`.</span></code></li><li class=\"L2\"><code class=\"lang-js\"></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"com\">// Attribution du contenu des paramètres que notre callback va fournir en sortie</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"com\">// lors de l'utilisation de `app.controller(\"ctrl\", function (...) { ... })` dans un objet</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"com\">// ou chaque clé correspondra aux paramètres nommés souhaités.</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">                functions </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L7\"><code class=\"lang-js\"></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">                    </span><span class=\"com\">// Si la clé passé à `functions` est `'$scope'`, la fonction suivante sera recourné.</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">                    $scope</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">                        </span><span class=\"str\">\"I'm the $scope function\"</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">                    </span><span class=\"pun\">},</span></code></li><li class=\"L2\"><code class=\"lang-js\"></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">                    </span><span class=\"com\">// Si la clé passé est `functions est `'$http'`, la fonction suivante sera recourné.</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">                    $http</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">                        </span><span class=\"str\">\"I'm the $http function\"</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">                    </span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"pun\">};</span></code></li><li class=\"L8\"><code class=\"lang-js\"></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">// Association pour chaque élément de `['$http', '$scope']` de la valeur contenue dans `functions`</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">// en se servant de chaque chaîne du tableau comme clé dans `functions`.</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">            params </span><span class=\"pun\">=</span><span class=\"pln\"> params</span><span class=\"pun\">.</span><span class=\"pln\">map</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">item</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"com\">// Renvoi pour chaque clé de la valeur ou, si aucune concordance,</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"com\">// une erreur pour signifier qu'aucun paramètre avec ce nom n'existe.</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> functions</span><span class=\"pun\">[</span><span class=\"pln\">item</span><span class=\"pun\">.</span><span class=\"pln\">trim</span><span class=\"pun\">()]</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Error</span><span class=\"pun\">(</span><span class=\"str\">'This `'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> item</span><span class=\"pun\">.</span><span class=\"pln\">trim</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"` doesn't exist.\"</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">// ... `[function () { \"I'm the $scope function\"; },</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">//       function () { \"I'm the $http function\"; }]`</span></code></li><li class=\"L8\"><code class=\"lang-js\"></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">// Exécution de `callback` fournit en utilisant</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">// les paramètres dans le bon ordre directement du tableau `params` avec</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">// `apply` qui prend un tableau de paramètres.</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">            callback</span><span class=\"pun\">.</span><span class=\"pln\">apply</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\"> params</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"pun\">};</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pun\">};</span></code></li></ol></pre>\n<p><em>Application</em></p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> app </span><span class=\"pun\">=</span><span class=\"pln\"> angular</span><span class=\"pun\">.</span><span class=\"pln\">module</span><span class=\"pun\">(</span><span class=\"str\">\"app\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[]);</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">app</span><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">\"ctrl\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">,</span><span class=\"pln\"> $http</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"function () { \"I'm the $scope function\"; }\"`</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$http</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"function () { \"I'm the $http function\"; }\"`</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pun\">});</span></code></li></ol></pre>\n<p>ou</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> app </span><span class=\"pun\">=</span><span class=\"pln\"> angular</span><span class=\"pun\">.</span><span class=\"pln\">module</span><span class=\"pun\">(</span><span class=\"str\">\"app\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[]);</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">app</span><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">\"ctrl\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">$http</span><span class=\"pun\">,</span><span class=\"pln\"> $scope</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"function () { \"I'm the $scope function\"; }\"`</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$http</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"function () { \"I'm the $http function\"; }\"`</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pun\">});</span></code></li></ol></pre>\n<p>ou avec erreur</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> app </span><span class=\"pun\">=</span><span class=\"pln\"> angular</span><span class=\"pun\">.</span><span class=\"pln\">module</span><span class=\"pun\">(</span><span class=\"str\">\"app\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[]);</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">app</span><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">\"ctrl\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">http</span><span class=\"pun\">,</span><span class=\"pln\"> $scope</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"function () { \"I'm the $scope function\"; }\"`</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">http</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `Error: This `http` doesn't exist.`</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pun\">});</span></code></li></ol></pre>\n<h2 id=\"quid-de-l-offuscation-du-code-\">QUID de l’offuscation du code ?</h2>\n<h3 id=\"utilisation-souhait-e\">Utilisation souhaitée</h3>\n<p>Comme mentionné précédemment, si nous offusquons le code, ou si nous souhaitons simplement utiliser d'autres noms de variable pour les paramètres fournis par la callback nous allons obtenir le même type d'erreur que dans notre troisième exemple d'application dans la partie précédente.</p>\n<p>AngularJS contourne le problème en remplaçant cette syntaxe :</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">$http</span><span class=\"pun\">,</span><span class=\"pln\"> $scope</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$scope</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"function () { \"I'm the $scope function\"; }\"`</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">$http</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"function () { \"I'm the $http function\"; }\"`</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pun\">}</span></code></li></ol></pre>\n<p>par cette syntaxe :</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"pun\">[</span><span class=\"str\">'$http'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'$scope'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">h</span><span class=\"pun\">,</span><span class=\"pln\"> s</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">s</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"function () { \"I'm the $scope function\"; }\"`</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">h</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"function () { \"I'm the $http function\"; }\"`</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pun\">}]</span></code></li></ol></pre>\n<blockquote>\n<p>Pour contourner le problème, le nommage des paramètres n'est plus effectué dans la callback mais dans un tableau. On ne passe donc plus une <samp>Function</samp> de callback mais un <samp>Array</samp> dont le dernier item est la <samp>Function</samp> de callback et dont tous les items précédents sont les paramètres nommé que nous souhaitons sous forme de <samp>string</samp> (et donc non offusquable). Cela nous permet ensuite d'utiliser, par exemple, les variables <samp>h</samp> et <samp>s</samp> dans notre exemple.</p>\n</blockquote>\n<h3 id=\"impl-mentation-de-la-fonctionnalit-\">Implémentation de la fonctionnalité</h3>\n<p>Ajoutons donc cela à notre code déjà existant. Nous voulons que le comportement précédent fonctionne toujours, mais que celui-ci marche également.</p>\n<p><em>Définition</em></p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> angular </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{};</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">angular</span><span class=\"pun\">.</span><span class=\"pln\">module </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">name</span><span class=\"pun\">,</span><span class=\"pln\"> options</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"kwd\">return</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">        controller</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">name</span><span class=\"pun\">,</span><span class=\"pln\"> args</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-js\"></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">// On définira les `params` plus tard selon le type de `args`.</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"kwd\">var</span><span class=\"pln\"> params</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code class=\"lang-js\"></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"com\">// `callback` est devenu `args`. `args` peut être une `Function` ou un `Array`.</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"com\">// on défini donc la variable `callback` et lui attribuons `args`.</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"com\">// en supposant qu'il est de type `Function`...</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">                callback </span><span class=\"pun\">=</span><span class=\"pln\"> args</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">                regex </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">/^(?:function *[a-zA-Z0-9_$]*)? *\\(? *([a-zA-Z0-9_$, ]*) *\\)?/</span><span class=\"pln\">g</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">                functions </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">                    $scope</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">                        </span><span class=\"str\">\"I'm the $scope function\"</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">                    </span><span class=\"pun\">},</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pln\">                    $http</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">                        </span><span class=\"str\">\"I'm the $http function\"</span><span class=\"pun\">;</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">                    </span><span class=\"pun\">}</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"pun\">};</span></code></li><li class=\"L1\"><code class=\"lang-js\"></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"com\">// ...cependant si `args` est de type Array.</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">args instanceof </span><span class=\"typ\">Array</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-js\"></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">              </span><span class=\"com\">// Notre `callback` devient le dernier item du tableau</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">              </span><span class=\"com\">// qui est retiré et retourné avec `pop()`,</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pln\">              callback </span><span class=\"pun\">=</span><span class=\"pln\"> args</span><span class=\"pun\">.</span><span class=\"pln\">pop</span><span class=\"pun\">();</span></code></li><li class=\"L8\"><code class=\"lang-js\"></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">              </span><span class=\"com\">// et nos paramètres sont le reste du tableau.</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">              params </span><span class=\"pun\">=</span><span class=\"pln\"> args</span><span class=\"pun\">;</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-js\"></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">              </span><span class=\"com\">// Sinon, si `args` est —comme supposé initialement— une `Function`, on continue comme avant.</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">              params </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">((</span><span class=\"pln\">regex</span><span class=\"pun\">.</span><span class=\"pln\">exec</span><span class=\"pun\">(</span><span class=\"pln\">callback</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">())</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">]).</span><span class=\"pln\">slice</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">)[</span><span class=\"lit\">0</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">).</span><span class=\"pln\">split</span><span class=\"pun\">(</span><span class=\"str\">','</span><span class=\"pun\">)</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-js\"></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pln\">            params </span><span class=\"pun\">=</span><span class=\"pln\"> params</span><span class=\"pun\">.</span><span class=\"pln\">map</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">item</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">                </span><span class=\"kwd\">return</span><span class=\"pln\"> functions</span><span class=\"pun\">[</span><span class=\"pln\">item</span><span class=\"pun\">.</span><span class=\"pln\">trim</span><span class=\"pun\">()]</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Error</span><span class=\"pun\">(</span><span class=\"str\">'This `'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> item</span><span class=\"pun\">.</span><span class=\"pln\">trim</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"` doesn't exist.\"</span><span class=\"pun\">);</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">            </span><span class=\"pun\">});</span></code></li><li class=\"L0\"><code class=\"lang-js\"></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">            callback</span><span class=\"pun\">.</span><span class=\"pln\">apply</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\"> params</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">        </span><span class=\"pun\">}</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"pun\">};</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pun\">};</span></code></li></ol></pre>\n<p><em>Application</em></p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> app </span><span class=\"pun\">=</span><span class=\"pln\"> angular</span><span class=\"pun\">.</span><span class=\"pln\">module</span><span class=\"pun\">(</span><span class=\"str\">\"app\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[]);</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">app</span><span class=\"pun\">.</span><span class=\"pln\">controller</span><span class=\"pun\">(</span><span class=\"str\">\"ctrl\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"str\">'$http'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'$scope'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">h</span><span class=\"pun\">,</span><span class=\"pln\"> s</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">s</span><span class=\"pun\">);</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"function () { \"I'm the $scope function\"; }\"`</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">h</span><span class=\"pun\">);</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `\"function () { \"I'm the $http function\"; }\"`</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pun\">}]);</span></code></li></ol></pre>\n<blockquote>\n<p><em><samp>Exemple :</samp></em> <strong><a href=\"http://codepen.io/Haeresis/pen/WwOpNG\" target=\"_blank\">Vous trouverez un exemple Live de ce code sur ce Codepen !</a></strong></p>\n</blockquote>\n<h2 id=\"built-in-function\">Built-in Function</h2>\n<p>Et si on utilisait ce système pour nos propres callback, indépendamment de AngularJS ? Nous allons effectuer quelques changement et attacher ce mécanisme au prototype de <samp>Function</samp> mais vous pouvez en faire une simple fonction ou l'ajouter à votre librairie JavaScript préféré !</p>\n<p><strong>Raccourci</strong></p>\n<p>Ce code est à placer avec vos librairies JavaScript.</p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"pun\">;(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-js\"></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// On retire `name` qui ne sert pas et on ajoute sa propre injection de fonctions,</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// et éventuellement sa propre fonction en cas d'erreur.</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"typ\">Function</span><span class=\"pun\">.</span><span class=\"pln\">prototype</span><span class=\"pun\">.</span><span class=\"pln\">namedParameters </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">,</span><span class=\"pln\"> providedFunctions</span><span class=\"pun\">,</span><span class=\"pln\"> error</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">      </span><span class=\"kwd\">var</span><span class=\"pln\"> params</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">          callback </span><span class=\"pun\">=</span><span class=\"pln\"> args</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pln\">          regex </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"str\">/^(?:function *[a-zA-Z0-9_$]*)? *\\(? *([a-zA-Z0-9_$, ]*) *\\)?/</span><span class=\"pln\">g</span><span class=\"pun\">,</span></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">          functions </span><span class=\"pun\">=</span><span class=\"pln\"> providedFunctions </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"pun\">{};</span></code></li><li class=\"L9\"><code class=\"lang-js\"></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">args instanceof </span><span class=\"typ\">Array</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">      callback </span><span class=\"pun\">=</span><span class=\"pln\"> args</span><span class=\"pun\">.</span><span class=\"pln\">pop</span><span class=\"pun\">();</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">      params </span><span class=\"pun\">=</span><span class=\"pln\"> args</span><span class=\"pun\">;</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"kwd\">else</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">      params </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">((</span><span class=\"pln\">regex</span><span class=\"pun\">.</span><span class=\"pln\">exec</span><span class=\"pun\">(</span><span class=\"pln\">callback</span><span class=\"pun\">.</span><span class=\"pln\">toString</span><span class=\"pun\">())</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"lit\">1</span><span class=\"pun\">]).</span><span class=\"pln\">slice</span><span class=\"pun\">(</span><span class=\"lit\">1</span><span class=\"pun\">)[</span><span class=\"lit\">0</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"str\">\"\"</span><span class=\"pun\">).</span><span class=\"pln\">split</span><span class=\"pun\">(</span><span class=\"str\">','</span><span class=\"pun\">)</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"pun\">}</span></code></li><li class=\"L6\"><code class=\"lang-js\"></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pln\">    params </span><span class=\"pun\">=</span><span class=\"pln\"> params</span><span class=\"pun\">.</span><span class=\"pln\">map</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">item</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L8\"><code class=\"lang-js\"></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">        </span><span class=\"com\">// On ajoute sa propre fonction d'erreur qui prend en paramètre le nom de paramètre posant problème.</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">        </span><span class=\"kwd\">return</span><span class=\"pln\"> functions</span><span class=\"pun\">[</span><span class=\"pln\">item</span><span class=\"pun\">.</span><span class=\"pln\">trim</span><span class=\"pun\">()]</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">error </span><span class=\"pun\">&amp;&amp;</span><span class=\"pln\"> error</span><span class=\"pun\">(</span><span class=\"pln\">item</span><span class=\"pun\">.</span><span class=\"pln\">trim</span><span class=\"pun\">()))</span><span class=\"pln\"> </span><span class=\"pun\">||</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Error</span><span class=\"pun\">(</span><span class=\"str\">'This `'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> item</span><span class=\"pun\">.</span><span class=\"pln\">trim</span><span class=\"pun\">()</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\"` doesn't exist.\"</span><span class=\"pun\">);</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"pun\">});</span></code></li><li class=\"L2\"><code class=\"lang-js\"></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">    callback</span><span class=\"pun\">.</span><span class=\"pln\">apply</span><span class=\"pun\">(</span><span class=\"kwd\">this</span><span class=\"pun\">,</span><span class=\"pln\"> params</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"pun\">};</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pun\">}());</span></code></li></ol></pre>\n<p>*Note : vous pouvez également accrocher cette fonction à votre librairie préféré comme par exemple jQuery de cette manière <samp>$.fn.namedParameters = function (args, providedFunctions, error) { … }</samp></p>\n<p>Vous pourrez ensuite définir et appliquer les paramètres par nom dans toutes les fonctions souhaités :</p>\n<p><strong>Définition</strong></p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"kwd\">var</span><span class=\"pln\"> say </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"typ\">Function</span><span class=\"pun\">.</span><span class=\"pln\">namedParameters</span><span class=\"pun\">(</span><span class=\"pln\">args</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">      hello</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"Hello !\"</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">      bye</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\"Bye\"</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"pun\">},</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">    </span><span class=\"kwd\">return</span><span class=\"pln\"> param </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\" create an error !\"</span><span class=\"pun\">;</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"pun\">});</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pun\">};</span></code></li></ol></pre>\n<p><strong>Application</strong></p>\n<pre class=\"prettyprint linenums prettyprinted\"><ol class=\"linenums\"><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">say</span><span class=\"pun\">(</span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">again</span><span class=\"pun\">,</span><span class=\"pln\"> hello</span><span class=\"pun\">,</span><span class=\"pln\"> bye</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">hello</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `Hello !`</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">bye</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `Bye`</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">again</span><span class=\"pun\">);</span></code></li><li class=\"L6\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `again create an error !`</span></code></li><li class=\"L7\"><code class=\"lang-js\"><span class=\"pun\">});</span></code></li><li class=\"L8\"><code class=\"lang-js\"><span class=\"pln\">say</span><span class=\"pun\">([</span><span class=\"str\">'bye'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'again'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">'hello'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">function</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">b</span><span class=\"pun\">,</span><span class=\"pln\"> a</span><span class=\"pun\">,</span><span class=\"pln\"> h</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">{</span></code></li><li class=\"L9\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">h</span><span class=\"pun\">);</span></code></li><li class=\"L0\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `Hello !`</span></code></li><li class=\"L1\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">b</span><span class=\"pun\">);</span></code></li><li class=\"L2\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `Bye`</span></code></li><li class=\"L3\"><code class=\"lang-js\"><span class=\"pln\">  console</span><span class=\"pun\">.</span><span class=\"pln\">log</span><span class=\"pun\">(</span><span class=\"pln\">a</span><span class=\"pun\">);</span></code></li><li class=\"L4\"><code class=\"lang-js\"><span class=\"pln\">  </span><span class=\"com\">// Log : `again create an error !`</span></code></li><li class=\"L5\"><code class=\"lang-js\"><span class=\"pun\">}]);</span></code></li></ol></pre>\n<blockquote>\n<p><em><samp>Exemple :</samp></em> <strong><a href=\"http://codepen.io/Haeresis/pen/xVpjxV\" target=\"_blank\">Vous trouverez un exemple Live de ce code sur ce Codepen !</a></strong></p>\n</blockquote>", "dates" : { "published" : { "$date" : 1460129700000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "#regexExplainer ul {\n    font-family: 'Open Sans',\"Lucida Sans Unicode\",\"Lucida Grande\",sans-serif;\n    margin:0;\n    list-item-type: none;\n}\n.regex_colorizer b {\n    background: #80c0ff;\n    color: navy;\n}\n.regex_colorizer b.g1 {\n    background: #a9f854;\n    color: #282828;\n}\n.regex_colorizer i {\n    background: #ffc080;\n    color: #603000;\n}\n.regex_colorizer b.et {\n    background: #aaa;\n    color: #282828;\n}\n.regex_colorizer i b, .regex_colorizer i b.et, .regex_colorizer i u {\n    background: #e0a060;\n    color: #603000;\n}\n.treeview .token {\n    background: #C9DEF2;\n    color: #164a91;\n}\n.treeview .group {\n    background: #ffefed;\n    color: #7f2a1d;\n}\n.treeview .note {\n    background: #ccc;\n    color: #454545;\n}\n.treeview .quantifier {\n    background: #c6f1e6;\n    color: #0a5b43;\n}\n.treeview .misc {\n    color: #814A03;\n    background: #ffd298;\n}\n.treeview .literal {\n    background: #ffecda;\n    color: #9a3b01;\n}\n.match1 {\n    color: #124F46;\n    background-color: #C6E99D;\n}\n.treeview .modifier {\n    background: #e3d9ee;\n    color: #54256f;\n}\n.hidden-explaination div {\n  display: none;\n}", "title" : "JavaScript et Callback par Nom de paramètre comme dans AngularJS", "urn" : "javascript-et-callback-par-nom-de-parametre-comme-dans-angularjs" }
{ "__v" : 0, "_id" : { "$oid" : "575a62fbd1b7fe136fc2005e" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48ba" } ], "content" : "Dans cet article il ne va pas être question d'expliquer l'utilité du point virgule (semi-colon) « ; » ou encore les bienfaits de l'opérateur d'égalité stricte (strict equality operator) « === » mais plutôt de vous montrer par l'exemple comment produire du code que vous et les autres pourrons relire sans entrer dans les détails si cela n'est pas nécessaire.\n\n<div style=\"text-align: center\">\n<img style=\"max-width:100%;border-radius: 16px\" src=\"media/images/upload/clean-code-design-patterns-7-638.jpg\" alt=\"Clean Code\">\n<span style=\"font-style: italic\">*Source : http://fr.slideshare.net/pazscall/clean-code-design-patterns*</span>\n</div>\n\nNous allons tout au long de cet article aborder plusieurs notions également comme :\n\n- **La programmation par intention** (intentional programming) ou le fait de rassembler et nommer chaque suite d'instruction dans une fonction pour rendre le code aisé à la relecture.\n- **La programmation par retour de fonction** (function callback) ou le fait de déléguer à une fonction externe ce qu'il va se passer à la fin d'une suite d'instruction.\n- **La programmation par entrée/sortie** (I/O) ou le fait que chaque fonction doit clairement définir ce qu'elles attendent en entrée (inputs), et ce qu'elles vont renvoyer en sortie (outputs).\n- **La programmation asynchrone** ou le fait d'attendre un évènement ou un temps précis sur des boucles indépendantes de l'Event Loop avant l'exécution du code.\n\nC'est parti pour apprendre tout ça à travers un exemple d'upload de fichier.\n\n\n\n\n\n## Sélectionner une image ##\n\nCommençons par tout script JavaScript courant, une simple suite d'instruction se trouvant dans le **champ lexical global** (global scope) afin, dans notre exemple, de sélectionner une image stockée sur notre disque dur.\n\n```js\nvar inputFile = document.createElement(\"input\");\ninputFile.type = \"file\";\ninputFile.accept = \"image/*\";\n\ndocument.getElementsByTagName(\"body\")[0].appendChild(inputFile);\n```\n\nUne fois ce code exécuté, vous devriez voir un bouton pour choisir une image.\n\n<input type=\"file\" accept=\"image/*\">\n\nDans le détail c'est assez simple :\n\n- On affecte à la variable `inputFile` l'objet d'instance `HTMLInputElement` (représentant une balise `<input>`) en le créant via la méthode `document.createElement`.\n- On affecte la propriété `type` ainsi que la propriété `accept` représentant les attributs `type` et `accept` de la balise `<input>`.\n- Et on insère dans l'objet d'instance `HTMLBodyElement` (`<body>`), en passant à la méthode `appendChild`, l'élément que nous venons de créer.\n\n> **Comprendre le DOM et les Nodes**\n\n> La méthode `document.createElement` créé des objets d'instance `HTMLElement` et retourne une référence vers ces objets qui ne sont pas encore placés dans le DOM. Si le premier paramètre est un élément HTML connu, l'objet est encore plus précis. Dans notre cas `document.createElement(\"input\")` est un objet d'instance `HTMLInputElement`.\n\n> La méthode `document.getElementsByTagName` récupère un tableau d'instance `HTMLCollection` dont chaque élément est une référence à un `HTMLElement` déjà placé dans le DOM. Dans notre exemple, `document.getElementsByTagName(\"body\")` retourne un objet `HTMLCollection` d'un seul élément puisque la balise `<body>` est unique dans le DOM et `document.getElementsByTagName(\"body\")[0]` retourne donc cet unique élément d'instance plus précise `HTMLBodyElement`.\n\n> Chaque objet en JavaScript est créé à partir d'un prototype et y est lié. Chaque prototype est lui-même un objet qui est créer à partir d'un prototype et y est lié, etc. Tous les objets en dernier lieu sont chaîné à `Object`. Par exemple ici :\n- Pour `HTMLBodyElement` (`<body>`) la chaîne prototypale est la suivante : `HTMLBodyElement` -> `HTMLElement` -> `Element` -> `Node` -> `EventTarget` -> `Object`\n- Pour `HTMLInputElement` (`<input>`) la chaine prototypale est la suivante : `HTMLInputElement` -> `HTMLElement` -> `Element` -> `Node` -> `EventTarget` -> `Object`\n\n> Nos deux objets ont chaqu'un des méthodes utilisables comme `appendChild` qu'ils accèdent de leurs prototypes aussi :\n- La possibilité de pouvoir utiliser la méthode `inputFile.toString` vient de `Object`.\n- La possibilité de pouvoir utiliser la méthode `inputFile.addEventListener` vient de `EventTarget`.\n- La possibilité de pouvoir utiliser la méthode `inputFile.textContent` vient de `Node`.\n- La possibilité de pouvoir utiliser la méthode `inputFile.getElementsByTagName` vient de `Element`.\n- etc...\n\n> Il faut également comprendre que l'on manipule des références vers les éléments HTML du DOM et que tous les objets HTML chargés en mémoire dans le navigateur ne sont pas forcément tous dans le DOM. C'est le cas de notre objet `HTMLInputElement` qui n'est référencé comme enfant de `HTMLBodyElement` dans le DOM qu'à partir de la ligne 5. Avant cela, l'objet existe et est manipulable via sa référence `inputFile` mais il n'est pas dans le DOM. Tout objet dont la référence se perd dans le code (n'est pas utilisé), et qui n'a pas été référencé dans le DOM (injecté) est alors perdu.\n\n\n\n### Lire l'image sélectionnée ###\n\nIl va maintenant être question de lire l'image que nous venons de sélectionner. C'est à dire de transformer chaque octets de donnée de l'image en une chaîne de caractère exploitable par notre navigateur afin que celui-ci puisse afficher l'image.\n\nToujours dans notre **champ lexical global** et à la suite des précédentes instructions nous ajoutons ceci :\n\n```js\nvar reader = new FileReader();\nreader.readAsDataURL(inputFile.files[0]);\n```\n\nEn executant le code, nous obtenons alors l'erreur suivante : `Uncaught TypeError: Failed to execute 'readAsDataURL' on 'FileReader': parameter 1 is not of type 'Blob'.`\n\nLe problème est le suivant : il faut exécuter ce pend de code après qu'on ai sélectionné l'image sinon, au moment de transformer nos octets avec `reader.readAsDataURL`, `inputFile` ne contient pas d'image dans son tableau `files`.\n\n\n\n### Après la sélection... ###\n\nNous allons donc ajouter un écouteur d'évènement sur notre `HTMLInputElement` grâce à la méthode `addEventListener` disponible et exécuter par un **retour de fonction** ce qu'il va se passer quand l’évènement ce produit. Voici donc à quoi va maintenant ressembler la partie qui est dans le **champ lexical global**.\n\n```js\nvar inputFile = document.createElement(\"input\");\ninputFile.type = \"file\";\ninputFile.accept = \"image/*\";\n\ninputFile.addEventListener(\"change\", function () {\n    var reader = new FileReader();\n    reader.readAsDataURL(inputFile.files[0]);\n\n    console.log(\"Done\");\n});\n\ndocument.getElementsByTagName(\"body\")[0].appendChild(inputFile);\n```\n\nOn précise donc ici via `\"change\"` à la ligne 5 que l’évènement que nous souhaitons écouter est le changement d'image dans l'élément `HTMLInputElement`. La fonction qui se trouve ensuite est celle qui va être exécutée par `addEventListener` quand l'image aura effectivement changée, à savoir : lire et convertir l'image.\n\nSi vous testez ce code, vous devriez voir dans la console de votre navigateur (F12, onglet console) le message « Done » (ligne 9) une fois l'évènement `\"change\"` déclenché.\n\n> **Comprendre la Boucle d’évènement**\n\n> Les instructions en JavaScript sont analysées de haut en bas et exécutées par la **boucle d’évènement** JavaScript (Event Loop). Quand une instruction JavaScript est analysée, elle est exécutée sur le tour (tick) courant, dans la pile (stack) courante. Chaque fois qu'une instruction fait appel à une fonction ou méthode, la pile se déplie et c'est au tour des instructions de cette fonction d'être exécutées sur le tour courant et ainsi de suite. Quand toutes les instructions d'une fonctions sont exécutées, la pile se replie jusqu'à ce que toutes les fonctions ai été exécutées de manière synchrone sur le même tour de la **boucle d'évènement**.\n\n> Cependant, quand une instruction est asynchrone, elle n'est pas exécutée aussitôt qu'elle est analysée mais elle par dans une autre pile que la pile courante. Cette pile est placée dans la file d'attente (queue) plus tard et sera exécutée sur un autre tour de la boucle. Dans notre exemple précédent, c'est le cas avec `addEventListener` dont la **fonction de retour** (callback) ne sera exécutée par la **boucle d'évènement** que lorsque l’évènement « changement d'image » sera levé. Les instructions dans `addEventListener` seront reversées dans la file d'attente au moment où l'image changera pour être exécutées sitôt que la boucle pourra s'en occuper.\n\n> Cependant, ce n'est pas parce qu'une fonction dispose d'une **fonction de retour** que celle-ci ne sera pas exécutée de manière synchrone, dans notre cas précédent c'est parce qu’il s'agit d'un évènement.\n\n> Ce qui provoque une exécution de code sur un autre tour de boucle parmi des instructions à la suite dans une fonction sont de manière non exhaustives les éléments suivants :\n - setInterval, setTimeout ou setImediate.\n - Event (Load, Click, ...)\n - XMLHttpRequest ou WebSocket\n - requestAnimationFrame\n - Des API Html comme File API, Web Database API\n - ...\n\n> Ainsi dans l'exemple suivant :\n\n> ```js\nconsole.log(\"Test 1\");\nsetInterval(function () {\n    console.log(\"Test 2\");\n}, 0);\nconsole.log(\"Test 3\");\n```\n\n> La sortie produira dans l'ordre : « Test 1 », « Test 3 » et « Test 2 ».\n\n\n\n### Avec fonction de retour asynchrone ###\n\nNous allons maintenant déporter ce qui est logique dans une fonction. Nous allons nommer cette fonction de manière à indiquer notre **intention** (intentional programming) pour comprendre ce qui est fait lors de la relecture du code.\n\nLe développeur se référera à la partie « Déclaration » si cela lui est nécessaire, sinon il se contentera de relire la partie « Exécution ».\n\n**Déclaration**\n\n```js\n/**\n * Select an image from your device library and allow you to define what do after.\n * @param  {selectImage~callback} afterSelection - Allow you to set what do after selection.\n * @return {HTMLInputElement} The `HTMLInputElement` used to select photo from library.\n */\nfunction selectImage(afterSelection) {\n    var inputFile = document.createElement(\"input\");\n    inputFile.type = \"file\";\n    inputFile.accept = \"image/*\";\n\n    inputFile.addEventListener(\"change\", function () {\n        if (afterSelection) {\n\n            /**\n             * What do after selecting image.\n             * @callback selectImage~callback\n             * @param {HTMLInputElement} inputFile - The `HTMLInputElement` used to select photo from library.\n             */\n            afterSelection(inputFile);\n        }\n    });\n\n    return inputFile;\n}\n```\n\nNotre fonction `selectImage` va nous permettre de créer le mécanisme de sélection d'image, de le mettre à disposition et de nous permettre de déléguer par **retour de fonction** ce qu'il sera fait une fois que l'image aura été choisie. Par ailleurs, cette fonction retourne le `HTMLInputElement` qu'il créer en retour immédiat et le fourni également en premier argument de la **fonction de retour**.\n\n**Exécution**\n\n```js\ndocument.getElementsByTagName(\"body\")[0].appendChild(\n    selectImage(function (inputFile) {\n        var reader = new FileReader();\n        reader.readAsDataURL(inputFile.files[0]);\n        console.log(\"Done\");\n    })\n);\n```\n\nAinsi à la ligne 2 nous savons que le code va nous permettre de sélectionner une image et la fonction passé en argument va constituer ce qu'il se passera quand celle-ci aura été choisie. En outre `selectImage` retourne de manière synchrone via son mot clé `return` le `HTMLInputElement` ce qui permet de le passer à `appendChild` à la ligne 1.\n\n> **Comprendre les commentaires JSDoc**\n\n> Si le but de la **programmation par intention** est de permettre de relire plus facilement ce que le code fait dans la partie « Exécution », les commentaires JSDoc permettent quand à eux d'expliquer les **entrées/sorties** (inputs/outputs ou I/O) des fonctions définies dans la partie « Déclaration ».\n\n> Le but est de ne pas relire le contenu de la fonction (sauf s'il faut la modifier) mais de comprendre\n- ce qu'elle fait,\n- ce qu'elle à besoin en entrée et\n- ce qu'elle retourne en sortie (ou ce qu'elle fournit à la **fonction de retour**).\n\n> Bien qu'il ne soit pas obligatoire de respecter le schéma de mon exemple, cela vous permettra avec divers outils de générer une documentation de vos scripts automatiquement.\n\n\n\n\n\n## Afficher l'image ##\n\nAugmentons un peu le code de retour de notre exemple précédent après l'utilisation de la fonction `selectImage`.\n\n```js\nvar reader = new FileReader(),\n    image = document.createElement(\"img\");\n\nreader.readAsDataURL(inputFile.files[0]);\nimage.src = reader.result;\n\ndocument.getElementsByTagName(\"body\")[0].appendChild(image);\nconsole.log(\"Done\");\n```\n\nNous voyons à la ligne 7 que notre image est censé être affichée dans le DOM puisqu'elle est injectée dans la balise `<body>`. Pourtant ce n'est pas le cas car le reader n'a pas eu le temps de convertir le résultat avant de l'afficher dans la source ce qui fait qu'il ne se passe rien.\n\n\n\n### Attendre la fin de la lecture ###\n\nDe la même manière qu'avec notre objet `HTMLInputElement`, il va falloir écouter l’évènement `\"load\"` qui exécutera une **fonction de retour** quand l'image aura correctement été lue et convertie.\n\n```js\nvar reader = new FileReader();\n\nreader.addEventListener(\"load\", function () {\n    var image = document.createElement(\"img\");\n    image.src = reader.result;\n\n    document.getElementsByTagName(\"body\")[0].appendChild(image);\n    console.log(\"Done\");\n});\n\nreader.readAsDataURL(inputFile.files[0]);\n```\n\nIl est important de savoir ce qui déclenche l'évènement. Dans le cas présent, c'est l'exécution de `readAsDataURL` à la ligne 11. Ce qui signifie que pour que le code de retour dans `\"load\"` puisse être exécuté, il faut qu'il ai été déclaré avant `readAsDataURL` sinon au moment ou celui ci lèvera l’évènement `\"load\"`, il n'y aura pas encore d'écouteur d'évènement de déclaré.\n\n\n\n### Avec fonction de retour asynchrone ###\n\nRé-écrivons ce code afin d'appeler les instructions d'exécution principale (dans le **champ lexical global**) par **intention**. Nous ajoutons donc au côté de `selectImage` une nouvelle fonction que nous appellerons `readImage`.\n\n**Déclaration**\n\n```js\n/* ... */\n\n/**\n * Convert an Image from device to a Data Url Base64 string.\n * @param  {HTMLInputElement}   inputFile        - Element used to read the source image.\n * @param  {readImage~callback} afterConvertion  - Allow you to set what do after convertion.\n */\nfunction readImage(inputFile, afterConvertion) {\n    var reader = new FileReader();\n\n    reader.addEventListener(\"load\", function () {\n        var image = document.createElement(\"img\");\n        image.src = reader.result;\n        if (afterConvertion) {\n\n            /**\n             * What do after converting image.\n             * @callback readImage~callback\n             * @param {HTMLImageElement} image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n             * @param {FileReader}       reader - The `FileReader` used to convert the original Image.\n             */\n            afterConvertion(image, reader);\n        }\n    });\n\n    reader.readAsDataURL(inputFile.files[0]);\n}\n```\n\nNous fournissons pour le **retour de fonction** la possibilité de manipuler l'image avec en premier paramètre l'objet `HTMLImageElement` et en second paramètre l'objet `FileReader`. Nous choisissons cet ordre car il est plus probable qu'à l'utilisation, on souhaite manipuler l'image lue que réellement l'objet qui à permis sa conversion.\n\n**Exécution**\n\n```js\nvar body = document.getElementsByTagName(\"body\")[0];\n\nbody.appendChild(\n    selectImage(function (inputFile) {\n        readImage(inputFile, function (image) {\n            body.appendChild(image);\n            console.log(this.toString());\n        });\n    })\n);\n```\n\nAprès avoir mis la référence à `<body>` dans la variable `body` ligne 1, on peut comprendre à la lecture des ligne 4 et 5 que le code va nous permettre de choisir une image, de la lire puis de faire autre chose. En l'occurrence ici de l'ajouter au DOM. On peut également voir à la ligne 5 que nous avons uniquement décidé d'utiliser le paramètre `image` pour la suite.\n\n> **Raccourci et conservation des contextes d'exécution avec ES6**\n\n> On utilise la notation `function () { /* ... */ }` pour utiliser une fonction anonyme comme **fonction de retour** dans le code destiné à l’exécution dans le champ lexical global (le contexte d'exécution le plus haut). Réécrire ce terme `function` est assez verbeux et recréer un nouveau contexte d'exécution entre chaque fonction redéfini la valeur de `this` à chaque niveau. Il est possible de conserver le `this` du contexte d'exécution important en changeant la manière de nommer les **fonctions de retour** avec `=>`. Le code précédent donnerait donc :\n\n> ```js\nvar body = this.document.getElementsByTagName(\"body\")[0];\n\n> body.appendChild(\n    selectImage(inputFile => {\n        readImage(inputFile, image => {\n            body.appendChild(image);\n            console.log(this.toString());\n        });\n    })\n);\n```\n\n> Dans l'exemple avec `=>`, `this` vaut `window` alors que dans celui avec `function`, `this` vaut `undefined`.\n\n\n\n\n\n## Redimensionner l'image ##\n\nL'image sélectionnée est parfois grande alors que nous souhaitons l'afficher dans une zone réduite. De plus si nous souhaitons l'uploader sur le serveur plus tard, il serait intéressant qu'elle soit moins lourde. On souhaiterait qu'elle fasse au maximum 800 pixels de large ou au maximum 600 pixels de haut tout en conservant son ratio initial.\n\nVoici un petit algorithme capable de transformer notre image en utilisant pour cela un objet `HTMLCanvasElement`. Nous allons cette fois directement le créer dans une fonction, et l'utiliserons dans la partie exécution.\n\n**Déclaration**\n\n```js\n/* ... */\n\n/**\n * Reduced size of image and kept the ratio.\n * @param  {HTMLImageElement}     imageSource   - Element used as original image.\n * @param  {reduceImage~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction reduceImage(imageSource, afterResizing) {\n    var canvas = document.createElement(\"canvas\"),\n        imageResult = document.createElement(\"img\"),\n        context,\n        maxWidth = 800,\n        maxHeight = 600,\n        width = imageSource.width,\n        height = imageSource.height;\n\n    if (width > height) {\n        if (width > maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n        }\n    } else {\n        if (height > maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n        }\n    }\n\n    canvas.width = width;\n    canvas.height = height;\n\n    context = canvas.getContext(\"2d\");\n    context.drawImage(imageSource, 0, 0, width, height);\n\n    imageResult.src = canvas.toDataURL(\"image/jpg\", 0.8);\n\n    /**\n     * What do after resizing image.\n     * @callback reduceImage~callback\n     * @param {HTMLImageElement} image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n     * @param {FileReader}       reader - The `FileReader` used to convert the original Image.\n     */\n    afterResizing(imageResult, canvas);\n}\n```\n\nNous pouvons lire comment cela fonctionne :\n- Après avoir fixé les largeur et hauteur maximal aux lignes 12 et 13,\n- nous trouvons quelle est la dimension la plus importante pour appliquer la valeur maximale à celle-ci ligne 17\n- et affectons à l'autre dimension le ratio approprié pour réduire l'image (ligne 19 et 24).\n- Après avoir défini la taille du canvas qui va nous permettre de créer l'image aux dimensions finales nous dessinons l'image à la ligne 33,\n- puis nous affectons l'image dans un nouvel élément de type `HTMLImageElement` en transferrant dans sa source le contenu du canvas au format « jpeg » compressé à « 80% » ligne 35.\n\n> Note : actuellement ce code produira une image noire. C'est normal et cela va être expliqué dans la prochaine section.\n\nIl ne nous reste plus qu'à utiliser notre nouvelle fonction.\n\n**Exécution**\n\n```js\nvar body = document.getElementsByTagName(\"body\")[0];\n\nbody.appendChild(\n    selectImage(function (inputFile) {\n        readImage(inputFile, function (image) {\n            reduceImage(image, function (imageResult) {\n                body.appendChild(imageResult);\n                console.log(\"Done\");\n            });\n        });\n    })\n);\n```\n\nNous pouvons voir que les lignes 7 et 8 (anciennement 6 et 7) sont restées inchangées et qu'une nouvelle ligne d'intention a été ajouté, à savoir `reduceImage` (`image` est tout de même devenu `imageResult`).\n\n> **Pourquoi la cascade de fonction de retour**\n\n> Sachez que si vous trouvez la cascade de **fonction de retour** difficile à lire, vous pouvez toujours nommer et affecter chaque étape dans des variables pour tout rendre à plat. Pour ma part, je ne trouve pas cela plus simple puisque cela inverse le sens de lecture par rapport à ce qui est fait en premier et ce qui apparaît dans le fichier de code.\n\n> ```js\nvar body, inputFile, readImageCallback, selectImageCallback;\n\n> body = document.getElementsByTagName(\"body\")[0];\n\n> readImageCallback = function (image) {\n    body.appendChild(image);\n    console.log(\"Done\");\n};\n\n> selectImageCallback = function (inputFile) {\n    readImage(inputFile, readImageCallback);\n};\n\n> inputFile = selectImage(selectImageCallback);\n\n> body.appendChild(inputFile);\n```\n\n> Il serait possible de rétablir le sens de lectrue non plus en associant les fonctions en tant qu'expression (dans une variable) mais en tant que déclaration de fonction afin qu'elle soit analysée à l'entrée dans la fonction et non à la ligne de l'affectation à une variable.\n\n> ```js\nvar body, inputFile;\n\n> body = document.getElementsByTagName(\"body\")[0];\n\n> inputFile = selectImage(selectImageCallback);\n\n> function selectImageCallback(inputFile) {\n    readImage(inputFile, readImageCallback);\n};\n\n> function readImageCallback(image) {\n    body.appendChild(image);\n    console.log(\"Done\");\n};\n\n> body.appendChild(inputFile);\n```\n\n> Ce que je n'aime pas personnellement car dans ce cas nous mélangeons déclaration et exécution. C'est à dire qu'il faudrait déclarer toutes les fonctions à partir de la troisième ligne et nous perdrions de nouveau le sens de lecture.\n\n\n\n### Éviter l'image noire ###\n\nSi votre image réduite apparaît en noire dans le canvas c'est tout simplement parce qu'elle n'est pas chargée au moment ou elle est appliquée dans celui-ci. Il faut alors, comme c'était le cas avec l'objet `FileReader` attendre que l'image soit chargée avant d'exécuter la fonction de retour.\n\n```js\n/* ... */\n\n/**\n * Convert an Image from device to a Data Url Base64 string.\n * @param  {HTMLInputElement}   inputFile       - Element used to read the source image.\n * @param  {readImage~callback} afterConvertion - Allow you to set what do after convertion.\n */\nfunction readImage(inputFile, afterConvertion) {\n    var reader = new FileReader();\n\n    reader.addEventListener(\"load\", function () {\n        var image = document.createElement(\"img\");\n\n        image.addEventListener(\"load\", function () {\n            if (afterConvertion) {\n\n                /**\n                 * What do after converting image.\n                 * @callback readImage~callback\n                 * @param {HTMLImageElement} image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n                 * @param {FileReader}       reader - The `FileReader` used to convert the original Image.\n                 */\n                afterConvertion(image, reader);\n            }\n        });\n\n        image.src = reader.result;\n    });\n\n    reader.readAsDataURL(inputFile.files[0]);\n}\n\n/* ... */\n\n/**\n * Reduced size of image, kept the ratio and return a miniature of original image.\n * @param  {HTMLImageElement}     imageSource   - Element used as original image.\n * @param  {reduceImage~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction reduceImage(imageSource, afterResizing) {\n    var canvas = document.createElement(\"canvas\"),\n        imageResult = document.createElement(\"img\"),\n        context,\n        maxWidth = 800,\n        maxHeight = 600,\n        width = imageSource.width,\n        height = imageSource.height;\n\n    if (width > height) {\n        if (width > maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n        }\n    } else {\n        if (height > maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n        }\n    }\n\n    canvas.width = width;\n    canvas.height = height;\n\n    context = canvas.getContext(\"2d\");\n    context.drawImage(imageSource, 0, 0, width, height);\n\n    imageResult.addEventListener(\"load\", function () {\n\n        /**\n         * What do after resizing image.\n         * @callback reduceImage~callback\n         * @param {HTMLImageElement} image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n         * @param {FileReader}       reader - The `FileReader` used to convert the original Image.\n         */\n        afterResizing(imageResult, canvas);\n    });\n\n    imageResult.src = canvas.toDataURL(\"image/jpg\", 0.8);\n}\n\n/* ... */\n```\n\nvous constaterez donc, ligne 14 pour `readImage` et ligne 67 pour `reduceImage`, que nous avons ajouté `addEventListener` pour l'évènement `\"load\"` afin d'attendre que l'image soit complètement chargée avant de passer à la suite.\n\n\n\n### Externaliser des mécanismes réutilisables ###\n\nNotre fonction `reduceImage` fait deux choses :\n- elle nous délivre de nouvelles dimentions à partir de dimentions originales et\n- elle créée une « miniature » de l'image originale avec un canvas.\n\nCes deux actions pourraient être scindées pour ajouter un **niveau d'intention** à la relecture.\n\n```js\n/* ... */\n\n/**\n * Reduce size of 2D item and kept the ratio based on max width and height.\n * @param  {number}                       width         - Original with of item.\n * @param  {number}                       height        - Original height of item.\n * @param  {number}                       maxWidth      - Maximal width of the output item.\n * @param  {number}                       maxHeight     - Maximal height of the output item.\n * @param  {resizeWithSameRatio~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction resizeWithSameRatio(width, height, maxWidth, maxHeight, afterResizing) {\n    if (width > height) {\n        if (width > maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n        }\n    } else {\n        if (height > maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n        }\n    }\n\n    /**\n     * What do after find the reduced value.\n     * @callback resizeWithSameRatio~callback\n     * @param {number} width  - New with of item.\n     * @param {number} height - New height of item.\n     */\n    afterResizing(width, height);\n}\n\n/**\n * Create a reduced image from a more large image.\n * @param  {HTMLImageElement}             imageSource   - Element used as original image.\n * @param  {number}                       width         - New image width.\n * @param  {number}                       height        - New image height.\n * @param  {thumbnailWithCanvas~callback} afterResizing - Allow you to set what do after generating new image.\n */\nfunction thumbnailWithCanvas(imageSource, width, height, afterResizing) {\n    var canvas = document.createElement(\"canvas\"),\n        imageResult = document.createElement(\"img\"),\n        context;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    context = canvas.getContext(\"2d\");\n    context.drawImage(imageSource, 0, 0, width, height);\n\n    imageResult.addEventListener(\"load\", function () {\n\n        /**\n         * What do after render the reduced image.\n         * @callback resizeWithSameRatio~callback\n         * @param {HTMLImageElement}  image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n         * @param {HTMLCanvasElement} canvas - The `HTMLCanvasElement` used to reduce the image.\n         */\n        afterResizing(imageResult, canvas);\n    });\n\n    imageResult.src = canvas.toDataURL(\"image/jpg\", 0.8);\n}\n\n/**\n * Reduce size of image, keept the ratio and return a miniature of original image.\n * @param  {HTMLImageElement}     imageSource   - Element used as original image.\n * @param  {reduceImage~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction reduceImage(imageSource, afterResizing) {\n    resizeWithSameRatio(imageSource.width, imageSource.height, 800, 600, function (width, height) {\n        thumbnailWithCanvas(imageSource, width, height, function (imageResult, canvas) {\n\n            /**\n             * What do after resizing image.\n             * @callback reduceImage~callback\n             * @param {HTMLImageElement}  image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n             * @param {HTMLCanvasElement} canvas - The `HTMLCanvasElement` used to reduce the image.\n             */\n            afterResizing(imageResult, canvas);\n        })\n    });\n}\n\n/* ... */\n```\n\n> **Dette technique ou comment trouver le bon niveau d'intention**\n\n> Vous me direz : « Pourquoi ne pas encore re-scinder les fonctions `resizeWithSameRatio` ou `thumbnailWithCanvas` ? Dans ce cas là, où s'arrête le travail pour faciliter la relecture ? Il faut pour cela repérer en quoi la fonction pourrait se suffire à elle-même. En général les « inputs/outputs » sont une bonne indication car si vous êtes capable en sortie de produire un élément de même type que celui en entrée, c'est que vos instructions sont bonnes pour être groupées.\n\n> Il n'est pas non plus nécessaire de scinder une fonction qui pourrait l'être tant que la nécessité ne s'en fait pas ressentir. Il faut trouver le bon équilibre entre temps et utilité.\n\n> Certain outils vous permette de jauger la complexité des fonctions à l'aide de la **complexité cyclomatique** (Cyclomatic Complexity) ou du **Ratio d'endettement** qui donne un poids à chaque instruction et qui vous aide à grouper celle-ci en sous fonctions.\n\n\n\n### Paramètres d'entrée par passage d'objet ###\n\nVous aurez remarqué que pour la fonction `resizeWithSameRatio` il y a un nombre conséquent de paramètre à passer. Là première question à se poser est : « Est-il possible de diminuer ce nombre de paramètre ? » Ici on pourrait estimer que si la `maxWidth` et la `maxHeight` sont `undefined` alors on pourrait assigner des valeurs par défaut comme ceci :\n\n```js\n/* ... */\nfunction resizeWithSameRatio(width, height, maxWidth, maxHeight, afterResizing) {\n    var maxWidth = options.maxWidth || 800,\n        maxHeight = options.maxHeight || 600/* ... */\n\n    /* ... */\n}\n/* ... */\n```\n\nce qui ne nous oblige plus à préciser réellement les valeurs en utilisant notre fonction comme ceci :\n\n```js\nresizeWithSameRatio(1024, 768, undefined, undefined, function (width, height) {\n    /* ... */\n});\n```\n\nCependant vous noterez deux problèmes :\n- Bien qu'il ne soit plus nécessaire d'indiquer les tailles maximales choisis pour la miniature, il est nécessaire de placer des valeurs à vide pour pouvoir appeler en dernier lieu, à la bonne position, la **fonction de retour**.\n- Il est impossible à la relecture de la partie « Exécution » de comprendre à quoi servent chaque paramètres passés. Il faut alors se référer à la partie « Déclaration ».\n\n> Note : vous remarquerez que j'ai utilisé `undefined` et non `null` pour signifier qu'il n'y avait pas de valeur de préciser. Si j'avais réellement voulu être en accord avec le type de paramètre attendu, j'aurais dû mettre `NaN`. Pour en savoir plus sur la différence entre null et undefined je vous propose de lire l'article [Est-il si null cet undefined ?](https://blog.lesieur.name/difference-entre-type-null-et-type-undefined-en-javascript/)\n\nLa manière la plus simple de rendre lisible les paramètres d'entré, et de les rendre optionnels à l'appel est de n'utiliser pour unique entrée qu'un objet de la manière suivante :\n\n```js\n/* ... */\n\n/**\n * Reduce size of 2D item and kept the ratio based on max width and height.\n * @param  {Object}                       options             - All input values.\n * @param  {number}                       [options.width]     - Original with of item.\n * @param  {number}                       [options.height]    - Original height of item.\n * @param  {number}                       [options.maxWidth]  - Maximal width of the output item.\n * @param  {number}                       [options.maxHeight] - Maximal height of the output item.\n * @param  {resizeWithSameRatio~callback} afterResizing       - Allow you to set what do after resizing.\n */\nfunction resizeWithSameRatio(options, afterResizing) {\n    var width = options.width || 0,\n        height = options.height || 0,\n        maxWidth = options.maxWidth || 800,\n        maxHeight = options.maxHeight || 600\n\n    if (width > height) {\n        if (width > maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n        }\n    } else {\n        if (height > maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n        }\n    }\n\n    /**\n     * What do after find the reduced value.\n     * @callback resizeWithSameRatio~callback\n     * @param {number} width  - New with of item.\n     * @param {number} height - New height of item.\n     */\n    afterResizing(width, height);\n}\n\n/* ... */\n\n/**\n * Create a reduced image from a more large image.\n * @param  {Object}                       options               - All input values.\n * @param  {HTMLImageElement}             [options.imageSource] - Element used as original image.\n * @param  {number}                       [options.width]       - New image width.\n * @param  {number}                       [options.height]      - New image height.\n * @param  {thumbnailWithCanvas~callback} afterResizing         - Allow you to set what do after generating new image.\n */\nfunction thumbnailWithCanvas(options, afterResizing) {\n    var imageSource = options.imageSource || document.createElement(\"img\"),\n        width = options.width || 0,\n        height = options.height || 0,\n        canvas = document.createElement(\"canvas\"),\n        imageResult = document.createElement(\"img\"),\n        context;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    context = canvas.getContext(\"2d\");\n    context.drawImage(imageSource, 0, 0, width, height);\n\n    imageResult.addEventListener(\"load\", function () {\n\n        /**\n         * What do after render the reduced image.\n         * @callback resizeWithSameRatio~callback\n         * @param {HTMLImageElement}  image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n         * @param {HTMLCanvasElement} canvas - The `HTMLCanvasElement` used to reduce the image.\n         */\n        afterResizing(imageResult, canvas);\n    });\n\n    imageResult.src = canvas.toDataURL(\"image/jpg\", 0.8);\n}\n\n/* ... */\n\n/**\n * Reduce size of image, kept the ratio and return a miniature of original image.\n * @param  {HTMLImageElement}     imageSource   - Element used as original image.\n * @param  {reduceImage~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction reduceImage(imageSource, afterResizing) {\n    resizeWithSameRatio({\n        height: imageSource.height,\n        width: imageSource.width\n    }, function (height, width) {\n        thumbnailWithCanvas({\n            imageSource: imageSource,\n            width: width,\n            height: height\n        }, function (canvas, imageResult) {\n\n            /**\n             * What do after resizing image.\n             * @callback reduceImage~callback\n             * @param {HTMLImageElement}  image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n             * @param {HTMLCanvasElement} canvas - The `HTMLCanvasElement` used to reduce the image.\n             */\n            afterResizing(imageResult, canvas);\n        })\n    });\n}\n\n/* ... */\n```\n\nVous remarquerez ainsi que lors de l'appel des fonctions `resizeWithSameRatio` ligne 85 et `thumbnailWithCanvas` ligne 89 nous ne passons que les paramètres nécessaires dans l'ordre voulu et que nous savons à présent côté « Exécution » à quoi correspond chaque paramètre d'entrée puisqu'ils sont nommés.\n\n> **Passage de paramètres d'entrée par décomposition avec ES6**\n\n> Vous constaterez dans l'exemple précédent qu'il est nécessaire de consacrer plusieurs lignes afin de constituer des **fonction de substitution** (fallback) au cas où la propriété n'ai pas été passée dans l'objet des entrées (ligne 13 à 16 pour `resizeWithSameRatio`). Les fonctions de substitution sont assignés comme raccourci grâce à `||` : si la partie de gauche une fois convertie en Boolean renvoi `true`, alors on assigne cette valeur dans sa forme originale, si elle renvoi `false` alors on passe à l'élément de droite et on l'assigne.\n\n> Il existe un meilleurs raccourci en ES6 qui consiste à directement créer les éléments vides lors de la définition de la fonction par **décomposition** :\n\n> ```js\n/* ... */\nfunction resizeWithSameRatio({\n    width = 0,\n    height = 0,\n    maxWidth = 800,\n    maxHeight = 600\n} = {}, afterResizing) {\n    if (width > height) {\n        if (width > maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n        }\n    } else {\n        if (height > maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n        }\n    }\n    /* ... */\n}\n/* ... */\n```\n\n> afin de l'appeler comme ceci :\n\n> ```js\nresizeWithSameRatio({\n    height: imageSource.height,\n    width: imageSource.width\n}, function (width, height) {\n    /* ... */\n});\n```\n\n\n\n### Paramètres de sortie avec référence par nom au lieu de référence par position ###\n\nDe la même manière que l'on souhaite uniquement passer les paramètres d'entrée dont nous avons besoin pour utiliser une fonction, on souhaiterait pouvoir utiliser uniquement les paramètres de sortie dont nous avons besoin sans avoir à invoquer des variables que nous n'utiliserons pas dans la **fonction de retour**. Cela est possible en utilisant des **références par nom** [comme dans AngularJS](https://blog.lesieur.name/javascript-et-callback-par-nom-de-parametre-comme-dans-angularjs/) au lieu de références par position.\n\nNotre code précédent devient alors celui-ci :\n\n```js\n/* ... */\n\n/**\n * Reduce size of 2D item and kept the ratio based on max width and height.\n * @param  {Object}                       options             - All input values.\n * @param  {number}                       [options.width]     - Original with of item.\n * @param  {number}                       [options.height]    - Original height of item.\n * @param  {number}                       [options.maxWidth]  - Maximal width of the output item.\n * @param  {number}                       [options.maxHeight] - Maximal height of the output item.\n * @param  {resizeWithSameRatio~callback} afterResizing       - Allow you to set what do after resizing.\n */\nfunction resizeWithSameRatio(options, afterResizing) {\n    var width = options.width || 0,\n        height = options.height || 0,\n        maxWidth = options.maxWidth || 800,\n        maxHeight = options.maxHeight || 600\n\n    if (width > height) {\n        if (width > maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n        }\n    } else {\n        if (height > maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n        }\n    }\n\n    /**\n     * What do after find the reduced value.\n     * @callback resizeWithSameRatio~callback\n     * @param {number} [width]  - New with of item.\n     * @param {number} [height] - New height of item.\n     */\n    Function.namedParameters(afterResizing, {\n        width: width,\n        height: height\n    });\n}\n\n/* ... */\n\n/**\n * Create a reduced image from a more large image.\n * @param  {Object}                       options               - All input values.\n * @param  {HTMLImageElement}             [options.imageSource] - Element used as original image.\n * @param  {number}                       [options.width]       - New image width.\n * @param  {number}                       [options.height]      - New image height.\n * @param  {thumbnailWithCanvas~callback} afterResizing         - Allow you to set what do after generating new image.\n */\nfunction thumbnailWithCanvas(options, afterResizing) {\n    var imageSource = options.imageSource || document.createElement(\"img\"),\n        width = options.width || 0,\n        height = options.height || 0,\n        canvas = document.createElement(\"canvas\"),\n        imageResult = document.createElement(\"img\"),\n        context;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    context = canvas.getContext(\"2d\");\n    context.drawImage(imageSource, 0, 0, width, height);\n\n    imageResult.addEventListener(\"load\", function () {\n\n        /**\n         * What do after render the reduced image.\n         * @callback resizeWithSameRatio~callback\n         * @param {HTMLImageElement}  [image]  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n         * @param {HTMLCanvasElement} [canvas] - The `HTMLCanvasElement` used to reduce the image.\n         */\n        Function.namedParameters(afterResizing, {\n            imageResult: imageResult,\n            canvas: canvas\n        });\n    });\n\n    imageResult.src = canvas.toDataURL(\"image/jpg\", 0.8);\n}\n\n/* ... */\n\n/**\n * Reduce size of image, kept the ratio and return a miniature of original image.\n * @param  {HTMLImageElement}     imageSource   - Element used as original image.\n * @param  {reduceImage~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction reduceImage(imageSource, afterResizing) {\n    resizeWithSameRatio({\n        height: imageSource.height,\n        width: imageSource.width\n    }, function (height, width) {\n        thumbnailWithCanvas({\n            imageSource: imageSource,\n            width: width,\n            height: height\n        }, function (canvas, imageResult) {\n\n            /**\n             * What do after resizing image.\n             * @callback reduceImage~callback\n             * @param {HTMLImageElement}  image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n             * @param {HTMLCanvasElement} canvas - The `HTMLCanvasElement` used to reduce the image.\n             */\n            afterResizing(imageResult, canvas);\n        })\n    });\n}\n\n/* ... */\n```\n\nVous constaterez que nous faisons alors appel à `Function.namedParameters` qui nous permet de créer des fonctions de retour qui nous renvoi les paramètres dans l'ordre que nous le souhaitons et cela en s'appuyant sur le **nom du paramètre**. Ainsi nous pouvons comme c'est le cas ligne 94 et ligne 99 intervertir les paramètres ou seulement appeler le second en premier sans que cela ne brise notre code.\n\n> **Comment simuler un retour de fonction par nom de paramètre**\n\n> Basiquement le code utiliser par `Function.namedParameters` pourrait être le suivant.\n\n> ```js\nFunction.prototype.namedParameters = function (type, list, error) {\n    var params,\n        callback = type,\n        regex = /^(?:function *[a-zA-Z0-9_$]*)? *\\(? *([a-zA-Z0-9_$, ]*) *\\)?/g,\n        functions = list || {};\n    if (type instanceof Array) {\n        callback = type.pop();\n        params = type;\n    } else {\n        params = ((regex.exec(callback.toString()) || [1]).slice(1)[0] || \"\").split(',')\n    }\n    params = params.map(function (item) {\n        var key = item.trim();\n        if (functions.hasOwnProperty(key)) {\n            return functions[key];\n        } else {\n            return (error && error(key)) || new Error('Named parameter `' + key + \"` doesn't exist.\");\n        }\n    });\n    callback.apply(this, params);\n};\n```\n\n> Vous trouverez tout ce qu'il vous faut dans l'article [JavaScript et Callback par Nom de paramètre comme dans AngularJS](https://blog.lesieur.name/javascript-et-callback-par-nom-de-parametre-comme-dans-angularjs/) pour manipuler `Function.prototype.namedParameters` et comprendre comment il fonctionne.\n\n\n\n\n\n## Uploader l'image ##\n\nLa dernière étape va être d'uploader l'image pour permettre à un code héberger sur le serveur de la récupérer et de l'enregistrer. Dans notre exemple, nous allons supposer que nous avons un code côté serveur qui attend une requête XMLHttpRequest (Ajax) en POST et qui s'attend à recevoir dans la variable `image` le contenu de l'image en base64. Si tout ce passe bien, le contenu « Done » est renvoyé. (Pour les besoins de l'article nous avons simulé cela avec l'adresse `http://www.mocky.io/v2/5773cc3c0f0000950c597af9`).\n\n### Upload, gestion d'erreur et de succès ###\n\nNous allons de nouveau créer une fonction pour gérer l'upload comme ceci :\n\n**Déclaration**\n\n```js\n/* ... */\n\n/**\n * Upload an image with an XHR POST request via the `image` variable.\n * @param  {Object}               options        - All input values.\n * @param  {string}               options.url    - Url of service that handle the image POST request.\n * @param  {HTMLImageElement}     options.image  - The `HTMLImageElement` that contain the image.\n * @param  {uploadImage~callback} afterUploading - Allow you to set what do after upload of image.\n */\nfunction uploadImage(options, afterUploading) {\n    var xhttp = new XMLHttpRequest(),\n        formData = new FormData();\n\n    url = options.url || new Error(\"`options.url` parameter invalid for `uploadImage` function.\");\n    image = options.image || new Error(\"`options.image` parameter invalid for `uploadImage` function.\");\n\n    if (url instanceof Error) {\n      throw url;\n    }\n    if (image instanceof Error) {\n      throw image;\n    }\n\n    formData.append(\"image\", image.src);\n    xhttp.open(\"POST\", url, true);\n\n    xhttp.addEventListener(\"load\", function () {\n        if (xhttp.status < 200 && xhttp.status >= 400) {\n            return Function.namedParameters(afterUploading, {\n                error: new Error(\"XHR connection error for `uploadImage` function.\"),\n                response: null\n            });\n        }\n\n        /**\n         * What do after upload the image.\n         * @callback uploadImage~callback\n         * @param {Error}  [error]    - Return `null` if no error occur else return an `Error` object.\n         * @param {string} [response] - Return the content of XHR response if no error occur, else return `null`.\n         */\n        Function.namedParameters(afterUploading, {\n            error: null,\n            response: xhttp.responseText\n        });\n    });\n\n    xhttp.addEventListener(\"error\", function (test) {\n        Function.namedParameters(afterUploading, {\n            error: new Error(\"XHR connection error for `uploadImage` function.\"),\n            response: null\n        });\n    });\n\n    xhttp.send(formData);\n}\n\n/* ... */\n```\n\nNous créons donc :\n- une instance `xhttp` de `XMLHttpRequest` ligne 11 que\n- nous paramétrons en POST à la ligne 25 laquelle nous ajoutons\n- une écoute en cas de réussite (ligne 27)\n- et une écoute en cas d'échec (ligne 47)\n- avant d'envoyer les données ligne 54 à l'aide d'un container `FormData`.\n\nLa nouveauté ici c'est la gestion des erreurs, nous pouvons constater que cette fois, les paramètres `options.url` et `options.image` sont obligatoire ce qui signifie qu'il n'ai pas possible de décider d'une valeur par défaut ligne 14 et 15. C'est pour cela que nous créons des `Error` afin de les lancer et ainsi créer des exceptions aux lignes 18 et 21. Le mot clé throw arrête toute suite au script et renvoi des exceptions qui sont ainsi récupérable via un mécanisme de `try` / `catch`, mais plus intéressant, qui permette au développeur utilisant la fonction de voir ce qui ne va pas.\n\n**Exécution**\n\n*Et voici le code final à relire pour comprendre rapidement ce qui ce passe ici. Il ne sera pas nécessaire d'entrer dans le détail à moins d'améliorer des fonctionnalités.*\n\n```js\nvar body = document.getElementsByTagName(\"body\")[0];\nbody.appendChild(\n    selectImage(function (inputFile) {\n        readImage(inputFile, function (image) {\n            reduceImage(image, function (imageResult) {\n                uploadImage({\n                    url: \"http://www.mocky.io/v2/5773cc3c0f0000950c597af9\",\n                    image: imageResult\n                }, function (error, response) {\n                    var data = document.createElement(\"div\");\n                    data.textContent = (error) ? error : response;\n\n                    body.appendChild(data);\n                    body.appendChild(imageResult);\n                });\n            });\n        });\n    })\n);\n```\n\nNous utilisons donc notre nouvelle fonction à la ligne 6 avec nos deux paramètres obligatoire. Dans notre exemple nous utilisons l'`error` pour définir quel message nous allons renvoyer dans le DOM (ligne 11).\n\n> **Erreur ou Exception ?**\n\n> En JavaScript les Erreurs sont un type d'objet à elles seules et se créent en utilisant la syntaxe suivante `new Error()`. Elles se manipulent comme un objet et peuvent être retournée avec `return` ou mises dans des variables.\n\n> Les Exceptions quant à elles sont des Erreurs qui sont lancées ou jetées avec le mot clé `throw` soit `throw new Error()` et ne peuvent plus être manipulées. Elles mettent ainsi fin aux contextes d'exécution les un après les autres en remontant jusqu'à afficher une erreur dans la console. Elles peuvent être interceptées avec `try` et l'erreur qu'elles remontent peut être manipulée via `catch (exception)`.\n\n> Vous trouverez tout ce qu'il vous faut dans l'article [Gérer les Erreurs et les Exceptions en JavaScript](https://blog.lesieur.name/gerer-les-erreurs-et-les-exceptions-en-javascript/) à propos des erreurs.\n\n\n\n\n\n## Isoler son code ##\n\nDepuis le début, nous créons tout dans le **champ lexical global** ce qui a pour conséquence d'écraser d'éventuelles variables déjà existantes à travers tous les scripts. Il convient donc d'isoler chaque code dans un **contexte d'exécution** dédié. Cela est possible en utilisant une fonction que nous exécutons immédiatement, ou en créant une **classe** (instantiate object) spécifique pour ranger toutes les fonctions, ou encore en rangeant notre fonction dans un **espace de nom** (namespace) dédié.\n\n\n\n### Fonction anonyme auto-exécutée ###\n\nNous allons nous contenter du premier point ici en créant une simple fonction anonyme (sans nom) et en l'exécutant immédiatement :\n\n```js\n;(function () {\n\n    /* Intégralité du code déjà existant ici. */\n\n}());\n```\n\nainsi, aucune fonction et variable créer dans ce **contexte d'exécution** ne sera accessible ailleurs et n'ira écraser des variables déjà existante.\n\n*Note : Le bout de code que nous avons attaché au prototype de `Function` sera quand à lui accessible partout car `Function` fait déjà partie du **contexte d'exécution global** (champ lexical global).*\n\n\n\n### Classe spécifique ###\n\nIl est également possible d'accrocher le code utile dans une classe JavaScript que nous instancierons afin d'exécuter le code. Nous pourrions créer alors deux types de fonctions :\n\n- Les fonctions privées qui ne seront accessibles que dans le **champ lexical** de la classe.\n- Les fonctions publiques qui seront attachées à `this` et qui seront donc accessibles depuis l'objet instancié.\n\nCela pourrait ressemblé à ceci :\n\n```js\nvar UploadImage = function () {\n    var privates =  {},\n        publics = this;\n\n    privates.selectImage = function (afterSelectCallback) { /* ... */ };\n    privates.readImage = function (inputFile, callback) { /* ... */ };\n    privates.resizeWithSameRatio = function (options, callback) { /* ... */ };\n    privates.thumbnailWithCanvas = function (options, callback) { /* ... */ };\n    privates.reduceImage = function (imageSource, callback) { /* ... */ };\n    privates.uploadImage = function (options, callback) { /* ... */ };\n\n    publics.init = function () {\n        var body = document.getElementsByTagName(\"body\")[0];\n        body.appendChild(\n            privates.selectImage(function(inputFile) {\n                privates.readImage(inputFile, function(image) {\n                    privates.reduceImage(image, function(imageResult) {\n                        privates.uploadImage({\n                            url: \"http://www.mocky.io/v2/5773cc3c0f0000950c597af9\",\n                            image: imageResult\n                        }, function(error, response) {\n                            var data = document.createElement(\"div\");\n                            data.textContent = (error) ? error : response;\n\n                            body.appendChild(data);\n                            body.appendChild(imageResult);\n                        });\n                    });\n                });\n            })\n        );\n    };\n };\n```\n\nAvec la ligne d'instanciation :\n\n```js\nnew UploadImage().init();\n```\n\n\n\n\n\n## Exemple complet sur Codepen ##\n\nJe finirais par vous fournir un exemple fonctionnel de ce que nous venons de voir (avec une fonction anonyme comme **champ lexical**). C'est à vous de jouer maintenant !\n\n[Vous pouvez lire et tester le résultat final sur ce Codepen](http://codepen.io/Haeresis/pen/aZvQVQ)\n\n\n\n\n\n## Et vous ? ##\n\nJe vous laisse décider lesquels de ces conseils peuvent vous apporter de l'aide et lesquels ne le feront pas et vous donne rendez-vous dans les commentaires pour partager votre expérience sur la question ou éclaircir des zones d'ombre dans cet article.", "dates" : { "published" : { "$date" : 1467024540000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Coder proprement en JavaScript par l'exemple&nbsp;: Upload d'image", "urn" : "coder-proprement-en-javascript-par-l-exemple-upload-d-image" }
{ "__v" : 0, "_id" : { "$oid" : "576946cfd1b7fe136fc2005f" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48c0" }, { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48ca" }, { "$oid" : "5810ca369e74a4a6d8aee691" } ], "content" : "Connaissez-vous ce petit code de triche qu'est le Konami Code ? Ce code à entrer dans les jeux vidéos permet de débloquer des options secrètes. Je vous propose de l'implémenter sur vos sites web en JavaScript avec une petite API maison gérant le clavier et le tactile. Suivez le guide !\n\n<p><img style=\"display: block; margin: 0 auto; max-width: 100%\" src=\"media/images/upload/76d6ddd2a0293213d04e0847645bddbc.jpg\" alt=\"Konami Code\"></p>\n\nL'API présenté dans cet article lève un événement JavaScript quand vous entrez la célèbre séquence du Konami Code « Haut Haut Bas Bas Gauche Droite Gauche Droite B A » avec votre clavier. Cela marche également avec votre doigt en glissant « Haut Haut Bas Bas Gauche Droite Gauche Droite » puis en faisant « Tap Tap ».\n\n<div style=\"text-align: center;\">\n    <p><a href=\"https://github.com/Haeresis/konami-code-js\">Source sur GitHub</a> / <a href=\"https://www.npmjs.com/package/konami-code-js\">Npm Package</a></p>\n</div>\n\n\n\n\n\n## Utilisation Basique ##\n\n```js\nnew KonamiCode(function () {\n    // Faites quelque chose ici.\n    // Cette partie est exécutée si « Haut Haut Bas Bas Gauche Droite Gauche Droite B A »\n    // est reconnue depuis votre clavier ou votre mouvement de doigt sur l'écran.\n});\n```\n\n\n\n\n\n## Exemple plus complet ##\n\nDans cet exemple, nous allons autoriser la reconnaissance du Konami Code uniquement si la souris ou le doigt est sur l'élément `<article>`. Une fois que la séquence aura été reconnue, on désactivera la reconnaissance du Konami Code.\n\n```js\nvar kc = new KonamiCode({\n    listener: document.getElementsByTagName(\"article\")[0]\n});\n\nkc.setCallback(function () {\n    kc.disable();\n\n    // Faites quelque chose ici.\n    // Cette partie est exécutée si « Haut Haut Bas Bas Gauche Droite Gauche Droite B A »\n    // est reconnue depuis votre clavier ou votre mouvement de doigt sur l'écran.\n});\n```\n\n\n\n\n\n## Documentation de l'API ##\n\n**Pour obtenir la dernière version de l'API documentée, référez-vous à [la documentation sur Github](https://github.com/Haeresis/konami-code-js)**\n\n<a name=\"KonamiCode\"></a>\n\n**Version**: 0.8.0\n\n**Auteur:** [Bruno Lesieur](https://www.lesieur.name/)\n\n* [KonamiCode](#KonamiCode)\n    * [new KonamiCode([options])](#new_KonamiCode_new)\n    * _instance_\n        * [.enable()](#KonamiCode+enable) ⇒ <code>[KonamiCode](#KonamiCode)</code>\n        * [.enableKeyboardKeys()](#KonamiCode+enableKeyboardKeys) ⇒ <code>[KonamiCode](#KonamiCode)</code>\n        * [.enableTouchGesture()](#KonamiCode+enableTouchGesture) ⇒ <code>[KonamiCode](#KonamiCode)</code>\n        * [.disable()](#KonamiCode+disable) ⇒ <code>[KonamiCode](#KonamiCode)</code>\n        * [.disabledKeyboardKeys()](#KonamiCode+disabledKeyboardKeys) ⇒ <code>[KonamiCode](#KonamiCode)</code>\n        * [.disabledTouchGesture()](#KonamiCode+disabledTouchGesture) ⇒ <code>[KonamiCode](#KonamiCode)</code>\n        * [.setListener(listener)](#KonamiCode+setListener) ⇒ <code>[KonamiCode](#KonamiCode)</code>\n        * [.setCallback(callback)](#KonamiCode+setCallback) ⇒ <code>[KonamiCode](#KonamiCode)</code>\n        * [.setOptions([options])](#KonamiCode+setOptions) ⇒ <code>[KonamiCode](#KonamiCode)</code>\n\n    * _static_\n        * [.noConflict()](#KonamiCode.noConflict)\n        * [.getNumberOfInstance()](#KonamiCode.getNumberOfInstance) ⇒ <code>number</code>\n\n<a name=\"new_KonamiCode_new\"></a>\n\n### new KonamiCode([options])\nCréer une reconnaissance de la séquence du Konami Code « Haut Haut Bas Bas Gauche Droite Gauche Droite B A » sur un HTMLElement précis ou sur le HTMLDocument global.\n\n\n| Param | Type | Description |\n| --- | --- | --- |\n| [options] | <code>Object</code> &#124; <code>function</code> | Contient toutes les options. Si le type de `options` est Function, il est exécuté après que la séquence du Konami Code est été reconnue. |\n| [options.callback] | <code>function</code> | Si `options` n'est pas une Function, `options.callback` est exécuté après que la séquence du Konami Code ai été reconnue. Le premier argument fourni par la callback est l'instance courante de `KonamiCode`. |\n| [options.listener] | <code>Node</code> | Par défaut c'est le HTMLDocument `window.document`. Vous pouvez passer un HTMLElement comme `<input>` (HTMLInputElement) pour seulement reconnaître la séquence du Konami Code quand la souris ou le doigt est sur cet élément. |\n| [options.debug] | <code>boolean</code> | Par défaut sa valeur est à `false`. Quand vous changez cette valeur à `true`, cela vous permet de voir tous les messages de débogue dans la console. |\n\n<a name=\"KonamiCode+enable\"></a>\n\n### konamiCode.enable() ⇒ <code>[KonamiCode](#KonamiCode)</code>\nActive l'écoute de la séquence du Konami Code.\n\n**Type**: instance de méthode du <code>[KonamiCode](#KonamiCode)</code>\n\n**Return**: <code>[KonamiCode](#KonamiCode)</code> - Instance courante `KonamiCode`\n<a name=\"KonamiCode+enableKeyboardKeys\"></a>\n\n### konamiCode.enableKeyboardKeys() ⇒ <code>[KonamiCode](#KonamiCode)</code>\nActive l'écoute de la séquence du Konami Code pour les touches du clavier.\n\n**Kind**: instance method of <code>[KonamiCode](#KonamiCode)</code>\n\n**Returns**: <code>[KonamiCode](#KonamiCode)</code> - Current instance of KonamiCode\n<a name=\"KonamiCode+enableTouchGesture\"></a>\n\n### konamiCode.enableTouchGesture() ⇒ <code>[KonamiCode](#KonamiCode)</code>\nActive l'écoute de la séquence du Konami Code pour les gestes tactiles.\n\n**Kind**: instance method of <code>[KonamiCode](#KonamiCode)</code>\n\n**Returns**: <code>[KonamiCode](#KonamiCode)</code> - Current instance of KonamiCode\n<a name=\"KonamiCode+disable\"></a>\n\n### konamiCode.disable() ⇒ <code>[KonamiCode](#KonamiCode)</code>\nDésactive l'écoute de la séquence du Konami Code.\n\n**Type**: instance de méthode du <code>[KonamiCode](#KonamiCode)</code>\n\n**Return**: <code>[KonamiCode](#KonamiCode)</code> - Instance courante `KonamiCode`\n<a name=\"KonamiCode+disabledKeyboardKeys\"></a>\n\n### konamiCode.disabledKeyboardKeys() ⇒ <code>[KonamiCode](#KonamiCode)</code>\nDésactive l'écoute de la séquence du Konami Code pour les touches du clavier.\n\n**Kind**: instance de méthode du <code>[KonamiCode](#KonamiCode)</code>\n\n**Returns**: <code>[KonamiCode](#KonamiCode)</code> - Instance courante `KonamiCode`\n<a name=\"KonamiCode+disabledTouchGesture\"></a>\n\n### konamiCode.disabledTouchGesture() ⇒ <code>[KonamiCode](#KonamiCode)</code>\nDésactive l'écoute de la séquence du Konami Code pour les gestes tactiles.\n\n**Kind**: instance de méthode du <code>[KonamiCode](#KonamiCode)</code>\n\n**Returns**: <code>[KonamiCode](#KonamiCode)</code> - Instance courante `KonamiCode`\n<a name=\"KonamiCode+setListener\"></a>\n\n### konamiCode.setListener(listener) ⇒ <code>[KonamiCode](#KonamiCode)</code>\nChange l'écouteur. L'ancien écouteur ne fonctionnera plus. Note: changer l'écouteur ré-active une instance que aurait été précédemment `disable()`.\n\n**Type**: instance de méthode du <code>[KonamiCode](#KonamiCode)</code>\n\n**Return**: <code>[KonamiCode](#KonamiCode)</code> - Instance courante `KonamiCode`\n\n| Param | Type | Description |\n| --- | --- | --- |\n| listener | <code>Node</code> | Vous pouvez passer un HTMLElement comme `<input>` (HTMLInputElement) pour seulement reconnaître la séquence du Konami Code quand la souris ou le doigt est sur cet élément. |\n\n<a name=\"KonamiCode+setCallback\"></a>\n\n### konamiCode.setCallback(callback) ⇒ <code>[KonamiCode](#KonamiCode)</code>\nChange la Function exécutée après que la séquence du Konami Code ai été reconnue.\n\n**Type**: instance de méthode du <code>[KonamiCode](#KonamiCode)</code>\n\n**Return**: <code>[KonamiCode](#KonamiCode)</code> - Instance courante `KonamiCode`\n\n| Param | Type | Description |\n| --- | --- | --- |\n| callback | <code>function</code> | Function exécutée après que la séquence du Konami Code ai été reconnue. Le premier argument fourni par la callback est l'instance courante du KonamiCode. |\n\n**Example**\n```js\nnew KonamiCode().setCallback(function (konamiCode) {\n    konamiCode.disable();\n    // Faites quelque chose ici.\n});\n```\n<a name=\"KonamiCode+setOptions\"></a>\n\n### konamiCode.setOptions([options]) ⇒ <code>[KonamiCode](#KonamiCode)</code>\nChanger les options pour l'instance courante.\n\n**Kind**: instance de méthode du <code>[KonamiCode](#KonamiCode)</code>\n\n**Returns**: <code>[KonamiCode](#KonamiCode)</code> - Instance courante `KonamiCode`\n\n| Param | Type | Description |\n| --- | --- | --- |\n| [options] | <code>Object</code> | Contient toutes les options. |\n| [options.callback] | <code>function</code> | Function exécutée après que la séquence du Konami Code ai été reconnue. Le premier argument fourni par la callback est l'instance courante du KonamiCode. |\n| [options.listener] | <code>Node</code> | Par défaut c'est le HTMLDocument `window.document`. Vous pouvez passer un HTMLElement comme `<input>` (HTMLInputElement) pour seulement reconnaître la séquence du Konami Code quand la souris ou le doigt est sur cet élément. |\n| [options.debug] | <code>boolean</code> | Par défaut sa valeur est à `false`. Quand vous changez cette valeur à `true`, cela vous permet de voir tous les messages de débogue dans la console. |\n\n<a name=\"KonamiCode.noConflict\"></a>\n\n### KonamiCode.noConflict()\nSi une variable `KonamiCode` existe déjà dans l'environnement global, vous pouvez la conserver en changeant le nom du `KonamiCode`.\nVous pouvez aussi simplement utiliser cette fonction pour changer le nom de la variable global « KonamiCode ».\n\n**Type**: methode statique du <code>[KonamiCode](#KonamiCode)</code>\n\n**Example**\n```js\n<script src=\"other/konami-code.js\"></script>\n<script src=\"last/konami-code.js\"></script>\n<script>\n    var MyKC = KonamiCode.noConflict();\n    console.log(KonamiCode); // Return the other KonamiCode\n    console.log(MyKC); // Return your KonamiCode\n</script>\n```\n<a name=\"KonamiCode.getNumberOfInstance\"></a>\n\n### KonamiCode.getNumberOfInstance() ⇒ <code>number</code>\nRetourne le nombre de fois que `KonamiCode` a été instancié.\n\n**Type**: méthode statique du <code>[KonamiCode](#KonamiCode)</code>\n\n**Return**: <code>number</code> - Nombre d'instance de `KonamiCode` créer depuis le début.\n\n\n\n\n\n## Chaînage ##\n\nToutes les méthodes instanciées de l'API  retourne l'instance courante de l'objet `KonamiCode`. Cela vous permet d'instancier un objet comme ceci :\n\n```js\nnew KonamiCode()\n    .disable()\n    .enable()\n    .setListener(document.getElementsByTagName(\"body\")[0])\n    .setCallback(function (konamiCode) {\n        konamiCode.disable();\n        // Faites quelque chose ici.\n        // Cette partie est exécutée si « Haut Haut Bas Bas Gauche Droite Gauche Droite B A »\n        // est reconnue depuis votre clavier ou votre mouvement de doigt sur l'écran.\n    });\n```\n\n\n\n\n\n## Mode Débogue ##\n\nVous pouvez voir chaque étape de la vie de l'instance dans votre débogueur par des messages console si le mode débogue est activé.\n\n```js\nnew KonamiCode({\n    debug: true,\n    callback: function (konamiCode) {\n        konamiCode.disable();\n    }\n});\n```\n\n\n\n\n\n## Importer le Fichier JavaScript##\n\n### Par Téléchargement ###\n\n- [https://github.com/Haeresis/konami-code-js](https://github.com/Haeresis/konami-code-js)\n\n\n\n### Via NPM ###\n\n```\nnpm install konami-code-js\n```\n\n\n\n### Via CDN ###\n\n- Pour le développement :\n\n```html\n<script src=\"https://rawgit.com/Haeresis/konami-code-js/master/src/konami-code.js\"></script>\n```\n\n- Pour la production :\n\n```html\n<script src=\"https://cdn.rawgit.com/Haeresis/konami-code-js/master/src/konami-code.js\"></script>\n```\n\n\n\n### Avec un injecteur AMD ###\n\n```html\n<script src=\"require.js\"></script>\n<script>\n\trequirejs([\"konami-code\"], function (KonamiCode) {\n\t    new KonamiCode(function () {\n\t    \t// Do something here.\n            // This part will be executed if « Up Up Down Down Left Right Left Right B A »\n            // is recognised from Keyboard or Touch Gesture.\n\t    });\n\t});\n</script>\n```\n\n\n\n### Avec un injecteur CommonJS ###\n\n```js\nvar KonamiCode = require(\"konami-code\");\n\nnew KonamiCode(function () {\n    // Do something here.\n    // This part will be executed if « Up Up Down Down Left Right Left Right B A »\n    // is recognised from Keyboard or Touch Gesture.\n});\n```\n\n\n\n\n## Bonus : le Konami Code de cette page ##\n\nSi vous testez le Konami Code depuis cette page voici ce qui sera exécuté :\n\n```js\n// Création d'un HTMLScriptElement.\nvar script = document.createElement(\"script\"),\n    // Référence sur le HTMLBodyElement.\n    body = document.getElementsByTagName(\"body\")[0],\n    // Création d'un interrupteur activé/désactivé.\n    toggle = false;\n\n// Notre script sera de type JavaScript\nscript.type = \"text/javascript\";\n\n// Ce code s'exécutera quand la `src`\n// de notre HTMLScriptElement sera rempli\n// et quand le HTMLScriptElement sera injecté dans le DOM.\nscript.addEventListener(\"load\", function () {\n\n    // Création d'un écouteur de Konami Code.\n    new KonamiCode(function () {\n\n        // Surprise ou retour à la normal.\n        if (toggle)   {\n            toggle = false;\n            body.style = \"overflow-x: hidden;transition: transform 2s ease;transform: rotate(0deg)\";\n        } else {\n            toggle = true;\n            body.style = \"overflow-x: hidden;transition: transform 2s ease;transform: rotate(180deg)\";\n        }\n    });\n});\n\n// Attribution d'un fichier et injection de HTMLScriptElement dans le DOM.\nscript.src = \"https://cdn.rawgit.com/Haeresis/konami-code-js/master/src/konami-code.js\";\nbody.appendChild(script);\n```", "dates" : { "published" : { "$date" : 1466506380000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "article table {\nborder: 1px solid rgba(39,41,43,.15)\n}\narticle th,\narticle td {\npadding-left: 4px;\npadding-right: 4px;\nborder: 1px solid rgba(39,41,43,.15)\n}\narticle th {\nborder: 1px solid #fbfbfb;\nbackground-color: #fbfbfb;\n}", "title" : "Des Easter Eggs sur vos sites avec le Konami Code JavaScript", "urn" : "des-easter-eggs-avec-konami-code-js" }
{ "__v" : 0, "_id" : { "$oid" : "577a13cfd1b7fe136fc20060" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5810c8b1db1391f2a90b5f28" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48c0" }, { "$oid" : "5310456355dfd5f7698d48c9" }, { "$oid" : "5310456355dfd5f7698d48ce" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "530ef6a6789c1a55e4fde0af" } ], "content" : "Je suis fan de Munchkin depuis des années maintenant ! Mais j'ai un assez gros problème depuis quelques temps avec le Munchkin : plus les extensions augmentes et plus j'ai des difficultés à pouvoir jouer avec des jeux équilibrés. Vous avez peut-être le même sentiment et si vous vous êtes déjà confronté aux problèmes listés ci-après, cette page peut vous être utile !\n\nElle va vous permettre de :\n\n- [Trier vos cartes](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/#comment-trier-vos-cartes-munchkin)\n- [Mélanger vos cartes](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/#comment-m-langer-vos-cartes-munchkin)\n- [Lister vos cartes](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/#-liste-des-cartes-du-munchkin-des-ditions-fran-aises)\n\n\n\n\n\n## Présentation ##\n\nVous avez peut-être des difficultés à :\n\n- Ajouter/Retirer des extensions/règles car vous en possédez un bon nombre toutes mélangés. Et si vous avez les premières versions sans couleurs, là vous ne pouvez pas les distinguer.\n- Mélanger vos cartes pour obtenir un jeu équilibré car il est difficile de mélanger facilement autant de carte ensemble.\n\nJ'ai donc créé ce petit outil qui va vous permettre de gérer votre jeu Munchkin ainsi que ses extensions plus facilement !\n\nIl va par exemple vous permettre de :\n\n- Classer vos cartes Munchkin par extension ou\n- Trier vos cartes Munchkin par type ou\n- Compter vos cartes Munchkin pour être sur qu'il ne vous en manque pas ou\n- Créer vos propres Deck/Pioche Munchkin par pourcentage d'apparition,\n- Simuler des pioches pour jouer à la distribution temps réel, ou pré-créer des mélanges à partir de vos boîtes de rangement.\n- Etc.\n\n> Si vous êtes développeur Front-end et que vous cherchez un exemple d'utilisation de [Vue.js](https://vuejs.org/) qui est SEO compliant, je peux vous conseiller de jeter un oeil au code source de cet outil derrière ce CodePen : http://codepen.io/Haeresis/pen/zBzWgQ\n\n\n\n\n\n## Comment **trier** vos cartes Munchkin ##\n\nIl n'est pas facile de s'y repérer dans les différents types de cartes dans le Munchkin. Beaucoup ont la même couleur, et les versions dérivées du Munchkin original n'ont pas de distinctions colorées. Il est également possible de souhaiter jouer avec des règles en moins.\n\n### Trier vos cartes Munckin par extension ###\n\nCe cas de figure peut vous servir pour jouer à des parties avec des débutants afin de limiter les règles. Avant de pouvoir mélanger vos cartes à partir des extensions souhaités, il va falloir les triers. Pour ce faire, \n\nVoici comment reconnaître les cartes par extension :\n\n- **Munchkin**                                            *si*     Pas d'icone et indiqué au dos « Munchkin »\n- **Munchkin 2 : Hachement Mieux**                        *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/m2.gif\" alt=\"Munchkin 2\"> et indiqué au dos *Munchkin*\n- **Munchkin 3 : Clerc et (pas) net**                     *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/m3.gif\" alt=\"Munchkin 3\"> et indiqué au dos *Munchkin*\n- **Munchkin 4 : Ton destin est sellé !**                 *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/m4.gif\" alt=\"Munchkin 4\"> et indiqué au dos *Munchkin*\n- **Munchkin 5 : On Zeu Rôde Again**                      *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/m5.gif\" alt=\"Munchkin 5\"> et indiqué au dos *Munchkin*\n- **Munchkin 6 : Le Donjon de la Farce**                  *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/m6.gif\" alt=\"Munchkin 6\"> et indiqué au dos *Munchkin*\n- **Munchkin 7 : Et pour quelques cartes de plus...**     *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/m7o.gif\" alt=\"Munchkin 7\"> et indiqué au dos *Munchkin*\n- **Munchkin 7 : Oh le gros tricheuuuuuuuur !**           *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/m7.gif\" alt=\"Munchkin 7\"> et indiqué au dos *Munchkin*\n- **Munchkin 8 : Centaure et Sans Reproche**              *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/m8.gif\" alt=\"Munchkin 8\"> et indiqué au dos *Munchkin*\n- **Munchkin : Petit Papa Munchkin**                      *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/n1.gif\n\" alt=\"Petit Papa Munchkin\"> ou <img style=\"height: 10px\" src=\"media/images/upload/n2.gif\n\" alt=\"Petit Papa Munchkin\"> ou <img style=\"height: 10px\" src=\"media/images/upload/n3.gif\n\" alt=\"Petit Papa Munchkin\"> ou <img style=\"height: 10px\" src=\"media/images/upload/n4.gif\n\" alt=\"Petit Papa Munchkin\"> et indiqué au dos *Munchkin*\n- **Munchkinomicon**                                      *si*     Icones <img style=\"height: 10px\" src=\"media/images/upload/mm.gif\" alt=\"Munchkinomicon\"> ou <img style=\"height: 10px\" src=\"media/images/upload/mm1.gif\" alt=\"Munchkinomicon\"> ou <img style=\"height: 10px\" src=\"media/images/upload/mm2.gif\" alt=\"Munchkinomicon\"> ou <img style=\"height: 10px\" src=\"media/images/upload/mm3.gif\" alt=\"Munchkinomicon\"> et indiqué au dos *Munchkin*\n- **Star Munchkin**                                       *si*     Pas d'icone et indiqué au dos *Star Munchkin*\n- **Star Munchkin 2 : La Guerre des Clowns**              *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/st2.gif\" alt=\"Star Munchkin 2\"> et indiqué au dos *Star Munchkin*\n- **Super Munchkin**                                      *si*     Pas d'icone et indiqué au dos *Super Munchkin*\n- **Munchkin Zombies**                                    *si*     Pas d'icone et indiqué au dos *Munchkin Zombies*\n- **Munchkin Zombies 2 : Ça zigouille à tour de bras !**  *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/mz2.gif\" alt=\"Munchkin Zombies 2\"> et indiqué au dos *Munchkin Zombies*\n- **Munchkin Cthulhu**                                    *si*     Pas d'icone et indiqué au dos *Munchkin Cthulhu*\n- **Munchkin Cthulhu 2 : L'Appel de la Vachthulhu**       *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/mc2.gif\" alt=\"Munchkin Cthulhu 2\"> et indiqué au dos *Munchkin Cthulhu*\n- **Munchkin Cthulhu 3 : La Crypte de l'Indicible**       *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/mc3.gif\" alt=\"Munchkin Cthulhu 3\"> et indiqué au dos *Munchkin Cthulhu*\n- **Munchkin Cthulhu 4 : Oh my grottes !**                *si*     Icone <img style=\"height: 10px\" src=\"media/images/upload/mc4.gif\" alt=\"Munchkin Cthulhu 4\"> et indiqué au dos *Munchkin Cthulhu*\n\n*Note : Le Munchkin original (sans couleur) ainsi que les deux premières extensions n'ont pas d'icone. Il n'est donc pas possible de les différencier à moins de se référer à la [liste ci-après](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/#-liste-des-cartes-du-munchkin-des-ditions-fran-aises) dans cette page. Puisque les extensions en question apporte du nouveau contenu mais pas de règle à proprement parler (il y a tout de même les améliorations d'objet), vous pouvez décider que quoi qu'il arrive cette extension reste uni pour ne pas avoir à les trier à chaque fois.*\n\n### Trier vos cartes Munckin par types ###\n\nSi vous avez l'intention de jouer au Munchkin avec toutes les extensions, il va être impossible de mélanger un jeu équilibré. C'est là que le tri par type peut-être utile. Dans un premier temps vous créez des tas par type de carte, puis vous mélanger chaque tas. Pour finir vous sélectionnez une carte depuis chaque tas pour construire les 200 ou 300 premières cartes en utilisant, par exemple, le mélangeur de la partie suivante.\n\nVoici comment reconnaître les cartes par type :\n\nDans les Portes\n- <span class=\"actions\">Amélioration</span>             *si*    Aucunes des mentions listés ci-après *(Vert dans Munchkin)*.\n- <span class=\"classes\">Classe</span>                   *si*    « Classe » est indiqué *(Marron dans Munchkin)*.\n- <span class=\"madnesses\">Démence</span>                *si*    « Démence ! » est dans le titre.\n- <span class=\"acolytes\">Fidèle Serviteur</span>        *si*    « Fidèle Serviteur » ou « Acolyte » est dans le titre *(Vert dans Munchkin sauf Monture en solde)*.\n- <span class=\"curses\">Malédiction</span>               *si*    « Malédiction ! » ou « Piège » est dans le titre *(Vert dans Munchkin)*.\n- <span class=\"mojos\">Mojo</span>                       *si*    « Mojo » est indiqué.\n- <span class=\"monsters\">Monstre</span>                 *si*    Possède des trésors ou/et des niveaux *(Orange dans Munchkin)*.\n- <span class=\"mounts\">Monture</span>                   *si*    « Monture » est indiqué *(Violet dans Munchkin sauf Big Joe)*.\n- <span class=\"origins\">Origine</span>                  *si*    « Origine » est dans le titre.\n- <span class=\"rooms\">Pièce</span>                      *si*    « Pièce » est dans le titre.\n- <span class=\"warps\">Portail</span>                    *si*    « Portail » est indiqué *(Jaune dans Munchkin)*.\n- <span class=\"powers\">Pouvoir</span>                   *si*    « Pouvoir » est dans le titre.\n- <span class=\"races\">Race</span>                       *si*    « Race » est indiqué *(Gris dans Munchkin)*.\n\nDans les Trésors\n- <span class=\"bonuses\">Actions</span>                  *si*    Pas de prix *(Vert dans Munchkin)*\n- <span class=\"stuffs\">Équipement</span>                *si*    Possède un prix et est à usage permanent *(Violet dans Munchkin)*.\n- <span class=\"slaves\">Fidèle Serviteur</span>          *si*    « Fidèle Serviteur » ou « Acolyte » est dans le titre *(Vert dans Munchkin)*.\n- <span class=\"levels\">Gain de Niveau</span>            *si*    « Gagner un Niveau » est écrit *(Vert dans Munchkin)*.\n- <span class=\"munchkinomicon\">Munchkinomicon</span>    *si*    Tête du grimoire au dos *(Violet dans Munchkin)*.\n- <span class=\"objects\">Objets</span>                   *si*    Un prix et à usage unique *(Bleu dans Munchkin)*.\n\nPour les Donjons et Sorts, pas de soucis, se sont des défausses séparés. Vous reconnaîtrez aisément les grands formats des Donjons et les têtes de Munchkinomicon au dos des Sorts.\n\n\n\n\n\n## Comment **mélanger** vos cartes Munchkin ##\n\n1. Sélectionnez les cartes que vous souhaitez inclure dans votre jeu grâce à la [liste ci-après](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/#-liste-des-cartes-du-munchkin-des-ditions-fran-aises).\n2. Lancez des mélanges virtuels avec le lien ci-dessous (Avec F12, si votre navigateur le permet, vous pouvez également surveiller l'état de vos pioches ét défausses).\n3. Créez votre pioche en créant le Deck en sélectionnant exactement les noms de cartes cités ou vraiment plus rapidement, en n'affectant qu'une carte du type indiqué (Amélioration, Monture, etc.).\n\n<div class=\"shuffle\">\n    <br>\n    <div class=\"init\" v-on:click=\"initShuffle()\">Créez vos Pioches et testez-les !</div>\n    <div class=\"shuffle-card\">\n        <div class=\"shuffle-card-inner\">\n            <div class=\"stop\" v-on:click=\"stopShuffle()\">Stop</div>\n            <div class=\"twelve\">F12</div>\n            <div class=\"stack-doors\">\n                <div class=\"open\" v-on:click=\"openDoors()\">\n                    <span class=\"title\">Ouvrir une <strong>Porte</strong></span>\n                </div>\n                <div class=\"discard\" v-bind:class=\"{ 'is-visible': doorsLastDiscard }\">\n                    <span class=\"title\"></span>\n                    <span class=\"stack\">Porte</span>\n                    <span class=\"extension\"></span>\n                    <span class=\"type\"></span>\n                    <span class=\"progress\"></span>\n                </div>\n            </div>\n            <div class=\"stack-treasures\">\n                <div class=\"open\" v-on:click=\"openTreasures()\">\n                    <span class=\"title\">Trouver un <strong>Trésor</strong></span>\n                </div>\n                <div class=\"discard\" v-bind:class=\"{ 'is-visible': treasuresLastDiscard }\">\n                    <span class=\"title\"></span>\n                    <span class=\"stack\">Trésor</span>\n                    <span class=\"extension\"></span>\n                    <span class=\"type\"></span>\n                    <span class=\"progress\"></span>\n                </div>\n            </div>\n            <div class=\"stack-donjons\">\n                <div class=\"open\" v-on:click=\"openDonjons()\">\n                    <span class=\"title\">Entrer dans un <strong>Donjon</strong></span>\n                </div>\n                <div class=\"discard\" v-bind:class=\"{ 'is-visible': donjonsLastDiscard }\">\n                    <span class=\"title\"></span>\n                    <span class=\"stack\">Donjon</span>\n                    <span class=\"extension\"></span>\n                    <span class=\"type\"></span>\n                    <span class=\"progress\"></span>\n                </div>\n            </div>\n            <div class=\"stack-books\">\n                <div class=\"open\" v-on:click=\"openBooks()\">\n                    <span class=\"title\">Lancer un <strong>Sort</strong></span>\n                </div>\n                <div class=\"discard\" v-bind:class=\"{ 'is-visible': booksLastDiscard }\">\n                    <span class=\"title\"></span>\n                    <span class=\"stack\">Sort</span>\n                    <span class=\"extension\"></span>\n                    <span class=\"type\"></span>\n                    <span class=\"progress\"></span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n## **Liste** des cartes du Munchkin des Éditions Françaises ##\n\n<div class=\"all-cards\">\n    <div class=\"all\">\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': all.filters }\">\n            <h3 id=\"munchkin-filtres\">Filtres : Jeux et Extensions</h3>\n            <p><button v-on:click=\"allToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                <p>\n                    <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkin\"> Munchkin\n                    </label><br>\n                    <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkin2\"> Munchkin 2 : Hachement Mieux\n                    </label><br>\n                    <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkin3\"> Munchkin 3 : Clerc et (pas) net\n                    </label><br>\n                    <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkin4\"> Munchkin 4 : Ton destin est sellé !\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkin5\"> Munchkin 5 : On Zeu Rôde Again\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkin6\"> Munchkin 6 : Le Donjon de la Farce\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkin7o\"> Munchkin 7 : Et pour quelques cartes de plus...\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkin7\"> Munchkin 7 : Oh le gros tricheuuuuuuuur !\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkin8\"> Munchkin 8 : Centaure et Sans Reproche\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkinN\"> Munchkin : Petit Papa Munchkin\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkinM\"> Munchkinomicon\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkinSt\"> Star Munchkin\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkinSt2\"> Star Munchkin 2 : La Guerre des Clowns\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkinSu\"> Super Munchkin\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkinZ\"> Munchkin Zombies\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkinZ2\"> Munchkin Zombies 2 : Ça zigouille à tour de bras !\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkinC\"> Munchkin Cthulhu\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkinC2\"> Munchkin Cthulhu 2 : L'Appel de la Vachthulhu\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkinC3\"> Munchkin Cthulhu 3 : La Crypte de l'Indicible\n                    </label><br>\n                     <label>\n                        <input type=\"checkbox\" value=\"on\" v-model=\"all.munchkinC4\"> Munchkin Cthulhu 4 : Oh my grottes !\n                    </label>\n                </p>\n            </div>\n        </div>\n        <p>**<span v-text=\"allCardsNumber\">2095</span> cartes affichées** au total pour votre Munchkin</p>\n        <ul>\n            <li>Il y a **<span v-text=\"allDoorsNumber\">1242</span> cartes portes** pour votre Munchkin.\n                <ul>\n                    <li v-if=\"allActionsNumber\">dont <span class=\"actions\"><span v-text=\"allActionsNumber\">285</span> carte<span v-show=\"allActionsNumber > 1\">s</span> Amélioration<span v-show=\"allActionsNumber > 1\">s</span> (<span v-text=\"allActionsPercent || 0\">23</span>%)</span>.</li>\n                    <li v-if=\"allClassesNumber\">dont <span class=\"classes\"><span v-text=\"allClassesNumber\">96</span> carte<span v-show=\"allClassesNumber > 1\">s</span> Classe<span v-show=\"allClassesNumber > 1\">s</span> (<span v-text=\"allClassesPercent || 0\">8</span>%)</span>.</li>\n                    <li v-if=\"allAcolytesNumber\">dont <span class=\"acolytes\"><span v-text=\"allAcolytesNumber\">33</span> carte<span v-show=\"allAcolytesNumber > 1\">s</span> Fidèle<span v-show=\"allAcolytesNumber > 1\">s</span> Serviteur<span v-show=\"allActionsNumber > 1\">s</span> (<span v-text=\"allAcolytesPercent || 0\">3</span>%)</span>.</li>\n                    <li v-if=\"allCursesNumber\">dont <span class=\"curses\"><span v-text=\"allCursesNumber\">150</span> carte<span v-show=\"allCursesNumber > 1\">s</span> Malédiction<span v-show=\"allCursesNumber > 1\">s</span> (<span v-text=\"allCursesPercent || 0\">12</span>%)</span>.</li>\n                    <li v-if=\"allMadnessesNumber\">dont <span class=\"curses\"><span v-text=\"allMadnessesNumber\">10</span> carte<span v-show=\"allMadnessesNumber > 1\">s</span> Démence<span v-show=\"allMadnessesNumber > 1\">s</span> (<span v-text=\"allMadnessesPercent || 0\">1</span>%)</span>.</li>\n                    <li v-if=\"allMojosNumber\">dont <span class=\"mojos\"><span v-text=\"allMojosNumber\">16</span> carte<span v-show=\"allMojosNumber > 1\">s</span> Mojos<span v-show=\"allMojosNumber > 1\">s</span> (<span v-text=\"allMojosPercent || 0\">1</span>%)</span>.</li>\n                    <li v-if=\"allMonstersNumber\">dont <span class=\"monsters\"><span v-text=\"allMonstersNumber\">445</span> carte<span v-show=\"allMonstersNumber > 1\">s</span> Monstre<span v-show=\"allMonstersNumber > 1\">s</span> (<span v-text=\"allMonstersPercent || 0\">36</span>%)</span>.</li>\n                    <li v-if=\"allMountsNumber\">dont <span class=\"mounts\"><span v-text=\"allMountsNumber\">16</span> carte<span v-show=\"allMountsNumber > 1\">s</span> Monture<span v-show=\"allMountsNumber > 1\">s</span> (<span v-text=\"allMountsPercent || 0\">1</span>%)</span>.</li>\n                    <li v-if=\"allOriginsNumber\">dont <span class=\"origins\"><span v-text=\"allOriginsNumber\">6</span> carte<span v-show=\"allOriginsNumber > 1\">s</span> Origine<span v-show=\"allOriginsNumber > 1\">s</span> (<span v-text=\"allOriginsPercent || 0\">0</span>%)</span>.</li>\n                    <li v-if=\"allRoomsNumber\">dont <span class=\"rooms\"><span v-text=\"allRoomsNumber\">6</span> carte<span v-show=\"allRoomsNumber > 1\">s</span> Pièce<span v-show=\"allRoomsNumber > 1\">s</span> (<span v-text=\"allRoomsPercent || 0\">0</span>%)</span>.</li>\n                    <li v-if=\"allWarpsNumber\">dont <span class=\"warps\"><span v-text=\"allWarpsNumber\">32</span> carte<span v-show=\"allWarpsNumber > 1\">s</span> Portail<span v-show=\"allWarpsNumber > 1\">s</span> (<span v-text=\"allWarpsPercent || 0\">3</span>%)</span>.</li>\n                    <li v-if=\"allPowersNumber\">dont <span class=\"powers\"><span v-text=\"allPowersNumber\">44</span> carte<span v-show=\"allPowersNumber > 1\">s</span> Pouvoir<span v-show=\"allPowersNumber > 1\">s</span> (<span v-text=\"allPowersPercent || 0\">4</span>%)</span>.</li>\n                    <li v-if=\"allRacesNumber\">dont <span class=\"races\"><span v-text=\"allRacesNumber\">103</span> carte<span v-show=\"allRacesNumber > 1\">s</span> Race<span v-show=\"allRacesNumber > 1\">s</span> (<span v-text=\"allRacesPercent || 0\">8</span>%)</span>.</li>\n                </ul>\n            </li>\n            <li>Il y a **<span v-text=\"allTreasuresNumber\">799</span> cartes trésors** pour votre Munchkin.\n                <ul>\n                    <li v-if=\"allBonusesNumber\">dont <span class=\"bonuses\"><span v-text=\"allBonusesNumber\">123</span> carte<span v-show=\"allBonusesNumber > 1\">s</span> Action<span v-show=\"allBonusesNumber > 1\">s</span> (<span v-text=\"allBonusesPercent || 0\">15</span>%)</span>.</li>\n                    <li v-if=\"allStuffsNumber\">dont <span class=\"stuffs\"><span v-text=\"allStuffsNumber\">386</span> carte<span v-show=\"allStuffsNumber > 1\">s</span> Équipement<span v-show=\"allStuffsNumber > 1\">s</span> (<span v-text=\"allStuffsPercent || 0\">48</span>%)</span>.</li>\n                    <li v-if=\"allSlavesNumber\">dont <span class=\"slaves\"><span v-text=\"allSlavesNumber\">5</span> carte<span v-show=\"allSlavesNumber > 1\">s</span> Fidèle<span v-show=\"allSlavesNumber > 1\">s</span> Serviteur<span v-show=\"allSlavesNumber > 1\">s</span> (<span v-text=\"allSlavesPercent || 0\">1</span>%)</span>.</li>\n                    <li v-if=\"allLevelsNumber\">dont <span class=\"levels\"><span v-text=\"allLevelsNumber\">111</span> carte<span v-show=\"allLevelsNumber > 1\">s</span> Gain<span v-show=\"allLevelsNumber > 1\">s</span> de Niveau<span v-show=\"allLevelsNumber > 1\">x</span> (<span v-text=\"allLevelsPercent || 0\">14</span>%)</span>.</li>\n                    <li v-if=\"munchkinMMunchkinomiconNumber\">dont <span class=\"munchkinomicon\"><span v-text=\"munchkinMMunchkinomiconNumber\">1</span> carte Munchkinomicon (<span v-text=\"allMunchkinomiconPercent || 0\">0</span>%)</span>.</li>\n                    <li v-if=\"allObjectsNumber\">dont <span class=\"objects\"><span v-text=\"allObjectsNumber\">173</span> carte<span v-show=\"allObjectsNumber > 1\">s</span> Objet<span v-show=\"allObjectsNumber > 1\">s</span> (<span v-text=\"allObjectsPercent || 0\">22</span>%)</span>.</li>\n                </ul>\n            </li>\n            <li>Il y a **<span v-text=\"allDonjonsNumber\">40</span> cartes donjons** pour votre Munchkin.</li>\n            <li>Il y a **<span v-text=\"allSpellsNumber\">14</span> cartes sorts** pour votre Munchkin.</li>\n        </ul>\n    </div>\n    <div class=\"munchkin munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin }\">\n        <img class=\"demo\" height=\"200\" src=\"media/images/upload/51vcdk0ID7L.jpg\" alt=\"Munchkin\">\n        <h2 id=\"munchkin\">Munchkin</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin.filters }\">\n            <h3 id=\"munchkin-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Éditions**\n                <div class=\"edition\">\n                    <p>\n                        <label>\n                            <input type=\"radio\" value=\"nocol\" v-model=\"munchkin.version\"> Édition originale\n                        </label><br>\n                        <label>\n                            <input type=\"radio\" value=\"color\" v-model=\"munchkin.version\"> Seconde Édition - (Couleur)\n                        </label>\n                    </p>\n                </div>\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin.bonuses\"> Actions (<span v-text=\"munchkinBonusesNumber\">2</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin.actions\"> Améliorations (<span v-text=\"munchkinActionsNumber\">16</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin.classes\"> Classes (<span v-text=\"munchkinClassesNumber\">12</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin.stuffs\"> Équipements (<span v-text=\"munchkinStuffsNumber\">37</span>)\n                    </label><br>\n                    <label class=\"slaves\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin.slaves\"> Fidèles Serviteurs (<span v-text=\"munchkinSlavesNumber\">1</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin.levels\"> Gains de Niveaux (<span v-text=\"munchkinLevelsNumber\">10</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin.curses\"> Malédictions (<span v-text=\"munchkinCursesNumber\">19</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin.monsters\"> Monstres (<span v-text=\"munchkinMonstersNumber\">37</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin.objects\"> Objets (<span v-text=\"munchkinObjectsNumber\">23</span>)\n                    </label><br>\n                    <label class=\"races\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin.races\"> Races (<span v-text=\"munchkinRacesNumber\">11</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-details\">Détails</h3>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinCardsNumber\">168</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinDoorsNumber\">95</span></p>\n                <ol>\n                    <li class=\"monsters color nocol\">3872 Orques</li>\n                    <li class=\"monsters color nocol\">Amazone</li>\n                    <li class=\"monsters color nocol\">Balrog Charolais</li>\n                    <li class=\"actions color nocol\">Bébé !</li>\n                    <li class=\"monsters color nocol\">Belvédère Sauvage</li>\n                    <li class=\"monsters color nocol\">Bigfoot, alias Grand-Pied</li>\n                    <li class=\"monsters color nocol\">Binoclard Hurleur</li>\n                    <li class=\"monsters color nocol\">Céphalopodzilla</li>\n                    <li class=\"monsters color nocol\">Cheval Zombie</li>\n                    <li class=\"monsters color nocol\">Dragon de Plutonium</li>\n                    <li class=\"races color nocol\">Elfe</li>\n                    <li class=\"races color nocol\">Elfe</li>\n                    <li class=\"races color nocol\">Elfe</li>\n                    <li class=\"actions color nocol\">Énoooorme !</li>\n                    <li class=\"actions color nocol\">Enragé</li>\n                    <li class=\"monsters color nocol\">Escargots sous Acide</li>\n                    <li class=\"monsters color nocol\">Fan de Vampire</li>\n                    <li class=\"monsters color nocol\">Gerbosaure</li>\n                    <li class=\"monsters color nocol\">Goblin Estropié</li>\n                    <li class=\"monsters color nocol\">Golem Fracassé</li>\n                    <li class=\"monsters color nocol\">Grenouilles Volantes</li>\n                    <li class=\"classes color nocol\">Guerrier</li>\n                    <li class=\"classes color nocol\">Guerrier</li>\n                    <li class=\"classes color nocol\">Guerrier</li>\n                    <li class=\"actions color nocol\">Illusion</li>\n                    <li class=\"actions color nocol\">Intervention Divine</li>\n                    <li class=\"actions color nocol\">Intelligent</li>\n                    <li class=\"races color nocol\">Halfelin</li>\n                    <li class=\"races color nocol\">Halfelin</li>\n                    <li class=\"races color nocol\">Halfelin</li>\n                    <li class=\"monsters color nocol\">~~Harpistes~~ Harpies</li>\n                    <li class=\"monsters color nocol\">Hippogriffe</li>\n                    <li class=\"monsters color nocol\">Horreur non-euclidienne indicible</li>\n                    <li class=\"monsters color nocol\">Huissier</li>\n                    <li class=\"monsters color nocol\">Lépreuxchaun</li>\n                    <li class=\"classes color nocol\">Magicien</li>\n                    <li class=\"classes color nocol\">Magicien</li>\n                    <li class=\"classes color nocol\">Magicien</li>\n                    <li class=\"curses color nocol\">Malédiction !</li>\n                    <li class=\"curses color nocol\">Malédiction !</li>\n                    <li class=\"curses color nocol\">Malédiction !</li>\n                    <li class=\"curses color nocol\">Malédiction !</li>\n                    <li class=\"curses color nocol\">Malédiction !</li>\n                    <li class=\"curses color nocol\">Malédiction ! Canard de l'Apocalypse</li>\n                    <li class=\"curses color nocol\">Malédiction ! Changement de Classe</li>\n                    <li class=\"curses color nocol\">Malédiction ! Changement de Race</li>\n                    <li class=\"curses color nocol\">Malédiction ! Changement de Sexe</li>\n                    <li class=\"curses color nocol\">Malédiction ! Commun des Mortels</li>\n                    <li class=\"curses color nocol\">Malédiction ! Déclassé !</li>\n                    <li class=\"curses color nocol\">Malédiction ! Impôt sur le Revenu</li>\n                    <li class=\"curses color nocol\">Malédiction ! Grosse Perte</li>\n                    <li class=\"curses color nocol\">Malédiction ! Miroir Perfide</li>\n                    <li class=\"curses color nocol\">Malédiction ! Perdez deux cartes</li>\n                    <li class=\"curses color nocol\">Malédiction ! Petite Perte</li>\n                    <li class=\"curses color nocol\">Malédiction ! Petite Perte</li>\n                    <li class=\"curses color nocol\">Malédiction ! Poulet sur la Tête</li>\n                    <li class=\"curses color nocol\">Malédiction Vraiment Trop Injuste !</li>\n                    <li class=\"monsters color nocol\">Manticor-nithorynque</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"monsters color nocol\">Morpions</li>\n                    <li class=\"monsters color nocol\">Mr. Nonos</li>\n                    <li class=\"monsters color nocol\">Mucus Baveux</li>\n                    <li class=\"races color nocol\">Nain</li>\n                    <li class=\"races color nocol\">Nain</li>\n                    <li class=\"races color nocol\">Nain</li>\n                    <li class=\"monsters color nocol\">Nez Flottant</li>\n                    <li class=\"monsters color nocol\">Octaèdre Gélatineux</li>\n                    <li class=\"actions color nocol\">Pause Déjeuner</li>\n                    <li class=\"actions color nocol\">Petite Amie</li>\n                    <li class=\"monsters color nocol\">Pit Bull</li>\n                    <li class=\"monsters color nocol\">Plante d'Ornement</li>\n                    <li class=\"monsters color nocol\">Poulet Élevé aux Stéroïdes</li>\n                    <li class=\"classes color nocol\">Prêtre</li>\n                    <li class=\"classes color nocol\">Prêtre</li>\n                    <li class=\"classes color nocol\">Prêtre</li>\n                    <li class=\"monsters color nocol\">Rat Musclé</li>\n                    <li class=\"monsters color nocol\">René Crophage et Fils, Dépanneurs en Chirurgie</li>\n                    <li class=\"monsters color nocol\">Représentant en Assurances</li>\n                    <li class=\"races color nocol\">Sang-mêlè</li>\n                    <li class=\"races color nocol\">Sang-mêlè</li>\n                    <li class=\"monsters color nocol\">Succube Lange-de-Belle-Mère</li>\n                    <li class=\"monsters color nocol\">Suceur de Tête</li>\n                    <li class=\"actions color nocol\">Super Munchkin</li>\n                    <li class=\"actions color nocol\">Super Munchkin</li>\n                    <li class=\"actions color nocol\">Tire-moi de là !</li>\n                    <li class=\"actions color nocol\">Tricheur !</li>\n                    <li class=\"monsters color nocol\">Trôliste</li>\n                    <li class=\"monsters color nocol\">Tut-Tuuut-Ankh-Ammon</li>\n                    <li class=\"monsters color nocol\">Vamps...ires !?!</li>\n                    <li class=\"actions color nocol\">Vénérable</li>\n                    <li class=\"classes color nocol\">Voleur</li>\n                    <li class=\"classes color nocol\">Voleur</li>\n                    <li class=\"classes color nocol\">Voleur</li>\n                    <template v-for=\"(item, index) in munchkin.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin.version) !== -1) && ((munchkin.curses && item.class.indexOf('curses') !== -1) || (munchkin.classes && item.class.indexOf('classes') !== -1) || (munchkin.races && item.class.indexOf('races') !== -1) || (munchkin.monsters && item.class.indexOf('monsters') !== -1) || (munchkin.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin.version) !== -1) && all.munchkinDoorsEach[index] }\">\n                                        <input type=\"checkbox\" v-model=\"all.munchkinDoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkinTreasuresNumber\">73</span></p>\n                <ol>\n                    <li class=\"levels color nocol\">1000 pièces d'or</li>\n                    <li class=\"objects color nocol\">Anneau de Souhait</li>\n                    <li class=\"objects color nocol\">Anneau de Souhait</li>\n                    <li class=\"stuffs color nocol\">Arc Enrubanné</li>\n                    <li class=\"stuffs color nocol\">Armure de Cuir</li>\n                    <li class=\"stuffs color nocol\">Armure de Flamme</li>\n                    <li class=\"stuffs color nocol\">Armure de Mithril</li>\n                    <li class=\"stuffs color nocol\">Armure Gluante</li>\n                    <li class=\"stuffs color nocol\">Armure Trapue</li>\n                    <li class=\"objects color nocol\">Baguette de Sourcier</li>\n                    <li class=\"stuffs color nocol\">Bandana de Gros Dur</li>\n                    <li class=\"stuffs color nocol\">Bâton de Napalm</li>\n                    <li class=\"objects color nocol\">Boisson Énergisante Éventée</li>\n                    <li class=\"stuffs color nocol\">Bouclier Surdimensionné</li>\n                    <li class=\"stuffs color nocol\">Bottes de Convocation d'Hémorroïdes</li>\n                    <li class=\"stuffs color nocol\">Bottes de Déplacement Frénetique</li>\n                    <li class=\"stuffs color nocol\">Brochette de Rat</li>\n                    <li class=\"stuffs color nocol\">Casque de Courage</li>\n                    <li class=\"stuffs color nocol\">Casque de Virilité Ostentatoire</li>\n                    <li class=\"stuffs color nocol\">Cape d'Ombre</li>\n                    <li class=\"objects color nocol\">Champagne</li>\n                    <li class=\"stuffs color nocol\">Chapeau Pointu de Thaumaturgie</li>\n                    <li class=\"stuffs color nocol\">Collants de Force de Géant</li>\n                    <li class=\"objects color nocol\">Cotion de Ponfusion</li>\n                    <li class=\"stuffs color nocol\">Dague de Traitrise</li>\n                    <li class=\"levels color nocol\">Don de Chips Désintressé au MJ</li>\n                    <li class=\"objects color nocol\">Doppelganger</li>\n                    <li class=\"objects color nocol\">Dé Pipé</li>\n                    <li class=\"stuffs color nocol\">Énorme Rocher</li>\n                    <li class=\"stuffs color nocol\">Escabeau</li>\n                    <li class=\"stuffs color nocol\">Épée (de) Bâtard(e)</li>\n                    <li class=\"stuffs color nocol\">Épée de Féminisme Exacerbé</li>\n                    <li class=\"stuffs color nocol\">Épée Karaoké</li>\n                    <li class=\"levels color nocol\">Erreur de Calcul Avantageuse</li>\n                    <li class=\"slaves color nocol\">Fidèle Serviteur</li>\n                    <li class=\"objects color nocol\">Flaque de Colle</li>\n                    <li class=\"levels color nocol\">Génocide de Fourmis à l'Huile Bouillante</li>\n                    <li class=\"stuffs color nocol\">Genouillères de Séduction</li>\n                    <li class=\"stuffs color nocol\">Genouillères Perforantes</li>\n                    <li class=\"stuffs color nocol\">Gourdin de Misogynie Fracassante</li>\n                    <li class=\"stuffs color nocol\">Hallebrde Suisse Multifonctions</li>\n                    <li class=\"levels color nocol\">Invocation de Règles Obscures</li>\n                    <li class=\"objects color nocol\">Lampe Merveilleuse</li>\n                    <li class=\"stuffs color nocol\">Lance de 3,50 m</li>\n                    <li class=\"stuffs color nocol\">Masse d'Armes de Répartie Piquante</li>\n                    <li class=\"stuffs color nocol\">Marteau des Rotules Douloureuses</li>\n                    <li class=\"objects color nocol\">Missile Magique</li>\n                    <li class=\"levels color nocol\">Mutiler les Cadavres</li>\n                    <li class=\"objects color nocol\">Mur Instantané</li>\n                    <li class=\"objects color nocol\">Oh, Les Jolis Ballons !</li>\n                    <li class=\"bonuses color nocol\">Pillaaaaaaage !</li>\n                    <li class=\"levels color nocol\">Pleurer dans les Jupes du MJ</li>\n                    <li class=\"objects color nocol\">Potion Acide Radioactive et Électrique</li>\n                    <li class=\"objects color nocol\">Potion d'Invisibilité</li>\n                    <li class=\"objects color nocol\">Potion d'Amitié</li>\n                    <li class=\"objects color nocol\">Potion de bravoure hystérique</li>\n                    <li class=\"levels color nocol\">Potion de Machisme Triomphant</li>\n                    <li class=\"objects color nocol\">Potion de Mauvaise Halleine</li>\n                    <li class=\"objects color nocol\">Potion de Poison Enflammé</li>\n                    <li class=\"objects color nocol\">Potion de Polly-morphie</li>\n                    <li class=\"objects color nocol\">Potion de Sommeil</li>\n                    <li class=\"objects color nocol\">Potion de Transfert</li>\n                    <li class=\"objects color nocol\">Potion Glaciale Explosive</li>\n                    <li class=\"stuffs color nocol\">Rape à Fromage de la Paix</li>\n                    <li class=\"stuffs color nocol\">Rapière d'Injustice Flagrante</li>\n                    <li class=\"stuffs color nocol\">Sandales de Protection</li>\n                    <li class=\"stuffs color nocol\">Sandwich Chocolat-Moules-Anchois</li>\n                    <li class=\"stuffs color nocol\">Targe d'Inconscience Suicidaire</li>\n                    <li class=\"bonuses color\">Titre qui en Jette Vraiment Grave</li>\n                    <li class=\"stuffs nocol\">Titre qui en Jette Vraiment Grave</li>\n                    <li class=\"stuffs color nocol\">Tronçonneuse de la Mort</li>\n                    <li class=\"stuffs color nocol\">Tuba d'Envoutement</li>\n                    <li class=\"levels color nocol\">Tuer le Fidèle Serviteur</li>\n                    <li class=\"levels color nocol\">Vol de Niveau</li>\n                    <template v-for=\"(item, index) in munchkin.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin.version) !== -1) && ((munchkin.slaves && item.class.indexOf('slaves') !== -1) || (munchkin.levels && item.class.indexOf('levels') !== -1) || (munchkin.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkin.objects && item.class.indexOf('objects') !== -1) || (munchkin.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin.version) !== -1) && all.munchkinTreasuresEach[index] }\">\n                                        <input type=\"checkbox\" v-model=\"all.munchkinTreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-2 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin2 }\">\n        <img class=\"demo\" src=\"media/images/upload/51CHPcSgexL._AC_UL320_SR248,320_.jpg\" alt=\"Munchkin 2\">\n        <h2 id=\"munchkin-2\">Munchkin 2 : Hachement Mieux</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin2.filters }\">\n            <h3 id=\"munchkin-2-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkin2ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Éditions**\n                <div class=\"edition\">\n                    <p>\n                        <label>\n                            <input type=\"radio\" value=\"nocol\" v-model=\"munchkin2.version\"> Édition originale\n                        </label><br>\n                        <label>\n                            <input type=\"radio\" value=\"color\" v-model=\"munchkin2.version\"> Seconde Édition - (Couleur)\n                        </label>\n                    </p>\n                </div>\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin2.bonuses\"> Actions (<span v-text=\"munchkin2BonusesNumber\">3</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin2.actions\"> Améliorations (<span v-text=\"munchkin2ActionsNumber\">14</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin2.classes\"> Classes (<span v-text=\"munchkin2ClassesNumber\">4</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin2.stuffs\"> Équipements (<span v-text=\"munchkin2StuffsNumber\">25</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin2.levels\"> Gains de Niveaux (<span v-text=\"munchkin2LevelsNumber\">7</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin2.curses\"> Malédictions (<span v-text=\"munchkin2CursesNumber\">11</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin2.monsters\"> Monstres (<span v-text=\"munchkin2MonstersNumber\">29</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin2.objects\"> Objets (<span v-text=\"munchkin2ObjectsNumber\">10</span>)\n                    </label><br>\n                    <label class=\"races\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin2.races\"> Races (<span v-text=\"munchkin2RacesNumber\">8</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-2-details\">Détails</h3>\n            <p><img src=\"media/images/upload/m2.gif\" alt=\"Munchkin 2\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :</p>\n            <ul>\n                <li>Les améliorations d'objets</li>\n                <li>La Race des Orques</li>\n                <li>Les très inutiles Cartes Vides</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkin2CardsNumber\">111</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-2-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkin2DoorsNumber\">66</span></p>\n                <ol>\n                    <li class=\"actions color nocol\">Amical</li>\n                    <li class=\"actions color nocol\">Annihilation</li>\n                    <li class=\"monsters color nocol\">Avocat fantôme</li>\n                    <li class=\"monsters color nocol\">Cafard Géant</li>\n                    <li class=\"actions color nocol\">Cartes excessivement merveilleuses</li>\n                    <li class=\"monsters color nocol\">Champi Gnons</li>\n                    <li class=\"monsters color nocol\">Clowns de la Mort</li>\n                    <li class=\"monsters color nocol\">Créature de Stupre et de Luxure</li>\n                    <li class=\"monsters color nocol\">Démon Tentaculaire</li>\n                    <li class=\"monsters color nocol\">Écureuil Psychopathe</li>\n                    <li class=\"monsters color nocol\">Élémentaire de Morve</li>\n                    <li class=\"races color nocol\">Elfe</li>\n                    <li class=\"actions color nocol\">Endormi</li>\n                    <li class=\"actions color nocol\">Fauché</li>\n                    <li class=\"monsters color nocol\">Géant de Givre</li>\n                    <li class=\"classes color nocol\">Guerrier</li>\n                    <li class=\"races color nocol\">Halfelin</li>\n                    <li class=\"actions color nocol\">Hé, une carte !</li>\n                    <li class=\"monsters color nocol\">Herbeux Dégueu</li>\n                    <li class=\"monsters color nocol\">Hydreolique</li>\n                    <li class=\"monsters color nocol\">Jabberwock</li>\n                    <li class=\"monsters color nocol\">Judge Fredd</li>\n                    <li class=\"monsters color nocol\">L'Ombre du Nez Flottant</li>\n                    <li class=\"monsters color nocol\">La Chose au Nom si Long</li>\n                    <li class=\"monsters color nocol\">Le Germe du Mal</li>\n                    <li class=\"actions color nocol\">Les cadavres ne se battent pas</li>\n                    <li class=\"classes color nocol\">Magicien</li>\n                    <li class=\"monsters color nocol\">Main Rampante</li>\n                    <li class=\"curses color nocol\">Malédiction ! Bidule Maudit</li>\n                    <li class=\"curses color nocol\">Malédiction ! Bidule Maudit</li>\n                    <li class=\"curses color nocol\">Malédiction ! Générosité</li>\n                    <li class=\"curses color nocol\">Malédiction ! Grands Pieds</li>\n                    <li class=\"curses color nocol\">Malédiction ! Mains Minuscules</li>\n                    <li class=\"curses color nocol\">Malédiction ! Nécrophobie</li>\n                    <li class=\"curses color nocol\">Malédiction ! Odeur Corporelle</li>\n                    <li class=\"curses color nocol\">Malédiction ! Or des fous</li>\n                    <li class=\"curses color nocol\">Malédiction ! Perte d'un Gros Objet</li>\n                    <li class=\"curses color nocol\">Malédiction ! Perte d'un Petit Objet</li>\n                    <li class=\"curses color nocol\">Malédiction ! Règles de la Nouvelle Édition</li>\n                    <li class=\"monsters color nocol\">Minette Sanguinaire</li>\n                    <li class=\"monsters color nocol\">Mobile</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"monsters color nocol\">Monstre fait maison</li>\n                    <li class=\"actions color nocol\">MoÔoman</li>\n                    <li class=\"actions color nocol\">Mort-Vivant</li>\n                    <li class=\"monsters color nocol\">Moufette Géante</li>\n                    <li class=\"races color nocol\">Nain</li>\n                    <li class=\"actions color nocol\">Nichée</li>\n                    <li class=\"monsters color nocol\">Nounours</li>\n                    <li class=\"races color nocol\">Orque</li>\n                    <li class=\"races color nocol\">Orque</li>\n                    <li class=\"races color nocol\">Orque</li>\n                    <li class=\"races color nocol\">Orque</li>\n                    <li class=\"monsters color nocol\">Père Noël</li>\n                    <li class=\"classes color nocol\">Prêtre</li>\n                    <li class=\"monsters color nocol\">Ptérodactyle</li>\n                    <li class=\"monsters color nocol\">Rats pestiférés</li>\n                    <li class=\"races color nocol\">Sang-Mêlé</li>\n                    <li class=\"actions color nocol\">Super Munchkin</li>\n                    <li class=\"monsters color nocol\">Tortue-garou</li>\n                    <li class=\"actions color\">Tricheur</li>\n                    <li class=\"monsters color nocol\">Vestales de l'Ordrede la Pleine Lune</li>\n                    <li class=\"monsters color nocol\">Vide</li>\n                    <li class=\"monsters color nocol\">Vide</li>\n                    <li class=\"actions nocol\">Vide</li>\n                    <li class=\"classes color nocol\">Voleur</li>\n                    <template v-for=\"(item, index) in munchkin2.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin2.version) !== -1) && ((munchkin2.curses && item.class.indexOf('curses') !== -1) || (munchkin2.curses && item.class.indexOf('curses') !== -1) || (munchkin2.classes && item.class.indexOf('classes') !== -1) || (munchkin2.races && item.class.indexOf('races') !== -1) || (munchkin2.monsters && item.class.indexOf('monsters') !== -1) || (munchkin2.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin2.version) !== -1) && all.munchkin2DoorsEach[index] }\">\n                                        <input type=\"checkbox\" v-model=\"all.munchkin2DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-2-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkin2TreasuresNumber\">45</span></p>\n                <ol>\n                    <li class=\"bonuses nocol\">...du Destin !</li>\n                    <li class=\"stuffs color\">...du Destin !</li>\n                    <li class=\"objects color nocol\">Anneau de Souhait</li>\n                    <li class=\"stuffs color nocol\">Boomdague</li>\n                    <li class=\"stuffs color nocol\">Braguette Cloutée</li>\n                    <li class=\"stuffs color nocol\">Casque de vision périphérique</li>\n                    <li class=\"stuffs color nocol\">Casquelette</li>\n                    <li class=\"stuffs color nocol\">Chapeau en Papier d'Alu</li>\n                    <li class=\"bonuses color nocol\">Cheval de Troie</li>\n                    <li class=\"levels color nocol\">Contemplation du Nombril</li>\n                    <li class=\"objects color nocol\">Crème de bébé</li>\n                    <li class=\"levels color nocol\">Cruauté Gratuite</li>\n                    <li class=\"objects color nocol\">Dé Subtilement Pipé</li>\n                    <li class=\"objects color nocol\">Dé Subtilement Pipé</li>\n                    <li class=\"stuffs color nocol\">Dentier de l'Effroi</li>\n                    <li class=\"stuffs color nocol\">Dragon Nain Tout Mignon</li>\n                    <li class=\"levels color nocol\">Échange de feuilles de personnage</li>\n                    <li class=\"stuffs color nocol\">Engin de Siège</li>\n                    <li class=\"stuffs color nocol\">Épée Super Zarbi</li>\n                    <li class=\"stuffs color nocol\">Épée Tueuse de Tout (à l'exception notable des poulpes)</li>\n                    <li class=\"stuffs color nocol\">Exoarmure</li>\n                    <li class=\"stuffs color nocol\">Familier</li>\n                    <li class=\"stuffs color nocol\">Fausse Barbe</li>\n                    <li class=\"stuffs color nocol\">Fourchette à Barbecue</li>\n                    <li class=\"stuffs color nocol\">Gastérofronde</li>\n                    <li class=\"stuffs color nocol\">Hache Surnaturelle</li>\n                    <li class=\"stuffs color nocol\">Imperméable</li>\n                    <li class=\"objects nocol\">Lampe Merveilleuse</li>\n                    <li class=\"levels color nocol\">Laver la Voiture MJ</li>\n                    <li class=\"stuffs color nocol\">Le Maillet Béni de Saint Aieuuuu !</li>\n                    <li class=\"stuffs color nocol\">Lumière Éternelle (piles non incluses)</li>\n                    <li class=\"levels color nocol\">Payer la Pizza</li>\n                    <li class=\"stuffs color nocol\">Pince à Épiler de la Terreur</li>\n                    <li class=\"levels color nocol\">Plier, Embrocher et Mutiler</li>\n                    <li class=\"objects color nocol\">Poil à Gratter</li>\n                    <li class=\"objects color nocol\">Potage Sauvage</li>\n                    <li class=\"objects color nocol\">Potion de Lâcheté</li>\n                    <li class=\"objects color nocol\">Potion de Vol</li>\n                    <li class=\"objects color nocol\">Potion d'Incrédulité</li>\n                    <li class=\"levels color nocol\">Promettre au MJ d'arrêter de lui parler de votre Personnage</li>\n                    <li class=\"stuffs color nocol\">Rouleau de l'Ordre</li>\n                    <li class=\"stuffs color nocol\">Sac de Clous</li>\n                    <li class=\"objects color nocol\">Sauce Tartare Barbare</li>\n                    <li class=\"bonuses color nocol\">Ton lacet est défait !</li>\n                    <li class=\"stuffs color nocol\">Très Saint Livre</li>\n                    <li class=\"objects nocol\">Vide</li>\n                    <li class=\"stuffs color nocol\">Vide</li>\n                    <li class=\"bonuses color nocol\">Vide Grenier</li>\n                    <template v-for=\"(item, index) in munchkin2.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin2.version) !== -1) && ((munchkin2.levels && item.class.indexOf('levels') !== -1) || (munchkin2.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkin2.objects && item.class.indexOf('objects') !== -1) || (munchkin2.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin2.version) !== -1) && all.munchkin2TreasuresEach[index] }\">\n                                        <input type=\"checkbox\" v-model=\"all.munchkin2TreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-3 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin3 }\">\n        <img class=\"demo\" src=\"media/images/upload/munchkin-3.gif\" alt=\"Munchkin 3\">\n        <h2 id=\"munchkin-3\">Munchkin 3 : Clerc et (pas) net</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin3.filters }\">\n            <h3 id=\"munchkin-3-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkin3ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Éditions**\n                <div class=\"edition\">\n                    <p>\n                        <label>\n                            <input type=\"radio\" value=\"nocol\" v-model=\"munchkin3.version\"> Édition originale\n                        </label><br>\n                        <label>\n                            <input type=\"radio\" value=\"color\" v-model=\"munchkin3.version\"> Seconde Édition - (Couleur)\n                        </label>\n                    </p>\n                </div>\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin3.bonuses\"> Actions (<span v-text=\"munchkin3BonusesNumber\">10</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin3.actions\"> Améliorations (<span v-text=\"munchkin3ActionsNumber\">12</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin3.classes\"> Classes (<span v-text=\"munchkin3ClassesNumber\">9</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin3.stuffs\"> Équipements (<span v-text=\"munchkin3StuffsNumber\">17</span>)\n                    </label><br>\n                    <label class=\"slaves\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin3.slaves\"> Fidèles Serviteurs (<span v-text=\"munchkin3SlavesNumber\">1</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin3.levels\"> Gains de Niveaux (<span v-text=\"munchkin3LevelsNumber\">7</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin3.curses\"> Malédictions (<span v-text=\"munchkin3CursesNumber\">8</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin3.monsters\"> Monstres (<span v-text=\"munchkin3MonstersNumber\">27</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin3.objects\"> Objets (<span v-text=\"munchkin3ObjectsNumber\">11</span>)\n                    </label><br>\n                    <label class=\"races\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin3.races\"> Races (<span v-text=\"munchkin3RacesNumber\">10</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-3-details\">Détails</h3>\n            <p><img src=\"media/images/upload/m3.gif\" alt=\"Munchkin 2\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :</p>\n            <ul>\n                <li>La Classe des Bardes</li>\n                <li>La Race des Gnomes</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkin3CardsNumber\">112</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-3-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkin3DoorsNumber\">66</span></p>\n                <ol>\n                    <li class=\"actions color nocol\">...de l'Enfer</li>\n                    <li class=\"monsters color nocol\">Baal-Y-Nacee,Grand Antien de la Basse-Cour des Enfers</li>\n                    <li class=\"classes color nocol\">Barde</li>\n                    <li class=\"classes color nocol\">Barde</li>\n                    <li class=\"classes color nocol\">Barde</li>\n                    <li class=\"classes color nocol\">Barde</li>\n                    <li class=\"classes color nocol\">Barde</li>\n                    <li class=\"monsters color nocol\">Camulot</li>\n                    <li class=\"monsters color nocol\">Cécil Vanien, déménageur en entrailles</li>\n                    <li class=\"monsters color nocol\">Dessin de votre petit frère</li>\n                    <li class=\"monsters color nocol\">Dopplegangsters</li>\n                    <li class=\"monsters color nocol\">Dryade</li>\n                    <li class=\"races color nocol\">Elfe</li>\n                    <li class=\"actions color nocol\">En pleine dépression</li>\n                    <li class=\"actions color nocol\">En sous-vêtements</li>\n                    <li class=\"actions color nocol\">Énorme Épée de passage à tabac de personnage</li>\n                    <li class=\"actions color nocol\">Erreur de typo</li>\n                    <li class=\"monsters color nocol\">Géants de la raclette</li>\n                    <li class=\"monsters color nocol\">Gobe-mouche urticant bio-mutant</li>\n                    <li class=\"races color nocol\">Gnome</li>\n                    <li class=\"races color nocol\">Gnome</li>\n                    <li class=\"races color nocol\">Gnome</li>\n                    <li class=\"races color nocol\">Gnome</li>\n                    <li class=\"races color nocol\">Gnome</li>\n                    <li class=\"monsters color nocol\">Golem de Chewing-gum</li>\n                    <li class=\"monsters color nocol\">Gothyanki</li>\n                    <li class=\"monsters color nocol\">Gros Bourrin</li>\n                    <li class=\"monsters color nocol\">Gros porc macho</li>\n                    <li class=\"classes color nocol\">Guerrier</li>\n                    <li class=\"races color nocol\">Halfelin</li>\n                    <li class=\"monsters color nocol\">Homme-hochet</li>\n                    <li class=\"monsters color nocol\">Kali</li>\n                    <li class=\"monsters color nocol\">Kobolds kamikazes</li>\n                    <li class=\"monsters color nocol\">Les Manes occis de la mer morte</li>\n                    <li class=\"actions color nocol\">Les Monstres sont occupés</li>\n                    <li class=\"classes color nocol\">Magicien</li>\n                    <li class=\"curses color nocol\">Malédiction ! ...de la mort qui tue !</li>\n                    <li class=\"curses color nocol\">Malédiction ! amnésie temporaire</li>\n                    <li class=\"curses color nocol\">Malédiction ! bière des nains</li>\n                    <li class=\"curses color nocol\">Malédiction ! échec christique !</li>\n                    <li class=\"curses color nocol\">Malédiction ! les genoux explosés</li>\n                    <li class=\"curses color nocol\">Malédiction ! piège à touristes</li>\n                    <li class=\"curses color nocol\">Malédiction ! sac à dos affamé</li>\n                    <li class=\"curses color nocol\">Malédiction ! vous trebuchez sur votre trésors</li>\n                    <li class=\"monsters color nocol\">Méduse</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"actions color nocol\">Mort-vivant</li>\n                    <li class=\"monsters color nocol\">Mort-Ylin Moncroc</li>\n                    <li class=\"races color nocol\">Nain</li>\n                    <li class=\"monsters color nocol\">Nounours sanguinaire géant</li>\n                    <li class=\"actions color nocol\">Obscènement riche</li>\n                    <li class=\"races color nocol\">Orque</li>\n                    <li class=\"monsters color nocol\">Petit lapin tout ce qu'il y a de plus ordinaire...</li>\n                    <li class=\"monsters color nocol\">Poisson rouge</li>\n                    <li class=\"classes color nocol\">Prêtre</li>\n                    <li class=\"monsters color nocol\">Resident débile, le charancon mutant</li>\n                    <li class=\"races color nocol\">Sang-mêlé</li>\n                    <li class=\"monsters color nocol\">Sire Hupeux</li>\n                    <li class=\"actions color nocol\">Super Munchkin</li>\n                    <li class=\"monsters color nocol\">Tati Paladin</li>\n                    <li class=\"monsters color nocol\">Tequila Piaf</li>\n                    <li class=\"monsters color nocol\">Tonneau sans fond</li>\n                    <li class=\"actions color nocol\">Tricheur !</li>\n                    <li class=\"classes color nocol\">Voleur</li>\n                    <li class=\"monsters color nocol\">Zozo le zusticier</li>\n                    <template v-for=\"(item, index) in munchkin3.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin3.version) !== -1) && ((munchkin3.curses && item.class.indexOf('curses') !== -1) || (munchkin3.classes && item.class.indexOf('classes') !== -1) || (munchkin3.races && item.class.indexOf('races') !== -1) || (munchkin3.monsters && item.class.indexOf('monsters') !== -1) || (munchkin3.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin3.version) !== -1) && all.munchkin3DoorsEach[index] }\">\n                                        <input type=\"checkbox\" v-model=\"all.munchkin3DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-3-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkin3TreasuresNumber\">46</span></p>\n                <ol>\n                    <li class=\"levels color nocol\">Acte de bonté absurde</li>\n                    <li class=\"objects color nocol\">Anneau de Souhait</li>\n                    <li class=\"bonuses color nocol\">Béni</li>\n                    <li class=\"stuffs color nocol\">Bikini en cotte de mailles</li>\n                    <li class=\"stuffs color nocol\">C'est le luth finaAaleuuu !</li>\n                    <li class=\"objects color nocol\">Canard d'abondance</li>\n                    <li class=\"stuffs color nocol\">Chaussettes de Pestilence</li>\n                    <li class=\"stuffs color nocol\">Chaussons de Coming-out</li>\n                    <li class=\"objects color nocol\">Cocktail Molotroll</li>\n                    <li class=\"stuffs color nocol\">Costume en gnomex</li>\n                    <li class=\"bonuses color nocol\">Coup quasi-fatal</li>\n                    <li class=\"objects color nocol\">Croquettes pour monstres</li>\n                    <li class=\"objects color nocol\">Dé pipé</li>\n                    <li class=\"bonuses color nocol\">Descente de dieux</li>\n                    <li class=\"stuffs color nocol\">Divan de psi</li>\n                    <li class=\"bonuses color nocol\">Empoisonné</li>\n                    <li class=\"stuffs color nocol\">Épée à deux mains</li>\n                    <li class=\"levels color nocol\">Faire un dessin de son personnage</li>\n                    <li class=\"stuffs color nocol\">Farces et attrapes de Manufacture Gnome</li>\n                    <li class=\"slaves color nocol\">Fidèle Serviteur</li>\n                    <li class=\"stuffs color nocol\">Fouet \"Plein-la-goule™\"</li>\n                    <li class=\"objects color nocol\">Gelée royale</li>\n                    <li class=\"stuffs color nocol\">Grelots tueurs</li>\n                    <li class=\"objects color nocol\">Injonction</li>\n                    <li class=\"bonuses color nocol\">Intervention féline</li>\n                    <li class=\"stuffs color nocol\">Lame vorpale</li>\n                    <li class=\"bonuses color nocol\">Lancer de nain</li>\n                    <li class=\"stuffs color nocol\">L'amulette à fiabilité relative</li>\n                    <li class=\"stuffs color nocol\">L'autre Anneau</li>\n                    <li class=\"bonuses color nocol\">Le casino du donjon</li>\n                    <li class=\"stuffs color nocol\">Mangnifique chapeau</li>\n                    <li class=\"stuffs color nocol\">Masse d'arme de cheville improvisée</li>\n                    <li class=\"levels color nocol\">Menacer de changer de système de jeu</li>\n                    <li class=\"bonuses color nocol\">Moi ! Moi ! Moi !</li>\n                    <li class=\"stuffs color nocol\">Oreilles factices</li>\n                    <li class=\"stuffs color nocol\">Poignard-o-matic</li>\n                    <li class=\"bonuses color nocol\">Poignées de transport</li>\n                    <li class=\"objects color nocol\">Potion d'apathie</li>\n                    <li class=\"objects color nocol\">Potion de greluche instantanée</li>\n                    <li class=\"levels color nocol\">Regarde le dé, il tourne, il toune...</li>\n                    <li class=\"levels color nocol\">Remettre sa vieille fiche de perso au propre...</li>\n                    <li class=\"objects color nocol\">Sauce pimentée</li>\n                    <li class=\"levels color nocol\">Se souvenir de l'anniversaire du MJ</li>\n                    <li class=\"objects color nocol\">Tarte savoureuse</li>\n                    <li class=\"bonuses color nocol\">Taille unique</li>\n                    <li class=\"levels color nocol\">Voler la vedette</li>\n                    <template v-for=\"(item, index) in munchkin3.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin3.version) !== -1) && ((munchkin3.slaves && item.class.indexOf('slaves') !== -1) || (munchkin3.levels && item.class.indexOf('levels') !== -1) || (munchkin3.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkin3.objects && item.class.indexOf('objects') !== -1) || (munchkin3.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin3.version) !== -1) && all.munchkin3TreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin3TreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-4 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin4 }\">\n        <img class=\"demo\" src=\"media/images/upload/512ADEdYO8L._AC_UL320_SR252,320_.jpg\" alt=\"Munchkin 4\">\n        <h2 id=\"munchkin-4\">Munchkin 4 : Ton destin est sellé !</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin4.filters }\">\n            <h3 id=\"munchkin-4-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkin4ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Éditions**\n                <div class=\"edition\">\n                    <p>\n                        <label>\n                            <input type=\"radio\" value=\"nocol\" v-model=\"munchkin4.version\"> Édition originale\n                        </label><br>\n                        <label>\n                            <input type=\"radio\" value=\"color\" v-model=\"munchkin4.version\"> Seconde Édition - (Couleur)\n                        </label>\n                    </p>\n                </div>\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin4.bonuses\"> Actions (<span v-text=\"munchkin4BonusesNumber\">11</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin4.actions\"> Améliorations (<span v-text=\"munchkin4ActionsNumber\">13</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin4.classes\"> Classes (<span v-text=\"munchkin4ClassesNumber\">5</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin4.stuffs\"> Équipements (<span v-text=\"munchkin4StuffsNumber\">11</span>)\n                    </label><br>\n                    <label class=\"acolytes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin4.acolytes\"> Fidèles Serviteurs (<span v-text=\"munchkin4AcolytesNumber\">13</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin4.levels\"> Gains de Niveaux (<span v-text=\"munchkin4LevelsNumber\">6</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin4.curses\"> Malédictions (<span v-text=\"munchkin4CursesNumber\">5</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin4.monsters\"> Monstres (<span v-text=\"munchkin4MonstersNumber\">27</span>)\n                    </label><br>\n                    <label class=\"mounts\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin4.mounts\"> Montures (<span v-text=\"munchkin4MountsNumber\">9</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin4.objects\"> Objets (<span v-text=\"munchkin4ObjectsNumber\">6</span>)\n                    </label><br>\n                    <label class=\"races\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin4.races\"> Races (<span v-text=\"munchkin4RacesNumber\">6</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-4-details\">Détails</h3>\n            <p><img src=\"media/images/upload/m4.gif\" alt=\"Munchkin 4\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :</p>\n            <ul>\n                <li>Les Fidèles serviteurs</li>\n                <li>Les Montures</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkin4CardsNumber\">112</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-4-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkin4DoorsNumber\">78</span></p>\n                <ol>\n                    <li class=\"actions color nocol\">...jouant de la cornemuse</li>\n                    <li class=\"actions color nocol\">...surgi de l'enfer</li>\n                    <li class=\"actions color nocol\">À dents de sable</li>\n                    <li class=\"actions color nocol\">Affamé</li>\n                    <li class=\"mounts color nocol\">Aigle de selle</li>\n                    <li class=\"monsters color nocol\">Bête égarante</li>\n                    <li class=\"classes color nocol\">Barde</li>\n                    <li class=\"actions color nocol\">Big Joe</li>\n                    <li class=\"monsters color nocol\">Bugs Beuh-Ni</li>\n                    <li class=\"monsters color nocol\">Camionosaure (Monstertruckosaurus Rex)</li>\n                    <li class=\"monsters color nocol\">Crâne en peluche</li>\n                    <li class=\"actions color nocol\">Demi...</li>\n                    <li class=\"mounts color nocol\">Dragon de selle</li>\n                    <li class=\"races color nocol\">Elfe</li>\n                    <li class=\"actions color nocol\">En armure</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur barde</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur Chappendale</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur elfe</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur en solde</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur gnome</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur guerrier</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur halfelin</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur magicien</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur nain</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur orque</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur prètre</li>\n                    <li class=\"acolytes color nocol\">Fidèle ~~serviteur~~ ~~serviteuse~~ gourgandine pas farouche, quoi...</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur voleur</li>\n                    <li class=\"actions color nocol\">Furtif</li>\n                    <li class=\"monsters color nocol\">Harry Pot-d'terre</li>\n                    <li class=\"monsters color nocol\">Géant Ninja</li>\n                    <li class=\"monsters color nocol\">Gelée au caramel fondu</li>\n                    <li class=\"mounts color nocol\">Gerbille mutante géante de selle</li>\n                    <li class=\"races color nocol\">Gnome</li>\n                    <li class=\"monsters color nocol\">Godefroy de Court Bouillon</li>\n                    <li class=\"monsters color nocol\">Gros type velu et barbu qu'on connait pas...</li>\n                    <li class=\"classes color nocol\">Guerrier</li>\n                    <li class=\"races color nocol\">Halfelin</li>\n                    <li class=\"monsters color nocol\">Katrina</li>\n                    <li class=\"monsters color nocol\">La nuée des morts-vivants</li>\n                    <li class=\"monsters color nocol\">Le Mauvais oeil</li>\n                    <li class=\"mounts color nocol\">Loup de selle</li>\n                    <li class=\"monsters color nocol\">~~Ma marraine~~ Mon parrain la fée</li>\n                    <li class=\"classes color nocol\">Magicien</li>\n                    <li class=\"curses color nocol\">Malédiction ! Charges patronales</li>\n                    <li class=\"curses color nocol\">Malédiction ! Monture flatulente</li>\n                    <li class=\"curses color nocol\">Malédiction ! Plancher en papier tue-mouche !</li>\n                    <li class=\"curses color nocol\">Malédiction ! Rations gatées</li>\n                    <li class=\"curses color nocol\">Malédiction ! Tout est relatif !</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"races color nocol\">Nain</li>\n                    <li class=\"monsters color nocol\">Oeuf</li>\n                    <li class=\"races color nocol\">Orque</li>\n                    <li class=\"monsters color nocol\">Ours bipolaire</li>\n                    <li class=\"monsters color nocol\">Ours pigeon</li>\n                    <li class=\"monsters color nocol\">Petit coin d'ombre tout à fait inoffensif</li>\n                    <li class=\"monsters color nocol\">Petit toutou tout ce qu'il y a de plus ordinaire</li>\n                    <li class=\"monsters color nocol\">Polly Èdre</li>\n                    <li class=\"mounts color nocol\">Poulet de selle</li>\n                    <li class=\"classes color nocol\">Prêtre</li>\n                    <li class=\"mounts color nocol\">Puissant destrier</li>\n                    <li class=\"mounts color nocol\">Raptor de selle</li>\n                    <li class=\"actions color nocol\">Résistant à la magie</li>\n                    <li class=\"monsters color nocol\">Réveil matin</li>\n                    <li class=\"races color nocol\">Sang-mêlé</li>\n                    <li class=\"monsters color nocol\">Sphinx farceur</li>\n                    <li class=\"actions color nocol\">Super Munchkin</li>\n                    <li class=\"mounts color nocol\">Tigre de selle</li>\n                    <li class=\"monsters color nocol\">Toison Noire, le Fleau des Sept Mers, brebis égarée</li>\n                    <li class=\"monsters color nocol\">Touffu, élémentaire de poils</li>\n                    <li class=\"monsters color nocol\">Toute pitite araignée mignonne</li>\n                    <li class=\"mounts color nocol\">Tortue de selle</li>\n                    <li class=\"actions color nocol\">Tricheur !</li>\n                    <li class=\"monsters color nocol\">Vase naze à l'uzi usé</li>\n                    <li class=\"classes color nocol\">Voleur</li>\n                    <li class=\"monsters color nocol\">William Jexpire, auteur du Songe d'une pluie d'XP</li>\n                    <li class=\"monsters color nocol\">Yack Yack Yack !</li>\n                    <template v-for=\"(item, index) in munchkin4.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin4.version) !== -1) && ((munchkin4.curses && item.class.indexOf('curses') !== -1) || (munchkin4.acolytes && item.class.indexOf('acolytes') !== -1) || (munchkin4.mounts && item.class.indexOf('mounts') !== -1) || (munchkin4.classes && item.class.indexOf('classes') !== -1) || (munchkin4.races && item.class.indexOf('races') !== -1) || (munchkin4.monsters && item.class.indexOf('monsters') !== -1) || (munchkin4.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin4.version) !== -1) && all.munchkin4DoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin4DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-4-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkin4TreasuresNumber\">34</span></p>\n                <ol>\n                    <li class=\"bonuses color nocol\">...du Destin</li>\n                    <li class=\"bonuses color nocol\">Ailes de précipitation</li>\n                    <li class=\"objects color nocol\">Anneau de souhait</li>\n                    <li class=\"objects color nocol\">Appât à monture \"Oui-y-s'casse\"</li>\n                    <li class=\"stuffs color nocol\">Arc souffrant d'hypertension</li>\n                    <li class=\"stuffs color nocol\">Armure en épluchures de patates</li>\n                    <li class=\"stuffs color nocol\">Armure en solde</li>\n                    <li class=\"stuffs color nocol\">Batte de braise-ball</li>\n                    <li class=\"stuffs color nocol\">Bottes Deux Chevals</li>\n                    <li class=\"bonuses color nocol\">Bride lance-flammes</li>\n                    <li class=\"bonuses color nocol\">Brillant</li>\n                    <li class=\"stuffs color nocol\">Casque de fier-à-bras</li>\n                    <li class=\"objects color nocol\">Chant nuptial</li>\n                    <li class=\"bonuses color nocol\">Crise d'Intelligence aiguë</li>\n                    <li class=\"stuffs color nocol\">Combat à pied nus</li>\n                    <li class=\"bonuses color nocol\">Crise de Jalousie</li>\n                    <li class=\"objects color nocol\">Dé Pipé</li>\n                    <li class=\"stuffs color nocol\">Faux et usage de faux</li>\n                    <li class=\"bonuses color nocol\">Maîtrise de gestion en management</li>\n                    <li class=\"stuffs color nocol\">Masque d'Halloween</li>\n                    <li class=\"bonuses color nocol\">Mécano-...</li>\n                    <li class=\"levels color nocol\">Piller son propre temple</li>\n                    <li class=\"stuffs color nocol\">Planche à ~~repasser~~ trepasser</li>\n                    <li class=\"objects color nocol\">Potin de changement de sexe</li>\n                    <li class=\"bonuses color nocol\">Potion de volubilité</li>\n                    <li class=\"objects color nocol\">Poudre rétrécissante</li>\n                    <li class=\"stuffs color nocol\">Pulvérisatueur</li>\n                    <li class=\"levels color nocol\">Réveiller un volcan sous la ville ennemie</li>\n                    <li class=\"levels color nocol\">S'habiller comme son personnage</li>\n                    <li class=\"bonuses color nocol\">Sanfouane et l'oie</li>\n                    <li class=\"bonuses color nocol\">Soudoyer un Fidèle serviteur</li>\n                    <li class=\"levels color nocol\">Tuer des nazis</li>\n                    <li class=\"levels color nocol\">Tuer un Fidèle Serviteur</li>\n                    <li class=\"levels color nocol\">Tuer une Monture</li>\n                    <template v-for=\"(item, index) in munchkin4.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin4.version) !== -1) && ((munchkin4.levels && item.class.indexOf('levels') !== -1) || (munchkin4.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkin4.objects && item.class.indexOf('objects') !== -1) || (munchkin4.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin4.version) !== -1) && all.munchkin4TreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin4TreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-5 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin5 }\">\n        <img class=\"demo\" src=\"media/images/upload/munchkin-5-on-ze-rode-again-edge_2345.jpg\" alt=\"Munchkin 5\">\n        <h2 id=\"munchkin-5\">Munchkin 5 : On Zeu Rôde Again</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin5.filters }\">\n            <h3 id=\"munchkin-5-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkin5ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Éditions**\n                <div class=\"edition\">\n                    <p>\n                        <label>\n                            <input type=\"radio\" value=\"nocol\" v-model=\"munchkin5.version\"> Édition originale\n                    </label>\n                        <br>\n                        <label>\n                            <input type=\"radio\" value=\"color\" v-model=\"munchkin5.version\"> Seconde Édition - (Couleur)\n                    </label>\n                    </p>\n                </div>\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin5.bonuses\"> Actions (<span v-text=\"munchkin5BonusesNumber\">13</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin5.actions\"> Améliorations (<span v-text=\"munchkin5ActionsNumber\">8</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin5.classes\"> Classes (<span v-text=\"munchkin5ClassesNumber\">6</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin5.stuffs\"> Équipements (<span v-text=\"munchkin5StuffsNumber\">24</span>)\n                    </label><br>\n                    <label class=\"acolytes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin5.acolytes\"> Fidèles Serviteurs (<span v-text=\"munchkin5AcolytesNumber\">1</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin5.levels\"> Gains de Niveaux (<span v-text=\"munchkin5LevelsNumber\">7</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin5.curses\"> Malédictions (<span v-text=\"munchkin5CursesNumber\">9</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin5.monsters\"> Monstres (<span v-text=\"munchkin5MonstersNumber\">27</span>)\n                    </label><br>\n                    <label class=\"mounts\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin5.mounts\"> Montures (<span v-text=\"munchkin5MountsNumber\">3</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin5.objects\"> Objets (<span v-text=\"munchkin5ObjectsNumber\">8</span>)\n                    </label><br>\n                    <label class=\"races\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin5.races\"> Races (<span v-text=\"munchkin5RacesNumber\">6</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-5-details\">Détails</h3>\n            <p><img src=\"media/images/upload/m5.gif\" alt=\"Munchkin 5\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :</p>\n            <ul>\n                <li>La Races des Gnomes</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkin5CardsNumber\">112</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-5-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkin5DoorsNumber\">60</span></p>\n                <ol>\n                    <li class=\"actions color nocol\">À deux têtes</li>\n                    <li class=\"monsters color nocol\">Anubis</li>\n                    <li class=\"mounts color nocol\">Araignée de selle</li>\n                    <li class=\"actions color nocol\">Au sourire sinistre</li>\n                    <li class=\"monsters color nocol\">Blobgobelin</li>\n                    <li class=\"monsters color nocol\">Boeuf Pour-qui-l'gnon</li>\n                    <li class=\"monsters color nocol\">~~Bonus de base~~ Bonnasse de bouse à l'attaque</li>\n                    <li class=\"monsters color nocol\">Clowns morts-vivants</li>\n                    <li class=\"monsters color nocol\">Coq qu'est triste</li>\n                    <li class=\"monsters color nocol\">Cyclope</li>\n                    <li class=\"monsters color nocol\">Druide</li>\n                    <li class=\"races color nocol\">Elfe</li>\n                    <li class=\"monsters color nocol\">Ex di MJ</li>\n                    <li class=\"monsters color nocol\">Fée des dents</li>\n                    <li class=\"acolytes color nocol\">Fidèle serviteur porteur de torche</li>\n                    <li class=\"races color nocol\">Gnome</li>\n                    <li class=\"actions color nocol\">Gonflable</li>\n                    <li class=\"races color nocol\">Halfelin</li>\n                    <li class=\"monsters color nocol\">Insectricheurs</li>\n                    <li class=\"monsters color nocol\">Karateka Rapace (spectral, qui plus est...)</li>\n                    <li class=\"monsters color nocol\">La colère du Khan</li>\n                    <li class=\"monsters color nocol\">La main du destin</li>\n                    <li class=\"monsters color nocol\">Les J'tue-mpfs</li>\n                    <li class=\"monsters color nocol\">Les frères Grimm</li>\n                    <li class=\"monsters color nocol\">Les trois munchquetaires</li>\n                    <li class=\"monsters color nocol\">Mâchoire de verre</li>\n                    <li class=\"curses color nocol\">Malédiction ! Catalogue</li>\n                    <li class=\"curses color nocol\">Malédiction ! \"Et moi j'ai... un vieux caillou...\"</li>\n                    <li class=\"curses color nocol\">Malédiction ! Musette de rétention brachiale inopinée</li>\n                    <li class=\"curses color nocol\">Malédiction ! Perte du dé porte-bonheur</li>\n                    <li class=\"curses color nocol\">Malédiction ! Pluie de belettes</li>\n                    <li class=\"curses color nocol\">Malédiction ! Poupée vaudou</li>\n                    <li class=\"curses color nocol\">Malédiction ! Règles arbitrairement égalitaires</li>\n                    <li class=\"curses color nocol\">Malédiction ! Souhait prononcé sur un coup de tête</li>\n                    <li class=\"curses color nocol\">Malédiction ! Souhaiter qu'on vous retire une épine du pied</li>\n                    <li class=\"monsters color nocol\">Monstre (subtilement) caché sous le lit</li>\n                    <li class=\"actions color nocol\">Monstre Érrant</li>\n                    <li class=\"actions color nocol\">Monstre Érrant</li>\n                    <li class=\"mounts color nocol\">Monture en solde</li>\n                    <li class=\"races color nocol\">Nain</li>\n                    <li class=\"races color nocol\">Orque</li>\n                    <li class=\"monsters color nocol\">Orque perdu</li>\n                    <li class=\"actions color nocol\">Politiquement correct</li>\n                    <li class=\"monsters color nocol\">Pou de foudre</li>\n                    <li class=\"monsters color nocol\">Pouletergeist</li>\n                    <li class=\"monsters color nocol\">Rapace caparaçonne</li>\n                    <li class=\"monsters color nocol\">Salaad</li>\n                    <li class=\"races color nocol\">Sang-mêlé</li>\n                    <li class=\"actions color nocol\">Super Munchkin</li>\n                    <li class=\"classes color nocol\">Rôdeur</li>\n                    <li class=\"classes color nocol\">Rôdeur</li>\n                    <li class=\"classes color nocol\">Rôdeur</li>\n                    <li class=\"classes color nocol\">Rôdeur</li>\n                    <li class=\"classes color nocol\">Rôdeur</li>\n                    <li class=\"classes color nocol\">Rôdeur</li>\n                    <li class=\"mounts color nocol\">Tapis volant</li>\n                    <li class=\"monsters color nocol\">Téléprospecteur</li>\n                    <li class=\"monsters color nocol\">Tout ptit dieu</li>\n                    <li class=\"actions color nocol\">Tricheur</li>\n                    <li class=\"monsters color nocol\">Vendeur de montures d'occasion</li>\n                    <template v-for=\"(item, index) in munchkin5.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin5.version) !== -1) && ((munchkin5.curses && item.class.indexOf('curses') !== -1) || (munchkin5.acolytes && item.class.indexOf('acolytes') !== -1) || (munchkin5.mounts && item.class.indexOf('mounts') !== -1) || (munchkin5.classes && item.class.indexOf('classes') !== -1) || (munchkin5.races && item.class.indexOf('races') !== -1) || (munchkin5.monsters && item.class.indexOf('monsters') !== -1) || (munchkin5.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin5.version) !== -1) && all.munchkin5DoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin5DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-5-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkin5TreasuresNumber\">52</span></p>\n                <ol>\n                    <li class=\"objects color nocol\">Anneau de Souhait</li>\n                    <li class=\"objects color nocol\">Anneau de Souhait</li>\n                    <li class=\"stuffs color nocol\">Arbre de transmission de gnons</li>\n                    <li class=\"stuffs color nocol\">Arc de désequilibre éhonté des combats</li>\n                    <li class=\"stuffs color nocol\">Armure d'écuelles</li>\n                    <li class=\"bonuses color nocol\">Armure de plaques chauffantes</li>\n                    <li class=\"stuffs color nocol\">Armure ~~lourde~~ gourde</li>\n                    <li class=\"bonuses color nocol\">Baron de Münchkinhausen</li>\n                    <li class=\"bonuses color nocol\">Bénédiction</li>\n                    <li class=\"stuffs color nocol\">Bottes de sept dieux</li>\n                    <li class=\"stuffs color nocol\">Bouclier humain</li>\n                    <li class=\"stuffs color nocol\">Casque de l'horreur indicible et effroyablement terrifiante</li>\n                    <li class=\"stuffs color nocol\">Casque invisible</li>\n                    <li class=\"stuffs color nocol\">Cloche à gros mage</li>\n                    <li class=\"objects color nocol\">Corde de saut à l'élastique</li>\n                    <li class=\"bonuses color nocol\">Coup critique</li>\n                    <li class=\"stuffs color nocol\">Cordon d'insécurité</li>\n                    <li class=\"stuffs color nocol\">Cotte de mailles en spandex</li>\n                    <li class=\"objects color nocol\">Dé pipé</li>\n                    <li class=\"bonuses color nocol\">Deux pieds de plus</li>\n                    <li class=\"stuffs color nocol\">Diadème de dextérité suspecte</li>\n                    <li class=\"objects color nocol\">Eau gazeuse bénite</li>\n                    <li class=\"levels color nocol\">Écrire l'histoire de votre personnage</li>\n                    <li class=\"bonuses color nocol\">Enflammé</li>\n                    <li class=\"stuffs color nocol\">Épée à trois mains</li>\n                    <li class=\"stuffs color nocol\">Espadon</li>\n                    <li class=\"stuffs color nocol\">Épée courte</li>\n                    <li class=\"levels color nocol\">Faire cracher du soda par le nez au MJ</li>\n                    <li class=\"levels color nocol\">Faire rire le MJ</li>\n                    <li class=\"bonuses color nocol\">Faux ~~sein~~ saint en plastique</li>\n                    <li class=\"stuffs color nocol\">Harnois à la noix</li>\n                    <li class=\"bonuses color nocol\">Il ne peut en rester qu'un et c'est moi</li>\n                    <li class=\"bonuses color nocol\">Invitation à prendre une bière</li>\n                    <li class=\"levels color nocol\">Jeter un froid</li>\n                    <li class=\"stuffs color nocol\">Joli petit haut perforant</li>\n                    <li class=\"bonuses color nocol\">Judicieusement interchangeable</li>\n                    <li class=\"stuffs color nocol\">LA hache</li>\n                    <li class=\"stuffs color nocol\">Lame ~~vorpale~~ morfale</li>\n                    <li class=\"stuffs color nocol\">Marteau de guerre de destruction massive</li>\n                    <li class=\"stuffs color nocol\">Moulin à gruyère</li>\n                    <li class=\"levels color nocol\">Nouveau MJ crédule</li>\n                    <li class=\"stuffs color nocol\">Pantoufles de P'yen-Hu</li>\n                    <li class=\"objects color nocol\">Pierre fine aux os de poil</li>\n                    <li class=\"bonuses color nocol\">Plaque personnalisée</li>\n                    <li class=\"bonuses color nocol\">~~Port des armures légères...~~ Peur des ordres d'une mégère</li>\n                    <li class=\"objects color nocol\">Potion ~~de torero~~ d'eau de terreur</li>\n                    <li class=\"stuffs color nocol\">Poulaines</li>\n                    <li class=\"levels color nocol\">Rire des répliques empruntées par le MJ aux Monty Python</li>\n                    <li class=\"objects color nocol\">Sandwich aux épinards</li>\n                    <li class=\"stuffs color nocol\">Sceptre d'éveil Playsghoule©</li>\n                    <li class=\"levels color nocol\">Trouver l'entrée secrète</li>\n                    <li class=\"bonuses color nocol\">Tuning de monture</li>\n                    <template v-for=\"(item, index) in munchkin5.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin5.version) !== -1) && ((munchkin5.levels && item.class.indexOf('levels') !== -1) || (munchkin5.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkin5.objects && item.class.indexOf('objects') !== -1) || (munchkin5.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin5.version) !== -1) && all.munchkin5TreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin5TreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-6 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin6 }\">\n        <img class=\"demo\" src=\"media/images/upload/01ec5a2846c8ecc0bc8b3fa3ad606c169c3a.jpeg\" alt=\"Munchkin 6\">\n        <h2 id=\"munchkin-6\">Munchkin 6 : Le Donjon de la Farce</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin6.filters }\">\n            <h3 id=\"munchkin-6-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkin6ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Éditions**\n                <div class=\"edition\">\n                    <p>\n                        <label>\n                            <input type=\"radio\" value=\"nocol\" v-model=\"munchkin6.version\"> Édition originale\n                        </label><br>\n                        <label>\n                            <input type=\"radio\" value=\"color\" v-model=\"munchkin6.version\"> Seconde Édition - (Couleur)\n                        </label>\n                    </p>\n                </div>\n                **Types de carte**\n                <p>\n                    <label class=\"fields\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin6.fields\"> Donjons (<span v-text=\"munchkin6DonjonsNumber\">20</span>)\n                    </label><br>\n                    <label class=\"warps\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin6.warps\"> Portails  (<span v-text=\"munchkin6WarpsNumber\">16</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-6-details\">Détails</h3>\n            <p><img src=\"media/images/upload/m6.gif\" alt=\"Munchkin 6\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :</p>\n            <ul>\n                <li>Les Portails</li>\n                <li>Les Donjons</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkin6CardsNumber\">36</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-6-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkin6DoorsNumber\">16</span></p>\n                <ol>\n                    <li class=\"warps color nocol\">Éboulement</li>\n                    <li class=\"warps color nocol\">Éboulement</li>\n                    <li class=\"warps color nocol\">La fortune sourit aux gros nuls</li>\n                    <li class=\"warps color nocol\">La fortune sourit aux gros nuls</li>\n                    <li class=\"warps color nocol\">Passage étroit</li>\n                    <li class=\"warps color nocol\">Passage étroit</li>\n                    <li class=\"warps color nocol\">Tous les chemin mènent à Rome</li>\n                    <li class=\"warps color nocol\">Tous les chemin mènent à Rome</li>\n                    <li class=\"warps color nocol\">Tourner en rond</li>\n                    <li class=\"warps color nocol\">Tourner en rond</li>\n                    <li class=\"warps color nocol\">Porte secrète</li>\n                    <li class=\"warps color nocol\">Porte secrète</li>\n                    <li class=\"warps color nocol\">Donjon néttoyé !</li>\n                    <li class=\"warps color nocol\">Donjon néttoyé !</li>\n                    <li class=\"warps color nocol\">Téléportation !</li>\n                    <li class=\"warps color nocol\">Téléportation !</li>\n                    <template v-for=\"(item, index) in munchkin6.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin6.version) !== -1) && (munchkin6.warps && item.class.indexOf('warps') !== -1) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin6.version) !== -1) && all.munchkin6DoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin6DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"donjons\">\n                <h3 id=\"munchkin-6-donjons\">Donjons</h3>\n                <p>Nombre total de donjons : <span v-text=\"munchkin6DonjonsNumber\">20</span></p>\n                <ol>\n                    <li class=\"fields color nocol\">Chez Joe, le donjon à prix discount !</li>\n                    <li class=\"fields color nocol\">Donjon au sol en papier tue-mouche dégueu</li>\n                    <li class=\"fields color nocol\">Donjon de l'effet manga libidineux</li>\n                    <li class=\"fields color nocol\">Donjon de la prodigalité du MD</li>\n                    <li class=\"fields color nocol\">Donjon de la révoltante mesquinerie</li>\n                    <li class=\"fields color nocol\">Donjon de la surabondance elfique</li>\n                    <li class=\"fields color nocol\">Donjon de la tricherie encore plus éhontée que d'habitude</li>\n                    <li class=\"fields color nocol\">Donjon des adversaires en guimauve</li>\n                    <li class=\"fields color nocol\">Donjon des malédictions contagieuses</li>\n                    <li class=\"fields color nocol\">Donjon des monstres militants</li>\n                    <li class=\"fields color nocol\">Donjon des morts-vivants omniprésents</li>\n                    <li class=\"fields color nocol\">Donjon des prouesses inattendues</li>\n                    <li class=\"fields color nocol\">Donjon des races ridicules</li>\n                    <li class=\"fields color nocol\">Donjon des règles d'emcombrement truquées</li>\n                    <li class=\"fields color nocol\">Donjon du butin opulent</li>\n                    <li class=\"fields color nocol\">Donjon du changement de sexe</li>\n                    <li class=\"fields color nocol\">Donjon du meurtre obligatoire</li>\n                    <li class=\"fields color nocol\">Donjon du petit effort en plus...</li>\n                    <li class=\"fields color nocol\">Donjon du talent prodigieux</li>\n                    <li class=\"fields color nocol\">Donjon du trépas létal mortel qui tue</li>\n                    <template v-for=\"(item, index) in munchkin6.donjonsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin6.version) !== -1) && (munchkin6.fields && item.class.indexOf('fields') !== -1) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin6.version) !== -1) && all.munchkin6DonjonsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin6DonjonsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-7-o munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin7o }\">\n        <img class=\"demo\" src=\"media/images/upload/munchkin-7-et-pour-q-1372-1294056786.jpg\" alt=\"Munchkin 7\">\n        <h2 id=\"munchkin-7-o\">Munchkin 7 : Et pour quelques cartes de plus...</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin7o.filters }\">\n            <h3 id=\"munchkin-7-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkin7oToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Éditions**\n                <div class=\"edition\">\n                    <p>\n                        <label>\n                            <input type=\"radio\" value=\"nocol\" v-model=\"munchkin7o.version\"> Édition originale\n                        </label><br>\n                        <label>\n                            <input type=\"radio\" value=\"color\" v-model=\"munchkin7o.version\"> Seconde Édition - (Couleur)\n                        </label>\n                    </p>\n                </div>\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.bonuses\"> Actions (<span v-text=\"munchkin7oBonusesNumber\">14</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.actions\"> Améliorations (<span v-text=\"munchkin7oActionsNumber\">25</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.stuffs\"> Équipements (<span v-text=\"munchkin7oStuffsNumber\">3</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.curses\"> Malédictions (<span v-text=\"munchkin7oCursesNumber\">3</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.objects\"> Objets (<span v-text=\"munchkin7oObjectsNumber\">7</span>)\n                    </label><br>\n                    <label class=\"races\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.races\"> Races (<span v-text=\"munchkin7oRacesNumber\">4</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-7-o-details\">Détails</h3>\n            <p><img src=\"media/images/upload/m7o.gif\" alt=\"Munchkin 7\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :</p>\n            <ul>\n                <li>Un peu plus de triche !</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkin7oCardsNumber\">56</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-7-o-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkin7oDoorsNumber\">32</span></p>\n                <ol>\n                    <li class=\"actions color nocol\">... et ses petits copains</li>\n                    <li class=\"actions color nocol\">... et ses petits copains</li>\n                    <li class=\"races color nocol\">Chimère</li>\n                    <li class=\"actions color nocol\">Dans de beaux draps</li>\n                    <li class=\"actions color nocol\">Indiciblement...</li>\n                    <li class=\"actions color nocol\">Invisible</li>\n                    <li class=\"curses color nocol\">Malédiction! Et ne m'appelez pas Ginette</li>\n                    <li class=\"curses color nocol\">Malédiction! Expiration de garantie !</li>\n                    <li class=\"curses color nocol\">Malédiction! Peinture au plomb !</li>\n                    <li class=\"actions color nocol\">Meurtrier</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"actions color nocol\">Monstre Errant</li>\n                    <li class=\"actions color nocol\">Sauvage</li>\n                    <li class=\"actions color nocol\">Séduisant(e)</li>\n                    <li class=\"actions color nocol\">Standard</li>\n                    <li class=\"races color nocol\">Sang-mêlé</li>\n                    <li class=\"races color nocol\">Sang-mêlé</li>\n                    <li class=\"races color nocol\">Sang-méli-mélo</li>\n                    <li class=\"actions color nocol\">Super Maousse Munchkin</li>\n                    <li class=\"actions color nocol\">Super Munchkin</li>\n                    <li class=\"actions color nocol\">Super Munchkin</li>\n                    <li class=\"actions color nocol\">Tricheur !</li>\n                    <li class=\"actions color nocol\">Tricheur !</li>\n                    <li class=\"actions color nocol\">Tricheur !</li>\n                    <li class=\"actions color nocol\">Tricheur !</li>\n                    <li class=\"actions color nocol\">Tromperie dur la marchandise</li>\n                    <li class=\"actions color nocol\">Ultra Munchkin</li>\n                    <li class=\"actions color nocol\">Vraiment très...</li>\n                    <li class=\"actions color nocol\">Voleur de niveaux</li>\n                    <template v-for=\"(item, index) in munchkin7o.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin7o.version) !== -1) && ((munchkin7o.curses && item.class.indexOf('curses') !== -1) || (munchkin7o.actions && item.class.indexOf('actions') !== -1) || (munchkin7o.classes && item.class.indexOf('classes') !== -1) || (munchkin7o.races && item.class.indexOf('races') !== -1) || (munchkin7o.monsters && item.class.indexOf('monsters') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin7o.version) !== -1) && all.munchkin7oDoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin7oDoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-7-o-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkin7oTreasuresNumber\">24</span></p>\n                <ol>\n                    <li class=\"bonuses color nocol\">...À coque en acier renforcé</li>\n                    <li class=\"bonuses color nocol\">...À talons aiguille</li>\n                    <li class=\"bonuses color nocol\">...Au multiples bouts pointus et tranchants</li>\n                    <li class=\"bonuses color nocol\">...Autonettoyant(e)</li>\n                    <li class=\"bonuses color nocol\">...Monté sur ressorts</li>\n                    <li class=\"bonuses color nocol\">...Perce-armure</li>\n                    <li class=\"bonuses color nocol\">...Plaqué or</li>\n                    <li class=\"bonuses color nocol\">...Renforcé(e)</li>\n                    <li class=\"bonuses color nocol\">...Thème musical</li>\n                    <li class=\"bonuses color nocol\">...Ventilé</li>\n                    <li class=\"objects color nocol\">1001 astuces de survie en donjon</li>\n                    <li class=\"objects color nocol\">Anneau de Souhait</li>\n                    <li class=\"stuffs color nocol\">Bon pour des objets gratuits</li>\n                    <li class=\"stuffs color nocol\">Costume ne laissant (quasiment) rien à l'imagination</li>\n                    <li class=\"objects color nocol\">Dé Pipé</li>\n                    <li class=\"bonuses color nocol\">Deux ~~pieds dans le même sabot~~ sabots sur le même pied</li>\n                    <li class=\"bonuses color nocol\">Oh le gros tricheuuuuuuuur!</li>\n                    <li class=\"objects color nocol\">Potion magique de transmutation d'ADN</li>\n                    <li class=\"objects color nocol\">Sou porte-bonheur</li>\n                    <li class=\"objects color nocol\">Talisman porte-bonheur</li>\n                    <li class=\"objects color nocol\">Talisman porte-bonheur</li>\n                    <li class=\"bonuses color nocol\">Triche éhontée</li>\n                    <li class=\"bonuses color nocol\">Triche éhontée</li>\n                    <li class=\"stuffs color nocol\">Trou portatif</li>\n                    <template v-for=\"(item, index) in munchkin7o.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin7o.version) !== -1) && ((munchkin7o.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkin7o.objects && item.class.indexOf('objects') !== -1) || (munchkin7o.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin7o.version) !== -1) && all.munchkin7oTreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin7oTreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-7 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin7 }\">\n        <img class=\"demo\" src=\"media/images/upload/ubimu07.png\" alt=\"Munchkin 7\">\n        <h2 id=\"munchkin-7\">Munchkin 7 : Oh le gros tricheuuuuuuuur !</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin7.filters }\">\n            <h3 id=\"munchkin-7-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkin7ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7.bonuses\"> Actions (<span v-text=\"munchkin7BonusesNumber\">19</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7.actions\"> Améliorations (<span v-text=\"munchkin7ActionsNumber\">50</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7.stuffs\"> Équipements (<span v-text=\"munchkin7StuffsNumber\">5</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7.levels\"> Gains de Niveaux (<span v-text=\"munchkin7LevelsNumber\">4</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7.curses\"> Malédictions (<span v-text=\"munchkin7CursesNumber\">2</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7.monsters\"> Monstres (<span v-text=\"munchkin7MonstersNumber\">11</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7.objects\"> Objets (<span v-text=\"munchkin7ObjectsNumber\">14</span>)\n                    </label><br>\n                    <label class=\"races\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin7.races\"> Races (<span v-text=\"munchkin7RacesNumber\">7</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-7-details\">Détails</h3>\n            <p><img src=\"media/images/upload/m7.gif\" alt=\"Munchkin 7\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :</p>\n            <ul>\n                <li>De la triche de malade !</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkin7CardsNumber\">112</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-7-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkin7DoorsNumber\">70</span></p>\n                <ol>\n                    <li class=\"actions color\">...de l'Amour</li>\n                    <li class=\"actions color\">...avec supplément de fromage</li>\n                    <li class=\"actions color\">Acheté au prix de gros</li>\n                    <li class=\"actions color\">Alité</li>\n                    <li class=\"actions color\">Ancienne Édition</li>\n                    <li class=\"actions color\">Ancienne Édition</li>\n                    <li class=\"actions color\">Ancienne Édition</li>\n                    <li class=\"actions color\">Blindé</li>\n                    <li class=\"races color\">Chimère</li>\n                    <li class=\"actions color\">Dans de beaux draps</li>\n                    <li class=\"actions color\">Dans de beaux draps</li>\n                    <li class=\"actions color\">Deuxième round</li>\n                    <li class=\"actions color\">Édenté</li>\n                    <li class=\"monsters color\">Empreintes de pas</li>\n                    <li class=\"actions color\">Épique Junior</li>\n                    <li class=\"actions color\">Épique Junior</li>\n                    <li class=\"actions color\">Épique Junior</li>\n                    <li class=\"actions color\">Épouvantable</li>\n                    <li class=\"actions color\">Explosif</li>\n                    <li class=\"actions color\">Extraordinairement</li>\n                    <li class=\"actions color\">Extrèmement</li>\n                    <li class=\"actions color\">Foire aux monstres</li>\n                    <li class=\"actions color\">Foire aux monstres</li>\n                    <li class=\"monsters color\">Frites</li>\n                    <li class=\"monsters color\">Gérant de magasin de jeux</li>\n                    <li class=\"actions color\">Gonflé aux stéroïdes</li>\n                    <li class=\"monsters color\">Graffiti</li>\n                    <li class=\"actions color\">Inconcevablement</li>\n                    <li class=\"actions color\">Incroyablement</li>\n                    <li class=\"actions color\">Invraisemblablement</li>\n                    <li class=\"monsters color\">Linge sale</li>\n                    <li class=\"curses color\">Malédiction! Et ne m'appelez pas Ginette</li>\n                    <li class=\"curses color\">Malédiction! Le MJ fait respecter les règles !</li>\n                    <li class=\"monsters color\">Marionnette chaussette</li>\n                    <li class=\"monsters color\">Mauvais odeur</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Mort-vivant</li>\n                    <li class=\"actions color\">Mort-vivant</li>\n                    <li class=\"actions color\">Mort-vivant</li>\n                    <li class=\"monsters color\">Petits soldats en plastique</li>\n                    <li class=\"actions color\">Saoul</li>\n                    <li class=\"races color\">Sang-mêlé</li>\n                    <li class=\"races color\">Sang-mêlé</li>\n                    <li class=\"races color\">Sang-mêlé</li>\n                    <li class=\"races color\">Sang-méli-mélo</li>\n                    <li class=\"races color\">Sang-méli-mélo</li>\n                    <li class=\"races color\">Sang-méli-mélo</li>\n                    <li class=\"monsters color\">Silhouette en carton</li>\n                    <li class=\"monsters color\">Smiley</li>\n                    <li class=\"actions color\">Sournois</li>\n                    <li class=\"actions color\">Super Maousse Munchkin</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"monsters color\">Télévision</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"actions color\">Ultra Munchkin</li>\n                    <li class=\"actions color\">Ultra Munchkin</li>\n                    <li class=\"actions color\">Ultra Munchkin</li>\n                    <li class=\"actions color\">Ultra-rare</li>\n                    <li class=\"actions color\">Velu</li>\n                    <li class=\"actions color\">Vomitivement</li>\n                    <template v-for=\"(item, index) in munchkin7.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin7.version) !== -1) && ((munchkin7.curses && item.class.indexOf('curses') !== -1) || (munchkin7.actions && item.class.indexOf('actions') !== -1) || (munchkin7.classes && item.class.indexOf('classes') !== -1) || (munchkin7.races && item.class.indexOf('races') !== -1) || (munchkin7.monsters && item.class.indexOf('monsters') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin7.version) !== -1) && all.munchkin7DoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin7DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-7-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkin7TreasuresNumber\">42</span></p>\n                <ol>\n                    <li class=\"objects color\">1001 astuces de survie en donjon</li>\n                    <li class=\"bonuses color\">À revêtement en Téflon®</li>\n                    <li class=\"bonuses color\">À coque en acier renforcé</li>\n                    <li class=\"bonuses color\">À talons aiguille</li>\n                    <li class=\"bonuses color\">Au multiples bouts pointus et tranchants</li>\n                    <li class=\"bonuses color\">Autonettoyant(e)</li>\n                    <li class=\"stuffs color\">Bon pour des objets gratuits</li>\n                    <li class=\"stuffs color\">Costume ne laissant (quasiment) rien à l'imagination</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"stuffs color\">Deux ~~pieds dans le même sabot~~ sabots sur le même pied</li>\n                    <li class=\"objects color\">Mites dressées</li>\n                    <li class=\"bonuses color\">Moi, je monte jusqu'à II</li>\n                    <li class=\"bonuses color\">Monté sur ressorts</li>\n                    <li class=\"objects color\">Munchkin gonflable</li>\n                    <li class=\"levels color\">Nourrir l'obsession du MJ pour les dés</li>\n                    <li class=\"bonuses color\">Oh le gros tricheuuuuuuuur!</li>\n                    <li class=\"objects color\">Parchemin de désamélioration</li>\n                    <li class=\"bonuses color\">Perce-armure</li>\n                    <li class=\"bonuses color\">Plaqué or</li>\n                    <li class=\"objects color\">Potion de taille démesurée</li>\n                    <li class=\"objects color\">Potion magique de transmutation d'ADN</li>\n                    <li class=\"bonuses color\">Pour me prendre mon jouet, il faudra l'arracher à mes mains froides et sans vie</li>\n                    <li class=\"bonuses color\">Pour me prendre mon jouet, il faudra l'arracher à mes mains froides et sans vie</li>\n                    <li class=\"bonuses color\">Pour me prendre mon jouet, il faudra l'arracher à mes mains froides et sans vie</li>\n                    <li class=\"levels color\">Retourner le cerveau du MJ</li>\n                    <li class=\"bonuses color\">Renforcé(e)</li>\n                    <li class=\"levels color\">Se réincarner sans mourir</li>\n                    <li class=\"objects color\">Sou porte-bonheur</li>\n                    <li class=\"objects color\">Talisman porte-bonheur</li>\n                    <li class=\"objects color\">Talisman porte-bonheur</li>\n                    <li class=\"objects color\">Talisman porte-bonheur</li>\n                    <li class=\"objects color\">Talisman porte-bonheur</li>\n                    <li class=\"stuffs color\">Thème musical</li>\n                    <li class=\"bonuses color\">Tonitruant</li>\n                    <li class=\"bonuses color\">Triche éhontée</li>\n                    <li class=\"bonuses color\">Triche éhontée</li>\n                    <li class=\"bonuses color\">Triche éhontée</li>\n                    <li class=\"stuffs color\">Trou portatif</li>\n                    <li class=\"objects color\">Vendre père et mère</li>\n                    <li class=\"bonuses color\">Ventilé</li>\n                    <li class=\"levels color\">Zieuter le scénario</li>\n                    <template v-for=\"(item, index) in munchkin7.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin7.version) !== -1) && ((munchkin7.levels && item.class.indexOf('levels') !== -1) || (munchkin7.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkin7.objects && item.class.indexOf('objects') !== -1) || (munchkin7.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin7.version) !== -1) && all.munchkin7TreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin7TreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-8 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin8 }\">\n        <img class=\"demo\" src=\"media/images/upload/munchkin8.jpg\" alt=\"Munchkin 8\">\n        <h2 id=\"munchkin-8\">Munchkin 8 : Centaure et Sans Reproche</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin8.filters }\">\n            <h3 id=\"munchkin-8-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkin8ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin8.bonuses\"> Actions (<span v-text=\"munchkin8BonusesNumber\">11</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin8.actions\"> Améliorations (<span v-text=\"munchkin8ActionsNumber\">7</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin8.stuffs\"> Équipements (<span v-text=\"munchkin8StuffsNumber\">22</span>)\n                    </label><br>\n                    <label class=\"acolytes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin8.acolytes\"> Fidèles Serviteurs (<span v-text=\"munchkin8AcolytesNumber\">3</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin8.levels\"> Gains de Niveaux (<span v-text=\"munchkin8LevelsNumber\">6</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin8.curses\"> Malédictions (<span v-text=\"munchkin8CursesNumber\">14</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin8.monsters\"> Monstres (<span v-text=\"munchkin8MonstersNumber\">24</span>)\n                    </label><br>\n                    <label class=\"mounts\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin8.mounts\"> Montures (<span v-text=\"munchkin8MountsNumber\">4</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin8.objects\"> Objets (<span v-text=\"munchkin8ObjectsNumber\">6</span>)\n                    </label><br>\n                    <label class=\"races\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkin8.races\"> Races (<span v-text=\"munchkin8RacesNumber\">25</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-8-details\">Détails</h3>\n            <p><img src=\"media/images/upload/m8.gif\" alt=\"Munchkin 8\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :</p>\n            <ul>\n                <li>La Race des Centaures</li>\n                <li>La Race des Hommes-lézards</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkin8CardsNumber\">112</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-8-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkin8DoorsNumber\">77</span></p>\n                <ol>\n                    <li class=\"races color\">Ancien</li>\n                    <li class=\"races color\">Ancien</li>\n                    <li class=\"races color\">Ancien</li>\n                    <li class=\"monsters color\">Accros qu'aux deals</li>\n                    <li class=\"monsters color\">~~Angle~~ Ange adroit</li>\n                    <li class=\"monsters color\">~~Angle~~ Ange droit</li>\n                    <li class=\"monsters color\">~~Angle~~ Ange obtus</li>\n                    <li class=\"actions color\">Barabare</li>\n                    <li class=\"mounts color\">Bélier de selle</li>\n                    <li class=\"mounts color\">Bouc et mystère</li>\n                    <li class=\"races color\">Centaure</li>\n                    <li class=\"races color\">Centaure</li>\n                    <li class=\"races color\">Centaure</li>\n                    <li class=\"races color\">Centaure</li>\n                    <li class=\"races color\">Centaure</li>\n                    <li class=\"races color\">Centaure</li>\n                    <li class=\"races color\">Centaure</li>\n                    <li class=\"monsters color\">Centaure Tillard</li>\n                    <li class=\"monsters color\">Cheval de bataille</li>\n                    <li class=\"races color\">D'élite</li>\n                    <li class=\"races color\">D'élite</li>\n                    <li class=\"races color\">D'élite</li>\n                    <li class=\"monsters color\">Des serpents dans le bus</li>\n                    <li class=\"acolytes color\">Fidèle serviteur Centaure</li>\n                    <li class=\"acolytes color\">Fidèle serviteur Homme-lézard</li>\n                    <li class=\"acolytes color\">Fidèle Serviteur Médium</li>\n                    <li class=\"monsters color\">Flipper le ~~Dauphin~~ Saurien</li>\n                    <li class=\"actions color\">Grincheux</li>\n                    <li class=\"races color\">Homme-lézard</li>\n                    <li class=\"races color\">Homme-lézard</li>\n                    <li class=\"races color\">Homme-lézard</li>\n                    <li class=\"races color\">Homme-lézard</li>\n                    <li class=\"races color\">Homme-lézard</li>\n                    <li class=\"races color\">Homme-lézard</li>\n                    <li class=\"races color\">Homme-lézard</li>\n                    <li class=\"monsters color\">Homme des Tavernes</li>\n                    <li class=\"monsters color\">Jockey</li>\n                    <li class=\"monsters color\">~~La nuit des morts vivants~~ L'ami des mors luisants</li>\n                    <li class=\"monsters color\">Lapin en chocolat</li>\n                    <li class=\"monsters color\">Le cavalier sans tête (et sans cheval, de surcroît)</li>\n                    <li class=\"races color\">Légendaire</li>\n                    <li class=\"races color\">Légendaire</li>\n                    <li class=\"races color\">Légendaire</li>\n                    <li class=\"monsters color\">Lézards et essais</li>\n                    <li class=\"mounts color\">Licorne de selle</li>\n                    <li class=\"monsters color\">Lord Alfred Tennis-on</li>\n                    <li class=\"curses color\">Malédiction ! Appel de la forêt</li>\n                    <li class=\"curses color\">Malédiction ! Avoine avarée !</li>\n                    <li class=\"curses color\">Malédiction ! Bobos</li>\n                    <li class=\"curses color\">Malédiction ! Curieuse impression que les choses vont mal se passer...</li>\n                    <li class=\"curses color\">Malédiction ! Dé-coiffe-é</li>\n                    <li class=\"curses color\">Malédiction ! Dérive génétique</li>\n                    <li class=\"curses color\">Malédiction! Des fourmis (géantes rouges et carnivores) dans les jambes</li>\n                    <li class=\"curses color\">Malédiction! Gasterocotte de mailles</li>\n                    <li class=\"curses color\">Malédiction ! Perte du sens de l'orientation sexuelle</li>\n                    <li class=\"curses color\">Malédiction ! Petits doigts gourds, gluants et gauches</li>\n                    <li class=\"curses color\">Malédiction ! Poussée d'incompétence</li>\n                    <li class=\"curses color\">Malédiction! Ta race !</li>\n                    <li class=\"curses color\">Malédiction! Tu n'étais *pas* l'Élu</li>\n                    <li class=\"curses color\">Malédiction! Vide !</li>\n                    <li class=\"monsters color\">Monture Complètement Speed</li>\n                    <li class=\"actions color\">Névrosé</li>\n                    <li class=\"actions color\">Obsessionnel</li>\n                    <li class=\"monsters color\">Père Glu</li>\n                    <li class=\"actions color\">Placide</li>\n                    <li class=\"monsters color\">Prince crapaud</li>\n                    <li class=\"monsters color\">Roc Star</li>\n                    <li class=\"monsters color\">Salamandre</li>\n                    <li class=\"monsters color\">Salamandre Montypythonesque</li>\n                    <li class=\"races color\">Sang-mêlé</li>\n                    <li class=\"races color\">Sang-mêlé</li>\n                    <li class=\"monsters color\">Serpent de Midgard</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"monsters color\">Tikbalang</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"monsters color\">Varan navrant des écrans</li>\n                    <li class=\"mounts color\">Phénix de selle</li>\n                    <template v-for=\"(item, index) in munchkin8.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin8.version) !== -1) && ((munchkin8.curses && item.class.indexOf('curses') !== -1) || (munchkin8.acolytes && item.class.indexOf('acolytes') !== -1) || (munchkin8.mounts && item.class.indexOf('mounts') !== -1) || (munchkin8.races && item.class.indexOf('races') !== -1) || (munchkin8.monsters && item.class.indexOf('monsters') !== -1) || (munchkin8.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin8.version) !== -1) && all.munchkin8DoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin8DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-8-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkin8TreasuresNumber\">35</span></p>\n                <ol>\n                    <li class=\"levels color\">À quelque chose malheur est bon</li>\n                    <li class=\"stuffs color\">Accessoires assortis</li>\n                    <li class=\"levels color\">Acheter de nouvelles figurines au MJ</li>\n                    <li class=\"objects color\">Anneau de Souhait</li>\n                    <li class=\"objects color\">Anneau qui donne la pêche !</li>\n                    <li class=\"stuffs color\">Appeau à cheval</li>\n                    <li class=\"levels color\">Arriver en avance à la partie</li>\n                    <li class=\"bonuses color\">Avatar</li>\n                    <li class=\"stuffs color\">Avertisseur sonore absolument pas kitsch</li>\n                    <li class=\"stuffs color\">Bardes</li>\n                    <li class=\"stuffs color\">Bottes en peau de mammifère</li>\n                    <li class=\"levels color\">Centaure et Sans Reproche</li>\n                    <li class=\"stuffs color\">Chaussures pour voyager à pinces</li>\n                    <li class=\"stuffs color\">Cotte ~~de mailles~~ d'écailles</li>\n                    <li class=\"stuffs color\">Couverture d'invisibilité</li>\n                    <li class=\"stuffs color\">Cravache enragée</li>\n                    <li class=\"objects color\">Dé pipé</li>\n                    <li class=\"objects color\">Dé ultrapipé</li>\n                    <li class=\"stuffs color\">Encensoir de censure</li>\n                    <li class=\"stuffs color\">Halo</li>\n                    <li class=\"stuffs color\">Lance et casque magiques</li>\n                    <li class=\"stuffs color\">Marmite de cassoulet William Saurien</li>\n                    <li class=\"stuffs color\">Masse à ailettes</li>\n                    <li class=\"stuffs color\">Mattraque du matin...</li>\n                    <li class=\"stuffs color\">Mattraque du soir...</li>\n                    <li class=\"stuffs color\">Oeillères</li>\n                    <li class=\"stuffs color\">Plumes de cheval</li>\n                    <li class=\"stuffs color\">Pull-over de Noël</li>\n                    <li class=\"levels color\">Regarder des films de monstres japonais</li>\n                    <li class=\"stuffs color\">Serpent ~~à sonnette~~ des toilettes</li>\n                    <li class=\"objects color\">Sirop des Râles</li>\n                    <li class=\"objects color\">Sirop des vrais bonhommes</li>\n                    <li class=\"levels color\">Trahir le groupe</li>\n                    <li class=\"stuffs color\">Truc sphérique, pointu et sacré</li>\n                    <li class=\"stuffs color\">Turbo</li>\n                    <template v-for=\"(item, index) in munchkin8.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkin8.version) !== -1) && ((munchkin8.levels && item.class.indexOf('levels') !== -1) || (munchkin8.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkin8.objects && item.class.indexOf('objects') !== -1) || (munchkin8.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin8.version) !== -1) && all.munchkin8TreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkin8TreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-n munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinN }\">\n        <img class=\"demo\" src=\"media/images/upload/ubimub01.png\" alt=\"Munchkin : Petit Papa Munchkin\">\n        <h2 id=\"munchkin-n\">Munchkin : Petit Papa Munchkin</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinN.filters }\">\n            <h3 id=\"munchkin-n-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinNToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinN.actions\"> Améliorations (<span v-text=\"munchkinNActionsNumber\">8</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinN.stuffs\"> Équipements (<span v-text=\"munchkinNStuffsNumber\">19</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinN.levels\"> Gains de Niveaux (<span v-text=\"munchkinNLevelsNumber\">3</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinN.curses\"> Malédictions (<span v-text=\"munchkinNCursesNumber\">2</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinN.monsters\"> Monstres (<span v-text=\"munchkinNMonstersNumber\">26</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinN.objects\"> Objets (<span v-text=\"munchkinNObjectsNumber\">2</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-n-details\">Détails</h3>\n            <p>\n            <img style=\"float: none;\" src=\"media/images/upload/n1.gif\" alt=\"Munchkin : Petit Papa Munchkin\">\n            <img style=\"float: none;\" src=\"media/images/upload/n2.gif\" alt=\"Munchkin : Petit Papa Munchkin\">\n            <img style=\"float: none;\" src=\"media/images/upload/n3.gif\" alt=\"Munchkin : Petit Papa Munchkin\">\n            <img style=\"float: none;\" src=\"media/images/upload/n4.gif\" alt=\"Munchkin : Petit Papa Munchkin\">\n            </p>\n            <p>Les icones précédentes en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :</p>\n            <ul>\n                <li>Les Vilains et Gentils</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinNCardsNumber\">60</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-n-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinNDoorsNumber\">36</span></p>\n                <ol>\n                    <li class=\"actions color\">... armé d'une bûche de Noël</li>\n                    <li class=\"monsters color\">Aides du père Noël</li>\n                    <li class=\"monsters color\">Ange de Bonté (mais aux manières un tantinet brutales)</li>\n                    <li class=\"monsters color\">Anti-Noël</li>\n                    <li class=\"monsters color\">Bergers allemands</li>\n                    <li class=\"monsters color\">Bon Anges de Neige</li>\n                    <li class=\"monsters color\">Casse-noisette</li>\n                    <li class=\"monsters color\">Camelot de Noěl</li>\n                    <li class=\"monsters color\">Dinde de Noël</li>\n                    <li class=\"monsters color\">Esprits de Noël</li>\n                    <li class=\"monsters color\">Éléphant blanc</li>\n                    <li class=\"actions color\">Gentil</li>\n                    <li class=\"actions color\">Gentil</li>\n                    <li class=\"monsters color\">Jouets défectueux</li>\n                    <li class=\"actions color\">Joyeux</li>\n                    <li class=\"monsters color\">Krampus</li>\n                    <li class=\"monsters color\">L'enfant au (satané bon sang d')Tambour (qui casse les oreilles)</li>\n                    <li class=\"monsters color\">Le Crado de Noël</li>\n                    <li class=\"monsters color\">Le Vent d'Hiver</li>\n                    <li class=\"monsters color\">Les p'tits rennes qui voient rouge</li>\n                    <li class=\"monsters color\">Les trois rois mafieux</li>\n                    <li class=\"curses color\">Malédiction : ~~Joyeux~~ Facheux Noël</li>\n                    <li class=\"curses color\">Malédiction ! Pas la bonne taille !</li>\n                    <li class=\"monsters color\">Mère Noël</li>\n                    <li class=\"monsters color\">Perce oreilles</li>\n                    <li class=\"monsters color\">Père Noël</li>\n                    <li class=\"monsters color\">Petits chanteurs à la Noix de Bois</li>\n                    <li class=\"monsters color\">Petit tambour</li>\n                    <li class=\"monsters color\">Pôle Mords Express</li>\n                    <li class=\"actions color\">Police des vacances</li>\n                    <li class=\"monsters color\">Sapin de Noël</li>\n                    <li class=\"monsters color\">Scrooge</li>\n                    <li class=\"monsters color\">Spectre ~~du Noël présent~~ des présents de Noël</li>\n                    <li class=\"actions color\">Quand on perd Noël...</li>\n                    <li class=\"actions color\">Vilain</li>\n                    <li class=\"actions color\">Vilain</li>\n                    <template v-for=\"(item, index) in munchkinN.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinN.version) !== -1) && ((munchkinN.curses && item.class.indexOf('curses') !== -1) || (munchkinN.mounts && item.class.indexOf('mounts') !== -1) || (munchkinN.races && item.class.indexOf('races') !== -1) || (munchkinN.monsters && item.class.indexOf('monsters') !== -1) || (munchkinN.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinN.version) !== -1) && all.munchkinNDoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinNDoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-n-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkinNTreasuresNumber\">24</span></p>\n                <ol>\n                    <li class=\"levels color\">Affrontez les fêtes de faim damnée</li>\n                    <li class=\"levels color\">Avec tes souhaits par milliers</li>\n                    <li class=\"stuffs color\">Boîte à chaussures</li>\n                    <li class=\"stuffs color\">Bottes de neige</li>\n                    <li class=\"stuffs color\">Bottes de Père Noël</li>\n                    <li class=\"objects color\">Boule de neige</li>\n                    <li class=\"stuffs color\">Boulet de ~~canon~~ charbon</li>\n                    <li class=\"stuffs color\">Cane à sucre (d'orge)</li>\n                    <li class=\"stuffs color\">Cake au fruit un tout petit peu rassis, mais vraiment un tout petit peu</li>\n                    <li class=\"stuffs color\">Chandelle festive</li>\n                    <li class=\"stuffs color\">Chausson de Noël</li>\n                    <li class=\"stuffs color\">Chapeau de Père Noël</li>\n                    <li class=\"stuffs color\">Chapeau de Renne</li>\n                    <li class=\"objects color\">Coincé dans la cheminée</li>\n                    <li class=\"stuffs color\">Écharpe</li>\n                    <li class=\"stuffs color\">Étoile de Noël</li>\n                    <li class=\"levels color\">Lait de poule très légèrement alcoolisé</li>\n                    <li class=\"stuffs color\">Mât de Cocagne qui cogne</li>\n                    <li class=\"stuffs color\">Mon beau gourdin</li>\n                    <li class=\"stuffs color\">Mon petit soulier (innocent et parfaitement inoffensif, promis)</li>\n                    <li class=\"stuffs color\">Ôôôô tannen bombe, ôôô tannen bombe...</li>\n                    <li class=\"stuffs color\">Pagne en Guirlande</li>\n                    <li class=\"stuffs color\">Papier crado</li>\n                    <li class=\"stuffs color\">Pic ~~à~~ de glace</li>\n                    <template v-for=\"(item, index) in munchkinN.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinN.version) !== -1) && ((munchkinN.levels && item.class.indexOf('levels') !== -1) || (munchkinN.objects && item.class.indexOf('objects') !== -1) || (munchkinN.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinN.version) !== -1) && all.munchkinNTreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinNTreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-m munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinM }\">\n        <img class=\"demo\" src=\"media/images/upload/ubimub2.png\" alt=\"Munchkinomicon\">\n        <h2 id=\"munchkin-m\">Munchkinomicon</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinM.filters }\">\n            <h3 id=\"munchkin-m-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinMToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinM.actions\"> Améliorations (<span v-text=\"munchkinMActionsNumber\">17</span>)\n                    </label><br>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinM.bonuses\"> Actions (<span v-text=\"munchkinMBonusesNumber\">1</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinM.classes\"> Classes (<span v-text=\"munchkinMClassesNumber\">1</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinM.stuffs\"> Équipements (<span v-text=\"munchkinMStuffsNumber\">4</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinM.levels\"> Gains de Niveaux (<span v-text=\"munchkinMLevelsNumber\">2</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinM.curses\"> Malédictions (<span v-text=\"munchkinMCursesNumber\">1</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinM.monsters\"> Monstres (<span v-text=\"munchkinMMonstersNumber\">3</span>)\n                    </label><br>\n                    <label class=\"munchkinomicon\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinM.munchkinomicon\"> Munchkinomicon (<span v-text=\"munchkinMMunchkinomiconNumber\">1</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinM.objects\"> Objets (<span v-text=\"munchkinMObjectsNumber\">6</span>)\n                    </label><br>\n                    <label class=\"races\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinM.races\"> Races (<span v-text=\"munchkinMRacesNumber\">10</span>)\n                    </label><br>\n                    <label class=\"spells\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinM.spells\"> Sorts (<span v-text=\"munchkinMSpellsNumber\">14</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-m-details\">Détails</h3>\n            <p>\n            <img style=\"float: none;\" src=\"media/images/upload/mm.gif\" alt=\"Munchkinomicon\">\n            <img style=\"float: none;\" src=\"media/images/upload/mm1.gif\" alt=\"Munchkinomicon\">\n            <img style=\"float: none;\" src=\"media/images/upload/mm2.gif\" alt=\"Munchkinomicon\">\n            <img style=\"float: none;\" src=\"media/images/upload/mm3.gif\" alt=\"Munchkinomicon\">\n            </p>\n            <p>Les icones précédentes en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :</p>\n            <ul>\n                <li>Le Munchkinomicon</li>\n                <li>Les Sorts</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinMCardsNumber\">60</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-m-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinMDoorsNumber\">32</span></p>\n                <ol>\n                    <li class=\"actions color\">... et ses petits copains</li>\n                    <li class=\"actions color\">... et ses petits copains</li>\n                    <li class=\"actions color\">De Hollywood</li>\n                    <li class=\"races color\">Elfe</li>\n                    <li class=\"actions color\">Enragé</li>\n                    <li class=\"monsters color\">Golem de savon</li>\n                    <li class=\"classes color\">Guerrier</li>\n                    <li class=\"races color\">Haut</li>\n                    <li class=\"races color\">Haut</li>\n                    <li class=\"races color\">Haut</li>\n                    <li class=\"actions color\">Indiciblement</li>\n                    <li class=\"actions color\">Invisible</li>\n                    <li class=\"monsters color\">Jeanne d'Orque</li>\n                    <li class=\"races color\">Maître</li>\n                    <li class=\"races color\">Maître</li>\n                    <li class=\"races color\">Maître</li>\n                    <li class=\"curses color\">Malédiction ! Condamné par le Destin !</li>\n                    <li class=\"actions color\">Meurtrier</li>\n                    <li class=\"actions color\">Miniature</li>\n                    <li class=\"monsters color\">Peau de vache de la cour de récré</li>\n                    <li class=\"actions color\">Plein de préjugés</li>\n                    <li class=\"actions color\">Sauvage</li>\n                    <li class=\"actions color\">Séduisant(e)</li>\n                    <li class=\"races color\">Sombre</li>\n                    <li class=\"races color\">Sombre</li>\n                    <li class=\"races color\">Sombre</li>\n                    <li class=\"actions color\">Standard</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"actions color\">Tromperie sur la marchandise</li>\n                    <li class=\"actions color\">Ultime</li>\n                    <li class=\"actions color\">Voleur de niveaux</li>\n                    <li class=\"actions color\">Vraiment très...</li>\n                    <template v-for=\"(item, index) in munchkinM.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinM.version) !== -1) && ((munchkinM.curses && item.class.indexOf('curses') !== -1) || (munchkinM.classes && item.class.indexOf('classes') !== -1) || (munchkinM.races && item.class.indexOf('races') !== -1) || (munchkinM.monsters && item.class.indexOf('monsters') !== -1) || (munchkinM.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinM.version) !== -1) && all.munchkinMDoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinMDoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-m-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkinMTreasuresNumber\">14</span></p>\n                <ol>\n                    <li class=\"stuffs color\">Bottes de pas de deux</li>\n                    <li class=\"bonuses color\">Chutte de rochers : pas de survivant</li>\n                    <li class=\"objects color\">Dé ultrapipé</li>\n                    <li class=\"objects color\">Dé ultrapipé</li>\n                    <li class=\"objects color\">Dé ultrapipé</li>\n                    <li class=\"objects color\">Dé ultrapipé</li>\n                    <li class=\"stuffs color\">Enclume</li>\n                    <li class=\"stuffs color\">Greffier Griffu Grognon à une main</li>\n                    <li class=\"munchkinomicon color\">Munchkinomicon</li>\n                    <li class=\"objects color\">Potion d'éructation déplacée</li>\n                    <li class=\"objects color\">Potion de continuité rétroactive</li>\n                    <li class=\"levels color\">Recalculez vos XP</li>\n                    <li class=\"stuffs color\">Tondeuse à gazon</li>\n                    <li class=\"levels color\">Un coup de polsh sur le matos !</li>\n                    <template v-for=\"(item, index) in munchkinM.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinM.version) !== -1) && ((munchkinM.levels && item.class.indexOf('levels') !== -1) || (munchkinM.munchkinomicon && item.class.indexOf('munchkinomicon') !== -1) || (munchkinM.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkinM.objects && item.class.indexOf('objects') !== -1) || (munchkinM.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinM.version) !== -1) && all.munchkinMTreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinMTreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n             <div class=\"books\">\n                <h3 id=\"munchkin-m-books\">Sorts</h3>\n                <p>Nombre total de sorts : <span v-text=\"munchkinMSpellsNumber\">14</span></p>\n                <ol>\n                    <li class=\"spells color\">À vot' bon coeur !</li>\n                    <li class=\"spells color\">Gloire contagieuse</li>\n                    <li class=\"spells color\">Hachoir occulte</li>\n                    <li class=\"spells color\">Invocation de horde</li>\n                    <li class=\"spells color\">Invocation du livre</li>\n                    <li class=\"spells color\">Le pouvoir par la terreur</li>\n                    <li class=\"spells color\">La Crypte de Zyvakomanksébo</li>\n                    <li class=\"spells color\">Marque-page</li>\n                    <li class=\"spells color\">Mettez-y un peu du vôtre</li>\n                    <li class=\"spells color\">Monstre, je t'ordonne de paraître !</li>\n                    <li class=\"spells color\">Ni vu ni connu j't'embrouille</li>\n                    <li class=\"spells color\">Résurrection</li>\n                    <li class=\"spells color\">Sortilèche</li>\n                    <li class=\"spells color\">Un pour tous, tous pour moi</li>\n                    <template v-for=\"(item, index) in munchkinM.spellsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinM.version) !== -1) && (munchkinM.spells && item.class.indexOf('spells') !== -1) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinM.version) !== -1) && all.munchkinMSpellsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinMSpellsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-st munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinSt }\">\n        <img class=\"demo\" src=\"media/images/upload/ubism01.png\" alt=\"Star Munchkin\">\n        <h2 id=\"munchkin-st\">Star Munchkin</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinSt.filters }\">\n            <h3 id=\"munchkin-st-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinStToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"acolytes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.acolytes\"> Acolytes (Serviteurs) (<span v-text=\"munchkinStAcolytesNumber\">8</span>)\n                    </label><br>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.bonuses\"> Actions (<span v-text=\"munchkinStBonusesNumber\">4</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.actions\"> Améliorations (<span v-text=\"munchkinStActionsNumber\">13</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.classes\"> Classes (<span v-text=\"munchkinStClassesNumber\">12</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.stuffs\"> Équipements (<span v-text=\"munchkinStStuffsNumber\">40</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.levels\"> Gains de Niveaux (<span v-text=\"munchkinStLevelsNumber\">10</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.monsters\"> Monstres (<span v-text=\"munchkinStMonstersNumber\">36</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.curses\"> Pièges (Malédictions) (<span v-text=\"munchkinStCursesNumber\">15</span>)\n                    </label><br>\n                    <label class=\"races\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.races\"> Races (<span v-text=\"munchkinStRacesNumber\">9</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.objects\"> Objets (<span v-text=\"munchkinStObjectsNumber\">21</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-st-details\">Détails</h3>\n            <p>Sont apparut avec ce jeu :</p>\n            <ul>\n                <li>Les Acolytes (similaire aux Fidèles Serviteurs)</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinStCardsNumber\">168</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-st-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinStDoorsNumber\">93</span></p>\n                <ol>\n                    <li class=\"acolytes color\">Acolyte Assistant(e) Sexy</li>\n                    <li class=\"acolytes color\">Acolyte Androïde</li>\n                    <li class=\"acolytes color\">Acolyte Cible Vivante</li>\n                    <li class=\"acolytes color\">Acolyte Cible Vivante</li>\n                    <li class=\"acolytes color\">Acolyte Extra-Terrestre Sonore et Velu</li>\n                    <li class=\"acolytes color\">Acolyte Fidèle Robot</li>\n                    <li class=\"acolytes color\">Acolyte Petit Génie</li>\n                    <li class=\"acolytes color\">Acolyte Voleur</li>\n                    <li class=\"actions color\">...d'une Autre Dimension</li>\n                    <li class=\"actions color\">...et son Clone</li>\n                    <li class=\"monsters color\">Affreux Machin Vert</li>\n                    <li class=\"monsters color\">Amazone de l'Espace</li>\n                    <li class=\"monsters color\">Astrorat Musqué Pirate de l'Espace</li>\n                    <li class=\"monsters color\">Bimbo Bionique</li>\n                    <li class=\"monsters color\">Blob</li>\n                    <li class=\"monsters color\">Boule de Poils</li>\n                    <li class=\"monsters color\">Boule de Poils à Dents de Sabre</li>\n                    <li class=\"monsters color\">Capitaine Beurk</li>\n                    <li class=\"monsters color\">Cerveau en Bocal</li>\n                    <li class=\"monsters color\">Chaise</li>\n                    <li class=\"classes color\">Chasseur de Primes</li>\n                    <li class=\"classes color\">Chasseur de Primes</li>\n                    <li class=\"classes color\">Chasseur de Primes</li>\n                    <li class=\"monsters color\">Chose sur laquelle les Yeux de l'Homme ne devraient Point se Poser</li>\n                    <li class=\"monsters color\">Cow-Boy de l'Espace</li>\n                    <li class=\"monsters color\">Créatures Minuscules mais Incroyablement Avancées</li>\n                    <li class=\"actions color\">Cybernétique</li>\n                    <li class=\"races color\">Cyborg</li>\n                    <li class=\"races color\">Cyborg</li>\n                    <li class=\"races color\">Cyborg</li>\n                    <li class=\"monsters color\">Étoile ~~de mer~~ de l'Espace...</li>\n                    <li class=\"monsters color\">Être de Pensée Impure</li>\n                    <li class=\"races color\">Félin</li>\n                    <li class=\"races color\">Félin</li>\n                    <li class=\"races color\">Félin</li>\n                    <li class=\"monsters color\">Fourmis Géantes</li>\n                    <li class=\"monsters color\">Frank le Tank Facétieux</li>\n                    <li class=\"monsters color\">Géant Gazeux</li>\n                    <li class=\"monsters color\">Jarre Jarre</li>\n                    <li class=\"monsters color\">L'Étrange Créature du Lac Rose</li>\n                    <li class=\"monsters color\">L'Horreur aux Mille Yeux (Comptez pas, on vous dit...)</li>\n                    <li class=\"monsters color\">La Chèvre de Monsieur Spock</li>\n                    <li class=\"actions color\">Le Dernier de sa Race</li>\n                    <li class=\"monsters color\">Le Grand Cthulhu</li>\n                    <li class=\"monsters color\">Massacrobot</li>\n                    <li class=\"actions color\">Miniature</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"races color\">Mutan</li>\n                    <li class=\"races color\">Mutan</li>\n                    <li class=\"races color\">Mutan</li>\n                    <li class=\"classes color\">Négociant Interstellaire</li>\n                    <li class=\"classes color\">Négociant Interstellaire</li>\n                    <li class=\"classes color\">Négociant Interstellaire</li>\n                    <li class=\"monsters color\">Parasite Facial Extrêmement Attachant</li>\n                    <li class=\"monsters color\">Petits Gris</li>\n                    <li class=\"monsters color\">Petit Homme Vert</li>\n                    <li class=\"curses color\">Piège ! Accident de Téléportation</li>\n                    <li class=\"curses color\">Piège ! Amnésie</li>\n                    <li class=\"curses color\">Piège ! Antimatière</li>\n                    <li class=\"curses color\">Piège ! Bonbons Extra-Terrestres</li>\n                    <li class=\"curses color\">Piège ! Déversement Accidentel de Produits Chimiques (et accessoirement mutagènes)</li>\n                    <li class=\"curses color\">Piège ! Éruption Solaire</li>\n                    <li class=\"curses color\">Piège ! Expérience Extra-Terestre</li>\n                    <li class=\"curses color\">Piège ! Inversion de Chromosome</li>\n                    <li class=\"curses color\">Piège ! Inversion de la Gravité</li>\n                    <li class=\"curses color\">Piège ! Monofilament</li>\n                    <li class=\"curses color\">Piège ! Ouvre-Boîte</li>\n                    <li class=\"curses color\">Piège ! Poulpisateur</li>\n                    <li class=\"curses color\">Piège ! Régression Génétique</li>\n                    <li class=\"curses color\">Piège ! Touillage de Cerveau</li>\n                    <li class=\"monsters color\">Plasmoïde</li>\n                    <li class=\"monsters color\">Plante Carnivore</li>\n                    <li class=\"monsters color\">Pshérif Psi</li>\n                    <li class=\"classes color\">Psi</li>\n                    <li class=\"classes color\">Psi</li>\n                    <li class=\"classes color\">Psi</li>\n                    <li class=\"actions color\">Radioactif</li>\n                    <li class=\"monsters color\">Robalayeur</li>\n                    <li class=\"actions color\">Sang-Mêlé</li>\n                    <li class=\"actions color\">Sang-Mêlé</li>\n                    <li class=\"classes color\">Savant Fou</li>\n                    <li class=\"classes color\">Savant Fou</li>\n                    <li class=\"classes color\">Savant Fou</li>\n                    <li class=\"monsters color\">Sonde Spatiale</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"monsters color\">Tank O.G.R.E.</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"monsters color\">Vampire de l'Espace</li>\n                    <li class=\"monsters color\">Verminator</li>\n                    <li class=\"monsters color\">Virus Informatique</li>\n                    <li class=\"monsters color\">Yip</li>\n                    <template v-for=\"(item, index) in munchkinSt.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinSt.version) !== -1) && ((munchkinSt.curses && item.class.indexOf('curses') !== -1) || (munchkinSt.acolytes && item.class.indexOf('acolytes') !== -1) || (munchkinSt.races && item.class.indexOf('races') !== -1) || (munchkinSt.classes && item.class.indexOf('classes') !== -1) || (munchkinSt.monsters && item.class.indexOf('monsters') !== -1) || (munchkinSt.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSt.version) !== -1) && all.munchkinStDoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinStDoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-st-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkinStTreasuresNumber\">75</span></p>\n                <ol>\n                    <li class=\"bonuses color\">\"J'ai une meilleure offre...\"</li>\n                    <li class=\"objects color\">\"Nous venons en paix... juré craché !\"</li>\n                    <li class=\"stuffs color\">Amplificateur Mental (avec caisson de basses psychiques)</li>\n                    <li class=\"stuffs color\">Antennes à Ressort</li>\n                    <li class=\"stuffs color\">Armure Énergétique</li>\n                    <li class=\"stuffs color\">Armure de Combat</li>\n                    <li class=\"stuffs color\">Baguette Paralysante</li>\n                    <li class=\"stuffs color\">Bananoventilolaser</li>\n                    <li class=\"stuffs color\">Bobaser</li>\n                    <li class=\"objects color\">Boite de Schrödinger</li>\n                    <li class=\"objects color\">Bombe Sangsue</li>\n                    <li class=\"stuffs color\">Bottes à Propulsion</li>\n                    <li class=\"stuffs color\">Bottes Magnétiques</li>\n                    <li class=\"levels color\">Bouton Innocemment Dégrafé</li>\n                    <li class=\"bonuses color\">Casier d'Armes</li>\n                    <li class=\"stuffs color\">Casque Bulle</li>\n                    <li class=\"stuffs color\">Chamé de Stupidité</li>\n                    <li class=\"objects color\">Champ de Stase</li>\n                    <li class=\"stuffs color\">Cimeterre Photonique</li>\n                    <li class=\"stuffs color\">Combinaison Spatiale en Cellophane</li>\n                    <li class=\"objects color\">Coupons de Réduction</li>\n                    <li class=\"stuffs color\">Dazer</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"objects color\">Dénoument Inattendu</li>\n                    <li class=\"stuffs color\">Dents en Diamantoïde</li>\n                    <li class=\"stuffs color\">Électro-Combinaison</li>\n                    <li class=\"objects color\">Fausse Carte d'Identité</li>\n                    <li class=\"stuffs color\">Fouet Neuronal</li>\n                    <li class=\"bonuses color\">Fourrière Intergalactique</li>\n                    <li class=\"objects color\">Gaz de Contrôle Mental</li>\n                    <li class=\"objects color\">Grenade à Flash très Intense (bronzage au 3ème degré garanti)</li>\n                    <li class=\"objects color\">Grenade à la Bierre Secouée</li>\n                    <li class=\"objects color\">Grenade à Nanomachines Hallucinogènes</li>\n                    <li class=\"objects color\">Grenade à Virus Vibratoire</li>\n                    <li class=\"objects color\">Grenade Gerbante à Plasma Sonique</li>\n                    <li class=\"objects color\">Gros Bouton Rouge</li>\n                    <li class=\"levels color\">Illumination Cosmique</li>\n                    <li class=\"stuffs color\">Interface de Piratage Cybernétique</li>\n                    <li class=\"stuffs color\">Laser</li>\n                    <li class=\"stuffs color\">Laser</li>\n                    <li class=\"stuffs color\">Lunettes à Rayons X</li>\n                    <li class=\"stuffs color\">Maser</li>\n                    <li class=\"stuffs color\">Mécha-Na-P</li>\n                    <li class=\"objects color\">Médikit</li>\n                    <li class=\"objects color\">Médikit</li>\n                    <li class=\"stuffs color\">Mitrailleuse de Queue</li>\n                    <li class=\"levels color\">Monolithe</li>\n                    <li class=\"stuffs color\">Mutation Digitocéphale</li>\n                    <li class=\"levels color\">Oblitération Totale de Planète Pacifique</li>\n                    <li class=\"stuffs color\">Orbe de Prédiction</li>\n                    <li class=\"stuffs color\">Orteils Préhensiles</li>\n                    <li class=\"stuffs color\">Pacificateur Low-Tech</li>\n                    <li class=\"stuffs color\">Paraboles de Détection</li>\n                    <li class=\"stuffs color\">Partenaire Symbiote</li>\n                    <li class=\"bonuses color\">Pelote de Laine</li>\n                    <li class=\"levels color\">Piratage Informatique</li>\n                    <li class=\"stuffs color\">Pistolet à Rayons R</li>\n                    <li class=\"stuffs color\">Pistolet à Plop !</li>\n                    <li class=\"stuffs color\">Pistolet Décérébrant pour Décérébré</li>\n                    <li class=\"levels color\">Préter vos Bandes Dessinées au MJ</li>\n                    <li class=\"levels color\">Préter vos Vidéos au MJ</li>\n                    <li class=\"stuffs color\">Razer</li>\n                    <li class=\"objects color\">Rhum Dénébien</li>\n                    <li class=\"stuffs color\">Robochien</li>\n                    <li class=\"stuffs color\">Ruban de Scotch</li>\n                    <li class=\"stuffs color\">Shmazer</li>\n                    <li class=\"levels color\">Serum du Super-Soldat</li>\n                    <li class=\"levels color\">Soutenir le MJ à Coup d'Arguments Scientifiques Bidon</li>\n                    <li class=\"objects color\">Time Warp</li>\n                    <li class=\"objects color\">Time Warp</li>\n                    <li class=\"stuffs color\">Toutou Extra-Terrestre</li>\n                    <li class=\"stuffs color\">Tronço-Gants</li>\n                    <li class=\"stuffs color\">Vibrolame</li>\n                    <li class=\"levels color\">Visite de Votre Double du Futur</li>\n                    <template v-for=\"(item, index) in munchkinSt.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinSt.version) !== -1) && ((munchkinSt.levels && item.class.indexOf('levels') !== -1) || (munchkinSt.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkinSt.objects && item.class.indexOf('objects') !== -1) || (munchkinSt.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSt.version) !== -1) && all.munchkinStTreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinStTreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-st-2 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinSt2 }\">\n        <img class=\"demo\" src=\"media/images/upload/ubism02.png\" alt=\"Star Munchkin 2\">\n        <h2 id=\"munchkin-st-2\">Star Munchkin 2 : La Guerre des Clowns</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinSt2.filters }\">\n            <h3 id=\"munchkin-st-2-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinSt2ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"acolytes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.acolytes\"> Acolytes (Serviteurs) (<span v-text=\"munchkinSt2AcolytesNumber\">5</span>)\n                    </label><br>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.bonuses\"> Actions (<span v-text=\"munchkinSt2BonusesNumber\">7</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.actions\"> Améliorations (<span v-text=\"munchkinSt2ActionsNumber\">13</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.classes\"> Classes (<span v-text=\"munchkinSt2ClassesNumber\">8</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.stuffs\"> Équipements (<span v-text=\"munchkinSt2StuffsNumber\">20</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.levels\"> Gains de Niveaux (<span v-text=\"munchkinSt2LevelsNumber\">7</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.monsters\"> Monstres (<span v-text=\"munchkinSt2MonstersNumber\">27</span>)\n                    </label><br>\n                    <label class=\"rooms\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.rooms\"> Pièces (<span v-text=\"munchkinSt2RoomsNumber\">6</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.curses\"> Pièges (Malédictions) (<span v-text=\"munchkinSt2CursesNumber\">6</span>)\n                    </label><br>\n                    <label class=\"races\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.races\"> Races (<span v-text=\"munchkinSt2RacesNumber\">7</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.objects\"> Objets (<span v-text=\"munchkinSt2ObjectsNumber\">6</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-st-2-details\">Détails</h3>\n            <p><img src=\"media/images/upload/st2.gif\" alt=\"Star Munchkin 2\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :</p>\n            <ul>\n                <li>Les Pièces</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinSt2CardsNumber\">112</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-st-2-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinSt2DoorsNumber\">72</span></p>\n                <ol>\n                    <li class=\"acolytes color\">Acolyte Cible Vivante</li>\n                    <li class=\"acolytes color\">Acolyte Le Professeur</li>\n                    <li class=\"acolytes color\">Acolyte Ralph le Super Chien</li>\n                    <li class=\"acolytes color\">Acolyte Petite Soeur</li>\n                    <li class=\"acolytes color\">Acolyte Tadboulons</li>\n                    <li class=\"monsters color\">Ambassadeur Bourdon</li>\n                    <li class=\"monsters color\">Bob Ascète</li>\n                    <li class=\"monsters color\">Cadettes de Star-Flirt</li>\n                    <li class=\"classes color\">Chasseur de Primes</li>\n                    <li class=\"monsters color\">Cantatrice de Space Opera</li>\n                    <li class=\"monsters color\">Clowntrooper</li>\n                    <li class=\"monsters color\">Cosplayer un Poil (voire plusieurs poils) trop Enthousiaste</li>\n                    <li class=\"races color\">Cyborg</li>\n                    <li class=\"monsters color\">Dark Cador, le Musichien de l'Espace</li>\n                    <li class=\"monsters color\">Elvis Bicéphale de l'Espace</li>\n                    <li class=\"actions color\">Erreur de Continuité</li>\n                    <li class=\"monsters color\">Esprit de Ruche</li>\n                    <li class=\"races color\">Félin</li>\n                    <li class=\"actions color\">Fou</li>\n                    <li class=\"actions color\">Je suis ton Père !</li>\n                    <li class=\"monsters color\">Jumeau de Télétransporteur</li>\n                    <li class=\"monsters color\">La Pince de l'Espace</li>\n                    <li class=\"monsters color\">Le Mec aux Oreilles Factices</li>\n                    <li class=\"monsters color\">Le Zéro Absolu</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"races color\">Insectoïde</li>\n                    <li class=\"races color\">Insectoïde</li>\n                    <li class=\"races color\">Insectoïde</li>\n                    <li class=\"races color\">Insectoïde</li>\n                    <li class=\"monsters color\">L'Oeil Électrique</li>\n                    <li class=\"monsters color\">La Momie de l'Espace</li>\n                    <li class=\"monsters color\">La Raclette Maléfique de la Voie Lactée</li>\n                    <li class=\"monsters color\">Le Cruel et Crapuleux Dr Cranedechrome</li>\n                    <li class=\"monsters color\">Miss Île</li>\n                    <li class=\"races color\">Mutant</li>\n                    <li class=\"monsters color\">Nain Rouge</li>\n                    <li class=\"monsters color\">Nana peu Farouches de Films de Série Bzzzz</li>\n                    <li class=\"classes color\">Négociant Interstellaire</li>\n                    <li class=\"monsters color\">Offres Spatiales : Soldes Monstres</li>\n                    <li class=\"rooms color\">Pièce : Boudoir Extra-Terrestre</li>\n                    <li class=\"rooms color\">Pièce : Cantina</li>\n                    <li class=\"rooms color\">Pièce : Compacteur à Ordures</li>\n                    <li class=\"rooms color\">Pièce : Dehors</li>\n                    <li class=\"rooms color\">Pièce : Laboratoire</li>\n                    <li class=\"rooms color\">Pièce : Salle de Bain Extra-Terrestre</li>\n                    <li class=\"curses color\">Piège ! Big Bang</li>\n                    <li class=\"curses color\">Piège ! Champ Inhibiteur</li>\n                    <li class=\"curses color\">Piège ! Désintégration Spontanée</li>\n                    <li class=\"curses color\">Piège ! Jet d'Acide</li>\n                    <li class=\"curses color\">Piège ! Le Plus Pernicieux des Pièges Jamais Conçus</li>\n                    <li class=\"curses color\">Piège ! Trou Noir</li>\n                    <li class=\"monsters color\">Pingouins Tueurs</li>\n                    <li class=\"actions color\">Polymorphe</li>\n                    <li class=\"classes color\">Psi</li>\n                    <li class=\"monsters color\">Ptérodactyle Fractal</li>\n                    <li class=\"monsters color\">Public Volatil</li>\n                    <li class=\"actions color\">Sang-Mêlé</li>\n                    <li class=\"classes color\">Savant Fou</li>\n                    <li class=\"actions color\">Super-Munchkin</li>\n                    <li class=\"classes color\">Ranger de l'Espace</li>\n                    <li class=\"classes color\">Ranger de l'Espace</li>\n                    <li class=\"classes color\">Ranger de l'Espace</li>\n                    <li class=\"classes color\">Ranger de l'Espace</li>\n                    <li class=\"monsters color\">RDC</li>\n                    <li class=\"actions color\">Télépathe</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"monsters color\">Ultra-Violette</li>\n                    <li class=\"actions color\">Victime d'une Terrible Méprise</li>\n                    <li class=\"actions color\">Vide</li>\n                    <li class=\"actions color\">Vide</li>\n                    <li class=\"monsters color\">XQWZZMP</li>\n                    <template v-for=\"(item, index) in munchkinSt2.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinSt2.version) !== -1) && ((munchkinSt2.rooms && item.class.indexOf('rooms') !== -1) || (munchkinSt2.curses && item.class.indexOf('curses') !== -1) || (munchkinSt2.acolytes && item.class.indexOf('acolytes') !== -1) || (munchkinSt2.races && item.class.indexOf('races') !== -1) || (munchkinSt2.classes && item.class.indexOf('classes') !== -1) || (munchkinSt2.monsters && item.class.indexOf('monsters') !== -1) || (munchkinSt2.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSt2.version) !== -1) && all.munchkinSt2DoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinSt2DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-st-2-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkinSt2TreasuresNumber\">40</span></p>\n                <ol>\n                    <li class=\"levels color\">Amélioration des Micro-Chloridiens</li>\n                    <li class=\"levels color\">Astronourriture</li>\n                    <li class=\"stuffs color\">Autofuite 1000</li>\n                    <li class=\"bonuses color\">Aux Effets Spéciaux Améliorés</li>\n                    <li class=\"bonuses color\">Animation Suspendue</li>\n                    <li class=\"objects color\">Bombe Intelligente</li>\n                    <li class=\"stuffs color\">Canon à Plasma</li>\n                    <li class=\"stuffs color\">Casque Psi</li>\n                    <li class=\"stuffs color\">Ceinture d'Astéroïdes</li>\n                    <li class=\"levels color\">Charabia Technologique</li>\n                    <li class=\"stuffs color\">Complexe Exoskeleton</li>\n                    <li class=\"stuffs color\">Complexe Gratte-Dos Extra-Terrestre</li>\n                    <li class=\"stuffs color\">Complexe Laser Optique</li>\n                    <li class=\"stuffs color\">Complexe Le ~~Pont~~ Front de l'Enterprise</li>\n                    <li class=\"stuffs color\">Cravatou Barada Nikto</li>\n                    <li class=\"levels color\">Dans l'Espace, Personne ne vous Entend Tricher</li>\n                    <li class=\"levels color\">Découverte d'une Nouvelle Forme de Vie</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"levels color\">Écrire les Caractéristiques de son Personnage en Base 8</li>\n                    <li class=\"bonuses color\">Édition Spéciale du Director's Cut</li>\n                    <li class=\"bonuses color\">Expérimental</li>\n                    <li class=\"stuffs color\">Fil de la Trame Spatio-Temporelle</li>\n                    <li class=\"levels color\">Gagner la Reconnaissance de toutes les Races Intelligentes de l'Univers</li>\n                    <li class=\"objects color\">Grenade Multiplicatrice</li>\n                    <li class=\"objects color\">Grenade au Yaourt Parfumé au Nacho</li>\n                    <li class=\"objects color\">Grenade Ouvre-Boîte</li>\n                    <li class=\"stuffs color\">Lampe ~~Torche~~ Chalumeau</li>\n                    <li class=\"stuffs color\">Lance-Boulettes Perce-Armure à Tête Chercheuse</li>\n                    <li class=\"stuffs color\">Laser à Rayons X</li>\n                    <li class=\"stuffs color\">Laser à Commande Digitale</li>\n                    <li class=\"stuffs color\">Minces Rubans Judicieusement Placés</li>\n                    <li class=\"stuffs color\">Peinture Verte</li>\n                    <li class=\"stuffs color\">Pulvérilaser</li>\n                    <li class=\"bonuses color\">Ramper par les Conduits d'Aération</li>\n                    <li class=\"stuffs color\">Roues Rétractables</li>\n                    <li class=\"stuffs color\">Télécommande de Porte de Garage</li>\n                    <li class=\"stuffs color\">Tronçobottes</li>\n                    <li class=\"bonuses color\">Vide</li>\n                    <li class=\"bonuses color\">Vide</li>\n                    <template v-for=\"(item, index) in munchkinSt2.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinSt2.version) !== -1) && ((munchkinSt2.levels && item.class.indexOf('levels') !== -1) || (munchkinSt2.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkinSt2.objects && item.class.indexOf('objects') !== -1) || (munchkinSt2.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSt2.version) !== -1) && all.munchkinSt2TreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinSt2TreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-su munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinSu }\">\n        <img class=\"demo\" src=\"media/images/upload/super_munchkin_Boite.jpg\" alt=\"Super Munchkin\">\n        <h2 id=\"munchkin-su\">Super Munchkin</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinSu.filters }\">\n            <h3 id=\"munchkin-su-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinSuToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"acolytes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.acolytes\" v-on:click=\"munchkinSuAcolytesGroup()\"> Acolytes (Serviteurs) (<span v-text=\"munchkinSuAcolytesNumber + munchkinSuSlavesNumber\">6</span>)\n                    </label><br>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.bonuses\"> Actions (<span v-text=\"munchkinSuBonusesNumber\">6</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.actions\"> Améliorations (<span v-text=\"munchkinSuActionsNumber\">12</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.classes\"> Classes (<span v-text=\"munchkinSuClassesNumber\">12</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.stuffs\"> Équipements (<span v-text=\"munchkinSuStuffsNumber\">37</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.levels\"> Gains de Niveaux (<span v-text=\"munchkinSuLevelsNumber\">8</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.monsters\"> Monstres (<span v-text=\"munchkinSuMonstersNumber\">39</span>)\n                    </label><br>\n                    <label class=\"origins\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.origins\"> Origines (<span v-text=\"munchkinSuOriginsNumber\">6</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.curses\"> Pièges (Malédictions) (<span v-text=\"munchkinSuCursesNumber\">14</span>)\n                    </label><br>\n                    <label class=\"powers\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.powers\"> Pouvoirs (<span v-text=\"munchkinSuPowersNumber\">20</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.objects\"> Objets (<span v-text=\"munchkinSuObjectsNumber\">8</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-m-details\">Détails</h3>\n            <p>Sont apparut avec ce jeu :</p>\n            <ul>\n                <li>Les Pouvoirs</li>\n                <li>Les Origins</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinSuCardsNumber\">168</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-su-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinSuDoorsNumber\">106</span></p>\n                <ol>\n                    <li class=\"actions color\">\"Il n'était pas vraiment mort...\"</li>\n                    <li class=\"powers color\">2D</li>\n                    <li class=\"acolytes color\">Acolytes : Ami Imaginaire</li>\n                    <li class=\"acolytes color\">Acolytes : Femme reporter pleine d'aplomb</li>\n                    <li class=\"acolytes color\">Acolytes : Gamin doté des mêmes Pouvoirs</li>\n                    <li class=\"monsters color\">Agent du Fisc</li>\n                    <li class=\"monsters color\">Anonyman</li>\n                    <li class=\"powers color\">Aura Radioactive</li>\n                    <li class=\"monsters color\">Balèzman</li>\n                    <li class=\"monsters color\">Baron Bidon</li>\n                    <li class=\"powers color\">Caméléon</li>\n                    <li class=\"monsters color\">Captain Corrosion</li>\n                    <li class=\"powers color\">Charisme</li>\n                    <li class=\"monsters color\">Chasseur de Frime</li>\n                    <li class=\"monsters color\">Clicman</li>\n                    <li class=\"origins color\">Contact avec une Idole Mystérieuse</li>\n                    <li class=\"powers color\">Corps Vachement Résistant (mais un truc de ouf, Quoi...)</li>\n                    <li class=\"actions color\">Costume moins Naze que le Vôtre</li>\n                    <li class=\"powers color\">Cri Supersonique</li>\n                    <li class=\"monsters color\">D'autres voyous mous du genou</li>\n                    <li class=\"monsters color\">Dangerousse Girl</li>\n                    <li class=\"powers color\">Décolleté Foudroyant</li>\n                    <li class=\"actions color\">Dirigeant d'un Petit Pays d'Europe</li>\n                    <li class=\"monsters color\">Docteur Abiquitor</li>\n                    <li class=\"monsters color\">Docteur Halitos</li>\n                    <li class=\"actions color\">Duplicato-Rayon</li>\n                    <li class=\"powers color\">Élasticité</li>\n                    <li class=\"classes color\">Exotique</li>\n                    <li class=\"classes color\">Exotique</li>\n                    <li class=\"classes color\">Exotique</li>\n                    <li class=\"origins color\">Expérience du Gouvernement qui à mal Tourné</li>\n                    <li class=\"monsters color\">Explosiman</li>\n                    <li class=\"powers color\">Flammes</li>\n                    <li class=\"monsters color\">Glandouilleman</li>\n                    <li class=\"monsters color\">Godzillarbre</li>\n                    <li class=\"powers color\">Griffes</li>\n                    <li class=\"monsters color\">Gamins pénibles</li>\n                    <li class=\"monsters color\">Gerbeman</li>\n                    <li class=\"monsters color\">Grand type qui bouffe les planètes</li>\n                    <li class=\"monsters color\">Héros de l'Ancienne République Soviétique</li>\n                    <li class=\"monsters color\">Horde d'Aliens Baveux</li>\n                    <li class=\"powers color\">Hypnotisme</li>\n                    <li class=\"origins color\">Immergé dans une substance étrange</li>\n                    <li class=\"actions color\">Irrésistible tendance à Laisser des Indices</li>\n                    <li class=\"powers color\">Invisibilité</li>\n                    <li class=\"actions color\">Kidnapping de votre Tante Marge</li>\n                    <li class=\"monsters color\">L'Armée sans Visage</li>\n                    <li class=\"monsters color\">L'Imposteur</li>\n                    <li class=\"monsters color\">La Vachouette Landaise du Dr Alain Therville</li>\n                    <li class=\"monsters color\">Le Big Boss</li>\n                    <li class=\"monsters color\">Le Spaminator</li>\n                    <li class=\"monsters color\">Le Tueur à Gags</li>\n                    <li class=\"monsters color\">Marc Delabête, le Grizzly-Garou de l'Apocalypse</li>\n                    <li class=\"monsters color\">Matériel-de-Bureau-Man</li>\n                    <li class=\"monsters color\">Miss Intello</li>\n                    <li class=\"monsters color\">Miss Wonder-Chépaquoi</li>\n                    <li class=\"monsters color\">Mister DCA, spécialiste en Tir aux Super-Pigeons</li>\n                    <li class=\"monsters color\">Mister Incompris</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"origins color\">Mordu par un Chihuahua Radioactif</li>\n                    <li class=\"classes color\">Mutan</li>\n                    <li class=\"classes color\">Mutan</li>\n                    <li class=\"classes color\">Mutan</li>\n                    <li class=\"classes color\">Mystique</li>\n                    <li class=\"classes color\">Mystique</li>\n                    <li class=\"classes color\">Mystique</li>\n                    <li class=\"origins color\">Orteil écrasé</li>\n                    <li class=\"monsters color\">Piaf Man</li>\n                    <li class=\"curses color\">Piège ! Bégonia Mangeurs d'Hommes</li>\n                    <li class=\"curses color\">Piège ! Changement de Scénariste</li>\n                    <li class=\"curses color\">Piège ! Condamnation pour trouble sur la voie publique</li>\n                    <li class=\"curses color\">Piège ! Couictonite</li>\n                    <li class=\"curses color\">Piège ! Démasqué !</li>\n                    <li class=\"curses color\">Piège ! Dinosaure</li>\n                    <li class=\"curses color\">Piège ! Falaise Incroyablement Fragile</li>\n                    <li class=\"curses color\">Piège ! Immondes Produits Chimiques</li>\n                    <li class=\"curses color\">Piège ! Mixeur à Superhéros</li>\n                    <li class=\"curses color\">Piège ! Péril Invisible</li>\n                    <li class=\"curses color\">Piège ! Propulsé dans l'Espace</li>\n                    <li class=\"curses color\">Piège ! Réacteur Nucléaire</li>\n                    <li class=\"curses color\">Piège ! Robot Compresseur</li>\n                    <li class=\"curses color\">Piège ! Un sort pire que la mort</li>\n                    <li class=\"monsters color\">Professeur Onsley Jell</li>\n                    <li class=\"origins color\">Radio tombée dans la Baignoire</li>\n                    <li class=\"powers color\">Rafale Psi</li>\n                    <li class=\"monsters color\">Rayon de la Morve</li>\n                    <li class=\"powers color\">Rayons Oculaires</li>\n                    <li class=\"powers color\">Rot Supersonique</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"actions color\">Super-Tricheur !</li>\n                    <li class=\"monsters color\">Supervers-Man</li>\n                    <li class=\"powers color\">Supervitesse</li>\n                    <li class=\"classes color\">Techno</li>\n                    <li class=\"classes color\">Techno</li>\n                    <li class=\"classes color\">Techno</li>\n                    <li class=\"powers color\">Téléportation</li>\n                    <li class=\"monsters color\">Toujours des voyous mous du genou</li>\n                    <li class=\"monsters color\">Triple Idiot</li>\n                    <li class=\"powers color\">Vision à Rayons X</li>\n                    <li class=\"powers color\">Vol</li>\n                    <li class=\"actions color\">Votre Ennemi Juré</li>\n                    <li class=\"monsters color\">Voyous mous du genou</li>\n                    <li class=\"monsters color\">Wonder Bimbo</li>\n                    <li class=\"powers color\">Wonder Bras</li>\n                    <template v-for=\"(item, index) in munchkinSu.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinSu.version) !== -1) && ((munchkinSu.curses && item.class.indexOf('curses') !== -1) || (munchkinSu.acolytes && item.class.indexOf('acolytes') !== -1) || (munchkinSu.origins && item.class.indexOf('origins') !== -1) || (munchkinSu.classes && item.class.indexOf('classes') !== -1) || (munchkinSu.powers && item.class.indexOf('powers') !== -1) || (munchkinSu.monsters && item.class.indexOf('monsters') !== -1) || (munchkinSu.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSu.version) !== -1) && all.munchkinSuDoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinSuDoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-su-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkinSuTreasuresNumber\">62</span></p>\n                <ol>\n                    <li class=\"bonuses color\">\"Tu peux être sûr qu'ils vont faire une suite...\"</li>\n                    <li class=\"slaves color\">Acolyte Voiture Parlante</li>\n                    <li class=\"slaves color\">Acolyte Double Robotique</li>\n                    <li class=\"slaves color\">Acolyte Singe avec un costume comme le votre</li>\n                    <li class=\"stuffs color\">Aimant Géant</li>\n                    <li class=\"objects color\">Anneau de Souhait</li>\n                    <li class=\"objects color\">Anneau de Souhait</li>\n                    <li class=\"stuffs color\">Anneau Lazérospidouilleur</li>\n                    <li class=\"stuffs color\">Armure à la Limite de la Décence</li>\n                    <li class=\"stuffs color\">Armure Ailée</li>\n                    <li class=\"stuffs color\">Armure en Cristal</li>\n                    <li class=\"stuffs color\">Bagette Magique</li>\n                    <li class=\"stuffs color\">Balai à Chiottes</li>\n                    <li class=\"stuffs color\">Balai à Réaction</li>\n                    <li class=\"stuffs color\">Basket à Ventouses</li>\n                    <li class=\"stuffs color\">Batte Mobile</li>\n                    <li class=\"stuffs color\">Batteur Électrique</li>\n                    <li class=\"stuffs color\">Bottes pour Shooter</li>\n                    <li class=\"stuffs color\">Boum-rang</li>\n                    <li class=\"objects color\">Café Noir</li>\n                    <li class=\"stuffs color\">Cape</li>\n                    <li class=\"stuffs color\">Casque Électropsychique</li>\n                    <li class=\"stuffs color\">Ceinture Multi-Usage</li>\n                    <li class=\"stuffs color\">Club de Golf</li>\n                    <li class=\"stuffs color\">Couettes Préhensiles</li>\n                    <li class=\"stuffs color\">Costume Peint à même la Peau</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"stuffs color\">Déguisement d'individu sans Histoire</li>\n                    <li class=\"stuffs color\">Détecteur de Vilains</li>\n                    <li class=\"objects color\">Effroyable Machine de Mort et de Destruction</li>\n                    <li class=\"bonuses color\">Évasion organisée</li>\n                    <li class=\"stuffs color\">Haltères</li>\n                    <li class=\"bonuses color\">Incohérence de Scénario</li>\n                    <li class=\"stuffs color\">La Torche (contondante) de la Liberté</li>\n                    <li class=\"bonuses color\">Labo Secret</li>\n                    <li class=\"stuffs color\">Montre-Radio Légère Pratique et Maniable</li>\n                    <li class=\"stuffs color\">Obsession Délirante</li>\n                    <li class=\"objects color\">Pavé de Bonnes Intentions</li>\n                    <li class=\"stuffs color\">Permis de Démolir</li>\n                    <li class=\"bonuses color\">Petit Raté Vestimentaire</li>\n                    <li class=\"stuffs color\">Pistolet à Grappin</li>\n                    <li class=\"stuffs color\">Pistolet Extra-Terrestre qui fait Pschiiiiiiiiwww</li>\n                    <li class=\"stuffs color\">Psycho-Électrodes</li>\n                    <li class=\"stuffs color\">QG : En Orbite</li>\n                    <li class=\"stuffs color\">QG : Grotte Secrète</li>\n                    <li class=\"stuffs color\">QG en Solde</li>\n                    <li class=\"stuffs color\">Sandales Ailées</li>\n                    <li class=\"stuffs color\">Skate en Molybdène</li>\n                    <li class=\"stuffs color\">Super Armure</li>\n                    <li class=\"stuffs color\">Super Bouclier</li>\n                    <li class=\"objects color\">Super Sérum</li>\n                    <li class=\"stuffs color\">Télézapinateur</li>\n                    <li class=\"bonuses color\">Version d'un Univers Alternatif</li>\n                    <li class=\"objects color\">Violation de Copyright</li>\n                    <li class=\"levels color\">Acheter une Figurine au MJ</li>\n                    <li class=\"levels color\">Adaptation en Film</li>\n                    <li class=\"levels color\">Caleçon par-dessus le Pantalon</li>\n                    <li class=\"levels color\">Colère du Juste</li>\n                    <li class=\"levels color\">Recherches dans un Magasin de Comics</li>\n                    <li class=\"levels color\">Récompense d'un montant Inconcevable</li>\n                    <li class=\"levels color\">Nouveau Costume</li>\n                    <li class=\"levels color\">Meurtre Accidentel d'un Acolyte</li>\n                    <template v-for=\"(item, index) in munchkinSu.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinSu.version) !== -1) && ((munchkinSu.slaves && item.class.indexOf('slaves') !== -1) || (munchkinSu.levels && item.class.indexOf('levels') !== -1) || (munchkinSu.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkinSu.objects && item.class.indexOf('objects') !== -1) || (munchkinSu.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSu.version) !== -1) && all.munchkinSuTreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinSuTreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-z munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinZ }\">\n        <img class=\"demo\" src=\"media/images/upload/ubimz01.png\" alt=\"Munchkin Zombies\">\n        <h2 id=\"munchkin-z\">Munchkin Zombies</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinZ.filters }\">\n            <h3 id=\"munchkin-z-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinZToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.bonuses\"> Actions (<span v-text=\"munchkinZBonusesNumber\">8</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.actions\"> Améliorations (<span v-text=\"munchkinZActionsNumber\">13</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.stuffs\"> Équipements (<span v-text=\"munchkinZStuffsNumber\">40</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.levels\"> Gains de Niveaux (<span v-text=\"munchkinZLevelsNumber\">11</span>)\n                    </label><br>\n                    <label class=\"mojos\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.mojos\"> Mojos (<span v-text=\"munchkinZMojosNumber\">9</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.monsters\"> Monstres (<span v-text=\"munchkinZMonstersNumber\">38</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.curses\"> Malédictions (<span v-text=\"munchkinZCursesNumber\">20</span>)\n                    </label><br>\n                    <label class=\"powers\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.powers\"> Pouvoirs (<span v-text=\"munchkinZPowersNumber\">15</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.objects\"> Objets (<span v-text=\"munchkinZObjectsNumber\">14</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-z-details\">Détails</h3>\n            <p>Sont apparut avec ce jeu :</p>\n            <ul>\n                <li>Les Mojos</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinZCardsNumber\">168</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-z-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinZDoorsNumber\">95</span></p>\n                <ol>\n                    <li class=\"monsters color\">3872 Bin-Ork-Lards</li>\n                    <li class=\"monsters color\">Adepte de l'Herbe qui Vide la Tête</li>\n                    <li class=\"actions color\">Au Volant d'un Rouleau Compresseur</li>\n                    <li class=\"actions color\">Avec un Gros Sifflet</li>\n                    <li class=\"actions color\">Attrape-Cerveau</li>\n                    <li class=\"monsters color\">Baby-Sitter</li>\n                    <li class=\"monsters color\">Barista</li>\n                    <li class=\"actions color\">Bodybuildé</li>\n                    <li class=\"monsters color\">Boucher</li>\n                    <li class=\"monsters color\">Bureaucrate Zombie</li>\n                    <li class=\"monsters color\">Cannibale</li>\n                    <li class=\"monsters color\">Cheftaine Scout (aux méthodes de vente un tantinet agressives)</li>\n                    <li class=\"monsters color\">Chihuahua Zombie</li>\n                    <li class=\"monsters color\">Concierge</li>\n                    <li class=\"powers color\">Costaud</li>\n                    <li class=\"powers color\">Costaud</li>\n                    <li class=\"powers color\">Costaud</li>\n                    <li class=\"powers color\">Coriace</li>\n                    <li class=\"powers color\">Coriace</li>\n                    <li class=\"monsters color\">Croque-Mort</li>\n                    <li class=\"powers color\">Furtif</li>\n                    <li class=\"powers color\">Furtif</li>\n                    <li class=\"powers color\">Futé</li>\n                    <li class=\"powers color\">Futé</li>\n                    <li class=\"powers color\">Futé</li>\n                    <li class=\"monsters color\">Gang de Bikers</li>\n                    <li class=\"monsters color\">Glandeur</li>\n                    <li class=\"monsters color\">Golfeur</li>\n                    <li class=\"monsters color\">Héros de Film d'Action</li>\n                    <li class=\"actions color\">Inconscient</li>\n                    <li class=\"monsters color\">Infirmière</li>\n                    <li class=\"monsters color\">La Dame de la Cafet'</li>\n                    <li class=\"monsters color\">Livreur de Pizza</li>\n                    <li class=\"curses color\">Malédiction ! Arrêt de Mort</li>\n                    <li class=\"curses color\">Malédiction ! Article(s) de la Mort</li>\n                    <li class=\"curses color\">Malédiction ! Bière et Paix</li>\n                    <li class=\"curses color\">Malédiction ! Bobooooooooo</li>\n                    <li class=\"curses color\">Malédiction ! C'est Chauuuuuud !</li>\n                    <li class=\"curses color\">Malédiction ! Capital Décès</li>\n                    <li class=\"curses color\">Malédiction ! Cerveauuuuuuu !</li>\n                    <li class=\"curses color\">Malédiction ! De l'eaaaaauuuuuuu</li>\n                    <li class=\"curses color\">Malédiction ! Doberman très Attaché</li>\n                    <li class=\"curses color\">Malédiction ! Double Mojo</li>\n                    <li class=\"curses color\">Malédiction ! Double Mojo</li>\n                    <li class=\"curses color\">Malédiction ! Feinté par un Mannequin</li>\n                    <li class=\"curses color\">Malédiction ! Fourmis</li>\n                    <li class=\"curses color\">Malédiction ! Jeuuunoooooot !</li>\n                    <li class=\"curses color\">Malédiction ! Les Bras vous en tombent</li>\n                    <li class=\"curses color\">Malédiction ! Locooooooo !</li>\n                    <li class=\"curses color\">Malédiction ! Mais où aviez-vous la Tête ?</li>\n                    <li class=\"curses color\">Malédiction ! Mort à l'arrivée (et au départ aussi)</li>\n                    <li class=\"curses color\">Malédiction ! Perplexité Cadaverique</li>\n                    <li class=\"curses color\">Malédiction ! Tue par-dessus Quête</li>\n                    <li class=\"actions color\">Maniant un Fusil</li>\n                    <li class=\"actions color\">Maniant un Fusil à Canon Double</li>\n                    <li class=\"actions color\">Maniant une Tondeuse à Gazon</li>\n                    <li class=\"monsters color\">Manifestante</li>\n                    <li class=\"monsters color\">Mascotte</li>\n                    <li class=\"monsters color\">Mère de Famille</li>\n                    <li class=\"monsters color\">Monsieur tout le Monde</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"monsters color\">Ninja</li>\n                    <li class=\"monsters color\">Nonne</li>\n                    <li class=\"monsters color\">Percepteur</li>\n                    <li class=\"monsters color\">Petit Gamin Mignon</li>\n                    <li class=\"monsters color\">Poivrot</li>\n                    <li class=\"monsters color\">Pompier</li>\n                    <li class=\"monsters color\">Postier</li>\n                    <li class=\"monsters color\">Présentateur de Jeu Télévisé</li>\n                    <li class=\"powers color\">Putrescent</li>\n                    <li class=\"powers color\">Putrescent</li>\n                    <li class=\"powers color\">Rapide</li>\n                    <li class=\"powers color\">Rapide</li>\n                    <li class=\"powers color\">Rapide</li>\n                    <li class=\"monsters color\">Requin Zombie</li>\n                    <li class=\"monsters color\">Sécurité de l'Aéroport</li>\n                    <li class=\"monsters color\">Shérif du Comté</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"monsters color\">Type en Chemise Hawaïenne</li>\n                    <li class=\"monsters color\">Vendeur de Voiture d'Occasion</li>\n                    <li class=\"monsters color\">Zombie de l'Administration</li>\n                    <li class=\"mojos color\">Zombie Nucléaire</li>\n                    <li class=\"mojos color\">Zombie Nucléaire</li>\n                    <li class=\"mojos color\">Zombie Nucléaire</li>\n                    <li class=\"mojos color\">Zombie Pestiféré</li>\n                    <li class=\"mojos color\">Zombie Pestiféré</li>\n                    <li class=\"mojos color\">Zombie Pestiféré</li>\n                    <li class=\"mojos color\">Zombie Vaudou</li>\n                    <li class=\"mojos color\">Zombie Vaudou</li>\n                    <li class=\"mojos color\">Zombie Vaudou</li>\n                    <li class=\"monsters color\">Zombiologiste</li>\n                    <template v-for=\"(item, index) in munchkinZ.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinZ.version) !== -1) && ((munchkinZ.curses && item.class.indexOf('curses') !== -1) || (munchkinZ.powers && item.class.indexOf('powers') !== -1) || (munchkinZ.mojos && item.class.indexOf('mojos') !== -1) || (munchkinZ.monsters && item.class.indexOf('monsters') !== -1) || (munchkinZ.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinZ.version) !== -1) && all.munchkinZDoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinZDoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-z-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkinZTreasuresNumber\">73</span></p>\n                <ol>\n                    <li class=\"bonuses color\">À son Corps Défendant</li>\n                    <li class=\"levels color\">Allez les Pourris !</li>\n                    <li class=\"objects color\">Anneau de Souhait</li>\n                    <li class=\"objects color\">Anneau de Souhait</li>\n                    <li class=\"objects color\">Astuces pour Survivre à une Invasion de Zombies</li>\n                    <li class=\"stuffs color\">Barrière Grillagée</li>\n                    <li class=\"stuffs color\">Bâton à Ressort</li>\n                    <li class=\"levels color\">Bi-Zombie</li>\n                    <li class=\"levels color\">Blague Humerus-Tique</li>\n                    <li class=\"stuffs color\">Blanche Armure de Porcelaine</li>\n                    <li class=\"stuffs color\">Boîte aux Lettres</li>\n                    <li class=\"stuffs color\">Borne Anti-Incendie</li>\n                    <li class=\"stuffs color\">Bras</li>\n                    <li class=\"objects color\">Brique</li>\n                    <li class=\"stuffs color\">Boule de Bowling</li>\n                    <li class=\"objects color\">Bouteille d'Acide</li>\n                    <li class=\"stuffs color\">Cabane à Oiseaux</li>\n                    <li class=\"bonuses color\">Cachette Idéale</li>\n                    <li class=\"stuffs color\">Canettes de Soda</li>\n                    <li class=\"stuffs color\">Casserole</li>\n                    <li class=\"levels color\">Cerveaauuux !</li>\n                    <li class=\"stuffs color\">Chariot de Supermarché</li>\n                    <li class=\"objects color\">Chat Furibard</li>\n                    <li class=\"stuffs color\">Chaussures de Pointure</li>\n                    <li class=\"bonuses color\">Clef au Bras (un poil brutale)</li>\n                    <li class=\"levels color\">Conseils Diététiques</li>\n                    <li class=\"stuffs color\">Côte de Porc</li>\n                    <li class=\"stuffs color\">Coupe de Bowling</li>\n                    <li class=\"stuffs color\">Crachat Contaminé</li>\n                    <li class=\"stuffs color\">Cravate en Papier Tue-Mouche</li>\n                    <li class=\"stuffs color\">Crocs</li>\n                    <li class=\"levels color\">Croque-Madame</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"levels color\">En-Cas Diététique</li>\n                    <li class=\"bonuses color\">En Feu</li>\n                    <li class=\"stuffs color\">Fétiche</li>\n                    <li class=\"bonuses color\">Fuite des Cerveaux</li>\n                    <li class=\"stuffs color\">Graisse en Putréfaction</li>\n                    <li class=\"stuffs color\">Griffes Phosphorescentes</li>\n                    <li class=\"stuffs color\">Gueule Béante</li>\n                    <li class=\"stuffs color\">Guirlande de Noël</li>\n                    <li class=\"objects color\">~~Intestin Grêle~~ Grêle d'intestins</li>\n                    <li class=\"stuffs color\">Jambe</li>\n                    <li class=\"stuffs color\">Jouet Tape-à-l'Oeil</li>\n                    <li class=\"levels color\">La Main sur le ~~Berceau~~ Cerveau</li>\n                    <li class=\"stuffs color\">Langue Fourchue</li>\n                    <li class=\"stuffs color\">Longs Doigts Osseux</li>\n                    <li class=\"objects color\">Main Armée (pour les attaques éponymes)</li>\n                    <li class=\"stuffs color\">Mauvais Oeil</li>\n                    <li class=\"stuffs color\">Os de Mort-Bon-Vivant</li>\n                    <li class=\"stuffs color\">Panneau de Stop</li>\n                    <li class=\"stuffs color\">Parapluie</li>\n                    <li class=\"bonuses color\">Patin à Roulettes</li>\n                    <li class=\"stuffs color\">Pelle de Fossoyeur</li>\n                    <li class=\"stuffs color\">Piège à Rat</li>\n                    <li class=\"stuffs color\">Portière de Voiture</li>\n                    <li class=\"stuffs color\">Pots de Fleur</li>\n                    <li class=\"stuffs color\">Punaises</li>\n                    <li class=\"levels color\">Repas Chaud (comme la braise)</li>\n                    <li class=\"levels color\">S'Attaquer à l'Homme de Tête</li>\n                    <li class=\"stuffs color\">Singe Domestique</li>\n                    <li class=\"bonuses color\">Sosie Moisi</li>\n                    <li class=\"stuffs color\">Superglou, la Colle qui Colle ~~à Mort~~ les Morts</li>\n                    <li class=\"objects color\">Tête de Clown</li>\n                    <li class=\"objects color\">Tête de Lard</li>\n                    <li class=\"stuffs color\">Tripes qui Agrippent</li>\n                    <li class=\"stuffs color\">Un Autre Zombie</li>\n                    <li class=\"stuffs color\">Un Bras et une Jambe</li>\n                    <li class=\"bonuses color\">Une Cervelle pour Deux</li>\n                    <li class=\"objects color\">Vieux Restes</li>\n                    <li class=\"levels color\">Visite au Musée</li>\n                    <li class=\"objects color\">Vinyl Vintage</li>\n                    <li class=\"stuffs color\">Votre propre Pancreas et/ou votre Rate</li>\n                    <li class=\"objects color\">Zombies</li>\n                    <template v-for=\"(item, index) in munchkinZ.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinZ.version) !== -1) && ((munchkinZ.levels && item.class.indexOf('levels') !== -1) || (munchkinZ.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkinZ.objects && item.class.indexOf('objects') !== -1) || (munchkinZ.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinZ.version) !== -1) && all.munchkinZTreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinZTreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-z-2 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinZ2 }\">\n        <img class=\"demo\" src=\"media/images/upload/ubimz02.png\" alt=\"Munchkin Zombies 2\">\n        <h2 id=\"munchkin-z-2\">Munchkin Zombies 2 : Ça zigouille à tour de bras !</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinZ2.filters }\">\n            <h3 id=\"munchkin-z-2-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinZ2ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.bonuses\"> Actions (<span v-text=\"munchkinZ2BonusesNumber\"></span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.actions\"> Améliorations (<span v-text=\"munchkinZ2ActionsNumber\"></span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.stuffs\"> Équipements (<span v-text=\"munchkinZ2StuffsNumber\"></span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.levels\"> Gains de Niveaux (<span v-text=\"munchkinZ2LevelsNumber\"></span>)\n                    </label><br>\n                    <label class=\"mojos\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.mojos\"> Mojos (<span v-text=\"munchkinZ2MojosNumber\"></span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.monsters\"> Monstres (<span v-text=\"munchkinZ2MonstersNumber\"></span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.curses\"> Malédictions (<span v-text=\"munchkinZ2CursesNumber\"></span>)\n                    </label><br>\n                    <label class=\"powers\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.powers\"> Pouvoirs (<span v-text=\"munchkinZ2PowersNumber\"></span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.objects\"> Objets (<span v-text=\"munchkinZ2ObjectsNumber\"></span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-z-2-details\">Détails</h3>\n            <p><img src=\"media/images/upload/mz2.gif\" alt=\"Munchkin Zombies 2\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension.</p>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinZ2CardsNumber\">112</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-z-2-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinZ2DoorsNumber\">66</span></p>\n                <ol>\n                    <li class=\"powers color\">Affamé</li>\n                    <li class=\"powers color\">Affamé</li>\n                    <li class=\"powers color\">Affamé</li>\n                    <li class=\"actions color\">Au Dernier ~~Rang~~ Range</li>\n                    <li class=\"actions color\">Au Téléphone</li>\n                    <li class=\"monsters color\">Batte-Man</li>\n                    <li class=\"monsters color\">Bébé Zombie</li>\n                    <li class=\"monsters color\">Bibliothécaire</li>\n                    <li class=\"actions color\">Cerveauphage</li>\n                    <li class=\"monsters color\">Chirurgien du Dimanche</li>\n                    <li class=\"monsters color\">Conducteur de Cyclopousse</li>\n                    <li class=\"powers color\">Coriace</li>\n                    <li class=\"powers color\">Costaud</li>\n                    <li class=\"monsters color\">Diplômée de l'Unversité</li>\n                    <li class=\"actions color\">Doté du Pouvoir de la Science !</li>\n                    <li class=\"actions color\">Double Mojo</li>\n                    <li class=\"monsters color\">Fermier</li>\n                    <li class=\"powers color\">Furtif</li>\n                    <li class=\"powers color\">Futé</li>\n                    <li class=\"monsters color\">Imposteur Zombie</li>\n                    <li class=\"monsters color\">Joueur de Basket</li>\n                    <li class=\"monsters color\">Joueur de Hockey</li>\n                    <li class=\"monsters color\">Joueur ~~de~~ Zombie</li>\n                    <li class=\"curses color\">Malédiction ! À Corps Perdu...</li>\n                    <li class=\"curses color\">Malédiction ! Complètement Creuvé !</li>\n                    <li class=\"curses color\">Malédiction ! Fuite des Cerveaux</li>\n                    <li class=\"curses color\">Malédiction ! Garroooooooot !</li>\n                    <li class=\"curses color\">Malédiction ! Kesakoooooooo !</li>\n                    <li class=\"curses color\">Malédiction ! Noyauuuuuuux !</li>\n                    <li class=\"curses color\">Malédiction ! Ostrogoths !</li>\n                    <li class=\"curses color\">Malédiction ! Travaaaaaaaaux !</li>\n                    <li class=\"curses color\">Malédiction ! Traversée du Ciment</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"monsters color\">Orang-Outan</li>\n                    <li class=\"actions color\">Pas de Cerveau, pas de Bobo</li>\n                    <li class=\"monsters color\">Pierroooooooot !</li>\n                    <li class=\"monsters color\">Politicard</li>\n                    <li class=\"monsters color\">Prof de Mécanique</li>\n                    <li class=\"powers color\">Putrescent</li>\n                    <li class=\"actions color\">Qu'a du Cran</li>\n                    <li class=\"monsters color\">Pervenche</li>\n                    <li class=\"monsters color\">Plombier</li>\n                    <li class=\"monsters color\">Prof de Sport</li>\n                    <li class=\"powers color\">Rapide</li>\n                    <li class=\"monsters color\">Représentant en Feux d'Artifice</li>\n                    <li class=\"monsters color\">Reporter</li>\n                    <li class=\"actions color\">Robin des Doigts</li>\n                    <li class=\"monsters color\">Skateur de l'Extrême</li>\n                    <li class=\"monsters color\">Sosie d'Elvis Zombie</li>\n                    <li class=\"monsters color\">Soubrette</li>\n                    <li class=\"monsters color\">Survivant</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"monsters color\">Végétalienne</li>\n                    <li class=\"monsters color\">Vieille Dame aux Chats</li>\n                    <li class=\"monsters color\">Vieux Grincheux</li>\n                    <li class=\"actions color\">Zombie qui (se) Déchire</li>\n                    <li class=\"mojos color\">Zombie Rafistolé</li>\n                    <li class=\"mojos color\">Zombie Rafistolé</li>\n                    <li class=\"mojos color\">Zombie Rafistolé</li>\n                    <li class=\"mojos color\">Zombie Rafistolé</li>\n                    <li class=\"mojos color\">Zombie Nucléaire</li>\n                    <li class=\"mojos color\">Zombie Pestiféré</li>\n                    <li class=\"mojos color\">Zombie Vaudou</li>\n                    <template v-for=\"(item, index) in munchkinZ2.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinZ2.version) !== -1) && ((munchkinZ2.curses && item.class.indexOf('curses') !== -1) || (munchkinZ2.powers && item.class.indexOf('powers') !== -1) || (munchkinZ2.mojos && item.class.indexOf('mojos') !== -1) || (munchkinZ2.monsters && item.class.indexOf('monsters') !== -1) || (munchkinZ2.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinZ2.version) !== -1) && all.munchkinZ2DoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinZ2DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-z-2-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkinZ2TreasuresNumber\">46</span></p>\n                <ol>\n                    <li class=\"stuffs color\">Abat-Jour</li>\n                    <li class=\"levels color\">Alimentation Riche</li>\n                    <li class=\"objects color\">Anneau de Souhait</li>\n                    <li class=\"stuffs color\">~~Attaché-case~~ Attaché-Crève</li>\n                    <li class=\"stuffs color\">Baguette à Bulles</li>\n                    <li class=\"objects color\">Billes</li>\n                    <li class=\"stuffs color\">Bois de Cerf</li>\n                    <li class=\"stuffs color\">Bonne Vieille Planche des Familles</li>\n                    <li class=\"levels color\">Ça à un Goût de Poulet</li>\n                    <li class=\"levels color\">Ça Zigouille à Tour de Bras !</li>\n                    <li class=\"stuffs color\">Cactus</li>\n                    <li class=\"stuffs color\">Cercueil</li>\n                    <li class=\"objects color\">Champaaaaaaagne !</li>\n                    <li class=\"stuffs color\">Chaussures de Bowling</li>\n                    <li class=\"stuffs color\">Chemise de Bowling</li>\n                    <li class=\"stuffs color\">Compteur Geiger</li>\n                    <li class=\"stuffs color\">Cou à Rallonge</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"objects color\">Dé Ultrapipé</li>\n                    <li class=\"objects color\">Dentier Mécanique</li>\n                    <li class=\"bonuses color\">Des Richesses dépassant vos Rêves les plus Fou !</li>\n                    <li class=\"levels color\">Devine qui vient (te) manger ce soir !</li>\n                    <li class=\"levels color\">Équilibre Alimentaire</li>\n                    <li class=\"objects color\">Fluide d'Embaumement</li>\n                    <li class=\"objects color\">Fluide d'Embrasement</li>\n                    <li class=\"stuffs color\">Fourche</li>\n                    <li class=\"stuffs color\">Girouette</li>\n                    <li class=\"stuffs color\">Gros Doigts</li>\n                    <li class=\"levels color\">La Mort vous vas si Bien</li>\n                    <li class=\"stuffs color\">Langue Préhensile</li>\n                    <li class=\"objects color\">Lingo d'Or</li>\n                    <li class=\"stuffs color\">Mauvaise Haleine</li>\n                    <li class=\"stuffs color\">Mouche de Combat</li>\n                    <li class=\"stuffs color\">Moto</li>\n                    <li class=\"stuffs color\">Narguilé</li>\n                    <li class=\"stuffs color\">Pancarte d'homme-sandwich</li>\n                    <li class=\"objects color\">Piège à Ours</li>\n                    <li class=\"stuffs color\">Pierre Tombale</li>\n                    <li class=\"stuffs color\">Poisson</li>\n                    <li class=\"stuffs color\">Poubelles en Feu</li>\n                    <li class=\"levels color\">Restauration Rapide</li>\n                    <li class=\"bonuses color\">Réutilisation, Recyclage, Réanimation</li>\n                    <li class=\"stuffs color\">Sabre de Samouraï</li>\n                    <li class=\"stuffs color\">Sourire de Winner</li>\n                    <li class=\"stuffs color\">Tête Chercheuse</li>\n                    <li class=\"stuffs color\">Tuyau d'Arrosage</li>\n                    <template v-for=\"(item, index) in munchkinZ2.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinZ2.version) !== -1) && ((munchkinZ2.levels && item.class.indexOf('levels') !== -1) || (munchkinZ2.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkinZ2.objects && item.class.indexOf('objects') !== -1) || (munchkinZ2.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinZ2.version) !== -1) && all.munchkinZ2TreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinZ2TreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-c munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinC }\">\n        <img class=\"demo\" src=\"media/images/upload/b28668707a5461de055da1bb129d18f368b4.jpeg\" alt=\"Munchkin Cthulhu\">\n        <h2 id=\"munchkin-c\">Munchkin Cthulhu</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinC.filters }\">\n            <h3 id=\"munchkin-c-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinCToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC.bonuses\"> Actions (<span v-text=\"munchkinCBonusesNumber\">8</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC.actions\"> Améliorations (<span v-text=\"munchkinCActionsNumber\">32</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC.classes\"> Classes (<span v-text=\"munchkinCClassesNumber\">18</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC.stuffs\"> Équipements (<span v-text=\"munchkinCStuffsNumber\">38</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC.levels\"> Gains de Niveaux (<span v-text=\"munchkinCLevelsNumber\">10</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC.monsters\"> Monstres (<span v-text=\"munchkinCMonstersNumber\">37</span>)\n                    </label><br>\n                    <label class=\"curses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC.curses\"> Malédictions (<span v-text=\"munchkinCCursesNumber\">13</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC.objects\"> Objets (<span v-text=\"munchkinCObjectsNumber\">12</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-c-details\">Détails</h3>\n            <p>Est apparut dans ce jeu :</p>\n            <ul>\n                <li>La Classe spéciale Cultiste</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinCCardsNumber\">168</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-c-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinCDoorsNumber\">100</span></p>\n                <ol>\n                    <li class=\"actions color\">... et sa Progéniture</li>\n                    <li class=\"actions color\">Blasphématoire</li>\n                    <li class=\"actions color\">C'est çui qui dit qui R'Lyeh !</li>\n                    <li class=\"monsters color\">Celle qui Suçotait dans les Ténèbres</li>\n                    <li class=\"monsters color\">Celui qui Chapardait dans les Ténèbres</li>\n                    <li class=\"monsters color\">Ceux qui Chipotaient dans les Ténèbres</li>\n                    <li class=\"monsters color\">Chibithulhu</li>\n                    <li class=\"actions color\">Créé avec des Règles Cinématographiques !</li>\n                    <li class=\"actions color\">Complètement Barge</li>\n                    <li class=\"actions color\">Convention de Cultistes</li>\n                    <li class=\"actions color\">Corrompu par le Pouvoir !</li>\n                    <li class=\"classes color\">Cultiste</li>\n                    <li class=\"classes color\">Cultiste</li>\n                    <li class=\"classes color\">Cultiste</li>\n                    <li class=\"classes color\">Cultiste</li>\n                    <li class=\"classes color\">Cultiste</li>\n                    <li class=\"classes color\">Cultiste</li>\n                    <li class=\"actions color\">D'une Indescriptible Hideur</li>\n                    <li class=\"actions color\">Écume de Bave</li>\n                    <li class=\"actions color\">En pleine Élucubration</li>\n                    <li class=\"monsters color\">Escarggoth</li>\n                    <li class=\"monsters color\">Goulaschoggoth</li>\n                    <li class=\"actions color\">Grand Coup sur la Tête</li>\n                    <li class=\"actions color\">Grand Coup sur la Tête</li>\n                    <li class=\"monsters color\">H.P. Munchcraft</li>\n                    <li class=\"actions color\">Iïa R'Lyeh !</li>\n                    <li class=\"actions color\">Illumination Inopportune</li>\n                    <li class=\"actions color\">Innommable</li>\n                    <li class=\"classes color\">Investigateur</li>\n                    <li class=\"classes color\">Investigateur</li>\n                    <li class=\"classes color\">Investigateur</li>\n                    <li class=\"classes color\">Investigateur</li>\n                    <li class=\"actions color\">Je ne suis pas Digne de cet Honneur...</li>\n                    <li class=\"monsters color\">Joggoth</li>\n                    <li class=\"monsters color\">Kermitoggoth</li>\n                    <li class=\"monsters color\">L_ Ch_s_ s_ns V___ll_s</li>\n                    <li class=\"monsters color\">L'Abomination du Sandwich</li>\n                    <li class=\"monsters color\">L'Avocat d'Affaires Charles Dexter Ward</li>\n                    <li class=\"monsters color\">L'Horreur Inçonon... impon... imprononçable</li>\n                    <li class=\"monsters color\">Les Beaufonds</li>\n                    <li class=\"monsters color\">Le Clochard d'Innsmouth</li>\n                    <li class=\"monsters color\">Le Funky de Yuggoth</li>\n                    <li class=\"monsters color\">Le Grand Cthulhu</li>\n                    <li class=\"monsters color\">Le Peuple Serpent à Lunettes</li>\n                    <li class=\"monsters color\">Le Roi en Rose</li>\n                    <li class=\"actions color\">Les Étoiles sont Alignées</li>\n                    <li class=\"actions color\">Les Étoiles sont Complètement Stone</li>\n                    <li class=\"actions color\">Les Étoiles sont Troublées</li>\n                    <li class=\"monsters color\">Lloigor (ou Lloichka) Bogdanoff (on les reconnaît plus...)</li>\n                    <li class=\"monsters color\">Maigre Bêtes de la Nuisette</li>\n                    <li class=\"curses color\">Malédiction ! Aller-simple pour l'Asile de Snarkham</li>\n                    <li class=\"curses color\">Malédiction ! Amnésie</li>\n                    <li class=\"curses color\">Malédiction ! Changement de Sexe</li>\n                    <li class=\"curses color\">Malédiction ! Cheveux Blanchis sous le Coup de l'Horreur</li>\n                    <li class=\"curses color\">Malédiction ! Cheveux Dressés sur la Tête</li>\n                    <li class=\"curses color\">Malédiction ! Encore une Affreuse Prise de Conscience</li>\n                    <li class=\"curses color\">Malédiction ! Hastur Hastur Hastur</li>\n                    <li class=\"curses color\">Malédiction ! J'me sens tout Visqueux, d'un Coup...</li>\n                    <li class=\"curses color\">Malédiction ! La Malédiction de Savath</li>\n                    <li class=\"curses color\">Malédiction ! Par-delà la Frontière de la Démence</li>\n                    <li class=\"curses color\">Malédiction ! Piles de la Lampe Torche Usées !</li>\n                    <li class=\"curses color\">Malédiction ! Sac à Dos Dévoré</li>\n                    <li class=\"curses color\">Malédiction ! Votre Arme devient Maléfique</li>\n                    <li class=\"actions color\">Méphitique</li>\n                    <li class=\"monsters color\">Mesquins Byakhees Taquins Kakis</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"monsters color\">Morves de Dieu Extérieur</li>\n                    <li class=\"monsters color\">Mouchoggoth, La Mite de Cthulhu</li>\n                    <li class=\"actions color\">Mutation</li>\n                    <li class=\"monsters color\">Paahrdeulhah, Lémure du Sommeil</li>\n                    <li class=\"actions color\">Plongé dans son Sommeil Millénaire</li>\n                    <li class=\"monsters color\">Polly le Polype Violent</li>\n                    <li class=\"actions color\">Portail du Mystère</li>\n                    <li class=\"classes color\">Professeur</li>\n                    <li class=\"classes color\">Professeur</li>\n                    <li class=\"classes color\">Professeur</li>\n                    <li class=\"classes color\">Professeur</li>\n                    <li class=\"actions color\">Quadri-Dimensionnel</li>\n                    <li class=\"monsters color\">~~Rejeton~~ Gueuleton d'Azathoth</li>\n                    <li class=\"monsters color\">Rideauggoth</li>\n                    <li class=\"monsters color\">Roboggoth</li>\n                    <li class=\"monsters color\">Shog Goth</li>\n                    <li class=\"monsters color\">Shoggoth (même pas de jeu de mot, rien...)</li>\n                    <li class=\"monsters color\">Sombre Bouton de Shub-Niggurath (en pleine floraison, qui plus est...)</li>\n                    <li class=\"monsters color\">Souchoggoth</li>\n                    <li class=\"actions color\">Squameux</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"classes color\">Tabasseur de Monstres</li>\n                    <li class=\"classes color\">Tabasseur de Monstres</li>\n                    <li class=\"classes color\">Tabasseur de Monstres</li>\n                    <li class=\"classes color\">Tabasseur de Monstres</li>\n                    <li class=\"monsters color\">Tchou-Tchou</li>\n                    <li class=\"monsters color\">Tony Harlathotep (dit « Hawk »)</li>\n                    <li class=\"monsters color\">Témoins de Cthulhu</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"actions color\">Vésiculeux</li>\n                    <li class=\"monsters color\">Vigne des Anciens, Avatar de Yog-Sauterne</li>\n                    <template v-for=\"(item, index) in munchkinC.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinC.version) !== -1) && ((munchkinC.curses && item.class.indexOf('curses') !== -1) || (munchkinC.classes && item.class.indexOf('classes') !== -1) || (munchkinC.monsters && item.class.indexOf('monsters') !== -1) || (munchkinC.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC.version) !== -1) && all.munchkinCDoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinCDoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-c-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkinCTreasuresNumber\">68</span></p>\n                <ol>\n                    <li class=\"bonuses color\">...des Plutôt Grands et Relativement Anciens</li>\n                    <li class=\"bonuses color\">... Officiel du Mythe</li>\n                    <li class=\"objects color\">Anneau de Souhait</li>\n                    <li class=\"objects color\">Anneau de Souhait</li>\n                    <li class=\"stuffs color\">Appareil de Protection Électrique du Professeur Tesla (Prototype)</li>\n                    <li class=\"levels color\">Appeler l'Armée à la Rescousse</li>\n                    <li class=\"levels color\">Apprendre ce que l'Homme n'était pas Censé Savoir</li>\n                    <li class=\"stuffs color\">Autocollant de Pare-Choc Cthulhu</li>\n                    <li class=\"levels color\">Avertir le FBI de l'Existence des Créatures</li>\n                    <li class=\"levels color\">Avertir le Président</li>\n                    <li class=\"stuffs color\">Baguette de Mémorable Raclée</li>\n                    <li class=\"stuffs color\">Bottes en Caoutchouc</li>\n                    <li class=\"stuffs color\">Carte de Membre d'un Culte Maléfique</li>\n                    <li class=\"stuffs color\">Carte Non-Euclidienne</li>\n                    <li class=\"stuffs color\">Casque de Mineur</li>\n                    <li class=\"stuffs color\">Clou Lourd</li>\n                    <li class=\"objects color\">Corned-Beef</li>\n                    <li class=\"stuffs color\">Cornemuse</li>\n                    <li class=\"stuffs color\">Couteau à Sushi du Destin</li>\n                    <li class=\"stuffs color\">Couvre... Poulpe-Chef</li>\n                    <li class=\"bonuses color\">Cri Perçant</li>\n                    <li class=\"stuffs color\">Cthulhututu Chapeau Pointu</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"levels color\">Découverte Troublante dans l'Album de Famille</li>\n                    <li class=\"bonuses color\">Éclipse Solaire</li>\n                    <li class=\"stuffs color\">Enseigne des Anciens</li>\n                    <li class=\"levels color\">Entrainement</li>\n                    <li class=\"levels color\">Être Interviewé au Journal de Vingt Heures</li>\n                    <li class=\"stuffs color\">Fusil à Triple Canon</li>\n                    <li class=\"stuffs color\">Hache Préhistorique</li>\n                    <li class=\"objects color\">Ichor : Le Cancan Fielleux</li>\n                    <li class=\"objects color\">Ichor : Le Élan des Preux</li>\n                    <li class=\"objects color\">Ichor : Le Flan Visqueux</li>\n                    <li class=\"objects color\">Ichor : Le P'tit Blanc des Dieux</li>\n                    <li class=\"objects color\">Ichor : Le Sang Dégueu</li>\n                    <li class=\"objects color\">Ichor : Le Sang des Dieux</li>\n                    <li class=\"objects color\">Ichor : Moins Lent, c'est Mieux...</li>\n                    <li class=\"bonuses color\">Incommensurable Richesse</li>\n                    <li class=\"levels color\">Informer les Autorités Locales</li>\n                    <li class=\"stuffs color\">Insecticide</li>\n                    <li class=\"objects color\">La Douleur tombée du Ciel</li>\n                    <li class=\"stuffs color\">Lance-Flammes</li>\n                    <li class=\"stuffs color\">Lattes à latter du Monstre</li>\n                    <li class=\"bonuses color\">Le Chant qui Rend Fou</li>\n                    <li class=\"stuffs color\">Les Tatanes Hallucinées</li>\n                    <li class=\"stuffs color\">Maîîîîîîître !</li>\n                    <li class=\"stuffs color\">Manuscrit Ésotérique</li>\n                    <li class=\"stuffs color\">Mythailleuse</li>\n                    <li class=\"stuffs color\">Necrocomicon</li>\n                    <li class=\"stuffs color\">Necrognomicon</li>\n                    <li class=\"stuffs color\">Necronomicon</li>\n                    <li class=\"stuffs color\">Necrononichons</li>\n                    <li class=\"stuffs color\">Nécrotélécom</li>\n                    <li class=\"stuffs color\">Pages Jaunes d'Innsmouth</li>\n                    <li class=\"stuffs color\">Poing Américain Vachement Stylé</li>\n                    <li class=\"stuffs color\">Poncho Imperméable aux Substances Dégueu</li>\n                    <li class=\"stuffs color\">Quille de Bowling</li>\n                    <li class=\"bonuses color\">Rire Dément</li>\n                    <li class=\"stuffs color\">Sac à Dos Rempli de Dynamite</li>\n                    <li class=\"levels color\">Seul Survivant</li>\n                    <li class=\"stuffs color\">Shogulateur</li>\n                    <li class=\"stuffs color\">Tentacule</li>\n                    <li class=\"stuffs color\">Tentacule Factice</li>\n                    <li class=\"stuffs color\">T-Shirt de l'Université de Miskatronic</li>\n                    <li class=\"stuffs color\">Torche Électrique à Deux Mains</li>\n                    <li class=\"stuffs color\">Veste en Tweed</li>\n                    <li class=\"levels color\">Vision Mystiques</li>\n                    <li class=\"bonuses color\">Voleur d'Ichor</li>\n                    <template v-for=\"(item, index) in munchkinC.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinC.version) !== -1) && ((munchkinC.levels && item.class.indexOf('levels') !== -1) || (munchkinC.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkinC.objects && item.class.indexOf('objects') !== -1) || (munchkinC.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC.version) !== -1) && all.munchkinCTreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinCTreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-c-2 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinC2 }\">\n        <img class=\"demo\" src=\"media/images/upload/ubicm02.png\" alt=\"Munchkin Cthulhu 2\">\n        <h2 id=\"munchkin-c-2\">Munchkin Cthulhu 2 : L'Appel de la Vachthulhu</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinC2.filters }\">\n            <h3 id=\"munchkin-c-2-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinC2ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.bonuses\"> Actions (<span v-text=\"munchkinC2BonusesNumber\">8</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.actions\"> Améliorations (<span v-text=\"munchkinC2ActionsNumber\">32</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.classes\"> Classes (<span v-text=\"munchkinC2ClassesNumber\">18</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.stuffs\"> Équipements (<span v-text=\"munchkinC2StuffsNumber\">38</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.levels\"> Gains de Niveaux (<span v-text=\"munchkinC2LevelsNumber\">10</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.monsters\"> Monstres (<span v-text=\"munchkinC2MonstersNumber\">37</span>)\n                    </label><br>\n                    <label class=\"madnesses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.madnesses\"> Démences (<span v-text=\"munchkinC2MadnessesNumber\">13</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.objects\"> Objets (<span v-text=\"munchkinC2ObjectsNumber\">12</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-c-2-details\">Détails</h3>\n            <p><img src=\"media/images/upload/mc2.gif\" alt=\"Munchkin Cthulhu 2\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Est apparut dans cette extension :</p>\n            <ul>\n                <li>Les Démences</li>\n            </ul>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinC2CardsNumber\">56</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-c-2-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinC2DoorsNumber\">32</span></p>\n                <ol>\n                    <li class=\"actions color\">Agité de Soubresauts</li>\n                    <li class=\"monsters color\">Arkhamster</li>\n                    <li class=\"actions color\">Batracien</li>\n                    <li class=\"monsters color\">Cochonien</li>\n                    <li class=\"monsters color\">Chatzatoth</li>\n                    <li class=\"monsters color\">Chiot-Goth</li>\n                    <li class=\"monsters color\">Chiots de Tindalos</li>\n                    <li class=\"monsters color\">Cotchk-Cotchk-Codêêêêtchk</li>\n                    <li class=\"classes color\">Cultiste</li>\n                    <li class=\"classes color\">Cultiste</li>\n                    <li class=\"actions color\">D'une Hideuse Indescriptibilitude</li>\n                    <li class=\"madnesses color\">Démence ! Double Personnalité</li>\n                    <li class=\"madnesses color\">Démence ! Gammaphobie</li>\n                    <li class=\"madnesses color\">Démence ! Kleptomanie</li>\n                    <li class=\"madnesses color\">Démence ! Névrose Obsessionnelle Compulsive</li>\n                    <li class=\"madnesses color\">Démence ! Paranoïa</li>\n                    <li class=\"actions color\">Grand Coup sur la Tête</li>\n                    <li class=\"classes color\">Investigateur</li>\n                    <li class=\"monsters color\">La Douleur Tombée du Miel</li>\n                    <li class=\"monsters color\">La Vache Milkhathulhu</li>\n                    <li class=\"monsters color\">Les Chariots des Dieux Vieux</li>\n                    <li class=\"monsters color\">Les Enfants du Maïs</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"classes color\">Professeur</li>\n                    <li class=\"monsters color\">Salade de Chèvres Chauggoth</li>\n                    <li class=\"monsters color\">Shub-Ni-Goret</li>\n                    <li class=\"monsters color\">Sombres Moutons de Shub-Niggurath</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"classes color\">Tabasseur de Monstres</li>\n                    <li class=\"monsters color\">Tcha-Tcha</li>\n                    <li class=\"actions color\">Tout(e) Pitit(e) Pitit(e)...</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <template v-for=\"(item, index) in munchkinC2.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinC2.version) !== -1) && ((munchkinC2.madnesses && item.class.indexOf('madnesses') !== -1) || (munchkinC2.classes && item.class.indexOf('classes') !== -1) || (munchkinC2.monsters && item.class.indexOf('monsters') !== -1) || (munchkinC2.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC2.version) !== -1) && all.munchkinC2DoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinC2DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-c-2-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkinC2TreasuresNumber\">24</span></p>\n                <ol>\n                    <li class=\"objects color\">Anneau de Souhait</li>\n                    <li class=\"stuffs color\">Bottes en Peau de Poulpe</li>\n                    <li class=\"stuffs color\">Canon à Patates</li>\n                    <li class=\"stuffs color\">Chapeau de Paille</li>\n                    <li class=\"levels color\">Conserves de Concours</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"bonuses color\">Doc Igor l'Ichor</li>\n                    <li class=\"stuffs color\">Faux</li>\n                    <li class=\"stuffs color\">Fourche de Foule en Colère (mais néanmoins prudente...)</li>\n                    <li class=\"objects color\">Ichor : Le Nectar du Feu de Dieu ! Boudiou !</li>\n                    <li class=\"bonuses color\">Infecté</li>\n                    <li class=\"bonuses color\">Hurlement Délirant</li>\n                    <li class=\"bonuses color\">Intervention Bovine</li>\n                    <li class=\"stuffs color\">Le Barattor ! (et à travers...)</li>\n                    <li class=\"bonuses color\">Le Chant qui rend Fou, 2e Couplet</li>\n                    <li class=\"levels color\">Méditer au Temple de la Pleine Lune Fendue</li>\n                    <li class=\"stuffs color\">Moissonneuse Tabasseuse</li>\n                    <li class=\"stuffs color\">Pelle à Crottes qui déchire sa Race (surtout sa Race Ancienne)</li>\n                    <li class=\"bonuses color\">Poignée de Main Secrète</li>\n                    <li class=\"levels color\">Poser pour un Portrait de Famille</li>\n                    <li class=\"bonuses color\">Puits aux Souhaits</li>\n                    <li class=\"stuffs color\">Rouleau à Pâtisserie</li>\n                    <li class=\"stuffs color\">Veste de l'Université de Rat-Musquétonic</li>\n                    <li class=\"objects color\">Vieux Poêle Curieusement Aérodynamique</li>\n                    <template v-for=\"(item, index) in munchkinC2.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinC2.version) !== -1) && ((munchkinC2.levels && item.class.indexOf('levels') !== -1) || (munchkinC2.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkinC2.objects && item.class.indexOf('objects') !== -1) || (munchkinC2.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC2.version) !== -1) && all.munchkinC2TreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinC2TreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-c-3 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinC3 }\">\n        <img class=\"demo\" src=\"media/images/upload/ubicm03.png\" alt=\"Munchkin Cthulhu 3\">\n        <h2 id=\"munchkin-c-3\">Munchkin Cthulhu 3 : La Crypte de l'Indicible</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinC3.filters }\">\n            <h3 id=\"munchkin-c-3-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinC3ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"bonuses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.bonuses\"> Actions (<span v-text=\"munchkinC3BonusesNumber\">8</span>)\n                    </label><br>\n                    <label class=\"actions\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.actions\"> Améliorations (<span v-text=\"munchkinC3ActionsNumber\">32</span>)\n                    </label><br>\n                    <label class=\"classes\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.classes\"> Classes (<span v-text=\"munchkinC3ClassesNumber\">18</span>)\n                    </label><br>\n                    <label class=\"stuffs\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.stuffs\"> Équipements (<span v-text=\"munchkinC3StuffsNumber\">38</span>)\n                    </label><br>\n                    <label class=\"levels\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.levels\"> Gains de Niveaux (<span v-text=\"munchkinC3LevelsNumber\">10</span>)\n                    </label><br>\n                    <label class=\"monsters\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.monsters\"> Monstres (<span v-text=\"munchkinC3MonstersNumber\">37</span>)\n                    </label><br>\n                    <label class=\"madnesses\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.madnesses\"> Démences (<span v-text=\"munchkinC3MadnessesNumber\">13</span>)\n                    </label><br>\n                    <label class=\"objects\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.objects\"> Objets (<span v-text=\"munchkinC3ObjectsNumber\">12</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-c-3-details\">Détails</h3>\n            <p><img src=\"media/images/upload/mc3.gif\" alt=\"Munchkin Cthulhu 3\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension.</p>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinC3CardsNumber\">56</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-c-3-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinC3DoorsNumber\">34</span></p>\n                <ol>\n                    <li class=\"monsters color\">'Zathoth</li>\n                    <li class=\"monsters color\">Atlach-Nacha</li>\n                    <li class=\"actions color\">Chthoniens !</li>\n                    <li class=\"classes color\">Cultiste</li>\n                    <li class=\"actions color\">Cultistes Croustillants</li>\n                    <li class=\"monsters color\">Dagoon</li>\n                    <li class=\"actions color\">Dégoulinant de Bave</li>\n                    <li class=\"madnesses color\">Démence ! Autophobie</li>\n                    <li class=\"madnesses color\">Démence ! Bibliophobie</li>\n                    <li class=\"madnesses color\">Démence ! Disophobie</li>\n                    <li class=\"madnesses color\">Démence ! Phobophobie</li>\n                    <li class=\"madnesses color\">Démence ! Pyromanie</li>\n                    <li class=\"monsters color\">Goules</li>\n                    <li class=\"actions color\">Grand Coup sur la Tête</li>\n                    <li class=\"monsters color\">Gug</li>\n                    <li class=\"classes color\">Investigateur</li>\n                    <li class=\"monsters color\">Le Grand Quethoulhou</li>\n                    <li class=\"monsters color\">Les Pwofonds</li>\n                    <li class=\"monsters color\">Maigres Bêtes de la Nuit</li>\n                    <li class=\"monsters color\">Mi-Glu</li>\n                    <li class=\"actions color\">Monstre Errant</li>\n                    <li class=\"monsters color\">Nyarly</li>\n                    <li class=\"classes color\">Professeur</li>\n                    <li class=\"monsters color\">Shoggies</li>\n                    <li class=\"monsters color\">Shubby</li>\n                    <li class=\"actions color\">Super Munchkin</li>\n                    <li class=\"classes color\">Tabasseur de Monstres</li>\n                    <li class=\"monsters color\">Tindaloo</li>\n                    <li class=\"actions color\">Tout Minuscule</li>\n                    <li class=\"actions color\">Tricheur !</li>\n                    <li class=\"actions color\">Truculent</li>\n                    <li class=\"actions color\">Tumescent</li>\n                    <li class=\"monsters color\">Ygo</li>\n                    <li class=\"monsters color\">Yogzotot</li>\n                    <template v-for=\"(item, index) in munchkinC3.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinC3.version) !== -1) && ((munchkinC3.madnesses && item.class.indexOf('madnesses') !== -1) || (munchkinC3.classes && item.class.indexOf('classes') !== -1) || (munchkinC3.monsters && item.class.indexOf('monsters') !== -1) || (munchkinC3.actions && item.class.indexOf('actions') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC3.version) !== -1) && all.munchkinC3DoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinC3DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"treasures\">\n                <h3 id=\"munchkin-c-3-tresors\">Trésors</h3>\n                <p>Nombre total de trésors : <span v-text=\"munchkinC3TreasuresNumber\">22</span></p>\n                <ol>\n                    <li class=\"objects color\">Anneau de Souhait</li>\n                    <li class=\"objects color\">Dé Pipé</li>\n                    <li class=\"levels color\">Donner vos Amis à Manger à Quethoulhou</li>\n                    <li class=\"stuffs color\">Feux d'Artifice</li>\n                    <li class=\"levels color\">Fouiller les Profondeurs en Quête de Savoir</li>\n                    <li class=\"bonuses color\">Gémissement Inhumain</li>\n                    <li class=\"stuffs color\">Gramophone</li>\n                    <li class=\"objects color\">Ichor le Nectar Capricieux !</li>\n                    <li class=\"objects color\">Ichor le Nectar Vicieux !</li>\n                    <li class=\"bonuses color\">Le Chant qui rend Fou, 3e Couplet</li>\n                    <li class=\"levels color\">Maîtriser ses Peurs</li>\n                    <li class=\"bonuses color\">Miam Miam !</li>\n                    <li class=\"stuffs color\">Nécrominicon</li>\n                    <li class=\"stuffs color\">Ouvre-Boîte</li>\n                    <li class=\"bonuses color\">Pied Tentaculaires</li>\n                    <li class=\"stuffs color\">Seringue Hypodermique</li>\n                    <li class=\"objects color\">Shoggy Gelé</li>\n                    <li class=\"stuffs color\">T-Shirt ~~de~~ en Cultiste</li>\n                    <li class=\"stuffs color\">Taille-Haie</li>\n                    <li class=\"bonuses color\">Tête Gluante</li>\n                    <li class=\"bonuses color\">Trop Coool !</li>\n                    <li class=\"bonuses color\">Venu d'une Autre Dimension</li>\n                    <template v-for=\"(item, index) in munchkinC3.treasuresList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinC3.version) !== -1) && ((munchkinC3.levels && item.class.indexOf('levels') !== -1) || (munchkinC3.bonuses && item.class.indexOf('bonuses') !== -1) || (munchkinC3.objects && item.class.indexOf('objects') !== -1) || (munchkinC3.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC3.version) !== -1) && all.munchkinC3TreasuresEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinC3TreasuresEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n    <div class=\"munchkin-c-4 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinC4 }\">\n        <img class=\"demo\" src=\"media/images/upload/ubicm04.png\" alt=\"Munchkin Cthulhu 4\">\n        <h2 id=\"munchkin-c-4\">Munchkin Cthulhu 4 : Oh my grottes !</h2>\n        <div class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinC4.filters }\">\n            <h3 id=\"munchkin-c-4-filtres\">Filtres</h3>\n            <p><button v-on:click=\"munchkinC4ToggleFilters\"><ins>Afficher</ins><del>Masquer</del></button></p>\n            <div class=\"filters\">\n                **Types de carte**\n                <p>\n                    <label class=\"fields\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC4.fields\"> Donjons (<span v-text=\"munchkinC4DonjonsNumber\">20</span>)\n                    </label><br>\n                    <label class=\"warps\">\n                        <input type=\"checkbox\" value=\"on\" v-model=\"munchkinC4.warps\"> Portails  (<span v-text=\"munchkinC4WarpsNumber\">16</span>)\n                    </label>\n                </p>\n            </div>\n        </div>\n        <div class=\"card-number\">\n            <h3 id=\"munchkin-c-4-details\">Détails</h3>\n            <p><img src=\"media/images/upload/mc4.gif\" alt=\"Munchkin Cthulhu 4\"> Cette icone en bas à droite d'une carte marque l'appartenance à cette extension.</p>\n            <p>**Nombre total de cartes : <span v-text=\"munchkinC4CardsNumber\">36</span>**</p>\n        </div>\n        <div class=\"card-list\">\n            <div class=\"doors\">\n                <h3 id=\"munchkin-c-4-portes\">Portes</h3>\n                <p>Nombre total de portes : <span v-text=\"munchkinC4DoorsNumber\">16</span></p>\n                <ol>\n                    <li class=\"warps color\">Condamnés à Répéter les Erreurs du Passé</li>\n                    <li class=\"warps color\">Condamnés à Répéter les Erreurs du Passé</li>\n                    <li class=\"warps color\">Dimension Parallèle</li>\n                    <li class=\"warps color\">Dimension Parallèle</li>\n                    <li class=\"warps color\">Enseigne Clignotante Géante des Anciens</li>\n                    <li class=\"warps color\">Enseigne Clignotante Géante des Anciens</li>\n                    <li class=\"warps color\">Fosse et Usage de Fosse !</li>\n                    <li class=\"warps color\">Fosse et Usage de Fosse !</li>\n                    <li class=\"warps color\">Immenses Glyphes Immondes Sculptés sur les Murs</li>\n                    <li class=\"warps color\">Immenses Glyphes Immondes Sculptés sur les Murs</li>\n                    <li class=\"warps color\">Passe Devant et Suis-moi</li>\n                    <li class=\"warps color\">Passe Devant et Suis-moi</li>\n                    <li class=\"warps color\">Par ici, Bande d'Abrutis !</li>\n                    <li class=\"warps color\">Par ici, Bande d'Abrutis !</li>\n                    <li class=\"warps color\">Porte des Grands Anciens</li>\n                    <li class=\"warps color\">Porte des Grands Anciens</li>\n                    <template v-for=\"(item, index) in munchkinC4.doorsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinC4.version) !== -1) && (munchkinC4.warps && item.class.indexOf('warps') !== -1) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC4.version) !== -1) && all.munchkinC4DoorsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinC4DoorsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n            <div class=\"donjons\">\n                <h3 id=\"munchkin-c-4-donjons\">Donjons</h3>\n                <p>Nombre total de donjons : <span v-text=\"munchkinC4DonjonsNumber\">20</span></p>\n                <ol>\n                    <li class=\"fields color\">Antre des Dholes</li>\n                    <li class=\"fields color\">Antre Souterrain de Byatis</li>\n                    <li class=\"fields color\">Arène d'Azathoth</li>\n                    <li class=\"fields color\">Boutique de Chaussures Souterraine de Shub-Niggurath</li>\n                    <li class=\"fields color\">Caverne des Archétypes</li>\n                    <li class=\"fields color\">Cloaque des Mi-Go</li>\n                    <li class=\"fields color\">Crevasse des Chthoniens</li>\n                    <li class=\"fields color\">Cryptes d'Innsmouth</li>\n                    <li class=\"fields color\">Égout des Shoggoths</li>\n                    <li class=\"fields color\">Gouffre de Cthulhu</li>\n                    <li class=\"fields color\">Grotte de Glaaki</li>\n                    <li class=\"fields color\">K'n-Yan</li>\n                    <li class=\"fields color\">Le Fossé de Dunwich</li>\n                    <li class=\"fields color\">Les Contrées du Rêve</li>\n                    <li class=\"fields color\">Les Montagnes Hallucinées</li>\n                    <li class=\"fields color\">Monde Souterrain d'Ubbo-Sathla</li>\n                    <li class=\"fields color\">Sous-sol de la Bibliothèque de l'Université Miskatonic</li>\n                    <li class=\"fields color\">Station de Métro d'Arkham</li>\n                    <li class=\"fields color\">Ténébreuse Tanière des Lloigor</li>\n                    <li class=\"fields color\">Tunnel de Tsathoggua</li>\n                    <template v-for=\"(item, index) in munchkinC4.donjonsList\">\n                        <li v-bind:class=\"(item.class.indexOf(munchkinC4.version) !== -1) && (munchkinC4.fields && item.class.indexOf('fields') !== -1) ? item.class : ''\">\n                            <span class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC4.version) !== -1) && all.munchkinC4DonjonsEach[index] }\">\n                                <input type=\"checkbox\" v-model=\"all.munchkinC4DonjonsEach[index]\">\n                                <span class=\"item-title\">{{ item.name }}</span>\n                            </span>\n                        </li>\n                    </template>\n                </ol>\n            </div>\n        </div>\n    </div>\n</div>", "dates" : { "published" : { "$date" : 1467445440000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "var script = document.createElement(\"script\");\nscript.type = \"text/javascript\";\nscript.src = \"https://unpkg.com/vue/dist/vue.min.js\";\n\nArray.prototype.shuffle = function (n) {\n    function randomInt(mini, maxi) {\n        var nb = mini + (maxi + 1 - mini) * Math.random();\n        return Math.floor(nb);\n    }\n\n    if (!n) {\n        n = this.length;\n    }\n\n    if (n > 1) {\n        var i = randomInt(0, n - 1),\n            tmp = this[i];\n\n        this[i] = this[n - 1];\n        this[n - 1] = tmp;\n        this.shuffle(n - 1);\n    }\n};\n\nfunction munchkinList(selector) {\n    var doors = document.querySelectorAll(selector + \" .doors li\"),\n        treasures = document.querySelectorAll(selector + \" .treasures li\"),\n        donjons = document.querySelectorAll(selector + \" .donjons li\"),\n        spells = document.querySelectorAll(selector + \" .books li\"),\n        doorsList = [],\n        treasuresList = [],\n        donjonsList = [],\n        spellsList = [];\n\n    [].forEach.call(doors, function(item) {\n        doorsList.push({\n            name: item.textContent,\n            class: item.getAttribute(\"class\")\n        });\n        item.parentNode.removeChild(item);\n    });\n\n    [].forEach.call(treasures, function(item) {\n        treasuresList.push({\n            name: item.textContent,\n            class: item.getAttribute(\"class\")\n        });\n        item.parentNode.removeChild(item);\n    });\n\n    [].forEach.call(donjons, function(item) {\n        donjonsList.push({\n            name: item.textContent,\n            class: item.getAttribute(\"class\")\n        });\n        item.parentNode.removeChild(item);\n    });\n\n    [].forEach.call(spells, function(item) {\n        spellsList.push({\n            name: item.textContent,\n            class: item.getAttribute(\"class\")\n        });\n        item.parentNode.removeChild(item);\n    });\n\n    return {\n        doorsList: doorsList,\n        treasuresList: treasuresList,\n        donjonsList: donjonsList,\n        spellsList: spellsList\n    };\n}\n\nfunction doorsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n                ((self.classes && item.class.indexOf('classes') !== -1) ||\n                (self.races && item.class.indexOf('races') !== -1) ||\n                (self.powers && item.class.indexOf('powers') !== -1) ||\n                (self.origins && item.class.indexOf('origins') !== -1) ||\n                (self.acolytes && item.class.indexOf('acolytes') !== -1) ||\n                (self.mojos && item.class.indexOf('mojos') !== -1) ||\n                (self.monsters && item.class.indexOf('monsters') !== -1) ||\n                (self.monsters && item.class.indexOf('rooms') !== -1) ||\n                (self.curses && item.class.indexOf('curses') !== -1) ||\n                (self.madnesses && item.class.indexOf('madnesses') !== -1) ||\n                (self.mounts && item.class.indexOf('mounts') !== -1) ||\n                (self.warps && item.class.indexOf('warps') !== -1) ||\n                (self.actions && item.class.indexOf('actions') !== -1)) ? item.class : '';\n    }).length;\n}\n\nfunction actionsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.actions && item.class.indexOf('actions') !== -1) ? item.class : '';\n    }).length;\n}\nfunction cursesCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.curses && item.class.indexOf('curses') !== -1) ? item.class : '';\n    }).length;\n}\nfunction madnessesCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.madnesses && item.class.indexOf('madnesses') !== -1) ? item.class : '';\n    }).length;\n}\nfunction mojosCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.mojos && item.class.indexOf('mojos') !== -1) ? item.class : '';\n    }).length;\n}\nfunction roomsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.rooms && item.class.indexOf('rooms') !== -1) ? item.class : '';\n    }).length;\n}\nfunction classesCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.classes && item.class.indexOf('classes') !== -1) ? item.class : '';\n    }).length;\n}\nfunction racesCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.races && item.class.indexOf('races') !== -1) ? item.class : '';\n    }).length;\n}\nfunction acolytesCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.acolytes && item.class.indexOf('acolytes') !== -1) ? item.class : '';\n    }).length;\n}\nfunction originsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.origins && item.class.indexOf('origins') !== -1) ? item.class : '';\n    }).length;\n}\nfunction powersCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.powers && item.class.indexOf('powers') !== -1) ? item.class : '';\n    }).length;\n}\nfunction mountsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.mounts && item.class.indexOf('mounts') !== -1) ? item.class : '';\n    }).length;\n}\nfunction warpsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.warps && item.class.indexOf('warps') !== -1) ? item.class : '';\n    }).length;\n}\nfunction monstersCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.monsters && item.class.indexOf('monsters') !== -1) ? item.class : '';\n    }).length;\n}\nfunction treasuresCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n                ((self.munchkinomicon && item.class.indexOf('munchkinomicon') !== -1) ||\n                (self.objects && item.class.indexOf('objects') !== -1) ||\n                (self.bonuses && item.class.indexOf('bonuses') !== -1) ||\n                (self.slaves && item.class.indexOf('slaves') !== -1) ||\n                (self.levels && item.class.indexOf('levels') !== -1) ||\n                (self.stuffs && item.class.indexOf('stuffs') !== -1)) ? item.class : '';\n    }).length;\n}\nfunction stuffsCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) &&\n        (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.stuffs && item.class.indexOf('stuffs') !== -1) ? item.class : '';\n    }).length;\n}\nfunction objectsCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.objects && item.class.indexOf('objects') !== -1) ? item.class : '';\n    }).length;\n}\nfunction bonusesCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.bonuses && item.class.indexOf('bonuses') !== -1) ? item.class : '';\n    }).length;\n}\nfunction slavesCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.slaves && item.class.indexOf('slaves') !== -1) ? item.class : '';\n    }).length;\n}\nfunction levelsCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.levels && item.class.indexOf('levels') !== -1) ? item.class : '';\n    }).length;\n}\nfunction munchkinomiconCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.munchkinomicon && item.class.indexOf('munchkinomicon') !== -1) ? item.class : '';\n    }).length;\n}\nfunction donjonsCardNumber(self, active, each) {\n    return self.donjonsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.fields && item.class.indexOf('fields') !== -1) ? item.class : '';\n    }).length;\n}\nfunction spellsCardNumber(self, active, each) {\n    return self.spellsList.filter(function(item, i) {\n        return (each[i]) &&\n          (active) &&\n            (item.class.indexOf(self.version) !== -1) &&\n            (self.spells && item.class.indexOf('spells') !== -1) ? item.class : '';\n    }).length;\n}\n\nscript.addEventListener(\"load\", function() {\n    var munchkin = munchkinList(\".munchkin\"),\n        munchkin2 = munchkinList(\".munchkin-2\"),\n        munchkin3 = munchkinList(\".munchkin-3\"),\n        munchkin4 = munchkinList(\".munchkin-4\"),\n        munchkin5 = munchkinList(\".munchkin-5\"),\n        munchkin6 = munchkinList(\".munchkin-6\"),\n        munchkin7o = munchkinList(\".munchkin-7-o\"),\n        munchkin7 = munchkinList(\".munchkin-7\"),\n        munchkin8 = munchkinList(\".munchkin-8\"),\n        munchkinN = munchkinList(\".munchkin-n\"),\n        munchkinM = munchkinList(\".munchkin-m\"),\n        munchkinSt = munchkinList(\".munchkin-st\"),\n        munchkinSt2 = munchkinList(\".munchkin-st-2\"),\n        munchkinSu = munchkinList(\".munchkin-su\"),\n        munchkinZ = munchkinList(\".munchkin-z\"),\n        munchkinZ2 = munchkinList(\".munchkin-z-2\"),\n        munchkinC = munchkinList(\".munchkin-c\"),\n        munchkinC2 = munchkinList(\".munchkin-c-2\"),\n        munchkinC3 = munchkinList(\".munchkin-c-3\"),\n        munchkinC4 = munchkinList(\".munchkin-c-4\"),\n        doorsStackNext = [],\n        doorsStackDiscard = [],\n        donjonsStackNext = [],\n        donjonsStackDiscard = [],\n        booksStackNext = [],\n        booksStackDiscard = [],\n        treasuresStackNext = [],\n        treasuresStackDiscard = [];\n\n    new Vue({\n        el: \".all-cards\",\n        data: {\n            \"all\": {\n                \"filters\": false,\n                \"munchkin\": true,\n                \"munchkinDoorsEach\": new Array(munchkin.doorsList.length).fill(true),\n                \"munchkinTreasuresEach\": new Array(munchkin.treasuresList.length).fill(true),\n                \"munchkin2\": true,\n                \"munchkin2DoorsEach\": new Array(munchkin2.doorsList.length).fill(true),\n                \"munchkin2TreasuresEach\": new Array(munchkin2.treasuresList.length).fill(true),\n                \"munchkin3\": true,\n                \"munchkin3DoorsEach\": new Array(munchkin3.doorsList.length).fill(true),\n                \"munchkin3TreasuresEach\": new Array(munchkin3.treasuresList.length).fill(true),\n                \"munchkin4\": true,\n                \"munchkin4DoorsEach\": new Array(munchkin4.doorsList.length).fill(true),\n                \"munchkin4TreasuresEach\": new Array(munchkin4.treasuresList.length).fill(true),\n                \"munchkin5\": true,\n                \"munchkin5DoorsEach\": new Array(munchkin5.doorsList.length).fill(true),\n                \"munchkin5TreasuresEach\": new Array(munchkin5.treasuresList.length).fill(true),\n                \"munchkin6\": true,\n                \"munchkin6DoorsEach\": new Array(munchkin6.doorsList.length).fill(true),\n                \"munchkin6DonjonsEach\": new Array(munchkin6.donjonsList.length).fill(true),\n                \"munchkin7o\": false,\n                \"munchkin7oDoorsEach\": new Array(munchkin7o.doorsList.length).fill(true),\n                \"munchkin7oTreasuresEach\": new Array(munchkin7o.treasuresList.length).fill(true),\n                \"munchkin7\": true,\n                \"munchkin7DoorsEach\": new Array(munchkin7.doorsList.length).fill(true),\n                \"munchkin7TreasuresEach\": new Array(munchkin7.treasuresList.length).fill(true),\n                \"munchkin8\": true,\n                \"munchkin8DoorsEach\": new Array(munchkin8.doorsList.length).fill(true),\n                \"munchkin8TreasuresEach\": new Array(munchkin8.treasuresList.length).fill(true),\n                \"munchkinN\": true,\n                \"munchkinNDoorsEach\": new Array(munchkinN.doorsList.length).fill(true),\n                \"munchkinNTreasuresEach\": new Array(munchkinN.treasuresList.length).fill(true),\n                \"munchkinM\": true,\n                \"munchkinMDoorsEach\": new Array(munchkinM.doorsList.length).fill(true),\n                \"munchkinMTreasuresEach\": new Array(munchkinM.treasuresList.length).fill(true),\n                \"munchkinMSpellsEach\": new Array(munchkinM.spellsList.length).fill(true),\n                \"munchkinSu\": false,\n                \"munchkinSuDoorsEach\": new Array(munchkinSu.doorsList.length).fill(true),\n                \"munchkinSuTreasuresEach\": new Array(munchkinSu.treasuresList.length).fill(true),\n                \"munchkinSt\": false,\n                \"munchkinStDoorsEach\": new Array(munchkinSt.doorsList.length).fill(true),\n                \"munchkinStTreasuresEach\": new Array(munchkinSt.treasuresList.length).fill(true),\n                \"munchkinSt2\": false,\n                \"munchkinSt2DoorsEach\": new Array(munchkinSt2.doorsList.length).fill(true),\n                \"munchkinSt2TreasuresEach\": new Array(munchkinSt2.treasuresList.length).fill(true),\n                \"munchkinZ\": false,\n                \"munchkinZDoorsEach\": new Array(munchkinZ.doorsList.length).fill(true),\n                \"munchkinZTreasuresEach\": new Array(munchkinZ.treasuresList.length).fill(true),\n                \"munchkinZ2\": false,\n                \"munchkinZ2DoorsEach\": new Array(munchkinZ2.doorsList.length).fill(true),\n                \"munchkinZ2TreasuresEach\": new Array(munchkinZ2.treasuresList.length).fill(true),\n                \"munchkinC\": false,\n                \"munchkinCDoorsEach\": new Array(munchkinC.doorsList.length).fill(true),\n                \"munchkinCTreasuresEach\": new Array(munchkinC.treasuresList.length).fill(true),\n                \"munchkinC2\": false,\n                \"munchkinC2DoorsEach\": new Array(munchkinC2.doorsList.length).fill(true),\n                \"munchkinC2TreasuresEach\": new Array(munchkinC2.treasuresList.length).fill(true),\n                \"munchkinC3\": false,\n                \"munchkinC3DoorsEach\": new Array(munchkinC3.doorsList.length).fill(true),\n                \"munchkinC3TreasuresEach\": new Array(munchkinC3.treasuresList.length).fill(true),\n                \"munchkinC4\": false,\n                \"munchkinC4DoorsEach\": new Array(munchkinC4.doorsList.length).fill(true),\n                \"munchkinC4DonjonsEach\": new Array(munchkinC4.donjonsList.length).fill(true)\n            },\n            \"munchkin\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin.doorsList,\n              \"treasuresList\": munchkin.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"munchkinomicon\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"stuffs\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin2\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin2.doorsList,\n              \"treasuresList\": munchkin2.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin3\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin3.doorsList,\n              \"treasuresList\": munchkin3.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"stuffs\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin4\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin4.doorsList,\n              \"treasuresList\": munchkin4.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin5\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin5.doorsList,\n              \"treasuresList\": munchkin5.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin6\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin6.doorsList,\n              \"donjonsList\": munchkin6.donjonsList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"fields\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin7o\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin7o.doorsList,\n              \"treasuresList\": munchkin7o.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin7\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin7.doorsList,\n              \"treasuresList\": munchkin7.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin8\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin8.doorsList,\n              \"treasuresList\": munchkin8.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinN\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinN.doorsList,\n              \"treasuresList\": munchkinN.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinM\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinM.doorsList,\n              \"treasuresList\": munchkinM.treasuresList,\n              \"spellsList\": munchkinM.spellsList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinSu\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinSu.doorsList,\n              \"treasuresList\": munchkinSu.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinSt\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinSt.doorsList,\n              \"treasuresList\": munchkinSt.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinSt2\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinSt2.doorsList,\n              \"treasuresList\": munchkinSt2.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinZ\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinZ.doorsList,\n              \"treasuresList\": munchkinZ.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinZ2\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinZ2.doorsList,\n              \"treasuresList\": munchkinZ2.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinC\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinC.doorsList,\n              \"treasuresList\": munchkinC.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinC2\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinC2.doorsList,\n              \"treasuresList\": munchkinC2.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinC3\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinC3.doorsList,\n              \"treasuresList\": munchkinC3.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinC4\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinC4.doorsList,\n              \"donjonsList\": munchkinC4.donjonsList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"fields\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            }\n        },\n        computed: {\n            munchkinDoorsNumber: function () {\n                return doorsCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinActionsNumber: function () {\n                return actionsCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinClassesNumber: function () {\n                return classesCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinRacesNumber: function () {\n                return racesCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinMonstersNumber: function () {\n                return monstersCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinCursesNumber: function () {\n                return cursesCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinSlavesNumber: function () {\n                return slavesCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinLevelsNumber: function () {\n                return levelsCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinCardsNumber: function() {\n                return this.munchkinDoorsNumber + this.munchkinTreasuresNumber;\n            },\n            munchkin2DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2ClassesNumber: function () {\n                return classesCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2RacesNumber: function () {\n                return racesCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2CursesNumber: function () {\n                return cursesCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2TreasuresEach);\n            },\n            munchkin2StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2TreasuresEach);\n            },\n            munchkin2ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2TreasuresEach);\n            },\n            munchkin2BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2TreasuresEach);\n            },\n            munchkin2LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2TreasuresEach);\n            },\n            munchkin2CardsNumber: function() {\n                return this.munchkin2DoorsNumber + this.munchkin2TreasuresNumber;\n            },\n            munchkin3DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3ClassesNumber: function () {\n                return classesCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3RacesNumber: function () {\n                return racesCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3CursesNumber: function () {\n                return cursesCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3SlavesNumber: function () {\n                return slavesCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3CardsNumber: function() {\n                return this.munchkin3DoorsNumber + this.munchkin3TreasuresNumber;\n            },\n            munchkin4DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4ClassesNumber: function () {\n                return classesCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4RacesNumber: function () {\n                return racesCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4MountsNumber: function () {\n                return mountsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4AcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4CursesNumber: function () {\n                return cursesCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4TreasuresEach);\n            },\n            munchkin4StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4TreasuresEach);\n            },\n            munchkin4ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4TreasuresEach);\n            },\n            munchkin4BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4TreasuresEach);\n            },\n            munchkin4LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4TreasuresEach);\n            },\n            munchkin4CardsNumber: function() {\n                return this.munchkin4DoorsNumber + this.munchkin4TreasuresNumber;\n            },\n            munchkin5DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5ClassesNumber: function () {\n                return classesCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5RacesNumber: function () {\n                return racesCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5MountsNumber: function () {\n                return mountsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5AcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5CursesNumber: function () {\n                return cursesCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5TreasuresEach);\n            },\n            munchkin5StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5TreasuresEach);\n            },\n            munchkin5ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5TreasuresEach);\n            },\n            munchkin5BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5TreasuresEach);\n            },\n            munchkin5LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5TreasuresEach);\n            },\n            munchkin5CardsNumber: function() {\n                return this.munchkin5DoorsNumber + this.munchkin5TreasuresNumber;\n            },\n            munchkin6DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin6, this.all.munchkin6, this.all.munchkin6DoorsEach);\n            },\n            munchkin6WarpsNumber: function () {\n                return warpsCardNumber(this.munchkin6, this.all.munchkin6, this.all.munchkin6DoorsEach);\n            },\n            munchkin6DonjonsNumber: function () {\n                return donjonsCardNumber(this.munchkin6, this.all.munchkin6, this.all.munchkin6DonjonsEach);\n            },\n            munchkin6CardsNumber: function() {\n                return this.munchkin6DoorsNumber + this.munchkin6DonjonsNumber;\n            },\n            munchkin7oDoorsNumber: function () {\n                return doorsCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oDoorsEach);\n            },\n            munchkin7oActionsNumber: function () {\n                return actionsCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oDoorsEach);\n            },\n            munchkin7oRacesNumber: function () {\n                return racesCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oDoorsEach);\n            },\n            munchkin7oCursesNumber: function () {\n                return cursesCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oDoorsEach);\n            },\n            munchkin7oTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oTreasuresEach);\n            },\n            munchkin7oStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oTreasuresEach);\n            },\n            munchkin7oObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oTreasuresEach);\n            },\n            munchkin7oBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oTreasuresEach);\n            },\n            munchkin7oCardsNumber: function() {\n                return this.munchkin7oDoorsNumber + this.munchkin7oTreasuresNumber;\n            },\n            munchkin7DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7DoorsEach);\n            },\n            munchkin7ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7DoorsEach);\n            },\n            munchkin7RacesNumber: function () {\n                return racesCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7DoorsEach);\n            },\n            munchkin7CursesNumber: function () {\n                return cursesCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7DoorsEach);\n            },\n            munchkin7MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7DoorsEach);\n            },\n            munchkin7TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7TreasuresEach);\n            },\n            munchkin7StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7TreasuresEach);\n            },\n            munchkin7ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7TreasuresEach);\n            },\n            munchkin7BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7TreasuresEach);\n            },\n            munchkin7LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7TreasuresEach);\n            },\n            munchkin7CardsNumber: function() {\n                return this.munchkin7DoorsNumber + this.munchkin7TreasuresNumber;\n            },\n            munchkin8DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8RacesNumber: function () {\n                return racesCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8MountsNumber: function () {\n                return mountsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8AcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8CursesNumber: function () {\n                return cursesCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8TreasuresEach);\n            },\n            munchkin8StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8TreasuresEach);\n            },\n            munchkin8ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8TreasuresEach);\n            },\n            munchkin8BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8TreasuresEach);\n            },\n            munchkin8LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8TreasuresEach);\n            },\n            munchkin8CardsNumber: function() {\n                return this.munchkin8DoorsNumber + this.munchkin8TreasuresNumber;\n            },\n            munchkinNDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNDoorsEach);\n            },\n            munchkinNActionsNumber: function () {\n                return actionsCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNDoorsEach);\n            },\n            munchkinNCursesNumber: function () {\n                return cursesCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNDoorsEach);\n            },\n            munchkinNMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNDoorsEach);\n            },\n            munchkinNTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNTreasuresEach);\n            },\n            munchkinNStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNTreasuresEach);\n            },\n            munchkinNObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNTreasuresEach);\n            },\n            munchkinNLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNTreasuresEach);\n            },\n            munchkinNCardsNumber: function() {\n                return this.munchkinNDoorsNumber + this.munchkinNTreasuresNumber;\n            },\n            munchkinMDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMActionsNumber: function () {\n                return actionsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMClassesNumber: function () {\n                return classesCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMRacesNumber: function () {\n                return racesCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMCursesNumber: function () {\n                return cursesCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMMunchkinomiconNumber: function () {\n                return munchkinomiconCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMSpellsNumber: function () {\n                return spellsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMSpellsEach);\n            },\n            munchkinMCardsNumber: function() {\n                return this.munchkinMDoorsNumber + this.munchkinMTreasuresNumber + this.munchkinMSpellsNumber;\n            },\n            munchkinSuDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuActionsNumber: function () {\n                return actionsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuClassesNumber: function () {\n                return classesCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuPowersNumber: function () {\n                return powersCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuOriginsNumber: function () {\n                return originsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuCursesNumber: function () {\n                return cursesCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuAcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuSlavesNumber: function () {\n                return slavesCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuCardsNumber: function() {\n                return this.munchkinSuDoorsNumber + this.munchkinSuTreasuresNumber;\n            },\n            munchkinStDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStActionsNumber: function () {\n                return actionsCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStClassesNumber: function () {\n                return classesCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStRacesNumber: function () {\n                return racesCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStCursesNumber: function () {\n                return cursesCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStAcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStTreasuresEach);\n            },\n            munchkinStStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStTreasuresEach);\n            },\n            munchkinStObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStTreasuresEach);\n            },\n            munchkinStBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStTreasuresEach);\n            },\n            munchkinStLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStTreasuresEach);\n            },\n            munchkinStCardsNumber: function() {\n                return this.munchkinStDoorsNumber + this.munchkinStTreasuresNumber;\n            },\n            munchkinSt2DoorsNumber: function () {\n                return doorsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2RoomsNumber: function () {\n                return roomsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2ActionsNumber: function () {\n                return actionsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2ClassesNumber: function () {\n                return classesCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2RacesNumber: function () {\n                return racesCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2CursesNumber: function () {\n                return cursesCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2MonstersNumber: function () {\n                return monstersCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2AcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2TreasuresEach);\n            },\n            munchkinSt2StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2TreasuresEach);\n            },\n            munchkinSt2ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2TreasuresEach);\n            },\n            munchkinSt2BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2TreasuresEach);\n            },\n            munchkinSt2LevelsNumber: function () {\n                return levelsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2TreasuresEach);\n            },\n            munchkinSt2CardsNumber: function() {\n                return this.munchkinSt2DoorsNumber + this.munchkinSt2TreasuresNumber;\n            },\n            munchkinZDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZActionsNumber: function () {\n                return actionsCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZMojosNumber: function () {\n                return mojosCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZPowersNumber: function () {\n                return powersCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZCursesNumber: function () {\n                return cursesCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZTreasuresEach);\n            },\n            munchkinZStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZTreasuresEach);\n            },\n            munchkinZObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZTreasuresEach);\n            },\n            munchkinZBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZTreasuresEach);\n            },\n            munchkinZLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZTreasuresEach);\n            },\n            munchkinZCardsNumber: function() {\n                return this.munchkinZDoorsNumber + this.munchkinZTreasuresNumber;\n            },\n            munchkinZ2DoorsNumber: function () {\n                return doorsCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2ActionsNumber: function () {\n                return actionsCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2MojosNumber: function () {\n                return mojosCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2PowersNumber: function () {\n                return powersCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2CursesNumber: function () {\n                return cursesCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2MonstersNumber: function () {\n                return monstersCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2TreasuresEach);\n            },\n            munchkinZ2StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2TreasuresEach);\n            },\n            munchkinZ2ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2TreasuresEach);\n            },\n            munchkinZ2BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2TreasuresEach);\n            },\n            munchkinZ2LevelsNumber: function () {\n                return levelsCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2TreasuresEach);\n            },\n            munchkinZ2CardsNumber: function() {\n                return this.munchkinZ2DoorsNumber + this.munchkinZ2TreasuresNumber;\n            },\n            munchkinCDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCDoorsEach);\n            },\n            munchkinCActionsNumber: function () {\n                return actionsCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCDoorsEach);\n            },\n            munchkinCClassesNumber: function () {\n                return classesCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCDoorsEach);\n            },\n            munchkinCCursesNumber: function () {\n                return cursesCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCDoorsEach);\n            },\n            munchkinCMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCDoorsEach);\n            },\n            munchkinCTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCTreasuresEach);\n            },\n            munchkinCStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCTreasuresEach);\n            },\n            munchkinCObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCTreasuresEach);\n            },\n            munchkinCBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCTreasuresEach);\n            },\n            munchkinCLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCTreasuresEach);\n            },\n            munchkinCCardsNumber: function() {\n                return this.munchkinCDoorsNumber + this.munchkinCTreasuresNumber;\n            },\n            munchkinC2DoorsNumber: function () {\n                return doorsCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2DoorsEach);\n            },\n            munchkinC2ActionsNumber: function () {\n                return actionsCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2DoorsEach);\n            },\n            munchkinC2ClassesNumber: function () {\n                return classesCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2DoorsEach);\n            },\n            munchkinC2MadnessesNumber: function () {\n                return madnessesCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2DoorsEach);\n            },\n            munchkinC2MonstersNumber: function () {\n                return monstersCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2DoorsEach);\n            },\n            munchkinC2TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2TreasuresEach);\n            },\n            munchkinC2StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2TreasuresEach);\n            },\n            munchkinC2ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2TreasuresEach);\n            },\n            munchkinC2BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2TreasuresEach);\n            },\n            munchkinC2LevelsNumber: function () {\n                return levelsCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2TreasuresEach);\n            },\n            munchkinC2CardsNumber: function() {\n                return this.munchkinC2DoorsNumber + this.munchkinC2TreasuresNumber;\n            },\n            munchkinC3DoorsNumber: function () {\n                return doorsCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3DoorsEach);\n            },\n            munchkinC3ActionsNumber: function () {\n                return actionsCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3DoorsEach);\n            },\n            munchkinC3ClassesNumber: function () {\n                return classesCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3DoorsEach);\n            },\n            munchkinC3MadnessesNumber: function () {\n                return madnessesCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3DoorsEach);\n            },\n            munchkinC3MonstersNumber: function () {\n                return monstersCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3DoorsEach);\n            },\n            munchkinC3TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3TreasuresEach);\n            },\n            munchkinC3StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3TreasuresEach);\n            },\n            munchkinC3ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3TreasuresEach);\n            },\n            munchkinC3BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3TreasuresEach);\n            },\n            munchkinC3LevelsNumber: function () {\n                return levelsCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3TreasuresEach);\n            },\n            munchkinC3CardsNumber: function() {\n                return this.munchkinC3DoorsNumber + this.munchkinC3TreasuresNumber;\n            },\n            munchkinC4DoorsNumber: function () {\n                return doorsCardNumber(this.munchkinC4, this.all.munchkinC4, this.all.munchkinC4DoorsEach);\n            },\n            munchkinC4WarpsNumber: function () {\n                return warpsCardNumber(this.munchkinC4, this.all.munchkinC4, this.all.munchkinC4DoorsEach);\n            },\n            munchkinC4DonjonsNumber: function () {\n                return donjonsCardNumber(this.munchkinC4, this.all.munchkinC4, this.all.munchkinC4DonjonsEach);\n            },\n            munchkinC4CardsNumber: function() {\n                return this.munchkinC4DoorsNumber + this.munchkinC4DonjonsNumber;\n            },\n            allDoorsNumber: function() {\n                return this.munchkinDoorsNumber\n                    + this.munchkin2DoorsNumber\n                    + this.munchkin3DoorsNumber\n                    + this.munchkin4DoorsNumber\n                    + this.munchkin5DoorsNumber\n                    + this.munchkin6DoorsNumber\n                    + this.munchkin7oDoorsNumber\n                    + this.munchkin7DoorsNumber\n                    + this.munchkin8DoorsNumber\n                    + this.munchkinNDoorsNumber\n                    + this.munchkinMDoorsNumber\n                    + this.munchkinSuDoorsNumber\n                    + this.munchkinStDoorsNumber\n                    + this.munchkinSt2DoorsNumber\n                    + this.munchkinZDoorsNumber\n                    + this.munchkinZ2DoorsNumber\n                    + this.munchkinCDoorsNumber\n                    + this.munchkinC2DoorsNumber\n                    + this.munchkinC3DoorsNumber\n                    + this.munchkinC4DoorsNumber;\n            },\n            allActionsNumber: function () {\n                return this.munchkinActionsNumber\n                    + this.munchkin2ActionsNumber\n                    + this.munchkin3ActionsNumber\n                    + this.munchkin4ActionsNumber\n                    + this.munchkin5ActionsNumber\n                    + this.munchkin7oActionsNumber\n                    + this.munchkin7ActionsNumber\n                    + this.munchkin8ActionsNumber\n                    + this.munchkinNActionsNumber\n                    + this.munchkinMActionsNumber\n                    + this.munchkinSuActionsNumber\n                    + this.munchkinStActionsNumber\n                    + this.munchkinSt2ActionsNumber\n                    + this.munchkinZ2ActionsNumber\n                    + this.munchkinZActionsNumber\n                    + this.munchkinCActionsNumber\n                    + this.munchkinC2ActionsNumber\n                    + this.munchkinC3ActionsNumber;\n            },\n            allActionsPercent: function () {\n                return Math.round((this.allActionsNumber / this.allDoorsNumber) * 100);\n            },\n            allAcolytesNumber: function () {\n                return this.munchkin4AcolytesNumber\n                   + this.munchkin5AcolytesNumber\n                   + this.munchkin8AcolytesNumber\n                   + this.munchkinSuAcolytesNumber\n                   + this.munchkinStAcolytesNumber\n                   + this.munchkinSt2AcolytesNumber;\n            },\n            allAcolytesPercent: function () {\n                return Math.round((this.allAcolytesNumber / this.allDoorsNumber) * 100);\n            },\n            allClassesNumber: function () {\n                return this.munchkinClassesNumber\n                    + this.munchkin2ClassesNumber\n                    + this.munchkin3ClassesNumber\n                    + this.munchkin4ClassesNumber\n                    + this.munchkin5ClassesNumber\n                    + this.munchkinMClassesNumber\n                    + this.munchkinSuClassesNumber\n                    + this.munchkinStClassesNumber\n                    + this.munchkinSt2ClassesNumber\n                    + this.munchkinCClassesNumber\n                    + this.munchkinC2ClassesNumber\n                    + this.munchkinC3ClassesNumber;\n            },\n            allClassesPercent: function () {\n                return Math.round((this.allClassesNumber / this.allDoorsNumber) * 100);\n            },\n            allRacesNumber: function () {\n                return this.munchkinRacesNumber\n                    + this.munchkin2RacesNumber\n                    + this.munchkin3RacesNumber\n                    + this.munchkin4RacesNumber\n                    + this.munchkin5RacesNumber\n                    + this.munchkin7oRacesNumber\n                    + this.munchkin7RacesNumber\n                    + this.munchkin8RacesNumber\n                    + this.munchkinMRacesNumber\n                    + this.munchkinStRacesNumber\n                    + this.munchkinSt2RacesNumber;\n            },\n            allRacesPercent: function () {\n                return Math.round((this.allRacesNumber / this.allDoorsNumber) * 100);\n            },\n            allPowersNumber: function () {\n                return this.munchkinSuPowersNumber\n                  + this.munchkinZPowersNumber\n                  + this.munchkinZ2PowersNumber;\n            },\n            allPowersPercent: function () {\n                return Math.round((this.allPowersNumber / this.allDoorsNumber) * 100);\n            },\n            allRoomsNumber: function () {\n                return this.munchkinSt2RoomsNumber;\n            },\n            allRoomsPercent: function () {\n                return Math.round((this.allRoomsNumber / this.allDoorsNumber) * 100);\n            },\n            allMojosNumber: function () {\n                return this.munchkinZMojosNumber\n                     + this.munchkinZ2MojosNumber;\n            },\n            allMojosPercent: function () {\n                return Math.round((this.allMojosNumber / this.allDoorsNumber) * 100);\n            },\n            allOriginsNumber: function () {\n                return this.munchkinSuOriginsNumber;\n            },\n            allOriginsPercent: function () {\n                return Math.round((this.allOriginsNumber / this.allDoorsNumber) * 100);\n            },\n            allMountsNumber: function () {\n                return this.munchkin4MountsNumber\n                    + this.munchkin5MountsNumber\n                    + this.munchkin8MountsNumber;\n            },\n            allMountsPercent: function () {\n                return Math.round((this.allMountsNumber / this.allDoorsNumber) * 100);\n            },\n            allMonstersNumber: function () {\n                return this.munchkinMonstersNumber\n                    + this.munchkin2MonstersNumber\n                    + this.munchkin3MonstersNumber\n                    + this.munchkin4MonstersNumber\n                    + this.munchkin5MonstersNumber\n                    + this.munchkin7MonstersNumber\n                    + this.munchkin8MonstersNumber\n                    + this.munchkinNMonstersNumber\n                    + this.munchkinMMonstersNumber\n                    + this.munchkinSuMonstersNumber\n                    + this.munchkinStMonstersNumber\n                    + this.munchkinSt2MonstersNumber\n                    + this.munchkinZMonstersNumber\n                    + this.munchkinZ2MonstersNumber\n                    + this.munchkinCMonstersNumber\n                    + this.munchkinC2MonstersNumber\n                    + this.munchkinC3MonstersNumber;\n            },\n            allMonstersPercent: function () {\n                return Math.round((this.allMonstersNumber / this.allDoorsNumber) * 100);\n            },\n            allCursesNumber: function () {\n                return this.munchkinCursesNumber\n                    + this.munchkin2CursesNumber\n                    + this.munchkin3CursesNumber\n                    + this.munchkin4CursesNumber\n                    + this.munchkin5CursesNumber\n                    + this.munchkin7oCursesNumber\n                    + this.munchkin7CursesNumber\n                    + this.munchkin8CursesNumber\n                    + this.munchkinMCursesNumber\n                    + this.munchkinNCursesNumber\n                    + this.munchkinSuCursesNumber\n                    + this.munchkinStCursesNumber\n                    + this.munchkinSt2CursesNumber\n                    + this.munchkinZCursesNumber\n                    + this.munchkinZ2CursesNumber\n                    + this.munchkinCCursesNumber;\n            },\n            allCursesPercent: function () {\n                return Math.round((this.allCursesNumber / this.allDoorsNumber) * 100);\n            },\n            allMadnessesNumber: function () {\n                return this.munchkinC2MadnessesNumber\n                    + this.munchkinC3MadnessesNumber;\n            },\n            allMadnessesPercent: function () {\n                return Math.round((this.allMadnessesNumber / this.allDoorsNumber) * 100);\n            },\n            allWarpsNumber: function () {\n                return this.munchkin6WarpsNumber\n                    + this.munchkinC4WarpsNumber;\n            },\n            allWarpsPercent: function () {\n                return Math.round((this.allWarpsNumber / this.allDoorsNumber) * 100);\n            },\n            allTreasuresNumber: function() {\n                return this.munchkinTreasuresNumber\n                    + this.munchkin2TreasuresNumber\n                    + this.munchkin3TreasuresNumber\n                    + this.munchkin4TreasuresNumber\n                    + this.munchkin5TreasuresNumber\n                    + this.munchkin7oTreasuresNumber\n                    + this.munchkin7TreasuresNumber\n                    + this.munchkin8TreasuresNumber\n                    + this.munchkinNTreasuresNumber\n                    + this.munchkinMTreasuresNumber\n                    + this.munchkinSuTreasuresNumber\n                    + this.munchkinStTreasuresNumber\n                    + this.munchkinSt2TreasuresNumber\n                    + this.munchkinZTreasuresNumber\n                    + this.munchkinZ2TreasuresNumber\n                    + this.munchkinCTreasuresNumber\n                    + this.munchkinC2TreasuresNumber\n                    + this.munchkinC3TreasuresNumber;\n            },\n            allStuffsNumber: function () {\n                return this.munchkinStuffsNumber\n                    + this.munchkin2StuffsNumber\n                    + this.munchkin3StuffsNumber\n                    + this.munchkin4StuffsNumber\n                    + this.munchkin5StuffsNumber\n                    + this.munchkin7oStuffsNumber\n                    + this.munchkin7StuffsNumber\n                    + this.munchkin8StuffsNumber\n                    + this.munchkinNStuffsNumber\n                    + this.munchkinMStuffsNumber\n                    + this.munchkinSuStuffsNumber\n                    + this.munchkinStStuffsNumber\n                    + this.munchkinSt2StuffsNumber\n                    + this.munchkinZStuffsNumber\n                    + this.munchkinZ2StuffsNumber\n                    + this.munchkinCStuffsNumber\n                    + this.munchkinC2StuffsNumber\n                    + this.munchkinC3StuffsNumber;\n            },\n            allStuffsPercent: function () {\n                return Math.round((this.allStuffsNumber / this.allTreasuresNumber) * 100);\n            },\n            allObjectsNumber: function () {\n                return this.munchkinObjectsNumber\n                    + this.munchkin2ObjectsNumber\n                    + this.munchkin3ObjectsNumber\n                    + this.munchkin4ObjectsNumber\n                    + this.munchkin5ObjectsNumber\n                    + this.munchkin7oObjectsNumber\n                    + this.munchkin7ObjectsNumber\n                    + this.munchkin8ObjectsNumber\n                    + this.munchkinNObjectsNumber\n                    + this.munchkinMObjectsNumber\n                    + this.munchkinSuObjectsNumber\n                    + this.munchkinStObjectsNumber\n                    + this.munchkinSt2ObjectsNumber\n                    + this.munchkinZObjectsNumber\n                    + this.munchkinZ2ObjectsNumber\n                    + this.munchkinCObjectsNumber\n                    + this.munchkinC2ObjectsNumber\n                    + this.munchkinC3ObjectsNumber;\n            },\n            allObjectsPercent: function () {\n                return Math.round((this.allObjectsNumber / this.allTreasuresNumber) * 100);\n            },\n            allBonusesNumber: function () {\n                return this.munchkinBonusesNumber\n                    + this.munchkin2BonusesNumber\n                    + this.munchkin3BonusesNumber\n                    + this.munchkin4BonusesNumber\n                    + this.munchkin5BonusesNumber\n                    + this.munchkin7oBonusesNumber\n                    + this.munchkin7BonusesNumber\n                    + this.munchkin8BonusesNumber\n                    + this.munchkinMBonusesNumber\n                    + this.munchkinSuBonusesNumber\n                    + this.munchkinStBonusesNumber\n                    + this.munchkinSt2BonusesNumber\n                    + this.munchkinZBonusesNumber\n                    + this.munchkinZ2BonusesNumber\n                    + this.munchkinCBonusesNumber\n                    + this.munchkinC2BonusesNumber\n                    + this.munchkinC3BonusesNumber;\n            },\n            allBonusesPercent: function () {\n                return Math.round((this.allBonusesNumber / this.allTreasuresNumber) * 100);\n            },\n            allSlavesNumber: function () {\n                return this.munchkinSlavesNumber\n                    + this.munchkin3SlavesNumber\n                    + this.munchkinSuSlavesNumber;\n            },\n            allSlavesPercent: function () {\n                return Math.round((this.allSlavesNumber / this.allTreasuresNumber) * 100);\n            },\n            allLevelsNumber: function () {\n                return this.munchkinLevelsNumber\n                  + this.munchkin2LevelsNumber\n                  + this.munchkin3LevelsNumber\n                  + this.munchkin4LevelsNumber\n                  + this.munchkin5LevelsNumber\n                  + this.munchkin7LevelsNumber\n                  + this.munchkin8LevelsNumber\n                  + this.munchkinNLevelsNumber\n                  + this.munchkinMLevelsNumber\n                  + this.munchkinSuLevelsNumber\n                  + this.munchkinStLevelsNumber\n                  + this.munchkinSt2LevelsNumber\n                  + this.munchkinZLevelsNumber\n                  + this.munchkinZ2LevelsNumber\n                  + this.munchkinCLevelsNumber\n                  + this.munchkinC2LevelsNumber\n                  + this.munchkinC3LevelsNumber;\n            },\n            allLevelsPercent: function () {\n                return Math.round((this.allLevelsNumber / this.allTreasuresNumber) * 100);\n            },\n            allMunchkinomiconPercent: function () {\n                return Math.round((this.munchkinMMunchkinomiconNumber / this.allTreasuresNumber) * 100);\n            },\n            allDonjonsNumber: function() {\n                return this.munchkin6DonjonsNumber\n                    + this.munchkinC4DonjonsNumber;\n            },\n            allSpellsNumber: function() {\n                return this.munchkinMSpellsNumber;\n            },\n            allCardsNumber: function() {\n                return this.allDoorsNumber +\n                    this.allTreasuresNumber +\n                    this.allDonjonsNumber +\n                    this.allSpellsNumber;\n            }\n        },\n        methods: {\n            allToggleFilters: function() {\n                this.all.filters = !this.all.filters;\n            },\n            munchkinToggleFilters: function() {\n                this.munchkin.filters = !this.munchkin.filters;\n            },\n            munchkin2ToggleFilters: function() {\n                this.munchkin2.filters = !this.munchkin2.filters;\n            },\n            munchkin3ToggleFilters: function() {\n                this.munchkin3.filters = !this.munchkin3.filters;\n            },\n            munchkin4ToggleFilters: function() {\n                this.munchkin4.filters = !this.munchkin4.filters;\n            },\n            munchkin5ToggleFilters: function() {\n                this.munchkin5.filters = !this.munchkin5.filters;\n            },\n            munchkin6ToggleFilters: function() {\n                this.munchkin6.filters = !this.munchkin6.filters;\n            },\n            munchkin7oToggleFilters: function() {\n                this.munchkin7o.filters = !this.munchkin7o.filters;\n            },\n            munchkin7ToggleFilters: function() {\n                this.munchkin7.filters = !this.munchkin7.filters;\n            },\n            munchkin8ToggleFilters: function() {\n                this.munchkin8.filters = !this.munchkin8.filters;\n            },\n            munchkinNToggleFilters: function() {\n                this.munchkinN.filters = !this.munchkinN.filters;\n            },\n            munchkinMToggleFilters: function() {\n                this.munchkinM.filters = !this.munchkinM.filters;\n            },\n            munchkinSuToggleFilters: function() {\n                this.munchkinSu.filters = !this.munchkinSu.filters;\n            },\n            munchkinStToggleFilters: function() {\n                this.munchkinSt.filters = !this.munchkinSt.filters;\n            },\n            munchkinSt2ToggleFilters: function() {\n                this.munchkinSt2.filters = !this.munchkinSt2.filters;\n            },\n            munchkinZToggleFilters: function() {\n                this.munchkinZ.filters = !this.munchkinZ.filters;\n            },\n            munchkinZ2ToggleFilters: function() {\n                this.munchkinZ2.filters = !this.munchkinZ2.filters;\n            },\n            munchkinCToggleFilters: function() {\n                this.munchkinC.filters = !this.munchkinC.filters;\n            },\n            munchkinC2ToggleFilters: function() {\n                this.munchkinC2.filters = !this.munchkinC2.filters;\n            },\n            munchkinC3ToggleFilters: function() {\n                this.munchkinC3.filters = !this.munchkinC3.filters;\n            },\n            munchkinC4ToggleFilters: function() {\n                this.munchkinC4.filters = !this.munchkinC4.filters;\n            },\n            munchkinSuAcolytesGroup: function () {\n              if (this.munchkinSu.slaves) {\n                this.munchkinSu.acolytes = false;\n                this.munchkinSu.slaves = false;\n              } else {\n                this.munchkinSu.acolytes = true;\n                this.munchkinSu.slaves = true;\n              }\n            }\n        }\n    });\n\n    new Vue({\n        el: \".shuffle\",\n        data: {\n            \"doorsLastDiscard\": false,\n            \"donjonsLastDiscard\": false,\n            \"treasuresLastDiscard\": false,\n            \"booksLastDiscard\": false,\n            \"munchkinomicon\": false\n        },\n        methods: {\n            initShuffle: function () {\n                var temp,\n                    self = this,\n                    shuffle = self.$el;\n\n                shuffle.classList.add(\"running\");\n\n                console.log(\"Donjons\");\n                donjonsStackNext = [];\n                donjonsStackDiscard = [];\n                Array.prototype.forEach.call(document.querySelectorAll(\".is-visible .donjons .color .active .item-title\"), function (card) {\n                    donjonsStackNext.push({\n                        title: card.innerHTML,\n                        extension: \"munchkin-6\",\n                        stack: \"donjons\",\n                        type: \"fields\"\n                    });\n                });\n                donjonsStackNext.shuffle();\n                console.log(donjonsStackNext);\n\n\n                console.log(\"Books\");\n                booksStackNext = [];\n                booksStackDiscard = [];\n                Array.prototype.forEach.call(document.querySelectorAll(\".is-visible .books .color .active .item-title\"), function (card) {\n                    booksStackNext.push({\n                        title: card.innerHTML,\n                        extension: \"munchkin-m\",\n                        stack: \"books\",\n                        type: \"spells\"\n                    });\n                });\n                booksStackNext.shuffle();\n                console.log(booksStackNext);\n\n\n                console.log(\"Treasures\");\n                treasuresStackNext = [];\n                treasuresStackDiscard = [];\n                Array.prototype.forEach.call(document.querySelectorAll(\".is-visible .treasures .color .active .item-title\"), function (card) {\n                    var type = card.parentNode.parentNode.classList.value.split(' ')[0];\n                    if (type === \"munchkinomicon\") {\n                        self.munchkinomicon = true;\n                        treasuresStackNext.unshift({\n                          title: card.innerHTML,\n                          extension: card.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.classList.value.split(' ')[0],\n                          stack: \"treasures\",\n                      type: type\n                        });\n                    } else {\n                        treasuresStackNext.push({\n                        title: card.innerHTML,\n                          extension: card.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.classList.value.split(' ')[0],\n                          stack: \"treasures\",\n                          type: type\n                        });\n                    }\n                });\n                if (this.munchkinomicon) { temp = treasuresStackNext.shift(); }\n                treasuresStackNext.shuffle();\n                if (this.munchkinomicon) { treasuresStackNext.unshift(temp); }\n                console.log(treasuresStackNext);\n\n\n                console.log(\"Doors\");\n                doorsStackNext = [];\n                doorsStackDiscard = [];\n                Array.prototype.forEach.call(document.querySelectorAll(\".is-visible .doors .color .active .item-title\"), function (card) {\n                  doorsStackNext.push({\n                      title: card.innerHTML,\n                    extension: card.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.classList.value.split(' ')[0],\n                    stack: \"doors\",\n                    type: card.parentNode.parentNode.classList.value.split(' ')[0]\n                  });\n                });\n                doorsStackNext.shuffle();\n                console.log(doorsStackNext);\n            },\n            openDoors: function () {\n                console.log(\"Open Doors\");\n                var first = doorsStackNext.shift(),\n                    card = document.querySelector(\".stack-doors .discard\"),\n                    title = card.getElementsByClassName(\"title\")[0],\n                    extension = card.getElementsByClassName(\"extension\")[0],\n                    type = card.getElementsByClassName(\"type\")[0],\n                    progress = card.getElementsByClassName(\"progress\")[0];\n\n                if (!first) {\n                    doorsStackNext = doorsStackDiscard;\n                    doorsStackDiscard = [];\n                    doorsStackNext.shuffle();\n                    this.doorsLastDiscard = false;\n                    return false;\n                }\n\n                doorsStackDiscard.unshift(first);\n                this.doorsLastDiscard = true;\n\n                title.innerHTML = first.title;\n                title.setAttribute(\"class\", \"title \" + first.type);\n                extension.innerHTML = first.extension.replace(\"munchkin-\", \"\").replace(\"munchkin\", \"1\").toUpperCase().replace(\"7-O\", \"7o\").replace(\"SU\", \"Su\");\n                progress.innerHTML = doorsStackDiscard.length + \"/\" + parseInt(doorsStackDiscard.length + doorsStackNext.length);\n                type.innerHTML = first.type\n                    .replace(\"monsters\", \"Monstre\")\n                    .replace(\"mounts\", \"Monture\")\n                    .replace(\"rooms\", \"Pièce\")\n                    .replace(\"origins\", \"Origine\")\n                    .replace(\"powers\", \"Pouvoir\")\n                    .replace(\"mojos\", \"Mojos\")\n                    .replace(\"races\", \"Race\")\n                    .replace(\"acolytes\", \"Serviteur\")\n                    .replace(\"curses\", \"Malédiction\")\n                    .replace(\"madnesses\", \"Démence\")\n                    .replace(\"classes\", \"Classe\")\n                    .replace(\"actions\", \"Amélioration\")\n                    .replace(\"warps\", \"Portail\");\n\n                console.log(doorsStackNext);\n                console.log(doorsStackDiscard);\n            },\n            openTreasures: function () {\n                console.log(\"Open Treasures\");\n                var temp,\n                    first = treasuresStackNext.shift(),\n                    card = document.querySelector(\".stack-treasures .discard\"),\n                    title = card.getElementsByClassName(\"title\")[0],\n                    extension = card.getElementsByClassName(\"extension\")[0],\n                    type = card.getElementsByClassName(\"type\")[0],\n                    progress = card.getElementsByClassName(\"progress\")[0];\n\n                if (!first) {\n                    treasuresStackNext = treasuresStackDiscard;\n                    treasuresStackDiscard = [];\n                    if (this.munchkinomicon) { temp = treasuresStackNext.pop(); }\n                    treasuresStackNext.shuffle();\n                    if (this.munchkinomicon) { treasuresStackNext.unshift(temp); }\n                    this.treasuresLastDiscard = false;\n                    return false;\n                }\n\n                if (type === \"munchkinomicon\") {\n                    treasuresStackDiscard.push(first);\n                } else {\n                    treasuresStackDiscard.unshift(first);\n                }\n                this.treasuresLastDiscard = true;\n\n                title.innerHTML = first.title;\n                title.setAttribute(\"class\", \"title \" + first.type);\n                extension.innerHTML = first.extension.replace(\"munchkin-\", \"\").replace(\"munchkin\", \"1\").toUpperCase().replace(\"7-O\", \"7o\");\n                progress.innerHTML = treasuresStackDiscard.length + \"/\" + parseInt(treasuresStackDiscard.length + treasuresStackNext.length);\n                type.innerHTML = first.type\n                    .replace(\"objects\", \"Objet\")\n                    .replace(\"bonuses\", \"Action\")\n                    .replace(\"levels\", \"Niveau\")\n                    .replace(\"slaves\", \"Serviteur\")\n                    .replace(\"munchkinomicon\", \"Munchkinomicon\")\n                    .replace(\"stuffs\", \"Équipement\");\n\n                console.log(treasuresStackNext);\n                console.log(treasuresStackDiscard);\n            },\n            openDonjons: function () {\n                console.log(\"Open Donjons\");\n                var first = donjonsStackNext.shift(),\n                    card = document.querySelector(\".stack-donjons .discard\"),\n                    title = card.getElementsByClassName(\"title\")[0],\n                    extension = card.getElementsByClassName(\"extension\")[0],\n                    type = card.getElementsByClassName(\"type\")[0],\n                    progress = card.getElementsByClassName(\"progress\")[0];\n\n                if (!first) {\n                    donjonsStackNext = donjonsStackDiscard;\n                    donjonsStackDiscard = [];\n                    donjonsStackNext.shuffle();\n                    this.donjonsLastDiscard = false;\n                    return false;\n                }\n\n                donjonsStackDiscard.unshift(first);\n                this.donjonsLastDiscard = true;\n\n                title.innerHTML = first.title;\n                title.setAttribute(\"class\", \"title \" + first.type);\n                extension.innerHTML = first.extension.replace(\"munchkin-\", \"\").replace(\"munchkin\", \"1\").toUpperCase().replace(\"7-O\", \"7o\");\n                progress.innerHTML = donjonsStackDiscard.length + \"/\" + parseInt(donjonsStackDiscard.length + donjonsStackNext.length);\n                type.innerHTML = first.type\n                    .replace(\"fields\", \"Donjon\");\n\n                console.log(donjonsStackNext);\n                console.log(donjonsStackDiscard);\n            },\n            openBooks: function () {\n                console.log(\"Open Books\");\n                var first = booksStackNext.shift(),\n                    card = document.querySelector(\".stack-books .discard\"),\n                    title = card.getElementsByClassName(\"title\")[0],\n                    extension = card.getElementsByClassName(\"extension\")[0],\n                    type = card.getElementsByClassName(\"type\")[0],\n                    progress = card.getElementsByClassName(\"progress\")[0];\n\n                if (!first) {\n                    booksStackNext = booksStackDiscard;\n                    booksStackDiscard = [];\n                    booksStackNext.shuffle();\n                    this.booksLastDiscard = false;\n                    return false;\n                }\n\n                booksStackDiscard.unshift(first);\n                this.booksLastDiscard = true;\n\n                title.innerHTML = first.title;\n                title.setAttribute(\"class\", \"title \" + first.type);\n                extension.innerHTML = first.extension.replace(\"munchkin-\", \"\").replace(\"munchkin\", \"1\").toUpperCase().replace(\"7-O\", \"7o\");\n                progress.innerHTML = booksStackDiscard.length + \"/\" + parseInt(booksStackDiscard.length + booksStackNext.length);\n                type.innerHTML = first.type\n                    .replace(\"spells\", \"Sorts\");\n\n                console.log(booksStackNext);\n                console.log(booksStackDiscard);\n            },\n            stopShuffle: function () {\n                var self = this,\n                    shuffle = self.$el;\n\n                this.doorsLastDiscard = false;\n                this.donjonsLastDiscard = false;\n                this.treasuresLastDiscard = false;\n                this.booksLastDiscard = false;\n                this.munchkinomicon = false;\n                doorsStackNext = [];\n                doorsStackDiscard = [];\n                donjonsStackNext = [];\n                donjonsStackDiscard = [];\n                booksStackNext = [];\n                booksStackDiscard = [];\n                treasuresStackNext = [];\n                treasuresStackDiscard = [];\n                shuffle.classList.remove(\"running\");\n            }\n        }\n    });\n});\n\ndocument.getElementsByTagName(\"body\")[0].appendChild(script);", "stylesheet" : "@font-face {\n  font-family: 'caslantr';\n  src: url('./media/fonts/caslantr.eot?#iefix') format('embedded-opentype'),\n  \t   url('./media/fonts/caslantr.woff') format('woff'),\n  \t   url('./media/fonts/caslantr.ttf')  format('truetype'),\n  \t   url('./media/fonts/caslantr.svg#cursive2') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n\nul ul {\nmargin-top: 0;\nmargin-bottom: 0;\n}\n\nul img { margin-top: 0; }\n\n.shuffle .shuffle-card {\n  display: none;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.8);\n  top: 0;\n  left: 0;\n  z-index: 6;\n}\n.shuffle .shuffle-card-inner {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow-y: scroll;\n}\n.shuffle.running .shuffle-card {\n  display: block;\n}\n\n.shuffle .stack-doors,\n.shuffle .stack-treasures,\n.shuffle .stack-donjons,\n.shuffle .stack-books {\n  position: relative;\n  padding: 10px;\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n\n.shuffle .discard,\n.shuffle .open {\n  background-color: #fff;\n  margin: 10px auto;\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  border: 1px solid #000;\n  max-width: 280px;\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n    -webkit-border-radius: 16px;\n            border-radius: 16px;\n    cursor: pointer;\n}\n\n@media (min-height: 730px) AND (min-width: 730px) {\n  .shuffle .stack-doors,\n  .shuffle .stack-treasures,\n  .shuffle .stack-donjons,\n  .shuffle .stack-books {\n    float: left;\n    width: 50%;\n    height: 50%;\n  }\n\n  .shuffle .shuffle-card-inner {\n    overflow-y: hidden;\n  }\n\n  .shuffle .discard,\n  .shuffle .open {\n    margin: 0;\n    position: absolute;\n    left: 50%;\n    top: 25%;\n    transform: translate(-50%, -50%);\n  }\n}\n\n.shuffle .discard {\n  display: none;\n  top: 75%;\n  cursor: default;\n}\n.shuffle .discard.is-visible {\n  display: block;\n}\n.shuffle .discard:before,\n.shuffle .open:before {\n  content: \"\";\n  display: block;\n  padding-top: 64.14%;\n}\n.shuffle .discard .title,\n.shuffle .open .title {\n  position: absolute;\n  font-size: 1.4em;\n  font-family: caslantr;\n  font-variant: small-caps;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  max-width: 100%;\n}\n\n.shuffle .discard .stack {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n}\n.shuffle .discard .extension {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n}\n.shuffle .discard .type {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n}\n.shuffle .discard .progress {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n}\n\n.shuffle .discard strong,\n.shuffle .open strong {\n  font-size: 2em;\n  display: block;\n  line-height: 1;\n}\n\n.shuffle .stop {\n  position: absolute;\n  right: 8px;\n  top: 8px;\n  z-index: 3;\n  cursor: pointer;\n}\n.shuffle .twelve {\n  position: absolute;\n  left: 8px;\n  top: 8px;\n  z-index: 3;\n  cursor: pointer;\n}\n.shuffle .init,\n.shuffle .stop {\n  color: blue;\n  cursor: pointer;\n}\n.shuffle .init:hover,\n.shuffle .stop:hover {\n  text-decoration: underline;\n}\n\n.details::after,\n.card-number::after,\n.card-list::after {\n  content: \"\";\n  clear: left;\n  display: block;\n}\n\n.details button del,\n.details button ins {\n  text-decoration: none;\n}\n\n.details .filters {\n    display: none;\n}\n\n.is-displayed .filters {\n    display: block;\n}\n\n.details button del {\n  display: none;\n}\n.is-displayed button ins {\n  display: none;\n}\n.is-displayed button del {\n  display: inline-block;\n}\n\n.munchkin-all {\n    display: none;\n}\n.munchkin-all.is-visible {\n    display: block;\n}\n\n.munchkin-all h2 {\n    margin-top: 0;\n}\n.munchkin-all h3 {\n    margin-top: 16px;\n}\n.books li,\n.donjons li,\n.doors li,\n.treasures li,\n.munchkin-all h2,\n.munchkin-all h3 {\n    font-family: caslantr;\n    font-variant: small-caps;\n}\n.munchkin-all {\n    margin-top: 16px;\n  padding: 24px;\n  background-color: #f6f1df;\n  background-image: \n    url(\"media/images/upload/cornerTR.jpg\"),\n    url(\"media/images/upload/cornerTL.jpg\"),\n    url(\"media/images/upload/cornerBR.jpg\"),\n    url(\"media/images/upload/cornerBL.jpg\"),\n    url(\"media/images/upload/sideRight.jpg\"),\n    url(\"media/images/upload/sideLeft.jpg\"),\n    url(\"media/images/upload/sideBottom.jpg\"),\n    url(\"media/images/upload/sideTop.jpg\");\n  background-position: top right, top left, bottom right, bottom left, center right, center left, bottom center, top center;\n  background-repeat: no-repeat, no-repeat, no-repeat, no-repeat, repeat-y, repeat-y, repeat-x, repeat-x;\n}\n\n.munchkin-all label {\n  white-space: nowrap;\n  margin-left: 1em;\n}\n\n.text-center {\n  text-align: center;\n}\n.munchkin-all ol {\n    padding-left: 10px;\n}\n.munchkin-all ol {counter-reset: number;}\n.munchkin-all ol li {\n    list-style-type: none;\n}\n.munchkin-all ol li .box.active {\n    counter-increment: number;\n}\n.munchkin-all ol li .box.active::before {\n    content: counter(number) \".\";\n    color: #000;\n    font-familly: Arial;\n    font-size: 0.8em;\n    margin-right: 6px;\n    width: 2em;\n    text-align: right;\n    display: inline-block;\n}\n.munchkin-all ol li .box::before {\n    content: \"\";\n    color: #000;\n    font-familly: Arial;\n    font-size: 0.8em;\n    margin-right: 6px;\n    width: 2em;\n    text-align: right;\n    display: inline-block;\n}\n\n.books,\n.donjons,\n.treasures,\n.doors {\n  box-sizing: border-box;\n  width: 50%;\n  float: left;\n}\n\n.card-list li {\n  display: none;\n}\n.card-list li .box {\n  opacity: 0.2;\n}\n.card-list li input {\n  display: none;\n}\n.card-list li:hover input {\n  display: inline-block;\n}\n.card-list li .box.active {\n  opacity: 1;\n}\n\n.card-number img {\n    float: left;\n    max-width: 30px;\n    margin-right: 10px;\n    margin-top: 0;\n}\n\n.card-list .levels,\n.card-list .madnesses,\n.card-list .curses,\n.card-list .slaves,\n.card-list .acolytes,\n.card-list .powers,\n.card-list .origins,\n.card-list .munchkinomicon,\n.card-list .spells,\n.card-list .rooms,\n.card-list .fields,\n.card-list .warps,\n.card-list .mounts,\n.card-list .mojos,\n.card-list .classes,\n.card-list .races,\n.card-list .monsters,\n.card-list .actions,\n.card-list .stuffs,\n.card-list .objects,\n.card-list .bonuses {\n  display: list-item;\n}\n\n.rooms,\n.fields {\n  color: indianred;\n}\n\n.mojos,\n.classes {\n  color: brown;\n}\n\n.powers,\n.origins {\n  color: deepskyblue;\n}\n\n.races {\n  color: grey;\n}\n\n.monsters {\n  color: orange;\n}\n\n.mounts,\n.stuffs {\n  color: purple;\n}\n\n.objects {\n  color: blue;\n}\n\n.warps {\n  color: goldenrod;\n}\n\n.munchkinomicon {\n    color: red;\n}\n\n.slaves,\n.levels,\n.madnesses,\n.curses,\n.acolytes,\n.spells,\n.actions,\n.bonuses {\n  color: green;\n}\n\n.demo {\n    float: right;\n    height: 150px;\n}\n\n.init {\n    text-align: center;\n    font-size: 1.5em;\n}", "title" : "Outil Munchkin : Listez, Mélangez, Classez, Triez et Créez vos Jeux !", "urn" : "liste-des-cartes-munchkin-editions-francaises" }
{ "__v" : 0, "_id" : { "$oid" : "577ca385d1b7fe136fc20061" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48ca" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48c3" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48bb" } ], "content" : "J'entends tous les jours qu'une « version mobile n'est pas une option », sous entendu que l'on souhaite créer une version de site pour mobile et une version de site pour desktop « en même temps » et derrière la même adresse. J'entends aussi qu'il serait bien de s'occuper d'une « version tablette » pendant qu'on n'y est !\n\nPour réaliser cela, quoi de mieux que l'utilisation du [Responsive Web Design]( https://blog.lesieur.name/les-concepts-autour-du-responsive-web-design/) !\n\nJusque là tout va bien me direz-vous ? **Pas du tout...**. Une « Version Desktop », c'est tactile ? Une « Version Mobile », ça a pas de bande passante ? Et bon sang, c'est quoi une « Version Tablette » ?\n\n<p><img style=\"max-width: 100%;\" src=\"media/images/upload/final.jpg\" alt=\"Stop version desktop et mobile !\"></p>\n\nMême si dans la théorie tout le monde croit se comprendre —avec des histoires de tailles—, je me sens contraint et forcer de faire du « Gloubi-boulga » quand j'utilise les spécifications ~~imposées~~ proposées par un Client ou pire parfois... par un Professionnel. Et cela au lieu de faire ce qu'on me demande en premier lieu, du [Responsive Web Design]( https://blog.lesieur.name/les-concepts-autour-du-responsive-web-design/).\n\nLa simple évocation de « Mobile VS Desktop » est une preuve flagrante de l'incompréhension total de la chose. De la même manière que certain pensant utiliser une méthode Agile s'y prennent en réalité à [La RACHE](http://www.la-rache.com/) ; il est intéressant de s'assurer ici qu'on ne confond pas tout.\n\n\n\n\n\n## Du Web adapté aux périphériques, c'est quoi ? ##\n\nIl serait temps d'arrêter de parler de « Version Mobile », « Version Desktop », « Version Réfrigérateur », etc... et s’intéresser aux périphériques :\n - avec Souris ou/**et** Gestion tactile,\n - à Bas débit ou/**et** Haut débit,\n - à affichage Portrait ou/**et** Paysage\n - à résolution Basse ou/**et** Haute.\n\nCar :\n- Non, une fenêtre de navigateur rétrécie sur le côté **N'est Pas** une « Version Mobile » à qui l'on doit interdire les interactions de la souris.\n- Non, un smartphone sur le réseau Wifi **N'est Pas** un périphérique à qui l'on doit interdire « l'auto-chargement » de vidéo.\n- Oui, **un PC tactile ou une tablette avec clavier** ça gère **la souris et le tactile**.\n- Oui, un **smartphone sur le réseau Wifi** a une **excellente connexion** alors qu'un **PC utilisant le partage de connexion** d'un smartphone sur un réseau Edge **n'en a pas**.\n- Oui, un appareil qui se tient dans la/les main(s) peut **être orienté** et afficher **la même page en largeur ou hauteur**.\n- Oui, un **zoom à 200%** sur PC c'est possible, et afficher **un site sans viewport spécifique sur smartphone**, ça l'est aussi.\n- ...\n\nC'est parti pour vous présenter la liste non-exhaustive d'implémentations qu'on ~~m'oblige à~~ **me demande de** faire et qui posent problème ainsi que des explications et exemples sur ce qu'il faut alors conseiller.\n\n\n\n\n\n## On ne fait pas... ##\n\n### **Une image pour la version Desktop et une image pour la version Mobile** ###\n\n![Non](media/images/upload/example-1.jpg)\n\n> *`NON et`* **Non**, il ne faut absolument pas que pour un contenu il existe plusieurs images avec des représentations différentes de celle-ci. En d'autres termes, il ne doit pas y avoir deux fichiers différents pour représenter la même photo ou une partie de la photo initiale.\n\n> **Pourquoi ?**\n> - Il n'est pas possible d'adresser toutes les résolutions d'écrans en faisant un switch « mobile / desktop » si votre image mobile n'est pas assez large, d'où l'inutilité même de cette image.\n> - Il y a deux requêtes et deux chargement d'image même si l'une des deux images n'est pas affichée car une balise `<img>` fait automatiquement une requête au réseau. Même en utilisant une image de Background, une fenêtre mise sur le côté qui passerait ensuite en plein écran chargerait une seconde image.\n> - Il y a plusieurs versions de la même image à gérer pour les pousseurs de contenus.\n\n![Oui](media/images/upload/example-2.jpg)\n\n> **`OUI et`** **Oui,** un même contenu peut posséder **autant de version** de lui-même dans des **résolutions différentes** avec un **ratio identique**.\n\n> C'est ensuite, avec des règles CSS que l'on affichera en fonction de la résolution les bonnes parties de l'image.\n\n> En ce qui concerne la résolution de l'image et son poids, on délivrera en fonction de la bande passante du réseau et de la résolution d'écran des versions de l'images de plus en plus lourde.\n\n#### Techniques ####\n\n- Conservation du Ratio (CSS) : http://codepen.io/Haeresis/pen/NAgQoE\n- Hauteur fixe (CSS) : http://codepen.io/Haeresis/pen/qNjZGR\n- Chargement progressif (JS) : http://codepen.io/Haeresis/pen/GqvKEw\n\n\n\n\n\n### **Un survole/clique souris en Desktop et un touché en Mobile** ###\n\n> *`NON et`* **Non**, il faut arrêter de penser que seul les mobiles sont tactiles ! Il existe bien des ordinateurs et grande tablette tactile ou des périphériques de basse résolution qui ne le sont pas.\n\n> Il faut également penser qu'on ne peut pas mettre une action importante au survol de la souris et une action importante au clique de la souris car elles se résumeront être la même action sur beaucoup d'appareil tactile.\n\n![Piège](media/images/upload/example-3.jpg)\n\n> **`OUI et`** **Oui,** on peut gérer la souris et le tactile pour tous les périphériques et de manière complémentaire quelque soit la résolution.\n\n> Si vous ne gérez pas vous-même les événements, vous pouvez associer \n> - un comportement au survole de la souris dont l'action n'est pas importante ou décorative (car il n'est pas sûr que l'appareil s'en préoccupe si l'action est effectuée avec le doigt) et\n> - un comportement au `click` / `tap` qui sera l'action réelle que vous souhaitez effectuer sur cet élément.\n\n> **Cependant, si vous gérez vous-même ces événements** à l'aide de `click`, `mouseenter`, `mouseout`, `touchstart`, `touchmove` et `touchend` il est possible d'associer un comportement au `click` / `tap` différent de celui du `hover` / `swap`. Dans ces cas là ce qu'il faut se rappeler c'est que :\n - Chrome : cumule la gestion souris en plus du tactile quand vous touché.\n - Firefox, Edge/IE, Safari : simulent un click au touché.\n - Android (Chrome), iOS (Safari) : gère le tactile au touché.\n\n> Il faut alors faire en sorte pour Chrome que la souris soit associée au clique, que le tactile soit associée *uniquement* au touché et laisser les autres gérer clique, simulation de clique au touché, ou touché réel. Vous n'aurez plus qu'à lancer les mêmes fonctions pour un `click` ou un `tap` et les mêmes fonctions pour un `hover` ou un `swap` afin de couvrir tous les browsers de la même manière.\n\n#### Techniques ####\n\n- Click, Tap, Hover et Swap Cross-Browser (JS) : http://codepen.io/Haeresis/pen/KrvpQd\n- Touch Event Détection avec Modernizr (JS) : http://codepen.io/Haeresis/pen/bZANNY\n\n\n\n\n### Un chargement automatique de fichier lourd ###\n\n![Non](media/images/upload/example-4.jpg)\n\n> *`NON et`* **Non**, vous ne devez pas pré-supposer de l'expérience utilisateur en vous basant uniquement sur la taille de l'écran, **il ne faut donc pas se baser sur la taille de l'écran pour** :\n\n> - Charger automatiquement un fichier lourds au chargement.\n> - Charger un fichier lourd au survole de la souris ou au swap du doigt.\n> - Charger un fichier lourd au défilement de la page.\n\nGarder à l'esprit qu'un rendu sur PC ou mobile sur une connexion nomade bas débit est lent, et qu'un rendu PC ou mobile sur un réseau wifi haut débit est rapide.\n\n![Oui](media/images/upload/example-5.jpg)\n\n> **`OUI et`** **Oui,** il faut prendre en compte le débit de l'utilisateur. Sans entrer dans des calculs savant, on peut assez facilement savoir si l'utilisateur charge à plus de 500Ko/s ou non. À partir de là, on prend la décision ou non de charger « automatiquement » les gros fichiers. En cas de réseau lent et si l'utilisateur le souhaite **avec une action de sa part**, il peut afficher/télécharger les fichiers lourds. Donc :\n\n> - Si la taille de l'écran et le débit le permettent, j'affiche les fichier gros et/ou prenant de la place automatiquement.\n> - Si la taille de l'écran le permet mais pas le débit, j'affiche les fichier gros et/ou prenant de la place après une action de l'utilisateur.\n- Si ni la taille de l'écran et ni le débit ne le permettent, j'ouvre une page pour télécharger le fichier ou l'afficher avec quelque chose de plus adapté après une action de l'utilisateur.\n\n#### Technique ####\n\n- Détection de Bande Passante (JS) : http://codepen.io/Haeresis/pen/ZOJGjL\n\n\n\n\n\n### **Du déblayage d'information sur Mobile, sous prétexte qu'il n'y a pas de place** ###\n\n> *`NON et`* **Non**, il ne faut pas retirer des parties de la page pour les écrans les plus petits sous prétexte qu'il n'y a pas de place ! Il ne faut pas non plus placer des « accordéons » à tous les coins de rue sous prétexte qu'il n'y a pas de place mais que l'on ne souhaite rien retirer.\n\n> N'ayez pas peur d'exploiter la page dans sa longueur car « scroller » avec le pouce ou la molette souris est un jeu d'enfant.\n\n![Doigt Facile](media/images/upload/example-6.jpg)\n\n> **`OUI et`** **Oui,** quoi qu'il arrive, laissez **tout ce qui est important accessible sur la page**, ne le caché pas pour garder une page complète qui tiens dans votre petit écran en mode portrait.\n\n> Il n'est pas grave de laisser l'utilisateur naviguer de haut en bas dans une longue page, surtout si vous laissez des ancres vers un menu. Multiplier les écrans à ouvrir à l'aide de clique sur des zones précises de l'écran est fatiguant sur des appareils qui demande parfois d'étirer le pouce là ou un simple balayage de haut en bas est naturel.\n\n> À l'inverse, passer son temps à attraper la barre de défilement pour descendre dans une page est gênant avec une souris. Si vous avez donc de la place sur votre écran, exploité donc cette fois les accordéons et autres sections entre « tab » qui sont facilement cliquable avec un mouvement simple du poignet : la souris est faites pour ça !\n\n#### Techniques ####\n- Gestion d'affichage Portrait/Paysage (CSS) : http://codepen.io/Haeresis/pen/meOGWz\n- Rem au lieu de Pixel (CSS) : http://codepen.io/Haeresis/pen/ZGyGWm\n- Contenu en dossier (CSS et JS) : http://codepen.io/Haeresis/pen/aORrxx\n- Disposition Responsive (CSS) : http://codepen.io/Haeresis/pen/bdXymY\n\n\n\n\n\n## Et vous ? ##\n\nSi vous aussi vous souhaitez partager vos techniques pour des sites pleinement [Responsive Web Design]( https://blog.lesieur.name/les-concepts-autour-du-responsive-web-design/), n'hésitez pas !", "dates" : { "published" : { "$date" : 1467973260000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : ".article img {\n max-width: 100%;\ndisplay: block;\nmargin: 8px auto;\nborder: 1px solid #000;\n}", "title" : "Version Mobile et Version Desktop : Ça n existe pas !", "urn" : "version-mobile-et-version-desktop-ca-n-existe-pas" }
{ "__v" : 0, "_id" : { "$oid" : "5819fd2a99480e4e24e3d0cd" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48c0" }, { "$oid" : "581cb31dbe08b018d7e9a3bf" }, { "$oid" : "5310456355dfd5f7698d48bb" } ], "content" : "Si vous découvrez le système de gestion de version Git et que vous l'utilisez seul, occasionnellement, etc. il existe peut être encore beaucoup de zone d'ombre dans son utilisation et dans la totalité des possibilités que le système offre.\n\nC'est également mon cas et tout le long de mon amélioration continue à l'utilisation de Git, je vais maintenir cet « aide-mémoire ». Il résumera le fonctionnement de Git au sein d'une branche dans un premier temps, et le fonctionnement de Git à travers diverses branches dans un second temps.\n\n> Si vous ne connaissez vraiment pas grand chose à GIT n'ésitez pas à lire : [Démarrage rapide de GIT](https://git-scm.com/book/fr/v2/D%C3%A9marrage-rapide-%C3%80-propos-de-la-gestion-de-version) et particulièrement :\n- [À propos de la gestion de version](https://git-scm.com/book/fr/v2/D%C3%A9marrage-rapide-%C3%80-propos-de-la-gestion-de-version) et\n- [Rudiments de Git](https://git-scm.com/book/fr/v2/D%C3%A9marrage-rapide-Rudiments-de-Git)\n\n\n\n\n\n## Projet Git au sein d'une branche ##\n\nAvant de commencer, il me semble important de se rappeler que Git copie l'intégralité d'un Repository (Dépôt) en local et que la majorité des actions effectués seront locals. Recherche, changement de version, changement de branche, tout sera très rapide !\n\nVoici un schéma interactif de toutes les interactions dans le système de gestion de version de Git, vous pourrez aisément constater les actions en local bien plus nombreuse que les autres. Cliquez sur un élément pour accéder à son descriptif ci-après.\n\n<div class=\"transport\">\n  <div class=\"commit-complete\" data-id=\"commit-a\">\n    <span>commit -a</span>\n  </div>\n  <div class=\"add\" data-id=\"add\">\n    <span>add</span>\n  </div>\n  <div class=\"commit\" data-id=\"commit\">\n    <span>commit</span>\n  </div>\n  <div class=\"push\" data-id=\"push\">\n    <span>push</span>\n  </div>\n  <div class=\"pull\" data-id=\"pull-r-\">\n    <span>pull [-r]</span>\n  </div>\n  <div class=\"fetch\" data-id=\"fetch\">\n    <span>fetch</span>\n  </div>\n  <div class=\"merge\" data-id=\"merge-ou-rebase\">\n    <span>merge <em>or</em> rebase</span>\n  </div>\n  <div class=\"checkout-head\" data-id=\"checkout\">\n    <span>checkout HEAD</span>\n  </div>\n  <div class=\"checkout\" data-id=\"checkout\">\n    <span>checkout</span>\n  </div>\n  <div class=\"reset\" data-id=\"reset\">\n    <span>reset</span>\n  </div>\n  <div class=\"reset-complete\" data-id=\"reset\">\n    <span>reset</span>\n  </div>\n  <div class=\"diff-head\" data-id=\"status-ou-diff\">\n    <span>diff HEAD</span>\n  </div>\n  <div class=\"diff\" data-id=\"status-ou-diff\">\n    <span>diff</span>\n  </div>\n  <div class=\"before-workspace\"></div>\n  <div class=\"workspace\">\n    <div class=\"local\">Local</div>\n    <div class=\"workspace-box\" data-id=\"workspace\">   \n      <span>Workspace</span>\n    </div>\n  </div>\n  <div class=\"index\">\n    <div class=\"index-box\" data-id=\"index\">   \n      <span>Index</span>\n    </div>\n  </div>\n  <div class=\"local-repository\">\n    <div class=\"internet\">Internet</div>\n    <div class=\"local-box\" data-id=\"local-repository\">   \n      <span>Local Repository</span>\n    </div>\n  </div>\n  <div class=\"remote-repository\">\n    <div class=\"remote-box\" data-id=\"remote-repository\">   \n      <span>Remote Repository</span>\n    </div>\n  </div>\n</div>\n\n### Workspace ###\n\nLe **Workspace** ou **Working Tree** ou **Working Directory** (**Espace de travail**) est une extraction unique d'une version du projet à partir de laquelle vous pouvez travailler. Ce dossier est stocké sur votre machine. Les fichiers ici sont soit identique au dernier instantané enregistré dans le Local Repository soit à l'état « Modifié ».\n\n### Index ###\n\nL'**Index** ou **Staging Area** correspond à la liste complète des fichiers présents physiquement dans votre Workspace qui on été déclarés comme faisant parti du prochain instantané que vous allez effectuer. Il est donc possible qu'un fichier présent dans le Workspace ne soit pas présent dans l'Index si vous ne l'avez pas ajouté. Les fichiers indexé sont dans un état « Indexé ».\n\n### Local Repository ###\n\nLe **Local Repository** (**Dépôt local**) est le dossier `.git` stocké dans votre Workspace, c'est une copie totale et sur votre machine du Remote Repository dans lequel vous aller stocker vos instantanés du projet. C'est un « clone » du Remote Repository et les fichiers ici sont dans un état « Validé ».\n\n### Remote Repository ###\n\nLe **Remote Repository** (**Dépôt distant**) est le dossier dans lequel est stocké le projet sur le serveur et faisant office de référant. Vous ne pouvez pas directement modifier ses fichiers. C'est la référence lorsque vous « cloné » un projet sur votre environnement.\n\n### add ###\n\nUtiliser `add` permet d'ajouter des fichiers présent dans votre Workspace à l'Index en prévisions d'une monté sur les Repository. Chaque fichier passe donc de l'état « Modifié » à « Indexé ».\n\n### reset ###\n\nUtiliser `reset` permet de retirer des fichiers de l'Index ou annulé un commit au Local Repository tout en conservant (ou non) les modifications faites. Pour annuler les modifications faites tout en laissant les Index et Local Repository en place il faut utilister `revert`.\n\n### commit ###\n\nUtiliser `commit` permet de déposer l'intégralité des fichiers de votre Index dans le Local Repository sous un nouveau instantané. Chaque fichier passe donc d' « Indexé » à « Validé ».\n\n### commit -a ###\n\nUtiliser `commit -a` pour ajouter automatiquement la totalité des nouveaux fichiers à l'Index puis les pousser dans le Local Repository.\n\n### push ###\n\nUtiliser `push` pour aligner l'intégralité des fichiers du Local Repository sur le Remote Repository.\n\n### fetch ###\n\nUtiliser `fetch` pour aligner l'intégralité des fichiers du Remote Repository avec votre Local Repository.\n\n### merge ou rebase ###\n\nUtiliser `merge` pour ré-aligner les modifications présentent entre vos instantanés de votre Local Repository avec ceux rapatrier du Remote Repository (pour plus d'information sur la différence entre `merge` et `rebase` [voir ici](http://labs.excilys.com/2012/02/28/preparez-vous-a-reecrire-lhistoire-avec-git-rebase/)).\n\n### pull [-r] ###\n\nUtiliser `pull` ré-aligne les modifications présentent entre le Remote Repository et votre Local Repository. En cas de conflit, l'action `fetch` aura été effectuée et vous devrez résoudre les conflits et utiliser `merge` vous même.\n\n### checkout ###\n\nUtiliser `checkout` permet d'aligner son Workspace avec un des instantané versionné du Local Repository (en déplaçant le `HEAD`) ou des fichiers de l'Index.\n\n### status ou diff ###\n\nUtiliser `status` ou `diff` permet de comparer vos fichiers du Workspace avec celle de l'Index ou du Local Repository. Vous pouvez ainsi voir ce qui a changé dans un comparateur de version.\n\n### stash ###\n\nUtiliser `stash` pour sauvegarder l'état de votre Workspace et votre Index afin de ne pas perdre votre travail lors d'un `checkout`, cela vous permet de ne pas `commit` un travail à moitié fini.\n\n> Pour en savoir plus, vous pouvez lire [Les Bases de GIT](https://git-scm.com/book/fr/v2/Les-bases-de-Git-D%C3%A9marrer-un-d%C3%A9p%C3%B4t-Git) et plus particulièrement :\n- [Enregistrer des modifications dans le dépôt](https://git-scm.com/book/fr/v2/Les-bases-de-Git-Enregistrer-des-modifications-dans-le-d%C3%A9p%C3%B4t) et\n- [Travailler avec des dépôts distants](https://git-scm.com/book/fr/v2/Les-bases-de-Git-Travailler-avec-des-d%C3%A9p%C3%B4ts-distants)\n\n## Projet Git sur plusieurs branches ##\n\nComme créer une branche ne revient qu'à créer des aiguillages de commit, cette opération est très rapide. Il ne faut donc pas hésiter à le faire ! Je vous propose ici une structure de travail avec plusieurs branches pour un projet afin de vous organiser en équipe.\n\nIl me semble que [la structure proposée par SmartGit](https://blogs.endjin.com/2015/01/using-smartgit-to-follow-the-gitflow-branching-and-workflow-model/) est pertinente aussi vais-je la décrire juste après ce schéma.\n\n![Model à plusieurs Branches](media/images/upload/GitFlowworkflow_thumb2.png)\n\nLe but d'une branche et sa position dans l'avancement du travail sur le projet depuis le développement jusqu'au livrable doit être indiqué dans son nom, c'est pourquoi nous utiliserons les noms suivants :\n\n- **release/{branch name}** – chaque livrable est associé à une branche correspondant à une version final de l'application.\n- **master** – une branche permanente comme référence correspondant à la version définitive des modifications entre chaque version de l'application. Elle correspond donc à chaque instant à la dernière version de l'application.\n- **develop** – une branche permanente contenant l'avancement de l'application dans son ensemble au file des versions, avec des branches de fonctionnalités créer à partir de cette version et reversé dedans.\n- **feature/{branch name}** – chaque fonctionnalité correspond au travail sur un sujet particulier (ex: un bugfix, une nouvelle fonctionnalité...).\n- **hotfix/{branch name}** – des branches pour s'occuper des fixes urgent à apporter qui seront prioritairement reversé dans le `master` puis reversé dans la `develop` en attendant de finir dans le prochain livrable.\n\n> Pour en savoir plus, vous pouvez lire [Les Branches avec GIT](https://git-scm.com/book/fr/v2/Les-branches-avec-Git-Les-branches-en-bref).\net plus particulièrement :\n- [Branches et fusions](https://git-scm.com/book/fr/v2/Les-branches-avec-Git-Branches-et-fusions%C2%A0%3A-les-bases) et\n- [Rebaser](https://git-scm.com/book/fr/v2/Les-branches-avec-Git-Rebaser-Rebasing)", "dates" : { "published" : { "$date" : 1478080200000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "var links = document.querySelectorAll(\".workspace-box, .index-box, .local-box, .remote-box, .add, .commit-complete, .commit, .push, .pull, .merge, .fetch, .checkout, .checkout-head, .diff, .diff-head, .reset, .reset-complete\");\n\n[].forEach.call(links, function (link) {\n  link.addEventListener(\"click\", function () {\n    location.href = \"./comprendre-et-utiliser-git-avec-vos-projets/#\" + link.getAttribute(\"data-id\");\n  });\n});", "stylesheet" : "body {\n  overflow-x: hidden;\n}\n.article img {\n  max-width: 100%;\n}\nspan {\n  text-shadow: -1px -1px 2px #fff, 1px 1px 2px #fff, -1px 1px 2px #fff, 1px -1px 2px #fff;\n}\n.transport {\n  position: relative;\n  width: 100%;\n  height: 600px;\n}\n.before-workspace,\n.workspace,\n.index,\n.local-repository,\n.remote-repository {\n  border-right: 4px solid #9b9b9b;\n  position: absolute;\n  top: 2%;\n  height: 96%;\n}\n.before-workspace,\n.remote-repository {\n  width: calc(5% - 4px);\n}\n.workspace,\n.index,\n.local-repository {\n  width: calc(30% - 4px);\n}\n.workspace::before,\n.index::before,\n.local-repository::before,\n.remote-repository::before {\n  content: \"\";\n  width: 100px;\n  height: 30px;\n  border-radius: 50% 50%;\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: calc(41% + 30px);\n}\n.workspace {\n  left: 5%;\n  border-right: 4px dashed #ccc;\n}\n.workspace::before {\n  background-color: #e6e6e6;\n  border: 2px solid #9b9b9b;\n}\n.index {\n  left: 35%;\n  top: 0;\n  height: 100%;\n}\n.index::before {\n  background-color: #91ffff;\n  border: 2px solid #9b9b9b;\n}\n.local-repository {\n  left: 65%;\n  background-color: #eee;\n}\n.local-repository::before {\n  background-color: #8ffab6;\n  border: 2px solid #9b9b9b;\n}\n.local,\n.internet {\n  text-align: center;\n  margin-top: 5px;\n  font-weight: bold;\n}\n.local {\n  position: absolute;\n  left: 100%;\n  transform: translateX(-50%);\n}\n.remote-repository {\n  left: 95%;\n  border-right: 0;\n}\n.remote-repository::before {\n  background-color: #fff7a1;\n  border: 2px solid #9b9b9b;\n}\n.workspace-box,\n.index-box,\n.local-box,\n.remote-box {\n  position: absolute;\n  height: 60px;\n  width: 100px;\n  top: 41%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n}\n.workspace-box:hover,\n.index-box:hover,\n.local-box:hover,\n.remote-box:hover {\n  box-shadow: 0 -3px 5px #555;\n  cursor: pointer;\n}\n.workspace-box:hover::before,\n.index-box:hover::before,\n.local-box:hover::before,\n.remote-box:hover::before {\n  box-shadow: 0 -2px 2px #999;\n}\n.workspace-box::before,\n.index-box::before,\n.local-box::before,\n.remote-box::before {\n  content: \"\";\n  width: 100%;\n  height: 30px;\n  border-radius: 50% 50%;\n  position: absolute;\n  transform: translate(-50%, -50%);\n}\n.workspace-box span,\n.index-box span,\n.local-box span,\n.remote-box span {\n  position: absolute;\n  top: calc(50% + 10px);\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.workspace-box {\n  background-color: #e6e6e6;\n  border: 2px solid #9b9b9b;\n  border-bottom: 0;\n}\n.workspace-box::before {\n  background-color: #e6e6e6;\n  border: 2px solid #9b9b9b;\n}\n.index-box {\n  background-color: #91ffff;\n  border: 2px solid #9b9b9b;\n  border-bottom: 0;\n}\n.index-box::before {\n  background-color: #91ffff;\n  border: 2px solid #9b9b9b;\n}\n.local-box {\n  background-color: #8ffab6;\n  border: 2px solid #9b9b9b;\n  border-bottom: 0;\n}\n.local-box::before {\n  background-color: #8ffab6;\n  border: 2px solid #9b9b9b;\n}\n.remote-box {\n  background-color: #fff7a1;\n  border: 2px solid #9b9b9b;\n  border-bottom: 0;\n}\n.remote-box::before {\n  background-color: #fff7a1;\n  border: 2px solid #9b9b9b;\n}\n.push,\n.add,\n.commit,\n.commit-complete {\n  border-top: 1px solid #9b9b9b;\n  border-bottom: 1px solid #9b9b9b;\n  z-index: 2;\n  height: 25px;\n  position: absolute;\n}\n.push:hover,\n.add:hover,\n.commit:hover,\n.commit-complete:hover {\n  box-shadow: -2px 0 5px #555;\n  cursor: pointer;\n}\n.push:hover::before,\n.add:hover::before,\n.commit:hover::before,\n.commit-complete:hover::before {\n  box-shadow: 2px -2px 2px #999;\n}\n.push::before,\n.add::before,\n.commit::before,\n.commit-complete::before {\n  content: \"\";\n  position: absolute;\n  border-top: 1px solid #9b9b9b;\n  border-right: 1px solid #9b9b9b;\n  width: 30px;\n  height: 30px;\n  transform: translateY(-50%) rotate(45deg);\n  top: 50%;\n  right: -10px;\n}\n.push span,\n.add span,\n.commit span,\n.commit-complete span {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.diff-branch,\n.diff-head,\n.diff {\n  border-top: 1px solid #9b9b9b;\n  border-bottom: 1px solid #9b9b9b;\n  z-index: 2;\n  height: 25px;\n  position: absolute;\n}\n.diff-branch:hover,\n.diff-head:hover,\n.diff:hover {\n  box-shadow: 2px 0 5px #555;\n  cursor: pointer;\n}\n.diff-branch:hover::before,\n.diff-head:hover::before,\n.diff:hover::before {\n  box-shadow: -2px 2px 2px #999;\n}\n.diff-branch span,\n.diff-head span,\n.diff span {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.reset-complete,\n.reset,\n.merge,\n.checkout-head,\n.checkout,\n.fetch,\n.pull {\n  border-top: 1px solid #9b9b9b;\n  border-bottom: 1px solid #9b9b9b;\n  z-index: 2;\n  height: 25px;\n  position: absolute;\n}\n.reset-complete:hover,\n.reset:hover,\n.merge:hover,\n.checkout-head:hover,\n.checkout:hover,\n.fetch:hover,\n.pull:hover {\n  box-shadow: 2px 0 5px #555;\n  cursor: pointer;\n}\n.reset-complete:hover::before,\n.reset:hover::before,\n.merge:hover::before,\n.checkout-head:hover::before,\n.checkout:hover::before,\n.fetch:hover::before,\n.pull:hover::before {\n  box-shadow: -2px 2px 2px #999;\n}\n.reset-complete::before,\n.reset::before,\n.merge::before,\n.checkout-head::before,\n.checkout::before,\n.fetch::before,\n.pull::before {\n  content: \"\";\n  position: absolute;\n  border-bottom: 1px solid #9b9b9b;\n  border-left: 1px solid #9b9b9b;\n  width: 30px;\n  height: 30px;\n  transform: translateY(-50%) rotate(45deg);\n  top: 50%;\n  left: -10px;\n}\n.reset-complete span,\n.reset span,\n.merge span,\n.checkout-head span,\n.checkout span,\n.fetch span,\n.pull span {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.commit-complete {\n  width: calc(60% - 14px);\n  top: 7%;\n  background-color: #8ffab6;\n  left: calc(5% - 2px);\n}\n.commit-complete::before {\n  background-color: #8ffab6;\n}\n.add {\n  width: calc(30% - 14px);\n  top: 21%;\n  background-color: #91ffff;\n  left: calc(5% - 2px);\n}\n.add::before {\n  background-color: #91ffff;\n}\n.commit {\n  width: calc(30% - 14px);\n  top: 24%;\n  background-color: #8ffab6;\n  left: calc(35% - 2px);\n}\n.commit::before {\n  background-color: #8ffab6;\n}\n.push {\n  width: calc(30% - 14px);\n  top: 16%;\n  background-color: #fff7a1;\n  left: calc(65% - 2px);\n}\n.push::before {\n  background-color: #fff7a1;\n}\n.pull {\n  width: calc(90% - 14px);\n  top: 60%;\n  background-color: #fff7a1;\n  left: calc(5% + 12px);\n}\n.pull::before {\n  background-color: #fff7a1;\n}\n.fetch {\n  width: calc(30% - 14px);\n  top: 52%;\n  background-color: #fff7a1;\n  left: calc(65% + 12px);\n}\n.fetch::before {\n  background-color: #fff7a1;\n}\n.merge {\n  width: calc(60% - 14px);\n  top: 52%;\n  background-color: #8ffab6;\n  left: calc(5% + 12px);\n}\n.merge::before {\n  background-color: #8ffab6;\n}\n.checkout-head {\n  width: calc(60% - 14px);\n  top: 76%;\n  background-color: #f68183;\n  left: calc(5% + 12px);\n}\n.checkout-head::before {\n  background-color: #f68183;\n}\n.reset {\n  width: calc(30% - 14px);\n  top: 27%;\n  background-color: #f68183;\n  left: calc(5% + 12px);\n}\n.reset::before {\n  background-color: #f68183;\n}\n.reset-complete {\n  width: calc(60% - 14px);\n  top: 13%;\n  background-color: #f68183;\n  left: calc(5% + 12px);\n}\n.reset-complete::before {\n  background-color: #f68183;\n}\n.checkout {\n  width: calc(30% - 14px);\n  top: 68%;\n  background-color: #f68183;\n  left: calc(5% + 12px);\n}\n.checkout::before {\n  background-color: #f68183;\n}\n.diff-head {\n  width: calc(60%);\n  top: 90%;\n  background-color: #ccc;\n  left: calc(5% - 2px);\n}\n.diff-head::before {\n  background-color: #ccc;\n}\n.diff {\n  width: calc(30%);\n  top: 83%;\n  background-color: #ccc;\n  left: calc(5% - 2px);\n}\n.diff::before {\n  background-color: #ccc;\n}\n", "title" : "Comprendre et utiliser Git avec vos projets", "urn" : "comprendre-et-utiliser-git-avec-vos-projets" }
{ "__v" : 0, "_id" : { "$oid" : "58218758e24e70605a985109" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "5810c54a889f9b4bb0ece04f" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48c1" }, { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48c8" }, { "$oid" : "5310456355dfd5f7698d48ba" } ], "content" : "J'en vois déjà venir d'assez loin : « les iFrames c'est old school ». Ça me rappel l'époque ou les Frames « c'était old school ». Pour les gars du fond, une iFrame permet d'insérer dans la page courante d'un site le contenu complet d'une autre page. Et si vous ne vous y intéressez plus car vous n'en voyez pas l'intérêt, sachez que d'autres peuvent le voir.\n\nEffectivement, vous n'êtes pas à l'abri de retrouver une page de votre site dans l'iFrame d'un autre site. À partir de là, pas mal de scénarios sont envisageables ; du moins dérangeant comme la solicitiation de votre serveur à chaque fois que la page du site embarquant votre page est réclamée aux plus génants comme le [détournement de clic](https://fr.wikipedia.org/wiki/D%C3%A9tournement_de_clic) (clickjacking).\n\n\n\n\n\n## Contenu d'un site distant dans une iFrame ##\n\nPour illustrer le cas de figure par défault (on ne demande rien de précis au serveur contre les iFrames), nous allons utiliser le simple code suivant qui va embarquer une page de [Wikipedia](https://fr.wikipedia.org/wiki/Wikip%C3%A9dia:Accueil_principal) :\n\n**HTML**\n\n```html\n<iframe src=\"https://fr.wikipedia.org/wiki/Wikip%C3%A9dia:Accueil_principal\" width=\"100%\" height=\"200px\" scrolling=\"no\"></iframe>\n```\n\n**Résultat**\n\n> <iframe src=\"https://fr.wikipedia.org/wiki/Wikip%C3%A9dia:Accueil_principal\" width=\"100%\" height=\"200px\" scrolling=\"no\"></iframe>\n\nCela signifie qu'à chaque fois que vous lirez cet article, des requêtes seront faites aux serveurs hébergeant Wikipedia pour l'afficher dans cette page. Pas très génant (sauf si le site en question n'a pas une bande passante illimité par mois).\n\n### Petit exemple de détournement de clic ###\n\nAvec le changement de code suivant, nous allons nous amuser à modifier la page. Nous allons voir facilement en haut à gauche le texte « WikiMOI HA HA ! » et cliquer dessus reviendra sur cet article. Mais on pourrait tout aussi bien vous faire croire que vous allez faire un don à Wikipedia...\n\nPour voir cela, il faudra au préalable cliquer sur « Tricher ! ».\n\n**HTML**\n\n```html\n<button>Tricher !</button>\n<div>WikiMOI<br>HA HA !</div>\n<iframe src=\"https://fr.wikipedia.org/wiki/Wikip%C3%A9dia:Accueil_principal\" width=\"100%\" height=\"200px\" scrolling=\"no\"></iframe>\n```\n\n**CSS**\n\n```css\ndiv {\n\tdisplay: none;\n}\n.fake {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    position: fixed;\n    top: 0;\n    left: 0;\n}\n.fake-div {\n    display: block;\n    position: fixed;\n    width: 160px;\n    top: 119px;\n    left: 2px;\n    z-index: 1001;\n    background-color: #f6f6f6;\n    text-align: center;\n    font-weight: bold;\n    color: #f00;\n    font-family: arial;\n    font-size: 20px;\n    cursor: pointer;\n}\n```\n\n**JS**\n\n```js\n// Mettre en place la triche.\ndocument.getElementsByTagName(\"button\")[0].addEventListener(\"click\", function () {\n\tdocument.getElementsByTagName(\"iframe\")[0].classList.add(\"fake\");\n\tdocument.getElementsByTagName(\"div\")[0].classList.add(\"fake-div\");\n});\n// Détournement de clique !!! (Ici on revient en arrière)\ndocument.getElementsByTagName(\"div\")[0].addEventListener(\"click\", function () {\n\tdocument.getElementsByTagName(\"iframe\")[0].classList.remove(\"fake\");\n\tdocument.getElementsByTagName(\"div\")[0].classList.remove(\"fake-div\");\n});\n```\n\n**Résultat**\n\n**Cliquez sur le bouton « Tricher ! »**\n\n> <button class=\"example-button\">Tricher !</button>\n> <div class=\"example-div\">WikiMOI<br>HA HA !</div>\n> <iframe class=\"example-iframe\" src=\"https://fr.wikipedia.org/wiki/Wikip%C3%A9dia:Accueil_principal\" width=\"100%\" height=\"200px\" scrolling=\"no\"></iframe>\n\nOn constate assez facilement que permettre l'affichage de votre site par d'autre site peut poser problème si vous n'avez pas confiance en ces sites.\n\n\n\n\n\n## X-Frame-Options : afficher votre site dans une iFrame ##\n\nPour décider vous même quels sont les sites qui vont pouvoir ou non afficher une de vos pages dans une iFrame, vous aller pouvoir utiliser l'en-tête HTTP `X-Frame-Options` ([RFC 7034](https://datatracker.ietf.org/doc/rfc7034/)).\n\n`X-Frame-Options` est une en-tête HTTP, ce qui signifie qu'il se trouvera dans la réponse HTTP du serveur quand celui-ci répondra à la requête d'un navigateur pour afficher une page.\n\nDonc, dans le cas précédent, c'est au site Wikipedia d'ajouter cette en-tête sur ses pages pour que, si elles sont réclamées dans une iFrame, celles-ci ne puissent pas s'afficher.\n\n\n\n### Valeurs de X-Frame-Options ###\n\nLes deux options de base sont `SAMEORIGIN` et `DENY` et sont supportées par :\n\n- Google Chrome 4+\n- Internet Explorer 8+\n- Safari 4+\n- Mozilla Firefox 3.6+\n\nIl existe une troisième option `ALLOW-FROM` qui permet de choisir exactement qui peut ou non afficher le contenu. Voyons cela en détail.\n\n#### SAMEORIGIN ####\n\nL'en-tête suivante `X-Frame-Options: SAMEORIGIN` ajouter aux en-têtes HTTP d'une réponse de page va autoriser celle-ci à être affichée dans une iFrame uniquement si la page l'appelant se trouve sur le même nom de domaine. Dans notre cas précédent, si Wikipédia utilisait cette en-tête, seule une page de Wikipedia pourrait l'afficher dans une iFrame et aucun autre site.\n\n#### DENY ####\n\nL'en-tête suivante `X-Frame-Options: DENY` ajouter aux en-têtes HTTP d'une réponse de page est rédibitoire. Elle signifie que peut importe qui demande à afficher la page dans une iFrame, celle-ci ne s'affichera pas, même si elle appartient au même domaine.\n\n#### ALLOW-FROM ####\n\nL'en-tête suivante `X-Frame-Options: ALLOW-FROM www.domain.com` ajouter aux en-têtes HTTP d'une réponse de page va autoriser celle-ci à être affichée dans une iFrame du site `www.domain.com`. Cela est effectivement le cas pour mon blog.\n\n![Exemple sur ce Blog](media/images/upload/x-frame-options.jpg)\n\nSi vous vérifiez les en-têtes HTTP de la réponse de [l'article « NodeAtlas, le Framework JavaScript MVC(2), SEO et W3C compliant »](https://blog.lesieur.name/nodeatlas-le-framework-nodejs-mvc2-oriente-front-end/), vous constaterez qu'il y a bien une en-tête HTTP `X-Frame-Options: ALLOW-FROM https://www.lesieur.name/` ce qui permet à [la page de présentation de NodeAtlas](https://www.lesieur.name/node-atlas/) de mon portfolio de l'afficher dans une iFrame.\n\n\n\n### Les navigateurs refusent l'affichage ###\n\nComprenez bien que ce mécanisme fonctionne car les navigateurs ont pour ordre de ne pas afficher un contenu dans une iFrame s'ils ne trouvent pas l'en-tête HTTP `X-Frame-Options` autorisant l'affichage de se contenu (ou aucune en-tête `X-Frame-Options`). Cela est donc une sécurité pour le client final en ce qui concerne le détournement de clic mais pas pour la charge serveur puisque quoi qu'il arrive, il répondra au navigateur.\n\n\n\n### Différent comportement par navigateur ###\n\nÀ titre d'exemple, Firefox n'affichera rien mais indiquera dans la console le soucis alors que Edge affichera un message comme celui-ci : « Nous ne pouvons pas afficher ce contenu dans un cadre ».\n\n\n\n\n\n## Content-Security-Policy et Webkit ##\n\nCependant `ALLOW-FROM` n'est pas reconnue par Webkit ce qui conduit à l'erreur suivante `Invalid 'X-Frame-Options' header encountered when loading 'www.domain.com/example': 'ALLOW-FROM www.domain.com' is not a recognized directive. The header will be ignored.` et donc autorise l'affichage de l'iFrame par tout le monde.\n\nIl faut dans ce cas se tourner vers l'en-tête HTTP `Content-Security-Policy: frame-ancestors www.domain.com` pour qu'un mécanisme similaire fonctionne.\n\n\n\n\n\n## Exemple d'utilisation avec NodeAtlas ##\n\nVous pouvez bien entendu utiliser ses en-têtes avec Apache, nginx ou directement dans votre code PHP, Ruby, etc.\n\nNous allons voir ici comment cela se traduit en JavaScript côté serveur avec le module npm [node-atlas](https://www.npmjs.com/package/node-atlas) de [Node.js](https://nodejs.org/).\n\n[NodeAtlas](https://node-atlas.js.org/) est un Framework JavaScript MVC(2) côté serveur vous permettant de créer des sites évolutifs, SEO-compliant et W3C-compliant. À ce titre il peut également utiliser les mécanismes précédemment cités, voici comment :\n\n### Par page, avec le webconfig ###\n\n**webconfig.json** par exemple\n\n```json\n{\n\t\"routes\": {\n\t\t\"/\": {\t\n\t\t\t\"view\": \"index.htm\",\n\t\t\t\"headers\": {\n\t        \t\"X-Frame-Origins\": \"ALLOW-FROM www.lesieur.name\",\n\t            \"Content-Security-Policy\": \"frame-ancestors www.lesieur.name\"\n\t        }\n\t\t}\n\t}\n}\n```\n\n### Tout le site, avec le webconfig ###\n\n```json\n{\n\t\"headers\": {\n    \t\"X-Frame-Origins\": \"ALLOW-FROM www.lesieur.name\",\n        \"Content-Security-Policy\": \"frame-ancestors www.lesieur.name\"\n    }\n\t\"routes\": {\n\t\t\"/\": \"index.htm\"\n\t}\n}\n```\n\n### Par page, avec le contrôleur spécifique ###\n\n**controllers/index.js** par exemple\n\n```js\nexports.changeVariations = function (next, locals, request, response) {\n\n\tresponse.setHeader(\"X-Frame-Options\", \"ALLOW-FROM www.lesieur.name\");\n\tresponse.setHeader(\"Content-Security-Policy\", \"frame-ancestors www.lesieur.name\");\n\n\tnext();\n};\n```\n\n### Tout le site, avec le contrôleur commun ###\n\n**controllers/common.js** par exemple\n\n```js\nexports.setConfigurations = function (next) {\n\tvar NA = this;\n\n\tNA.express.use(function (request, response, next) {\n\t\tresponse.setHeader(\"X-Frame-Options\", \"ALLOW-FROM www.lesieur.name\");\n\t\tresponse.setHeader(\"Content-Security-Policy\", \"frame-ancestors www.lesieur.name\");\n\t\tnext();\n\t});\n\n\tnext();\n};\n```", "dates" : { "published" : { "$date" : 1478599500000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "document.getElementsByClassName(\"example-button\")[0].addEventListener(\"click\", function () {\n\tdocument.getElementsByClassName(\"example-iframe\")[0].classList.add(\"example-fake\");\n\tdocument.getElementsByClassName(\"example-div\")[0].classList.add(\"example-div-fake\");\n});\ndocument.getElementsByClassName(\"example-div\")[0].addEventListener(\"click\", function () {\n\tdocument.getElementsByClassName(\"example-iframe\")[0].classList.remove(\"example-fake\");\n\tdocument.getElementsByClassName(\"example-div\")[0].classList.remove(\"example-div-fake\");\n});", "stylesheet" : ".article img {\n    max-width: 100%;\n}\n.example-div {\n        display: none;\n}\n.example-fake {\n        display: block;\n\twidth: 100%;\n\theight: 100%;\n\toverflow: hidden;\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tz-index: 1000;\n}\n.example-div-fake {\n    position: fixed;\n    width: 160px;\n    top: 119px;\n    left: 2px;\n    z-index: 1001;\n    display: block;\n    background-color: #f6f6f6;\n    text-align: center;\n    font-weight: bold;\n    color: #f00;\n    font-family: arial;\n    font-size: 20px;\n    cursor: pointer;\n}", "title" : "Éviter le détournement de clic par iFrame de votre site", "urn" : "manager-les-iframes-sortantes-de-votre-site" }
{ "__v" : 0, "_id" : { "$oid" : "582af36766270c792a24409a" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48cc" }, { "$oid" : "5810c8b1db1391f2a90b5f28" }, { "$oid" : "582b242b05a1bb41c727277a" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "56c4ad05675345bb2d63fcec" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "582b2197ac185f8972f30bcb" } ], "content" : "Vue.js est un framework JavaScript client progressif permettant de créer, maintenir et évoluer des interfaces utilisateurs en liant les données utilisées entre la Vue et le Model. C'est une alternative sérieuse à React, Angular et les autres frameworks MVVM (Modèle Vue VueModèle).\n\n![Vue.js](./media/images/upload/vue.png)\n\nJ'ai eut l'occasion d'[essayer Vue.js dans sa version 1](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/) et son extrême simplicité et flexibilité m'a séduite. À l’instar de [NodeAtlas], sa puissance vient de ses fonctionnalités intégrables de manière évolutives et versatiles ; on peut tout aussi bien utiliser [Vue] simplement sur le formulaire d'une page ou à plus grande échelle avec des composants et du routage à travers l'architecture d'un site complet.\n\nCependant, là où en version 1, [Vue] paraissait une alternative séduisante à [AngularJS] (aka Angular 1) ou [Knockout], dans sa version 2 il devient de plus une alternative sérieuse à [Angular] (aka Angular 2), [React] et les autres frameworks MVVM tant sur le plan des fonctionnalités que des performances.\n\n**Pour faire simple —si vous débarquez dans le monde des framework JavaScript client MVVM et que vous ne savez pas quoi choisir— vous devriez choisir [Vue] ! Quoi qu'il arrive, il sera un choix pertinent pour les cas d'utilisation que vous en ferrez.**\n\nNous allons dans cet article :\n\n1. rapidement exposé pourquoi vous devriez utiliser [Vue] en lieu et place de [Angular] ou [React] dès maintenant et \n2. traduire des explications approfondies à propos des différences entre [Vue] et les autres frameworks.\n\n[Vue]: https://vuejs.org/ \"Vue.js Version 2\" \n[Weex]: https://alibaba.github.io/weex/ \"Weex\" \n[NodeAtlas]: http://haeresis.github.io/NodeAtlas/ \"NodeAtlas\" \n[AngularJS]: https://angularjs.org/ \"Angular version 1\" \n[Angular]: https://angular.io/ \"Angular version 2\" \n[React]: https://facebook.github.io/react/ \"React\"\n[ReactNative]: https://facebook.github.io/react-native/ \"ReactNative\"\n[Knockout]: http://knockoutjs.com/ \"Knockout\"\n[Vuex]: http://vuex.vuejs.org/en/intro.html \"Vuex\"\n[Redux]: http://redux.js.org/ \"Redux\"\n\n\n\n\n\n## tl;dr - Pourquoi Vue.js ? ##\n\nRapidement, [Vue] version 2 c'est de :\n\n- la **Performance** : un Dom Virtuel comme [React] pour augmenter sa réactivité à un taux de performance inégalable.\n- la **Versatilité** : une manipulation des Vues avec des directives \n   - comme [AngularJS] compatibles avec une utilisation SEO directement dans des templates ou \n   - comme [React] directement dans des chaines JavaScript littérales et même avec JSX.\n- la **Simpliticé** : une utilisation simple et indépendante comme c'est le cas pour [AngularJS] ou [Knockout].\n- la **Robustesse** : une utilisation complexe et structuré comme c'est le cas pour [Angular] ou [React].\n- l'**Évolutivité** : une compatibilité entre version 1 et version 2 très proche là où [AngularJS] vs [Angular] sont difficilement compatibles.\n- la **Complémentarité** : un modèle de gestion des états à l’instar des couples [React]/[Redux] nous avons [Vue]/[Vuex].\n- la **Mobilité** : Un activateur de rendu de code mobile natif sur iOS et Android pour [Vue] avec [Weex] comme [ReactNative] l'est pour [React].\n- la **Maintenabilité** : [Vue] vient avec tout un set d'outil lui permettant d'être déboguer comme [React] ou [Angular].\n\n\n\n\n\n## Vue.js : comparaison avec les autres Frameworks ##\n\nJe vous laisse profiter de la traduction française du très intéressant billet de [Vue] concernant Vue comparer aux autres Frameworks JavaScript MVVM.\n\n> [Vue : Comparaison avec les autres Frameworks](https://vuejs-fr.github.io/vuejs.org/v2/guide/comparison.html)", "dates" : { "published" : { "$date" : 1479202620000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : ".article img {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 100%;\n    display: block;\n}\n.article ul ul {\n    margin-top: 0;\n}", "title" : "Vue.js vs React vs Angular vs les autres MVVM", "urn" : "vuejs-versus-angular-versus-react-versus-les-autres-mvvm" }
{ "__v" : 0, "_id" : { "$oid" : "583ea37f66270c792a24409b" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "582b22f1fa290e086423e837" }, { "$oid" : "582b242b05a1bb41c727277a" }, { "$oid" : "5810c8b1db1391f2a90b5f28" }, { "$oid" : "5310456355dfd5f7698d48bd" }, { "$oid" : "530ef6a6789c1a55e4fde0af" }, { "$oid" : "5310456355dfd5f7698d48ce" }, { "$oid" : "5810c54a889f9b4bb0ece04f" }, { "$oid" : "5310456355dfd5f7698d48c7" }, { "$oid" : "54f042102ae5a068f260dae2" }, { "$oid" : "5310456355dfd5f7698d48bb" } ], "content" : "Nous allons voir dans cet article comment faire du rendu côté serveur ou *__SSR__ (Server-Side Render)* avec le framework JavaScript client *__MVVM__ (Modèle Vue Vue-Modèle)* __[Vue]__ couplé au framework JavaScript serveur *__MVC(2)__ (Model View Controller)* __[NodeAtlas]__ !\n\n[Vue]: https://vuejs.org/ \"Partie Cliente pour le SSR\"\n[NodeAtlas]: https://node-atlas.js.org/ \"Partie Serveur pour le SSR\"\n[jQuery]: https://jquery.com/ \"Manipulateur de DOM\"\n[Vanilla JS]: https://blog.lesieur.name/vanilla-js-france/ \"Manipulateur de DOM\"\n\nAlors ce titre parle peut-être aux habitués des architectures clientes MVVM qui ont des difficultés avec le référencement et semble peut-être barbare pour d'autres. Lançons nous dans une petite explication histoire de rendre cet article intéressant également pour les néophytes : comprenons le problème et trouvons la solution à travers cette page.\n\n> **Quel est le problème traité dans cet article ?**\n\n> Le problème avec les frameworks MVVM client est qu'ils construisent le site *à partir de rien*. Fouillez la source du code de la réponse HTTP de la page courante, celle lue par les indexeurs de contenus ou les navigateurs sans JavaScript ; il n'y a rien. Aussi, si je créé une liste d'actions futures pour la *roadmap* de ma super App, et que je souhaite pouvoir manipuler aisément (ajout et retrait) ses éléments grâce à un coupleur de données vue-modèle ; le revers de la médaille sera que les informations utilisées pour cette construction proviendront de fichier JavaScript ou morceau de HTML qui ne veulent rien dire pour les indexeurs où même les validateurs de page. Vos sites sont donc souvent « SEO merdique » et « W3C bancale ».\n\n> **Quel solution ?**\n\n> Le SSR ou Rendu Côté Serveur. Voyons ça au travers de cette page exemple avec [Vue] et [NodeAtlas] !\n\n\n\n\n\n## Vue et NodeAtlas ##\n\nTout d'abord [Vue] et [NodeAtlas] sont tous les deux écrit en JavaScript et tournent avec un moteur JavaScript. [Vue] tourne grâce au moteur JS embarqué dans les navigateurs, [NodeAtlas] tourne grâce au moteur serveur JS installé avec Node.js. Oui, on parle bien ici d'un développement intégrale avec HTML, CSS et JavaScript **seulement**.\n\nNous avons ici deux frameworks aux rôles complémentaires :\n\n![Vue](https://fr.vuejs.org/images/logo.png) \n\n- [Vue] (**vue.js**) est un *data-binder* simple (équivalent à Angular ou Riot mais bien plus performant) dont la versatilité et la suite d'outils lui permette de devenir un puissant système MVVM (équivalent à Angular2 ou React mais plus performant **bis**). Attention, il ne remplace pas [jQuery] (ou [Vanilla JS]) qui servent avant tout à **manipuler le DOM**. [Vue] lie les données en provenance de fichier JavaScript au HTML de sorte qu'une modification des données se reflète directement dans le HTML sans aucunes manipulations de votre part. Là où faire ce travail avec [jQuery] demanderait *de trouver une liste, de récupérer un *item template*, d'insérer la nouvelle donnée dans l'*item template*, d’insérer l'*item template* à la fin de la liste, de trouver le compteur qui compte les lignes, de l'incrémenter de 1... etc.* ; il suffit avec [Vue] de simplement ajouter une donnée dans le tableau JavaScript **lié** et tout est « re-calculé ».\n\n![NodeAtlas](https://www.lesieur.name/media/images/node-atlas.png)\n\n- [NodeAtlas] (**node-atlas.js**) est un serveur HTTP simple dans sa forme la plus basique (équivalent à Express) par **référencement de route** dont le point commun avec [Vue] est l'évolutivité et la versatilité. Cela signifie que l'on peut faire tourner des sites multilingues performants avec un nombre conséquent de pages uniquement avec une partie route et vue active (parfait pour débuter en Node.js). Les parties modèle et contrôleur sont à activer au besoin (parfait pour les experts). Il suit une architecture MVC dans sa pleine utilisation (équivalent d'un Sails.js) avec des contrôleurs dédiés ou une architecture MVC2 avec un contrôleur commun (ou les deux, ou aucun) et permet de créer des sites orientés composants si souhaité et des architectures orientés services (Site Front simple + Collection d'APIs distantes + Serveur d'authentification + ...).\n\n\n\n\n\n## [NodeAtlas] - Sans MVVM, les bons vieux sites habituels ##\n\nLançons nous dans une petite page HTML sans prétention que vous auriez faites dans les règles de l'art avec tout ce qui va bien. Ici nous allons restez minimaliste, le but de l'article étant de comprendre et de résoudre le problème de référencement.\n\nAvec [NodeAtlas], créons nous une page qui liste des actions futures à entreprendre. Nous allons faire cela en utilisant une vue dans le dossier `views` et en utilisant une variation dans le dossier `variations` comme source de donnée.\n\nCe qu'il faut retenir c'est que l'injection des données dans le HTML va se faire « côté serveur ». La réponse HTTP contient donc les données pour l'indexeur de contenus. C'est typiquement le cas avec n'importe quel techno serveur (PHP, Ruby, C#, etc.).\n\nNous avons donc l'architecture [NodeAtlas] suivante :\n\n```\n├─ variations/\n│  └─ data.json\n├─ views/\n│  └─ show.htm\n└─ webconfig.json\n```\n\navec le contenu des fichiers suivants :\n\n**webconfig.json**\n\nNous créons une page `a-faire` composée du HTML de `show.htm` et des données de `data.json`.\n\n```json\n{ \n    \"routes\": {\n        \"/a-faire\": {\n            \"view\": \"show.htm\",\n            \"variation\": \"data.json\"\n        }\n    }\n}\n```\n\n**variations/data.json**\n\nNous ajoutons trois entrés dans la variation spécifique derrière la propriété `todos`.\n\n```json\n{\n    \"todos\": [{\n        \"title\": \"v1.0\",\n        \"description\": \"Il va falloir faire la v1.0 !\"\n    }, {\n        \"title\": \"v2.0\",\n        \"description\": \"Puis faudra faire la v2.0, parce que la v1.0 on la sent déjà pas.\"\n    }, {\n        \"title\": \"v3.0\",\n        \"description\": \"Il faudra faire la v3.0 parce que une fois la v2.0 fini, on voudra encore changer ce qui va pas !\"\n    }]\n}\n```\n\n**views/show.htm**\n\nIci on alimente notre HTML avec les données en provenance du fichier de variation en utilisant le moteur de template de [NodeAtlas].\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>SSR</title>\n    </head>\n    <body>\n        <div class=\"todo-list\">\n            <h1>Dans le futur</h1>\n            <? if (specific.todos.length) { ?>\n            <ul>\n                <? for (var i = 0; i < specific.todos.length; i++) { ?>\n                <li><strong><?- specific.todos[i].title ?></strong> : <?- specific.todos[i].description ?></li>\n                <? } ?>\n            </ul>\n            <? } ?>\n        </div>\n    </body>\n</html>\n```\n\nMaintenant, lançons notre instance serveur [NodeAtlas] que l'on va afficher en français avec la commande suivante :\n\n```bash\n\\> node-atlas --browse a-faire --lang fr-fr\n```\n\nNotre navigateur par défaut s'ouvre à l'adresse `http://localhost/a-faire` et le code source, celui mangé par les indexeurs, ressemblera à ceci :\n\n**http://localhost/a-faire**\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>SSR</title>\n    </head>\n    <body>\n        <div class=\"todo-list\">\n            <h1>Dans le futur</h1>\n            <ul>\n                <li><strong>v1.0</strong> : Il va falloir faire la v1.0 !</li>\n                <li><strong>v2.0</strong> : Puis faudra faire la v2.0, parceque la v1.0 on la sent déjà pas.</li>\n                <li><strong>v3.0</strong> : Il faudra faire la v3.0 parceque une fois la v2.0 fini, on voudra encore changer ce qui va pas !</li>\n            </ul>\n        </div>\n    </body>\n</html>\n```\n\n> Jusque là tout va bien, tout est indexable. C'est assez simple étant donné que nous n'avons pas besoin de manipuler les données depuis le navigateur, nous n'avons donc pas besoin d'un système MVVM.\n\nVous pouvez retrouver l'intégralité des fichiers de cet exemple dans le dépôt [VueAtlas](https://github.com/NodeAtlas/VueAtlas) partie [step/step1](https://github.com/NodeAtlas/VueAtlas/tree/master/steps/step1).\n\n\n\n\n\n## Vue - Avec MVVM, l’interaction facile à mettre en place ! ##\n\nNous allons maintenant utiliser [Vue] ! Cela signifie que nous allons injecter les données dans le HTML côté client pour permettre à [Vue] de savoir quelles données sont liées à quelles parties du HTML : cela va nous permettre d'ajouter ou de retirer des entrées simplement ! Pour réaliser cela, nous allons ajouter un fichier `assets/javascripts/todo-list.js` accessible côté client et créer une nouvelle page basé sur `views/update.htm`.\n\n```\n├─ assets/\n│  └─ javascripts/\n│     └─ todo-list.js\n├─ variations/\n│  └─ data.json\n├─ views/\n│  ├─ update.htm\n│  └─ show.htm\n└─ webconfig.json\n```\n\nEn ce qui concerne `variations/data.json`, rien ne va bouger, il va servir de source de donnée aussi bien pour les pages `views/show.htm` que `views/update.htm`.\n\n**webconfig.json**\n\nAjoutons notre nouvelle page :\n\n```json\n{ \n    \"routes\": {\n        \"/a-faire\": {\n            \"view\": \"show.htm\",\n            \"variation\": \"data.json\"\n        },\n        \"/gerer-a-faire\": {\n            \"view\": \"update.htm\",\n            \"variation\": \"data.json\"\n        }\n    }\n}\n```\n\n**views/update.htm**\n\nNous allons maintenant :\n- Changer l'implémentation en remplaçant les tags [NodeAtlas] par les tags [Vue]. Il ne seront donc pas touché lors de l'analyse du rendu côté serveur et le code sera envoyé côté client tel quel.\n- Glisser les données en provenance de `variations/data.json` dans un attribut `data-model` sur la balise `todo-list` afin de pouvoir alimenter notre vue quand elle s'initialisera dans le navigateur côté client.\n- Nous allons ajouter une partie destinée à ajouter ou supprimer des entrées.\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>SSR</title>\n    </head>\n    <body>\n        <div class=\"todo-list\" data-model=\"<?= JSON.stringify(specific.todos) ?>\">\n            <div class=\"todo-list--content\">\n                <h1>Dans le futur</h1>\n                <ul v-if=\"todos.length\">\n                    <li v-for=\"todo in todos\">\n                        <strong>{{ todo.title }}</strong> : {{ todo.description }} <span v-on:click=\"removeTodo(index)\">[X]</span>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"todo-list--form\">\n                Nouveau:\n                <input v-model=\"newTitle\" placeholder=\"Titre\">\n                <input v-model=\"newDescription\" placeholder=\"Description\">\n                <button v-on:click=\"addTodo\">Ajouter</button>\n            </div>\n        </div>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.3/vue.min.js\"></script>\n        <script src=\"javascripts/todo-list.js\"></script>\n    </body>\n</html>\n```\n\n**assets/javascripts/todo-list.js**\n\nNous créons donc la partie modèle de [Vue]. Nous allons l'associer à l'élément `<div class=\"todo-list\">`. Pour cela nous allons le chercher dans le DOM avec la variable `todosSource`. Ensuite nous allons alimenter notre `new Vue()` avec l'élément en question pour `el`, avec les données en provenance de `data-model` pour `data.todos`. Nous créons ensuite tout ce qu'il faut pour ajouter ou supprimer des entrées.\n\n```js\nvar todosSource = document.getElementsByClassName(\"todo-list\")[0];\n\nnew Vue({\n    el: todosSource,\n    data: {\n        \"todos\": JSON.parse(todosSource.getAttribute(\"data-model\")),\n        \"newTitle\": \"\",\n        \"newDescription\": \"\"\n    },\n    methods: {\n        addTodo: function () {\n            this.todos.push({\n                \"title\": this.newTitle, \n                \"description\": this.newDescription \n            });\n            this.newTitle = \"\";\n            this.newDescription = \"\";\n        },\n        removeTodo: function (index) {\n            this.todos.splice(index, 1);\n        }\n    }\n});\n```\n\nEn coupant l'instance précédente (`Ctrl + c`) et en lançant notre instance serveur [NodeAtlas] avec la commande suivante ([NodeAtlas] est maintenant déjà en français) :\n\n```bash\n\\> node-atlas --browse gerer-a-faire\n```\n\nL'adresse `http://localhost/gerer-a-faire` s'ouvre de nouveau dans le navigateur et le code source ressemblera à ceci :\n\n**http://localhost/gerer-a-faire**\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>SSR</title>\n    </head>\n    <body>\n        <div class=\"todo-list\" data-model=\"[{&#34;title&#34;:&#34;v1.0&#34;,&#34;description&#34;:&#34;Il va falloir faire la v1.0 !&#34;},{&#34;title&#34;:&#34;v2.0&#34;,&#34;description&#34;:&#34;Puis faudra faire la v2.0, parceque la v1.0 on la sent déjà pas.&#34;},{&#34;title&#34;:&#34;v3.0&#34;,&#34;description&#34;:&#34;Il faudra faire la v3.0 parceque une fois la v2.0 fini, on voudra encore changer ce qui va pas !&#34;}]\">\n            <h1>Dans le futur</h1>\n            <div class=\"todo-list--content\">\n                <ul v-if=\"todos.length\">\n                    <li v-for=\"(todo, index) in todos\">\n                        <strong>{{ todo.title }}</strong> : {{ todo.description }} <span v-on:click=\"removeTodo(index)\">[X]</span>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"todo-list--form\">\n                Nouveau:\n                <input v-model=\"newTitle\" placeholder=\"Titre\">\n                <input v-model=\"newDescription\" placeholder=\"Description\">\n                <button v-on:click=\"addTodo\">Ajouter</button>\n            </div>\n        </div>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.3/vue.min.js\"></script>\n        <script src=\"javascripts/todo-list.js\"></script>\n    </body>\n</html>\n```\n\n> C'est là que les bactéries attaques ! Le code source de notre page est (presque) équivalente à ce que nous avons pu voir côté serveur. Car le code ici écrit est fait pour être rendu par le moteur de [Vue] côté client, et non par le moteur de [NodeAtlas] côté serveur. Cela ne ressemble donc à rien pour les indexeurs de contenus. Il y a bien l'attribut HTML « data-model » dont nous nous servons pour alimenter [Vue] qui est dans la source, mais rien d'exploitable...\n\n> Une solution coûteuse en temps est donc de délivrer le contenu statique sur une page pour les indexeurs (ex :`a-faire`), et de permettre aux utilisateurs d'ajouter des éléments depuis une autre page (ex :`gerer-a-faire`). Une solution coûteuse en temps donc puisque l'implémentation de la page est **à écrire deux fois**.\n\nVous pouvez retrouver l'intégralité des fichiers de cet exemple dans le dépôt [VueAtlas](https://github.com/NodeAtlas/VueAtlas) partie [step/step2](https://github.com/NodeAtlas/VueAtlas/tree/master/steps/step2).\n\n\n\n\n## Vue + NodeAtlas - Avec SSR, les avantages des deux mondes ! ##\n\nNous allons maintenant résoudre le problème en permettant aux fichiers [Vue] d'être exécutés côté serveur. Pour permettre cela à [Vue], il va falloir dans un premier temps rendre accessible [Vue] côté serveur et utiliser en plus Vue Server Renderer en utilisant NPM :\n\nInstallons cela avec les commandes suivante dans la console de votre OS.\n\n```bash\n\\> npm install vue\n```\n\net\n\n```bash\n\\> npm install vue-server-renderer\n```\n\nNous allons également mettre nos données sources dans un dossier `data` car les variations de [NodeAtlas] ne sont normalement pas faites pour cela.\n\n**data/todo-list.json**\n\n```json\n[{\n    \"title\": \"v1.0\",\n    \"description\": \"Il va falloir faire la v1.0 !\"\n}, {\n    \"title\": \"v2.0\",\n    \"description\": \"Puis faudra faire la v2.0, parceque la v1.0 on la sent déjà pas.\"\n}, {\n    \"title\": \"v3.0\",\n    \"description\": \"Il faudra faire la v3.0 parceque une fois la v2.0 fini, on voudra encore changer ce qui va pas !\"\n}]\n```\n\nCe qui nous donne, avec les fichiers rémanents des deux exemples précédents l'arborescence suivante :\n\n```\n├─ node_modules/\n│  ├─ vue/\n│  └─ vue-server-renderer/\n├─ assets/\n│  └─ javascripts/\n│     └─ todo-list.js\n├─ data/\n│  └─ todo-list.json\n├─ variations/\n│  └─ data.json\n├─ views/\n│  ├─ update.htm\n│  └─ show.htm\n└─ webconfig.json\n```\n\nPour que [Vue] puisse s'exécuter des deux côtés nous allons utiliser le contrôleur `all.js` en plus du côté client avec la vue [NodeAtlas] `all.htm`. Il faut également que le vue-modèle de [Vue] soit disponible sur le serveur et le client. Nous allons le faire en abonnant les fichiers nécessaires à la liste des fichiers statiques de [NodeAtlas] et en ajoutant une nouvelle route `/`.\n\n**webconfig.json**\n\n```\n{\n    \"statics\": {\n        \"/view-model\": \"views/partials\",\n        \"/data\": \"/data\"\n    },\n    \"routes\": {\n        \"/\": {\n            \"view\": \"all.htm\",\n            \"controller\": \"all.js\"\n        },\n        \"/a-faire\": {\n            \"view\": \"show.htm\",\n            \"variation\": \"data.json\"\n        },\n        \"/gerer-a-faire\": {\n            \"view\": \"update.htm\",\n            \"variation\": \"data.json\"\n        }\n    }\n}\n```\n\nMaintenant, depuis le navigateur, nous aurons accès aux fichiers :\n- Données : `http://localhost/data/todo-list.json` (accessible sur le serveur via `data/todo-list.json`),\n- Modèle : `http://localhost/view-model/todo-list.js` (accessible sur le serveur via `views/partials/todo-list.js`) et\n- Vue : `http://localhost/view-model/todo-list.htm` (accessible sur le serveur via `views/partials/todo-list.htm`).\n\nLes contenus de `views/partials/todo-list.js` et `views/partials/todo-list.htm` sont les suivants :\n\n**views/partials/todo-list.htm**\n\nAvec `v-if=\"client\"` permettant de piloter ce qui ne doit apparaître que lors du rendu client (et donc ne pas être dans la source de la réponse HTTP).\n\n```html\n<div class=\"todo-list\">\n    <h1>Dans le futur</h1>\n    <div class=\"todo-list--content\">\n        <ul v-if=\"todos.length\">\n            <li v-for=\"(todo, index) in todos\">\n                <strong>{{ todo.title }}</strong> : {{ todo.description }} <span v-if=\"client\" v-on:click=\"removeTodo(index)\">[X]</span>\n            </li>\n        </ul>\n    </div>\n    <div v-if=\"client\" class=\"todo-list--form\">\n        Nouveau:\n        <input v-model=\"newTitle\" placeholder=\"Titre\">\n        <input v-model=\"newDescription\" placeholder=\"Description\">\n        <button v-on:click=\"addTodo\">Ajouter</button>\n    </div>\n</div>\n```\n\n**views/partials/todo-list.js**\n\nAvec un code encapsulant la fonctionnalité pour lui permettre d'être exécutable côté navigateur et côté Node.js.\n\n```js\n(function () {\n    var setTodos = function (view, model, client) {\n        return new Vue({\n            template: view,\n            data: {\n                \"todos\": model,\n                \"newTitle\": \"\",\n                \"newDescription\": \"\",\n                \"client\": client\n            },\n            methods: {\n                addTodo: function () {\n                    this.todos.push({\n                        \"title\": this.newTitle, \n                        \"description\": this.newDescription \n                    });\n                    this.newTitle = \"\";\n                    this.newDescription = \"\";\n                },\n                removeTodo: function (index) {\n                    this.todos.splice(index, 1);\n                }\n            }\n        });\n    };\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = setTodos;\n    } else {\n        this.setTodos = setTodos;\n    }\n}).call(this);\n```\n\nCet vue-modèle est ensuite appelée côté client depuis `/` grâce à la vue [NodeAtlas] suivante :\n\n**views/all.htm**\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>SSR</title>\n    </head>\n    <body>\n        <section class=\"todo-list\"></section>\n        <script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.3/vue.min.js\"></script>\n        <script src=\"view-model/todo-list.js\"></script>\n        <script>\n        $.ajax({\n          url: \"data/todo-list.json\"\n        }).done(function (model) {\n            $.ajax({\n              url: \"view-model/todo-list.htm\"\n            }).done(function (view) {\n                var todos = setTodos(view, model, true);\n                todos.$mount(\".todo-list\");\n            });\n        });\n        </script>\n    </body>\n</html>\n```\n\net le contrôleur [NodeAtlas] suivant pour utiliser [Vue] côté serveur :\n\n**controllers/all.js**\n\n```js\nexports.changeDom = function (next, locals) {\n    var NA = this,\n        Vue = require(\"vue\"),\n        ServerRenderer = require(\"vue-server-renderer\"),\n        renderer = ServerRenderer.createRenderer(),\n        path = NA.modules.path,\n        fs = NA.modules.fs,\n        view = path.join(NA.serverPath, NA.webconfig.viewsRelativePath, \"partials/todo-list.htm\"),\n        model = path.join(NA.serverPath, NA.webconfig.viewsRelativePath, \"partials/todo-list.js\"),\n        data = path.join(NA.serverPath, \"data/todo-list.json\");\n\n    global.Vue = Vue;\n\n    fs.readFile(view, \"utf-8\", function (error, view) {\n        fs.readFile(data, \"utf-8\", function (error, data) {\n            renderer.renderToString(require(model)(view, JSON.parse(data)), function (error, html) {\n                locals.dom = locals.dom.replace(\"<section class=\"todo-list\"></section>\", html.replace('server-rendered=\"true\"', \"\"));\n            });\n        });\n    });\n};\n```\nce qui nous donne l'arborescence complète suivante :\n\n```\n├─ node_modules/\n│  ├─ vue/\n│  └─ vue-server-renderer/\n├─ assets/\n│  └─ javascripts/\n│     └─ todo-list.js\n├─ controllers/\n│  └─ all.js\n├─ data/\n│  └─ todo-list.json\n├─ variations/\n│  └─ data.json\n├─ views/\n│  ├─ partials/\n│  │  ├─ todo-list.htm\n│  │  └─ todo-list.js\n│  ├─ all.htm\n│  ├─ update.htm\n│  └─ show.htm\n└─ webconfig.json\n```\n\nEn lançant notre instance serveur [NodeAtlas] avec la commande suivante :\n\n```bash\n\\> node-atlas --browse\n```\n\nNotre navigateur par défaut s'ouvre à l'adresse `http://localhost/` et le code source (celui mangé par les indexeurs), ressemblera à ceci :\n\n**http://localhost/**\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>SSR</title>\n    </head>\n    <body>\n        <div class=\"todo-list\">\n            <h1>Dans le futur</h1> \n            <div class=\"todo-list--content\">\n                <ul>\n                    <li><strong>v1.0</strong> : Il va falloir faire la v1.0 ! <!----></li>\n                    <li><strong>v2.0</strong> : Puis faudra faire la v2.0, parceque la v1.0 on la sent déjà pas. <!----></li>\n                    <li><strong>v3.0</strong> : Il faudra faire la v3.0 parceque une fois la v2.0 fini, on voudra encore changer ce qui va pas ! <!----></li>\n                </ul>\n            </div> <!---->\n        </div>\n        <script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.3/vue.min.js\"></script>\n        <script src=\"view-model/todo-list.js\"></script>\n        <script>\n        $.ajax({\n          url: \"data/todo-list.json\"\n        }).done(function (model) {\n            $.ajax({\n              url: \"view-model/todo-list.htm\"\n            }).done(function (view) {\n                var todos = setTodos(view, model, true);\n                todos.$mount(\".todo-list\");\n            });\n        });\n        </script>\n    </body>\n</html>\n```\n\n> Bingo ! \n> - Vue est fonctionnel côté serveur\n>    - Votre document est valide W3C,\n>    - Votre document est complètement SEO indexable (avec les formulaires retirés de la source),\n> - Vue est fonctionnel côté client (avec les formulaires inclus dans le DOM de ce côté),\n> - Vous n'avez écrit qu'une seule fois le code pour le rendu client et serveur.\n\nVous pouvez retrouver l'intégralité des fichiers de cet exemple dans le dépôt [VueAtlas](https://github.com/NodeAtlas/VueAtlas) partie [step/step3](https://github.com/NodeAtlas/VueAtlas/tree/master/steps/step3).\n\n\n\n\n\n## Bonus - Enregistrement côté serveur et Mise à jour temps réel ##\n\nCet article à atteint son objectif puisque nous avons une architecture qui démontre comment faire du Rendu côté serveur avec [Vue] et [NodeAtlas]. Afin de finir cet article correctement, nous allons : \n- épurer le code pour ne garder que l'exemple final, \n- enregistrer les modifications faites côté serveur pour que l'ouverture d'une page affiche toutes les entrées et\n- utiliser les Websockets de [NodeAtlas] pour mettre à jour la liste en temps réel dans toutes les pages déjà ouvertes !\n\nAu final notre arborescence va ressembler à cela :\n\n```\n├─ node_modules/\n│  ├─ vue/\n│  └─ vue-server-renderer/\n├─ assets/\n│  └─ javascripts/\n│     └─ index.js\n├─ controllers/\n│  └─ index.js\n├─ data/\n│  └─ todo-list.json\n├─ variations/\n│  ├─ edit.json\n│  └─ show.json\n├─ views/\n│  ├─ partials/\n│  │  ├─ todo-list.htm\n│  │  └─ todo-list.js\n│  └─ index.htm\n└─ webconfig.json\n```\n\nPour information, nous avons procédez, par rapport aux trois exemples précédent, aux modifications suivantes : \n - `controllers/all.js` qui devient `controllers/index.js`,\n - `views/all.htm` qui devient `views/index.htm`,\n - `views/show.htm` et `views/update.htm` qui sont supprimés,\n - `variations/data.json` qui est supprimé,\n - `variations/show.json` et `variations/edit.json` qui sont ajoutés,\n - `assets/javascripts/todo-list.js` qui est supprimé.\n - `assets/javascripts/index.js` qui est ajouté.\n\nVoici le contenu de chaque fichier restant après modification\n\n**webconfig.json**\n\nUne page en lecture seule `http://localhost/` et une page de modification `http://localhost/editer`.\n\n```json\n{\n    \"statics\": {\n        \"/view-model\": \"views/partials\",\n        \"/data\": \"/data\"\n    },\n    \"routes\": {\n        \"/\": {\n            \"view\": \"index.htm\",\n            \"variation\": \"show.json\",\n            \"controller\": \"index.js\"\n        },\n        \"/editer\": {\n            \"view\": \"index.htm\",\n            \"variation\": \"edit.json\",\n            \"controller\": \"index.js\"\n        }\n    }\n}\n```\n\nAvec la vue [NodeAtlas] unique suivante :\n\n**views/index.htm**\n\nVous remarquerez que nous avons ajouté les fichiers `socket.io/socket.io.js` et `node-atlas/socket.io.js` fournit par [NodeAtlas] pour faire fonctionner les échanges Websockets temps réel plus loin.\n\n```html\n<!DOCTYPE html>\n<html lang=\"fr\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>SSR</title>\n    </head>\n    <body>\n        <section class=\"todo-list\"></section>\n        <script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.3/vue.min.js\"></script>\n        <script src=\"socket.io/socket.io.js\"></script>\n        <script src=\"node-atlas/socket.io.js\"></script>\n        <script src=\"view-model/todo-list.js\"></script>\n        <script src=\"javascripts/index.js\"></script>\n        <script>todoList(<?- specific.editable ?>);</script>\n    </body>\n</html>\n ```\n\nQui utilise les vue-modèle [Vue] suivants :\n\n**views/partials/todo-list.js**\n\n```js\n(function () {\n    var setTodos = function (view, model, editable, callback) {\n        return new Vue({\n            template: view,\n            data: {\n                \"todos\": model,\n                \"newTitle\": \"\",\n                \"newDescription\": \"\",\n                \"editable\": editable\n            },\n            methods: {\n                addTodo: function () {\n                    this.todos.push({\n                        \"title\": this.newTitle, \n                        \"description\": this.newDescription \n                    });\n                    this.newTitle = \"\";\n                    this.newDescription = \"\";\n                    if (callback) {\n                        callback(this.todos);\n                    }\n                },\n                removeTodo: function (index) {\n                    this.todos.splice(index, 1);\n                    if (callback) {\n                        callback(this.todos);\n                    }\n                }\n            }\n        });\n    };\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = setTodos;\n    } else {\n        this.setTodos = setTodos;\n    }\n}).call(this);\n```\n\n**views/partials/todo-list.htm**\n\n```html\n<div class=\"todo-list\">\n    <h1>Todo list</h1>\n    <div class=\"todo-list--content\">\n        <ul v-if=\"todos.length\">\n            <li v-for=\"(todo, index) in todos\">\n                <strong>{{ todo.title }}</strong> : {{ todo.description }} <span v-if=\"editable\" v-on:click=\"removeTodo(index)\">[X]</span>\n            </li>\n        </ul>\n    </div>\n    <div v-if=\"editable\" class=\"todo-list--form\">\n        Nouveau:\n        <input v-model=\"newTitle\" placeholder=\"Titre\">\n        <input v-model=\"newDescription\" placeholder=\"Description\">\n        <button v-on:click=\"addTodo\">Ajouter</button>\n    </div>\n</div>\n```\n\nQui ne varie que de la variable `specific.editable` qui sert à indiquer si la page est en lecture seule ou éditable :\n\n**variations/show.json**\n\n```json\n{\n    \"editable\": \"false\"\n}\n```\n\n**variations/edit.json**\n\n```json\n{\n    \"editable\": \"true\"\n}\n```\n\nAvec toujours le même jeu de donnée pour `data/todo-list.json`.\n\nAttaquons nous à présent aux deux fichiers qui vont permettre \n- les échanges client-serveur temps réel côté client et serveur respectivement grâce au fichier `node-atlas/socket.io.js` et au point d'ancrage `setSockets()` ainsi que,\n- l'enregistrement côté serveur grâce à `writeFile`.\n\n**controllers/index.js**\n\n```js\nexports.changeDom = function (next, locals) {\n    var NA = this,\n        Vue = require(\"vue\"),\n        renderers = require(\"vue-server-renderer\"),\n        renderer = renderers.createRenderer(),\n        path = NA.modules.path,\n        fs = NA.modules.fs,\n        view = path.join(NA.serverPath, NA.webconfig.viewsRelativePath, \"partials/todo-list.htm\"),\n        model = path.join(NA.serverPath, NA.webconfig.viewsRelativePath, \"partials/todo-list.js\"),\n        data = path.join(NA.serverPath, \"data/todo-list.json\");\n\n    global.Vue = Vue;\n\n    fs.readFile(view, \"utf-8\", function (error, view) {\n        fs.readFile(data, \"utf-8\", function (error, data) {\n            renderer.renderToString(require(model)(view, JSON.parse(data)), function (error, html) {\n                locals.dom = locals.dom.replace('<section class=\"todo-list\"></section>', html.replace('server-rendered=\"true\"', \"\"));\n                next();\n            });\n        });\n    });\n};\n\nexports.setSockets = function () {\n    var NA = this,\n        fs = NA.modules.fs,\n        io = NA.io;\n\n    io.sockets.on(\"connection\", function (socket) {\n        socket.on(\"update-todo\", function (todos) {\n            fs.writeFile(\"data/todo-list.json\", JSON.stringify(todos), function () {\n                socket.broadcast.emit(\"update-todo\", todos);\n            });\n        });\n    });\n};\n```\n\n**assets/javascripts/index.js**\n\n```js\nvar todoList = function (editable) {\n    $.ajax({\n      url: \"data/todo-list.json\"\n    }).done(function (model) {\n        $.ajax({\n          url: \"view-model/todo-list.htm\"\n        }).done(function (view) {\n            var todos = setTodos(view, model, editable, function (value) {\n                NA.socket.emit(\"update-todo\", value);\n            });\n            todos.$mount(\".todo-list\");\n            NA.socket.on(\"update-todo\", function (value) {\n                todos.todos = value;\n            });\n        });\n    });\n};\n```\n\n> Et voilà un exemple simple et fonctionnel !\n\n> En lançant la commande suivante :\n\n```bash\nnode-atlas --browse\n``` \n\nVous ouvrirez le site sur la page en lecture seule `http://localhost/`.\n\n> Ouvrez donc plusieurs onglets aux pages `http://localhost/` et `http://localhost/editer` et même dans plusieurs navigateurs ! Ensuite modifier la liste via une de vos pages `http://localhost/editer` et magie, tout est actualisé partout ! En ouvrant une nouvelle page `http://localhost/` ou `http://localhost/editer` à partir d'ici, vous verrez les nouvelles entrées.\n\nVous pouvez retrouver l'intégralité des fichiers de cet article dans le dépôt [VueAtlas](https://github.com/NodeAtlas/VueAtlas) sur Github.", "dates" : { "published" : { "$date" : 1483066860000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : ".article img {\n    float: right;\n    max-width: 200px;\n    margin-left: 10px;\n    margin-right: 10px;\n}\n.article img:nth-child(1) {\n    max-width: 100px;\n}", "title" : "Vue + NodeAtlas : de l'art du SSR ou Rendu Côte Serveur avec JavaScript", "urn" : "ssr-ou-du-rendu-cote-serveur-a-l-aide-de-javascript-avec-vue-et-nodeatlas" }
{ "__v" : 0, "_id" : { "$oid" : "588353f9c833701abaaea3a2" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48bb" }, { "$oid" : "5310456355dfd5f7698d48c8" }, { "$oid" : "5310456355dfd5f7698d48be" }, { "$oid" : "5310456355dfd5f7698d48bc" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48c1" } ], "content" : "Si vous faites du JavaScript régulièrement —et il est de plus en plus difficile d'y couper si vous êtes développeur web—, vous vous êtes peut-être déjà posé cette question : « _Quelle est la différence entre la valeur `null` et la valeur `undefined` ?_ ». Question qu'on ne se pose pas quand on vient d'un autre langage. \n<img style=\"max-width: 100%\" src=\"https://blog.lesieur.name/media/images/upload/null-vs-undefined.png\" alt=\"Null vs Undefined\">\n\nSi nous résumons ensemble nous pouvons tomber d'accord sur le fait que :\n\n- *Null* et *Undefined* sont tous les deux des types ne possédant qu'une seule valeur ; les constantes respectives `null` et `undefined`.\n- Ils s'utilisent tous les deux pour indiquer « l'absence ».\n- Ils sont tous les deux évalués à `false` dans un contexte booléen (ex. : dans une condition `if a`, avec l'opérateur binaire d'égalité `a == b`, avec l'opérateur ternaire conditionnel `a ? b : c`).\n\nEn gros, ils servent donc à la même chose non ? Cette réponse ne me convient pas car, même s'il est vrai qu'à chaque première vu les comportements JavaScript semblent « loufoque », l'expérience m'a toujours prouvé que « c'était moi » qui n'avait pas compris correctement le JavaScript. Si les deux types existes, il y a forcément une raison. Voici ce qui en est concrètement dit :\n\n> La valeur `undefined` appartient au type primitif *Undefined* et est utilisée quand aucune valeur typée n'a été assignée à une variable.\n\n> La valeur `null` appartient au type primitif *Null* et représente l'absence de valeur, la non-existence d'une référence dans une variable.\n\nLa distinction est plus clair ainsi non ? Pas vraiment... On va retrousser nos manches et regarder un peu ce qu'on peut éclaircir. Si vous n'avez pas le temps de suivre l'explication exhaustive et intéressante qui va suivre je vous laisse [filer à la conclusion](./difference-entre-type-null-et-type-undefined-en-javascript/#tl-dr) qui répond à cette question. Si par contre vous êtes curieux et/ou avez le temps de comprendre les différences, c'est juste en dessous !\n\n\n\n\n\n## Faible mais tout de même dynamique ##\n\nPour répondre à notre question, nous allons faire un petit tour d'horizon du typage en JavaScript pour qu'il soit plus clair et simple ensuite d'aborder la question principale.\n\n### Typage faible ###\n\nLes développeurs ayant une grosse dent contre JavaScript l'on souvent car c'est un langage que les moins intéressés qualifieront de non typé et que les plus avertis qualifieront de langage à **typage faible** (par opposition aux langages à typage fort). Cela signifie que vous ne verrez jamais clairement écrit devant une variable qu'elle est de type `int num = 45` ou `bool bool = false` ou `String str = \"Hello World\"`, mais seulement qu'elle est `var num = 45` ou `var bool = false` ou `var str = \"Hello World\"`.\n\n\n\n### Typage dynamique ###\n\nEn fait en JavaScript, les variables n'ont pas de type : ce sont les opérandes ou les expressions (composition d'opérandes et d'opérateurs) qui sont typé (qui renvoi un type à l'exécution). On peut grossièrement dire qu'en JavaStript `num`, `bool` et `str` sont des conteneurs qui contiennent un élément typé. Cela permet a une variable d'accueillir tout au long de son cycle de vie dans l'application des valeurs d'opérande/d'expression de différent type, c'est ce qu'on appel le **typage dynamique**. C'est donc le développeur qui décide dans quelle mesure il souhaite afficher clairement le type de contenu qui sera utilisé par ses variables (ex. par leur nom, par leurs commentaires ou par leurs valeurs d'initialisation).\n\n\n\n### Comment ça marche ? ###\n\nNous allons donc voir en quelques exemples que ce qui est porteur du type n'est pas la variable en elle-même, mais l'opérande ou l'expression (groupe d'au moins un opérande et un opérateur). Pour bien comprendre nos exemples, nous allons vérifier que nous parlons bien de la même chose quand nous parlons de variables, d'opérandes, d'opérateurs, d'expressions, de conditions, de déclarations et d'instructions.\n\nAinsi les instructions suivantes :\n\n```js\nvar num = 20 + true, \n    bool;\nstr = \"Hello World\"; \ndelete str; \nif (num === 21) { \n    bool = true;\n} else {\n    bool = false;\n    num = 0;\n}\n```\n\nse décomposent ainsi :\n\n```\n┌──────────────────────────────────────────────────┬───────────────────────────────┬───────────────────┬───────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Instruction                                      │ Instruction                   │ Instruction       │ Instruction                                                                                                       │\n├──────────────────────────────────────────────────┼──────────────────────────┬────┼──────────────┬────┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤\n│                                                  │                          │    │              │    │ Contrôle de flux                                                                                                  │\n│                                                  │                          │    │              │    ├────────────────────────────────────────────────────────┬──────────────────────────────────────────────────────────┤\n│ Déclaration                                      │                          │    │              │    │ Structure de contrôle                                  │ Structure de contrôle                                    │\n├─────┬───────────────────────────────────────┬────┤                          │    │              │    ├──────┬────────────────┬─────┬──────────────────────┬───┼────────┬───────────────────────┬─────────────────────┬───┤\n│     │ Expression                            │    │ Expression               │    │ Expression   │    │      │ Expression     │     │ Instruction          │   │        │ Instruction           │ Instruction         │   │\n│     ├─────┬────┬────┬────┬──────┬────┬──────┤    ├─────┬────┬───────────────┤    ├────────┬─────┤    │      ├─────┬─────┬────┤     ├─────────────────┬────┤   │        ├──────────────────┬────┼────────────────┬────┤   │\n│     │     │    │    │    │      │    │      │    │     │    │               │    │        │     │    │      │     │     │    │     │ Expression      │    │   │        │ Expression       │    │ Expression     │    │   │\n│     │     │    │    │    │      │    │      │    │     │    │               │    │        │     │    │      │     │     │    │     ├─────┬────┬──────┤    │   │        ├──────┬────┬──────┤    ├─────┬────┬─────┤    │   │\n│     │ var │ op │ od │ op │ od   │ op │ var  │ sc │ prp │ op │ opérande      │ sc │ op     │ var │ sc │      │ od  │ op  │ od │     │ var │ op │ od   │ sc │   │        │ var  │ op │ od   │ sc │ var │ op │ od  │ sc │   │\n│     │     │    │    │    │      │    │      │    │     │    │               │    │        │     │    │      │     │     │    │     │     │    │      │    │   │        │      │    │      │    │     │    │     │    │   │\n│ var   num   =    20   +    true   ,    bool   ;    str   =    \"Hello World\"   ;    delete   str   ;    if (   num   ===   21   ) {   bool  =    true   ;    }   else {   bool   =    true   ;    num   =    0     ;    } │\n└─────┴─────┴────┴────┴────┴──────┴────┴──────┴────┴─────┴────┴───────────────┴────┴────────┴─────┴────┴──────┴─────┴─────┴────┴─────┴─────────────────┴────┴───┴────────┴──────────────────┴────┴────────────────┴────┴───┘\n```\n\n> Légende :\n- od = Opérande\n- op = Opérateur\n- var = Variable\n- prp = Propriété d'objet\n- sc = Point-virgule (Semicolon)\n- ins = Instruction\n\nNous voyons ici que l'opérande `20` renvoi `20` qui est un opérande de type *Number*. \n\n```js\n>  20\n<· 20\n```\n\nNous voyons également que l'opérande `true` renvoi `true` qui est un opérande de type *Boolean* :\n\n```js\n>  true\n<· true\n```\n\nCependant, dès que ces opérandes sont couplés à des opérateurs, l'expression en question ne retourne pas nécessairement le même type. Cela est le cas de l'expression `20 + true` ou\n\n- `20` (type *Number*) couplé à \n- `true` (type *Boolean*) par l'opérateur binaire d'addition `+`\n\nretourne un opérande `21` de type *Number* :\n\n```js\n>  20 + true\n<· 21\n```\n\nDans ce cas de figure, `true` a été converti implicitement par le système en *Number* (valant `1`) et additionné à `20`. C'est en cela que le typage est dynamique, ce sont les couples d'opérateurs et d'opérandes selon des règles bien précises qui décident du type de l'opérande retourné.\n\nVoyons un autre exemple avec \n- l'opérande de type *Number* contenu dans la variable `num` ainsi que \n- l'opérande `21` de type *Number* \ncouplé à l'opérateur binaire d'égalité stricte `===` :\n\n```js\n>  num === 21\n<· true\n```\n\nOn voit que cette expression renvoi un opérande de type *Boolean* alors que les deux opérandes originaux était de type *Number*.\n\n\n\n#### Undefined, le retour ####\n\nRevenons à notre expression `20 + true`. En ajoutant un opérateur d'affectation à gauche `=` à cette expression, nous affectons à `num` un opérande de type *Number* valant 21. Consommer `num` retourne son opérande.\n\n```js\n>  num = 20 + true\n<· 21\n```\n\nAvec le mot clé `var` ajouté, notre expression devient une déclaration. L'expression initiale reste la même mais notre instruction n'est plus utilisable dans les zones accueillant *uniquement* des expressions (il faudra l'utiliser dans les zone accueillant des déclarations, comme avec `for`). Dans ce cas de figure, l'opérande retourné est de type *Undefined* (sous entendu une valeur représentant l'« absence » de type).\n\n```js\n>  var num = 20 + true\n<· undefined\n```\n\nCependant la variable `num` contient bien l'opérande `21` (c'est le rôle de `=` ça).\n\n```js\n>  num\n<· 21\n```\n\n#### Undefined 3, le retour 2 ####\n\n`undefined` est également une valeur qui peut être attribuée à la variable lors de l'utilisation d'une déclaration `var`. La variable n'ayant pas d'opérateur d'affectation à gauche `=` se voit attribué un opérande de type *Undefined*.\n\n```js\n>  bool\n<· « Uncaught ReferenceError: bool is not defined »\n```\n\n```js\n>  var bool;\n   bool\n<· undefined\n```\n\n> Tout ceci pour dire que **le type d'opérande de retour d'une déclaration (ou d'un contrôle de flux) est** _Undefined_. Ce type peut également s'obtenir avec l'opérateur `void`. Ainsi dans l'expression `void {opérande de n'importe quel type}`, l'opérande de retour sera toujours du type *Undefined*.\n\n> Cela n'est __pas le cas du type__ *Null* __qui est un opérande que l'on peut uniquement déclarer manuellement__.\n\n\n\n\n\n## C'est l'histoire de 7 types ##\n\nLa première chose qui diffère entre le JavaScript et d'autres langages, hors mis le fait qu'il n'y ai pas que la valeur `null` qui représente « l'absence », est que cette valeur est elle même un type à part entier. En d'autres termes, les 3 types primitifs chaîne de caractère, nombre et booléen —respectivement *String*, *Number* et *Boolean*— ne peuvent pas avoir pour valeur `null`, à priori seul le type *Null* peut valoir `null`. Et de la même manière, seul le type *Undefined* peut valoir `undefined`.\n\nNous pouvons donc affirmer dans un premier temps que le JavaScript possède 6 types (7 depuis ES2015 / ES6) dont 5 types primitifs dont 2 types spéciaux que nous pouvons résumé dans le tableau ci-après :\n\n```\n┌────────────────────────────────────────────────────────────────┐\n│ Opérandes                                                      │\n├────────┬───────────────────────────────────────────────────────┤\n│ ES6    │ ES5                                                   │\n├────────┴──────────────────────────────────────────────┬────────┤\n│ Primitives                                            │        │ \n├────────┬────────┬────────┬─────────┬──────────────────┤        │\n│        │        │        │         │ Spéciaux         │        │\n│        │        │        │         ├───────────┬──────┤        │\n│ Symbol │ String │ Number │ Boolean │ Undefined │ Null │ Object │\n└────────┴────────┴────────┴─────────┴───────────┴──────┴────────┘\n```\n\nNous n'allons pas aborder le type **Symbol** dans cet article qui n'aidera pas à comprendre la différence entre `null` et `undefined`, et reviendrons au type **Object** plus loin.\n\n\n\n### Quelque chose de primitif ###\n\nJusque là, nous n'avons pas encore répondu à la question. Nous allons creuser un peu plus en détail le fonctionnement des opérandes avant de s'intéresser à la question principale. Puisque nous allons uniquement nous intéresser dans cette partie aux types primitifs, les opérandes peuvent être appelés ici des primitives.\n\nComme nous avons pu le voir précédemment, chaque primitive peut en renvoyer une autre avec l'aide d'un opérateur. On peut ainsi dire que n'importe quel type peut se « transformer » en un autre type. Par exemple pour nos 3 primitives vedettes nous avons :\n\n**String**\n\nqui devient un **Number** grâce à l'aide de l'opérateur unaire `+` :\n\n```js\n>  +\"42\"\n<· 42\n```\n\n```js\n>  +\"Hello World\"\n<· NaN\n```\n\n```js\n>  +\"\"\n<· 0\n```\n\n*Note : `NaN` (Not A Number) est bien de type *Number* (Si, si...), il est généré par des convertions de type qui ne peuvent pas devenir des valeurs numériques usuelles.*\n\nou qui devient un **Boolean** grâce à l'aide de l'opérateur unaire `!` (x2) :\n\n```js\n>  !!\"\"\n<· false\n```\n\n```js\n>  !!\"Hello World\"\n<· true\n```\n\n```js\n>  !!\"0\"\n<· true\n```\n\n**Number**\n\nqui devient un **String** grâce à l'aide de l'opérateur binaire `+` et d'un opérande de type *String* :\n\n```js\n>  42 + \"\"\n<· \"42\"\n```\n\n```js\n>  -0 + \"\"\n<· \"0\"\n```\n\n```js\n>  NaN + \"\"\n<· \"NaN\"\n```\n\nou qui devient un **Boolean** grâce à l'aide de l'opérateur unaire `!` (x2) :\n\n```js\n>  !!42\n<· true\n```\n\n```js\n>  !!0\n<· false\n```\n\n```js\n>  !!NaN\n<· false\n```\n\n**Boolean**\n\nqui devient un **String** grâce à l'aide de l'opérateur binaire `+` et d'un opérande de type *String* :\n\n```js\n>  false + \"\"\n<· \"false\"\n```\n\n```js\n>  true + \"\"\n<· \"true\"\n```\n\nou qui devient un **Number** grâce à l'aide de l'opérateur unaire `+` :\n\n```js\n>  +true\n<· 1\n```\n\n```js\n>  +false\n<· 0\n```\n\n#### « Faux ! » ####\n\nCes transformations signifient que n'importe quelle valeur de primitive à forcément un équivalent de type *Boolean*, et donc une équivalence `true` ou `false`. Voyons cela à travers les tableaux suivants :\n\n**String**\n\n```\n┌────────────────────────────────────────────────────────────────┐\n│ String vers Boolean                                            │\n├───────┬─────┬─────┬───────────────┬─────┬────────┬─────────────┤\n│ \"\"    │ \" \" │ \"a\" │ \"Hello World\" │ \"0\" │ \"null\" │ \"undefined\" │\n├───────┼─────┴─────┴───────────────┴─────┴────────┴─────────────┤\n│ false │ true                                                   │\n└───────┴────────────────────────────────────────────────────────┘\n```\n\n**Number**\n\n```\n┌───────────────────────────────────────────────────────────────┐\n│ Number vers Boolean                                           │\n├───┬─────┬────┬─────┬─────┬─────┬───────┬──────────┬───────────┤\n│ 0 │ NaN │ -0 │ 1   │ -1  │ 789 │ -1789 │ Infinity │ -Infinity │\n├───┴─────┴────┼─────┴─────┴─────┴───────┴──────────┴───────────┤\n│ false        │ true                                           │\n└──────────────┴────────────────────────────────────────────────┘\n```\n\n**Number**\n\n```\n┌──────────────────────┐\n│ Boolean vers Boolean │\n├───────┬──────────────┤\n│ false │ true         │\n├───────┼──────────────┤\n│ false │ true         │\n└───────┴──────────────┘\n```\n\n**Null**\n\n```\n┌───────────────────┐\n│ Null vers Boolean │\n├───────────────────┤\n│ null              │\n├───────────────────┤\n│ false             │\n└───────────────────┘\n```\n\n**Undefined**\n\n```\n┌────────────────────────┐\n│ Undefined vers Boolean │\n├────────────────────────┤\n│ undefined              │\n├────────────────────────┤\n│ false                  │\n└────────────────────────┘\n```\n\n> Ce qui signifie que dans la totalité de tous les types et valeurs possible des opérandes, **les 7 uniques valeurs pouvant être** `false` **dans une condition** sont :\n\n> - `false`,\n> - `0`, `-0`, `NaN`,\n> - `\"\"`,\n> - `null` et\n> - `undefined`.\n\n> Tout le reste est obligatoirement `true`, et c'est aussi le cas de notre dernier type : le type _Object_.\n\n\n\n### Tout n'est qu'Objet ###\n\nPenchons nous à présent du côté du dernier type. Celui-ci contient la totalité du reste en JavaScript ! Les objets sont de type *Object*, les functions sont de type *Object*, les tableaux sont de type *Object*. Math, RegExp, JSON, etc. sont de type *Object*.\n\nÀ ce titre, ils ont donc tous la capacité d'accueillir des propriétés :\n\n```js\n>  var obj = new Object();\n   obj.test = \"Bruno\";\n<· \"Bruno\"\n```\n\n```js\n>  var obj = {};\n   obj.test = \"Bruno\";\n<· \"Bruno\"\n```\n\n```js\n>  var fn = new Function();\n   fn.test = \"Bruno\";\n<· \"Bruno\"\n```\n\n```js\n>  var fn = function () {};\n   fn.test = \"Bruno\";\n<· \"Bruno\"\n```\n\n```js\n>  var arr = new Array();\n   arr.test = \"Bruno\"\n<· \"Bruno\"\n```\n\n```js\n>  var arr = [];\n   arr.test = \"Bruno\";\n<· \"Bruno\"\n```\n\nmême s'ils y a une différence entre un objet utilisé uniquement comme agrégateur de valeur et ceux pouvant être exécuté : \n\n```js\n>  typeof {}\n<· \"object\"\n```\n\n```js\n>  typeof []\n<· \"object\"\n```\n\n```js\n>  typeof (function () {})\n<· \"function\"\n```\n\n#### Quels sont vos références ? ####\n\nLà ou un opérande de type objet diffère fondamentalement d'un opérande de type primitif c'est qu'il est stocké dans les variables et les propriétés d'autres objets par référence. Cela signifie qu'il ne retourne pas un opérande lorsqu'il est analysé seul mais qu'il retourne une référence vers lui-même.\n\n**Cas d'une primitive qui copie son contenu**\n\n```js\n>  var value = \"a\";\n\n   (function (val) {\n       val = \"b\";\n   }(value));\n\n   value;\n<· \"a\"\n```\n\n**Cas d'un objet qui partage une référence**\n\n```js\n>  var ref = { name: \"a\" };\n\n   (function (obj) {\n       obj.name = \"b\";\n   }(ref))\n\n   ref;\n<· Object {name: \"b\"}\n```\n\n> Cela induit une chose : un objet, qu'il soit remplit de propriété ou vide, **est toujours évalué à** `true` **dans un contexte de booléen**. Il n'existe donc aucun moyen pour un objet d'être `false` dans une condition.\n\n\n\n\n\n## Batnull vs. Superundefined ##\n\nBien, je pense que nous en savons assez pour dégager l'utilisé de `null`, `undefined` et de répondre à la question « _Quelle est la différence entre la valeur `null` et la valeur `undefined` ?_ ». Mais ce n'est pas tout, nous allons également pouvoir identifier les différences avec `\"\"`, `0`, `NaN` et `false` : 6 valeurs qui au final sont évaluées à `false`.\n\n\n\n### C'est bien de rester neutre... ###\n\nSachez que même si `null` et `undefined` sont censés représenté « l'absence » de quelque chose ; s'ils sont évalués avec des opérateurs réclamant une transformation en *String*, ils ne représentent pas nécessairement l'élément neutre.\n\n```js\n>  var str1,\n       str2 = \"Hello\";\n   str1 + str2\n<· \"undefinedHello\"\n```\n\n```js\n>  var str1 = null,\n       str2 = \"Hello\";\n   str1 + str2\n<· \"nullHello\"\n```\n\nAinsi au lieu d'obtenir `\"Hello\"` en sortie nous obtenons `\"undefinedHello\"` ou `\"nullHello\"`\n\nÉgalement, s'ils sont utilisés avec des opérateurs réclamant une transformation en *Number*, `null` et `undefined` ne sont pas consistant l'un l'autre :\n\n```js\n>  var str1,\n       str2 = 1;\n   str1 + str2\n<· NaN\n```\n\n```js\n>  var str1 = null,\n       str2 = 1;\n   str1 + str2\n<· 0\n```\n\nLe plus intéressant va donc être de définir les variables de type *String*, *Number* et *Boolean* en les initialisant avec leur éléments neutre c'est à dire :\n\n- Celui qui va être évalué à `false` dans un contexte de condition,\n- Celui qui va être ignoré lors de l'utilisation de l'opérateur `+` (concaténation), `+` (addition) ou `&&`.\n\nLe fait de les définir de cette manière va également permettre au développeur de comprendre quels types d'opérande doit contenir la variable tout au long de son cycle de vie s'il est adepte du typage fort (ou dans un soucis de lisibilité):\n\n```js\nvar str = \"\",\n    num = 0,\n    bool = false;\n```\n\nAinsi les opérations suivantes seront consistantes pour :\n\n*une chaîne de caractère*\n\n```js\n>  (str) ? true : false\n<· false\n```\n```js\n>  \"Hello World\" + str\n<· \"Hello World\"\n```\n```js\n>  typeof str\n<· \"string\"\n```\n```js\n>  str = \"Hello World\";\n   typeof str;\n<· \"string\"\n```\n\n*pour un nombre*\n\n```js\n>  (num) ? true : false\n<· false\n```\n```js\n>  1 + num\n<· 1\n```\n```js\n>  typeof num\n<· \"number\"\n```\n```js\n>  num = 42;\n   typeof num;\n<· \"number\"\n```\n\n*pour un Boolean*\n\n```js\n>  (bool) ? true : false\n<· false\n```\n```js\n>  bool && true\n<· false\n```\n```js\n>  typeof bool\n<· \"boolean\"\n```\n```js\n>  bool = true;\n   typeof bool;\n<· \"boolean\"\n```\n\nIl va donc être intéressant de laisser le système fournir un opérande de type *Undefined* à une variable uniquement si elle peut changer de type au cours de son cycle de vie et donc le définir en tant que tel.\n\n```js\nvar anything, // var anything = undefined,\n    str = \"\",\n    num = 0,\n    bool = false;\n```\n\n\n\n### ...mais c'est null pour un Objet ###\n\nEt c'est là qu'intervient notre type *Null*. Puisque le type *Object* est quoi qu'il arrive évalué à `true` dans un contexte booléen, il est impossible d'initialiser sa référence à « vide ». Or la valeur `null` est justement évalué à `false` et... **révélation**... retourne `object` quand on utilise l'opérateur `typeof`. De plus, il n'y a pas d’ambiguïté possible car seul vous pouvez affecter un opérande `null` sachant qu'aucune expression ne retourne cette valeur : on fait forcément référence à un objet non encore initialisé.\n\nAinsi définir\n\n```js\nvar obj = null;\n```\n\nsignifie que `obj` accueillera un objet :\n\n```js\n>  (obj) ? true : false\n<· false\n```\n```js\n>  typeof obj\n<· \"object\"\n```\n```js\n>  +obj // +\"\"\n<· 0    // 0\n```\n```js\n>  obj = {};\n   typeof obj;\n<· \"object\"\n```\n```js\n>  +obj // +\"Hello World\"\n<· NaN  // NaN\n```\n\n\n\n#### NaN : Null avec Number ####\n\nQuid de l'utilisation de `null` comme initialisation des types *Number* voir même *Boolean* ? C'est vrai, on a vu que `null` se transformait en `0` qui est neutre pour le type *Number* et en `false` qui est neutre pour le type *Boolean*. Rien n'est impossible ! Et c'est une éventualité mais gardez à l'esprit que cela fait perdre de la consistance et de la compréhension à votre code.\n\nEffectivement, si pour une raison ou une autre vous ne souhaitez pas utiliser `0` comme élément neutre car il fait tout de même partis des valeurs numériques, vous pouvez le remplacer par `NaN` qui renvoi bien `\"number\"` avec l'opérateur `typeof` (contrairement à `null` qui renvoi `\"object\"`...).\n\nEn ce qui concerne le type *Boolean*, ça raison d'être est le fait de n'avoir que deux, et uniquement deux états possibles, aucun intérêt donc de ne pas le mettre à `false` (ou voir à `true`) plutôt qu'à `null`.\n\nEt pour finir, puisque les variables n'ont pas de type à proprement parlé, les définir par défaut avec `null` empêche de ce fait de saisir le type que vous souhaitez y voir placer par la suite...\n\n\n\n#### Undefined n'est pas Not Defined ####\n\nIl y a encore une joie du JavaScript qui vient complexifier tout ça, une variable peut à première vue contenir an opérande de type *Undefined* ou *Null* mais également ne pas contenir d'opérande ce qui lève l'exception `ReferenceError`. On va essayer de comprendre ça tout de suite avant de conclure.\n\nUtilisons `str` qui contient un opérande de type *String* :\n\n```js\n>  str\n<· \"Hello World\"\n```\n\nCouplé à l'opérateur `delete`, cet expression retourne comme opérande un type *Boolean* pour signifier si l'opération à réussi :\n\n```js\n>  delete str\n<· true\n```\n\nOpération qui a pour conséquence de vider la propriété `str` de l'objet global `window` de son opérande et donc de la laisser sans rien :\n\n```js\n>  str\n<· « Uncaught ReferenceError: str is not defined »\n```\n\nIl ne faut pas confondre `str = \"Hello World\"` qui affecte à la propriété de l'objet global `window.str` un opérande de type *String* et `var str = \"Hello World\"` qui affecte à une variable locale un opérande de type *String*.\n\nEffectivement, une variable locale ne peut jamais être vidé de son opérande et l'expression :\n\n```js\n>  var str = \"Hello World\"\n<· \"undefined\"\n```\n\n```js\n>  delete str\n<· false\n```\n\n```js\n>  str\n<· \"Hello World\"\n```\n\nn'efface pas la valeur d'une variable. Ainsi une variable initialisée dans le champ lexical local doit être mise à `undefined` si vous souhaitez signifier qu'elle n'est plus utilisée.\n\n#### « Euh... Pourquoi ? » ####\n\nEn fait, quand vous utilisez `str = \"Hello World\"` alors qu'il n'a pas été défini au préalable par l'opérateur `var`, vous faites exactement la même chose que `window.str = \"Hello World\"` dans un navigateur ou `global.str = \"Hello World\"` en Node.js par exemple. Cela signifie donc que vous n'affectez pas un opérande à une variable, mais vous affectez un opérande à la propriété d'un objet : exactement de la même manière qu'avec cette déclaration `{ str: \"Hello World\"; }`. L'opérateur `delete` sert donc à « retirer » la propriété d'un objet là ou le mettre à `undefined` signifie simplement que la propriété n'a pas réellement d'opérande primitif ou objet.\n\nDans cet exemple, la propriété ne disparaît pas :\n\n```js\n>  var obj = {\n       str: \"Hello World\",  \n       str2: \"Bye!\"\n   };\n   obj.str2 = undefined;\n   obj;\n<· Object {str: \"Hello World\", str2: undefined}\n```\n\nAlors que dans celui-ci, si :\n\n```js\n>  var obj = {\n       str: \"Hello World\",  \n       str2: \"Bye!\"\n   };\n   delete obj.str2;\n   obj;\n<· Object {str: \"Hello World\"}\n```\n\nEn d'autre terme, quand vous sollicitez une variable ainsi : `myVar`, \n\n- si celle-ci existe en tant que variable local vous obtiendrez au moins : `undefined` (sauf si elle contient un autre opérande).\n- si elle n'existe pas en local mais existe en tant que propriété de l'objet global vous obtiendrez au moins : `undefined` (sauf si elle contient un autre opérande).\n- sinon vous obtiendrez « Uncaught ReferenceError: myVar is not defined ».\n\nIl faut bien comprendre que ce message concerne la variable en elle même et non l'opérande qui pour le coup n'existe pas du tout : une sorte de « vrai undefined ».\n\n\n\n\n\n## tl;dr ##\n\nVoici mon utilisation des 5 types primitifs et du type *Object* et quel est la différence d'utilisation entre les constantes `undefined` ou `null`.\n\n**String**\n\nSi vous savez qu'une variable sera uniquement de type chaîne de caractère durant son cycle de vie, vous pouvez l'initialiser à `\"\"` :\n\n```js\n> (\"\") ? true : false; // false\n  typeof \"\"; // \"string\";\n  (\"Hello World\") ? true : false; // true\n  typeof \"Hello World\"; // \"string\"\n\n  function (str) {\n      str = str || \"\";\n  }\n```\n\n**Number**\n\nSi vous savez qu'une variable sera uniquement de type numérique durant son cycle de vie, vous pouvez l'initialiser à `0` :\n\n```js\n> (0) ? true : false; // false\n  typeof 0; // \"number\";\n  (42) ? true : false; // true\n  typeof 42; // \"number\"\n\n  function (num) {\n      num = num || 0;\n  }\n```\n\n**Boolean**\n\nSi vous savez qu'une variable sera uniquement de type booléen durant son cycle de vie, vous pouvez l'initialiser à `false` :\n\n```js\n> (false) ? true : false; // false\n  typeof false; // \"boolean\";\n  (true) ? true : false; // true\n  typeof true; // \"boolean\"\n\n  function (bool) {\n      bool = bool || false;\n  }\n```\n\n**Object**\n\nSi vous savez qu'une variable sera uniquement de type objet, par convention, vous pouvez l'initialiser à `null` :\n\n```js\n> (null) ? true : false; // false\n  typeof null; // \"object\";\n  ({}) ? true : false; // true\n  typeof {}; // \"object\"\n\n  function (obj) {\n      obj = obj || null;\n  }\n```\n\n*Note: l'utilisation pratique de `null` est d'être la version évalué à `false` d'un type Object car un objet est toujours `true`, et parce que `typeof null` retourne `object`. Cela signifie que `typeof myVarObject` retourne une valeur consistante pour les deux types Object et Null.*\n\n**Types multiples**\n\nSi vous savez qu'une variable peu être de plusieurs type (tout au long de son cycle de vie), par convention, vous pouvez l'initialiser à `undefined`.\n\n```js\n> (undefined) ? true : false; // false\n  typeof undefined; // \"undefined\";\n  function (value) {\n      // value = value || undefined;\n  }\n```", "dates" : { "published" : { "$date" : 1485358080000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Est-il si null cet undefined ?", "urn" : "difference-entre-type-null-et-type-undefined-en-javascript" }
{ "__v" : 0, "_id" : { "$oid" : "5889c6e10b30ed1cc1db02ed" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48ba" }, { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "5310456355dfd5f7698d48bb" } ], "content" : "ES7 est déjà dans nos chaumières et, en plus d'être à peu près au point avec ES5, vous n'avez toujours pas digéré ES6 ! Il va être temps de nous y pencher de plus près sur ce blog pour aborder la suite de l'aventure JavaScript sereinement. Cet article à pour but, de vous en apprendre plus sur la version ES5 tout en la comparant à des équivalences ES6 : cela nous permettra de comprendre en quoi ses améliorations peuvent nous aider au quotidien. Nous allons éplucher les fonctionnalités dans un ordre logique d'apprentissage et explorer les mécaniques sous-jacentes. Ça risque d'être long alors, de la même manière que cet article va être publié en plusieurs mise à jour, n'hésitez pas à le lire en plusieurs fois.\n\n\n\n\n\n## A *curious* JavaScript Story ##\n\nC'est l'histoire d'un gars, *Netscape*, qui se dit : « ok, quand on va écrire des lignes dans un fichier, et qu'on va faire lire ce fichier à un programme, celui-ci va faire les trucs cool que les lignes lui disent de faire. » ; idée *presque* révolutionnaire puisque c'est déjà ce que fait n'importe quel programme concurrent. « ouais, mais moi, mon code il sera pas pré-transformé en charabia pour machine à l'avance, il sera lu et pris en compte directement ! ».\n\nNotre *Nets* l'invente pas pour rien ce programme. Son idée c'est de le placer dans son navigateur qui permet de surfer sur Internet pour faire des trucs cool dedans comme interagir avec le contenu d'une page ; ce qu'il fait. Le gars sait pas trop comment appeler ça et fini par l'appeler *JavaScript* car à l'époque, ça lui permet de se faire un peu de publicité sur le dos de son collègue *Java* (ou inversement proportionnel).\n\nL'idée du gars est tellement cool que *Microsoft* se dit qu'il va faire pareil et appel ça du *JScript* (histoire de se faire de la pub aussi quoi) et de le placer dans son navigateur fétiche à lui, appelé *Internet Explorer*. Mais *Nets* a autant les boules qu'il est sympa et décide, pour éviter que d'autres gars comme *Mic* fasse n'importe quoi avec son *JavaScript* de demander à son pote *Ecma International* de son petit nom *Ecma* d'expliquer et d'user de son réseau pour faire savoir que le *JavaScript* « ça marche comme ça, et pas autrement », chose que *Ecma* fait et consigne dans un papier sobrement intitulé *Standard ECMA-262*. Dans ce papier naît alors le nouveau standard *ECMAScript*. Grâce à ça, des mecs comme *Adobe* peuvent inventer des trucs sympa comme le *Flash* et les gens comme *Mic* sont censé arrêter de faire n'importe quoi.\n\n*Nets* était fière se son *JavaScript* car il avait inventé un « modèle objet orienté prototype » méga performant pour du langage de script. Après moult rebondissement cela c'est soldé par une version *ECMASript 3*. On va l'appeler *ES3* pour faire plus court. Cependant, des proches de *Ecma*, la Team4, qui avaient pas trop pigé le coup du prototypage, décida de faire évoluer la spécifications pour que ça ressemble plus à de l'objet fondé sur les classes comme ces bons langages compilés (*miam !*) et d'en faire à terme *ES4*.\n\nMais holà ! Les puristes se sont levés, la Team5. La Team5 a dit « l'ES, c'est avant tout du prototypage ! De diou ! » ce qui l'a mena a écrire en parallèle la même chose, mais en pas pareil, afin d'en faire à terme l'*ES5* que nous avons tous connu et qui vit dans *Chrome*, *Firefox*, *Safari*, *Opera*, et feu (en fait pas encore) Internet Explorer. Notre *Mic* a beau dire qu'il « a compris qu'il faut suivre les spécifications de *Ecma* », il galère quand même pas mal en ce traînant ses versions antérieurs incrustés à la cloueuse. *Mic*, *ES4*, *ES5*, etc. : ils perdent tout le monde. Les gens inventent des abstractions en *JavaScript* pour faire du *JavaScript* qui marche chez tout le monde. Les gars « nous ont aime les prototypes » se sont mis à chier des bibliothèques comme *Prototype* (qu'on comprenne bien qu'ils aiment les prototypes) tandis que les gars « nous ont aime les classes » se sont mis à chier des transpileurs et truc dans le genre parce que en vrai quand tu croises un type faible, mais dynamique, tu te dis que le gars est louches. Du coup, maintenant le « gars qui passe par là » jette un œil à tout ce beau monde et se dit : « et bah putain... ».\n\nES6 est alors en marche et réconcilie gentiment les gars du prototypage et des classes en prenant le partie suivant : « on va dire que ça marche par prototype ok, mais on va faire en sorte de planquer ça sous de la classe ! Malin, hein ? ».\n\nPar dessus ça, y a un mec, *Joyent*, qui se dit que même si JavaScript a besoin d'un hôte pour fonctionner, pourquoi ça serait forcément un navigateur ; l'hôte ? « Et si j'invitais ce bon vieux *JavaScript* à travailler... sur mon OS ? Que dis-je sur tous les OS ! ». Hop là ! Un peu de HTTP par ci, un peu de lecture/écriture de fichier par là et plop : *Node.js* est né. Du *JavaScript* côté serveur. À ce niveau, je vous parle pas du « gars qui passe par là » qui lui à surement abandonner l'histoire...\n\nEn tout cas *Joy* se laisse pas abattre et implémente ES6 en parallèle du fonctionnement de ES5 dans *Node.js*. Le gars il s'en fou ; il est tout seul, il fait ce qu'il veut et surtout : il suit scrupuleusement les bon conseil d'*Ecma* contrairement à un certain *Mic*. *Mic*, qui clame haut et fort à présent que « si, si. dans mon *Edge*, maintenant, je fais tout bien » ; mais sans succès.\n\nRésultat des courses ? *HTML5* propulse *JavaScript*, *Node.js* propulse *JavaScript*, *ES6* propulse *JavaScript* et le train roule sacrément vite...\n\nIl est peut-être venu le temps d'essayer de rattraper les wagons si vous êtes resté sur le quai !\n\n\n\n\n\n## Liste des fonctionnalités ES6 ##\n\nLe schéma sera le suivant : on tente d'expliquer ce qu'on aurait pu faire en ES5, on le fait en ES6 en constatant les différences et en levant la valeur ajoutée.\n\n\n\n### Constantes `const` ###\n\n**Constants > Constants**\n\nES6 ajoute un support pour les variables immuables. Sous ce jolie nom se cache simplement le concept de constante : une variable à laquelle aucun nouveau contenu ne peut être assigné après sa déclaration (en utilisant l'opérateur d'affectation à gauche `=`). À noter que c'est le conteneur et non le contenu qui est immuable, cela signifie qu'un objet qui serait affecté à une variable immuable ne peut pas être remplacé (sa référence ne peut pas être changée), mais son contenu lui, peut bouger (ajout, modification et suppression de propriétés). Un petit rappel entre [les objets qui sont stockées par référence et les primitives qui sont directement stocké se trouve ici](./difference-entre-type-null-et-type-undefined-en-javascript/).\n\n> *`En`* **ES5** : D'après cette description, un des moyens de créer une constante avec ES5 est d'utiliser la fonction `Object.defineProperty()`. Cette fonction permet d'attribuer à des propriétés d'objet un comportement immuable. Créons ainsi la constante `PI`.\n\n> ```js\n>>  /** \n    * `PI` en tant que variable local ou \n    * `window.PI` en tant que variable global n'existe pas.\n    */\n   PI;\n<· « Uncaught ReferenceError: PI is not defined »\n```\n\n> ```js\n>>  /**\n    * On va créer une propriété se comportant « comme » une constante.\n    * p1 : Affectation de la propriété à l'objet global `window` (navigateur)\n    *      ou à l'objet global `global` (node.js).\n    * p2 : Définition de la clé de la propriété en tant que l'opérande `\"PI\"`.\n    * p3 : Options attribuant sa valeur avec l'opérande `3.141593`, \n    *      expliquant qu'il apparaît lors de l'utilisation d'une boucle et surtout\n    *      qu'aucun opérande ne peut-être affectée après sa définition\n    */\n   Object.defineProperty(window ? window : global, \"PI\", {\n       value:        3.141593,\n       enumerable:   true,\n       writable:     false\n   });\n<· Window {…}\n```\n\n> ```js\n>>  /* `PI` est maintenant défini et vaut `3.141593`. */\n   PI;\n<· 3.141593\n```\n\n> ```js\n>>  /** \n    * Affecter `PI` va effectivement renvoyer \n    * l'opérande que vous avez choisis d'affecter. \n    */\n   PI = \"Nombre PI\";\n<· \"Nombre PI\"\n```\n\n> ```js\n>>  /* Cependant la valeur `PI` n'aura pas bougée d'un iota. */\n   PI;\n<· 3.141593\n```\n\n> ```js\n>>  /** \n    * Ce qu'il faut bien comprendre dans notre cas de figure \n    * c'est que PI est une variable globale (ou propriété de l'objet global). \n    */\n   PI === window.PI;\n<· true\n```\n\n-----\n\n> **`En`** **ES6** : Le moyen de réellement créer une constante est d'utiliser l'opérateur `const`.\n```js\n>>  /** \n    * `PI` en tant que variable local ou \n    * `window.PI` en tant que variable global n'existe pas.\n    */\n   PI;\n<· « Uncaught ReferenceError: PI is not defined »\n```\n```js\n>>  /**\n    * On va créer une constante `PI` avec la valeur `3.141593`.\n    */\n   const PI = 3.141593;\n<· undefined\n```\n```js\n>>  /* `PI` est maintenant défini et vaut `3.141593`. */\n   PI;\n<· 3.141593\n```\n```js\n>>  /** \n    * Affecter `PI` va cette fois lancer une exception. \n    */\n   PI = \"Nombre PI\";\n<· « Uncaught TypeError: Assignment to constant variable. »\n```\n```js\n>>  /** \n    * Cependant ce n'est ici pas l'équivalence de notre exemple ES5 car ici\n    * `PI` est une variable locale immuable (constante) et \n    * non une propriété de l'objet global. \n    */\n   PI === window.PI;\n<· false\n```\n\nEn conclusion l'opérateur `const` qui créé une constante (une variable locale immuable) n'est pas la même chose que la fonction `Object.defineProperty()` qui créé une propriété d'objet immuable, une sorte de *propstante* !\n\n\n\n### Variable à portée limitée `let` ###\n\n**Scoping > Block-Scoped Variables**\n\nContrairement à beaucoup de langage, en JavaScript ES5, la portée des variables déclarées avec l'opérateur `var` n'est pas limitée à un bloc d'accolade. Ainsi, si je défini une variable à l'intérieur d'une instruction de contrôle de flux comme `if`, ma variable sera également disponible à l'extérieur. Cela n'est plus le cas si ma variable est déclarée avec `let` (et également avec `const`). Cela signifie qu'une variable déclarée dans l'instruction `if` ou `for` n'existe pas en dehors.\n\n> *`En`* **ES5** : Voici le comportement induit par les variables déclarées avec l'opérateur `var` que ce soit entre les accolades mais également dans les boucles.\n\n> ```js\n>>  if (\"1\" == 1) {\n       /* Bien qu'elle soit créée dans un bloc... */\n       var str = \"Hello World\";\n   }\n   /* ...la variable `str` est accessible en dehors de ce bloc. */\n   str;\n<· \"Hello World\"\n```\n\n> ```js\n>>  if (\"1\" == 1) {\n       /* Seules les fonctions enferment la portée des variables... */\n       (function () {\n           var str = \"Hello World\";\n       }());\n   }\n   /* ...et les empêches d'être accessible de l'extérieur `str`. */\n   str;\n<· « Uncaught ReferenceError: str is not defined »\n```\n\n> ```js\n>>  /** \n    * Le fait que les variables ne soit pas limitées aux accolades empêche \n    * cette liste de fonction de fonctionner comme on le souhaiterait.\n    */\n   var callbacks = [];\n   for (var i = 0; i < 3; i++) {\n       /** \n        * Ainsi le problème est que à l'instant ou chaque fonction \n        * est assignée dans le tableau `callbacks` à l'indice `i`, \n        * `i` vaut la valeur actuel de la boucle.\n        */\n       callbacks[i] = function() { return i * 2; };\n   }\n   /** \n    * Cependant, lorsque `callbacks[0]()`, `callbacks[1]()` et `callbacks[2]()` sont exécutées\n    * la valeur de `i` est de `3` ce qui donne pour l'exemple courant au lieu de `0 2 4`...\n    */\n   callbacks[0]() + \" \" + callbacks[1]() + \" \"  + callbacks[2]();\n<· 6 6 6\n```\n\n> ```js\n>>  /** \n    * Pour solutionner le problème il faut faire un instantané \n    * de la valeur de `i` en passant i en paramètre d'une fonction, \n    * ce qui copie sa valeur et la conserve pour la suite puisque \n    * `i` est une primitive et que les primitives sont assignée par copie.\n    */\n   var callbacks = [];\n   for (var i = 0; i < 3; i++) {\n       (function (i) {\n           /* Ainsi le paramètre `i` est figé à sa valeur lors de son assignation. */\n           callbacks[i] = function() { return i * 2; };\n       }(i));\n   }\n   /* Et le résultat est cette fois bien celui attendu. */\n   callbacks[0]() + \" \" + callbacks[1]() + \" \"  + callbacks[2]();\n<· 0 2 4\n```\n\n-----\n\n> **`En`** **ES6** : Tous nos problèmes sont résolus ici par ce fameux `let`. Non seulement celui-ci nous permet de vraiment cloisonner une variable dans un bloc, mais également de créer des boucles sans gérer nous même le cloisonnement de la variable d'itération.\n\n> ```js\n>>  if (\"1\" == 1) {\n      /* Cette fois ci une variable créée dans un bloc... */\n      let str = \"Hello World\";\n   }\n   str;\n   /* ...n'est pas accessible en dehors de ce bloc. */\n<· « Uncaught ReferenceError: str is not defined »\n```\n\n> ```js\n>>  /** \n    * Et le fait que les variables soient cette fois limitées aux accolades, et donc\n    * à un seul tour de boucle permet à notre liste de fonctionner comme prévue.\n    */\n   var callbacks = [];\n   for (let i = 0; i < 3; i++) {\n       /* Grâce à `let`, `i` est un instantané à chaque tour de boucle. */\n       callbacks[i] = function() { return i * 2; };\n   }\n   /* Cela permet à nos fonctions de fonctionner comme souhaitez. */\n   callbacks[0]() + \" \" + callbacks[1]() + \" \"  + callbacks[2]();\n<· 0 2 4\n```\n\nEn conclusion l'opérateur `let` est parfait pour permettre des variables locales à un bloc d'être consommées sans impacter le reste du champ lexical. Il permet également de créer des instantanés à chaque tour de boucle pour éviter le cloisonnement.\n\n\n\n### Fonction à portée limitée `{}` ###\n\n**Scoping > Block-Scoped Functions**\n\nDe la même manière qu'il est possible de limiter une variable à un block en ES6, il est également possible de limiter une fonction à un block. Cela grâce à l'ajout des accolades `{` et `}` autour de la zone dont les fonctions doivent être à portée limitée.\n\n> *`En`* **ES5** : Voici le comportement d'une fonction définie puis redéfini dans un block.\n\n> ```js\n>>  /* Si je définie une variable dans le flux... */\n   function test() { return \"external\"; }\n   /* ...puis que je la redéfini ensuite dans un block... */\n   {\n       function test() { return \"internal\"; }\n   }\n   /**\n    * ... `test()` va retourner `\"internal\"` puisqu'en JavaScript \n    * les blocks ne cloisonnent pas les variables et fonctions.\n    */\n   test();\n<· \"internal\"\n```\n\n> ```js\n>>  function test() { return \"external\"; }\n   /**\n    * Il faut faire appel à une fonction anonyme auto-exécutée\n    * pour induire un nouveau champ lexical et cloisonner\n    * la valeur.\n    */\n   (function () {\n       function test() { return \"internal\"; }\n   }());\n   test();\n<· \"external\"\n```\n\n-----\n\n> **`En`** **ES6** : Cependant avec ES6, il est possible de limitée la portée des fonctions déclaré à un block et non à une fonction en entourant le tout des accolades `{` *et* `}`.\n\n> ```js\n>>  /* Si j'englobe les fonctions avec des accolades... */\n   {\n       function test() { return \"external\"; }\n       /* ...les futures accolades internes seront cloisonnante... */\n       {\n           function test() { return \"internal\"; }\n       }\n       /**\n        * ... et ainsi la fonction redéfini dans un sous block \n        * ne sera pas prise en compte dans le block du dessus.\n        */\n       test();\n   }\n<· \"external\"\n```\n\n> ```js\n>>  /** \n    * Il faut bien comprendre que ce comportement ne fonctionne qu'avec\n    * le mot-clé `function` aussi pour les variables, il faut utiliser `let`\n    */\n   {\n       var withVar = \"var external\";\n       let withLet = \"let external\";\n       {\n           var withVar = \"var internal\";\n           let withLet = \"let internal\";\n       }\n       withVar + \" | \" + withLet;\n   }\n<· \"var internal | let external\"\n```\n\nEn conclusion les fonctions cloisonnées permettent de limiter l'utilisation d'une fonction à un block sans créer de nouveau champ lexical. Le fait que ce mécanisme soit limité au mot clé `function` le rend difficilement appréhendable tout de même.\n\n\n\n### Valeurs de paramètre par défaut ###\n\n** Extended Parameter Handling > Default Parameter Values**\n\nQuand on déclare une fonction en JavaScript, on indique les paramètres qu'on lui passe entre ses parenthèses et... c'est tout. On ne précise pas le type attendu, on ne précise pas de valeur par défaut. Si on souhaite faire cela afin d'indiquer de quel type est une variable ou d'attribuer une valeur autre que `undefined` en cas de non passage de paramètre, il faut le faire à la main ! \n\nÇa c'était avant, car ES6 implémente les paramètres auxquelles ont peut passer des valeurs par défaut en cas d'absence lors de l'appel.\n\n> *`En`* **ES5** : Par défaut, une valeur non passé s'attribut la valeur de type Undefined : `undefined`.\n\n> ```js\n>>  function fn(str, nbr, bool, obj) {\n       return {\n           str:  str,\n           nbr:  nbr,\n           bool: bool,\n           obj: obj\n       };\n   };\n   fn(\"Hello World\");\n<· Object {str: \"Hello World\", nbr: undefined, bool: undefined, obj: undefined}\n```\n\n> Pour donner plus d'indication sur les valeurs à passer, ou affecter une valeur différente de `undefined` aux paramètres non passé on fait donc ainsi :\n\n> ```js\n>>  function fn(str, nbr, bool, obj) {\n       str  = str || \"\";\n       nbr  = nbr || NaN;\n       bool = bool || false;\n       obj = obj || null;\n       return {\n           str:  str,\n           nbr:  nbr,\n           bool: bool,\n           obj: obj\n       };\n   };\n   fn(\"Hello World\");\n<· Object {str: \"Hello World\", nbr: NaN, bool: false, obj: null}\n```\n\n-----\n\n> **`En`** **ES6** : Cependant avec ES6, il est directement possible d'affecter ses valeurs lors de la déclaration des paramètres.\n\n> ```js\n>>  function fn(str = \"\", nbr = NaN, bool = false, obj = null) {\n       return {\n           str:  str,\n           nbr:  nbr,\n           bool: bool,\n           obj: obj\n       };\n   };\n   fn(\"Hello World\");\n<· Object {str: \"Hello World\", nbr: NaN, bool: false, obj: null}\n```\n\n\n\n### Portée de fonction étendue `=>` ###\n\n**Arrow Functions > Lexical this**\n\nL'utilisation de `this` est un très vaste chapitre. Je [vous renvoi à cet article](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Op%C3%A9rateurs/L_op%C3%A9rateur_this) pour en comprendre toute sa portée. Ici nous allons étudier son comportement lorsqu'il est appelé à l'intérieur d'une fonction de retour.\n\n## En cours de rédaction... ##", "dates" : { "published" : { "$date" : 1485402720000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "Apprendre et comprendre JavaScript version ES6", "urn" : "apprendre-et-comprendre-javascript-version-es6" }
{ "__v" : 0, "_id" : { "$oid" : "58d6815a7ec3e92863770963" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "58d68584389fd824fd7cf278" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48cd" }, { "$oid" : "5310456355dfd5f7698d48ca" } ], "content" : "Ce billet fait partie de la collection _ES3 dans le détail_ et en constitue le Chapitre 1.\n\n<figure>\n    <a href=\"media/images/upload/execution-context.jpg\"><img class=\"openable\" src=\"media/images/upload/execution-context-mini.png\" alt=\"Les contextes d'exécution dans Inception\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\"></a>\n    <figcaption>La pile des contextes d'exécution VS La pile des rêves dans Inception</figcaption>\n</figure>\n\nDans ce billet nous évoquerons les contextes d'exécution en JavaScript ainsi que leurs différentes déclinaisons.\n\n\n\n\n\n## Définition\n\nChaque fois que du code JavaScript est exécuté, nous entrons dans un _contexte d'exécution_.\n\nLe _contexte d'exécution (dont la forme abrégée sera `EC` pour « execution context »)_ est un concept abstrait décrit par la spécification [ECMA-262-3](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf) pour classifier et différentier différent type de code exécutable.\n\nCe standard ne définie aucune structure ni aucune déclinaison en terme d'implémentation technique des contextes d'exécution. C'est un problème qui doit être traité par les moteurs qui implémentent le standard.\n\nPour résumé, un groupe de contexte d'exécution forme une pile (nommée « stack »). Le bas de cette pile est toujours le _contexte global (« global context »)_ alors que le sommet est le contexte d'exécution courant (actif). La pile est augmentée (« pushed ») lors de l'entrée dans un EC et diminuée (« popped ») lors de sa sortie d'un contexte d'exécution.\n\n\n\n\n\n## Les différentes déclinaisons de code exécutable\n\nLe concept de _déclinaison de code exécutable_ est directement lié au concept abstrait de contexte d'exécution. Il y a le code global, le code des fonctions et le code de `eval`. Voyons cela plus en détails.\n\nNous pouvons définir la pile des contextes d'exécution comme un tableau :\n\n*Pseudo-code*\n\n```js\nECStack = []\n```\n\nLa pile est augmentée chaque fois que nous entrons dans une fonction (même si la fonction est appelée _récursivement_ ou en tant que _constructeur_). Cela est également le cas lors de l'utilisation de la fonction intégrée `eval`.\n\n\n\n### Code global\n\nCe type de code est traité au niveau _Programme_ : c-à-d en chargeant un fichier externe `.js` ou un code se trouvant dans des balises `<script></script>`. Aucune partie de code qui se trouve à l'intérieur de fonctions n'est du code global.\n\nÀ l'initialisation (démarrage du programme), la pile `ECStack` ressemble à ceci :\n\n*Pseudo-code*\n\n```js\nECStack = [\n    globalContext\n]\n```\n\n\n\n### Code des fonctions\n\nEn entrant dans le code d'une fonction (quelle qu'elle soit), la pile `ECStack` est augmentée avec de un nouvel élément. Il est important de préciser qu'aucune partie de code définie dans une sous-fonction n'appartient à cette fonction.\n\nPrenons l'exemple d'une fonction qui va s'appeler elle-même de manière récursive une seule fois :\n\n*Code JavaScript*\n\n```js\n(function foo(flag) {\n    if (flag) {\n        return;\n    }\n    foo(true);\n})(false)\n```\n\nEt bien, la pile `ECStack` est modifiée comme suit :\n\n*Pseudo-code*\n\n```js\n// première activation de foo\nECStack = [\n    <foo> functionContext,\n    globalContext\n]\n  \n// activation récursive de foo\nECStack = [\n    <foo> functionContext (récursivement),\n    <foo> functionContext,\n    globalContext\n]\n```\n\nChaque `return` implicite ou explicite d'une fonction fait quitter le contexte d'exécution courant et diminue la pile `ECStack` en conséquence, refermant la pile de haut en bas. Une fois que l'exécution de ces codes est terminée, `ECStack` contient de nouveau uniquement le `globalContext` jusqu'à ce que le programme se termine.\n\nUne exception levée mais non interceptée peut aussi mettre fin à un ou plusieurs contextes d'exécution :\n\n*Code JavaScript*\n\n```js\n(function foo() {\n    (function bar() {\n        throw 'Sort des contextes de bar puis de foo';\n    })();\n})();\n```\n\n\n\n### Code de `eval`\n\nLes choses sont plus intéressantes avec du code de `eval`. Dans ce cas, il y a un concept de _contexte appelant (« calling context »)_, c-à-d un contexte depuis lequel la fonction `eval` est _appelée_.\n\nLes actions réalisées par `eval`, comme la définition de variable ou de fonction, influence le contexte _appelant_ :\n\n*Code JavaScript*\n\n```js\n// influence le contexte global\neval('var x = 10');\n \n(function foo() {\n    // ici, la variable `y`\n    // est créée dans le contexte local\n    // de la fonction « foo »\n    eval('var y = 20');\n})();\n  \nalert(x); // 10\nalert(y); // `y` n'est pas définie\n```\n\n> Notons qu'en mode strict à partir de ES5, `eval` n'influence plus le contexte appelant mais évalue son code dans un _bac à sable_ local.\n\nPour l'exemple ci-dessus nous avons les modifications de la pile `ECStack` suivantes :\n\n*Pseudo-code*\n\n```js\nECStack = [\n    globalContext\n]\n  \n// eval('var x = 10');\nECStack.push({\n    context: evalContext,\n    callingContext: globalContext\n})\n \n// Sortie du contexte `evalContext`\nECStack.pop()\n \n// appel de la fonction `foo`\nECStack.push(<foo> functionContext);\n \n// eval('var y = 20');\nECStack.push({\n    context: evalContext,\n    callingContext: <foo> functionContext\n})\n \n// Sortie du contexte `evalContext`\nECStack.pop()\n \n// sortie de foo\nECStack.pop()\n```\n\nCeci est une représentation de la logique de la _pile d'appels (« call-stack »)_.\n\n> Dans de vieilles implémentations de SpiderMonkey (Netscape ou Mozilla Firefox), et ceux jusqu'à la version 1.7, il était possible de passer un contexte appelant en tant que _second paramètre_ pour la fonction `eval`. Ainsi, quand le contexte existait toujours, il était possible d'en influencer les variables _privées_ :\n\n> *Code JavaScript*\n\n> ```js\nfunction foo() {\n  var x = 1;\n  return function () { alert(x); };\n};\n \n> var bar = foo();\n \n> bar(); // `1`\n \n> eval('x = 2', bar); // contexte passé et qui influence la variable interne `x`\n \n> bar(); // `2`\n```\n\n> Cependant, pour des raisons de sécurités les moteurs modernes ne permettent plus cela désormais.\n\n\n\n\n\n## Conclusion ##\n\nC'est le minimum théorique requis pour analyser plus en profondeur des éléments liés au fonctionnement des contextes d'exécution comme [l'objet des variables](https://blog.lesieur.name/l-objet-des-variables/) ou la [chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/) dont vous trouverez plus de détails dans les chapitres appropriés.\n\n> <div style=\"float: left;\"></div><div style=\"text-align: right\">[Chapitre 2 >>](https://blog.lesieur.name/l-objet-des-variables/)</div>\n\n**Références**\n\nSection correspondante de la spécification ECMA-262-3 — [10. Execution Contexts](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf).\n\nCe texte est une libre ré-écriture française de l’excellent billet [Тонкости ECMA-262-3. Часть 1. Контексты исполнения.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-1-execution-contexts/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).", "dates" : { "published" : { "$date" : 1490442000000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "ES3, Chap. 1 — Les contextes d'exécution en JavaScript", "urn" : "les-contextes-d-execution" }
{ "__v" : 0, "_id" : { "$oid" : "58d93a8c7924c16f049756ac" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "5310456355dfd5f7698d48ca" }, { "$oid" : "58d68584389fd824fd7cf278" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48cd" } ], "content" : "Ce billet fait partie de la collection _ES3 dans le détail_ et en constitue le Chapitre 2.\n\nNous déclarons des variables et des fonctions avec lesquels tournent nos programmes. Mais comment, et quand l'interpréteur trouve ces données ? Que se passe t-il quand une référence à un objet est demandée ?\n\n\n\n\n\n## Introduction\n\nBeaucoup de développeurs JavaScript savent que les variables sont intimement liées au contexte d'exécution :\n\n*Code JavaScript*\n\n```js\nvar a = 10; // variable du contexte global\n \n(function () {\n    var b = 20; // variable locale d'un contexte de fonction\n})();\n  \nalert(a); // 10\nalert(b); // `b` n'est pas définie\n```\n\nBeaucoup de développeurs savent également que la portée des variables est définie et limitée à l'exécution des contextes de fonctions. C-à-d que contrairement au C/C++, pour, par exemple, la structure de boucle `for` aucun contexte local n'est créé en JavaScript :\n\n*Code JavaScript*\n\n```js\nfor (var k in { a: 1, b: 2 }) {\n    alert(k);\n}\n  \nalert(k); // la variable `k` est toujours dans la portée même si la boucle est terminée\n```\n\nRegardons plus en détail ce qu'il se passe quand nous déclarons nos données.\n\n\n\n\n\n## Déclaration de données\n\nSi les variables sont liées à leur contexte d'exécution, il doit savoir où leurs données sont stockées et comment y accéder. Le mécanisme permettant cela est appelé l'_objet des variables_.\n\nL'_objet des variables (dont la forme abrégée sera `VO` pour « variable object »)_ est un objet spécial lié à un contexte d'exécution et qui stock :\n\n- _les déclarations de variables_ (dont la forme abrégée sera `VD` pour « variable declaration »),\n- _les déclarations de fonctions_ (dont la forme abrégée sera `FD` pour « function declaration »)\n- _les paramètres formels de fonctions_ (dont la forme abrégée sera `FP` pour « formal parameters »)\n\ndéclarés dans un contexte.\n\n> À noter qu'en ES5 le concept d'_objet des variables_ est remplacé par le modèle des _environnements lexicaux_ qui seront plus détaillés dans le chapitre approprié.\n\nDe façon schématique dans ces exemples, il est possible de présenter l'objet des variables comme un objet JavaScript standard :\n\n*Pseudo-code*\n\n```js\nVO = {}\n```\n\nEt comme nous l'avons dit, l'objet des variables est une propriété d'un contexte d'exécution :\n\n*Pseudo-code*\n\n```js\nactiveExecutionContext = {\n    VO: {\n        <...> // données du contexte `VD`, `FD` (et `FP`)\n    }\n}\n```\n\nIl est possible d'avoir accès à l'objet des variables du _contexte global_ en accédant à l'objet global (car l'objet global est lui-même l'objet des variables). Pour tous les autres contextes, faire référence à l'objet des variables est impossible, c'est un mécanisme du moteur.\n\nQuand nous déclarons une variable ou une fonction dans le contexte global, ce n'est rien d'autre que la création d'une nouvelle propriété au sein de l'objet des variables avec le nom et la valeur de notre variable ou fonction.\n\nExemple :\n\n*Code JavaScript*\n\n```js\nvar a = 10;\n \nfunction test(x) {\n    var b = 20;\n};\n \ntest(30);\n```\n\nAvec les objets des variables correspondant :\n\n*Pseudo-code*\n\n```js\n// Objet des variables du contexte global\nVO(globalContext) = {\n    a: 10,\n    test: <référence à la `FD` `test`>\n}\n  \n// Objet des variables du contexte de la fonction `test`\nVO(<test> functionContext) = {\n    x: 30,\n    b: 20\n}\n```\n\nVoilà pour une vision théorique. Il faut juste être conscient qu'au niveau de l'implémentation réel l'objet des variables est quelque chose d'abstrait. Dans un contexte d'exécution réel, `VO` porte un autre nom et à une structure probablement différente.\n\n\n\n\n\n## L'objet des variables dans différents contextes d'exécution\n\nCertaines opérations (comme l’instanciation des variables) et comportement de l'objet des variables sont identiques pour toutes les déclinaisons de contexte d'exécution.\n\nPour expliquer cela, il va être nécessaire de présenter une partie de l'objet des variables comme commun à toutes les déclinaison et une partie définissant des éléments et comportements additionnel.\n\n*Schéma*\n\n```js\nVO // contient des `VD` et `FD`\n║\n╠══> VO(globalContext) === GO === this\n║\n╚══> VO(functionContext) === AO // contient des `FP` et `ArgO`\n```\n\nVoyons cela plus en détail.\n\n\n\n### L'objet des variables dans le contexte global\n\nTout d'abord il est nécessaire de donner une définition de l'_objet global_.\n\nL'_objet global (dont la forme abrégée sera `GO` pour « global object »)_ est un objet qui est déjà existant avant l'entrée dans n'importe quel contexte d'exécution car il est créer au démarrage du programme. Cet objet existe en un unique exemplaire, et ses propriétés sont accessibles depuis n'importe quel endroit du programme. Le cycle de vie de l'objet global s’arrête quand le programme se termine.\n\nÀ sa création, l'objet global est initialisé avec des propriétés comme `Math`, `String`, `Date`, `parseInt`, etc. Parmi toutes ses propriétés il y en a une faisant directement référence à l'objet global.\n\nDans le model objet des navigateurs c'est `window` : \n\n*Pseudo-code*\n\n```js\nactiveGlobalContext = {\n    GO: {\n        Math: <...>,\n        String: <...>,\n        document: <...>,\n        <...>,\n        window: GO\n    }\n}\n```\n\nou encore dans Node.js c'est `global` :\n\n*Pseudo-code* \n\n```js\nactiveGlobalContext = {\n    GO: {\n        Math: <...>,\n        String: <...>,\n        process: <...>,\n        ...,\n        global: GO\n    }\n}\n```\n\nCela dépend de l'implémentation.\n\nQuand nous faisons référence à une propriété de l'objet global nous n'utilisons aucun préfixe, juste son nom, car l'objet global n'est pas accessible. Cependant, il est possible d'en récupérer le contenu à l'aide de la valeur `this` dans le contexte global, et également à travers sa référence récursive (ou circulaire) à lui-même (`window` ou `global`). Voyons cela :\n\n*Code JavaScript*\n\n```js\n// sans préfixe\nString(10); // === `GO.String(10)` mais `GO` n'est pas accessible\n \n// avec préfixes\nwindow.a = 10; // === `GO.window.a = 10` === `GO.a = 10`\nthis.b = 20; // === `GO.b = 20`\n```\n\nDonc revenons à notre objet des variables dans le contexte global. Dans ce cas l'objet des variables est l'objet global lui-même :\n\n*Pseudo-code*\n\n```js\nVO(globalContext) === GO\n```\n\nIl est nécessaire de bien comprendre cela car c'est pour cette raison qu'il est possible d'accéder à une variable déclarée avec le mot clé `var` en accédant à une propriété de l'objet global :\n\n*Code JavaScript*\n\n```js\nvar a = new String('test');\n \nalert(a); // accès direct, elle est trouvée dans `VO(globalContext)['a']` => `\"test\"`\n \nalert(window['a']); // accès indirect via `GO.window['a']` === `GO['a']` === `VO(globalContext)['a']` => `\"test\"`\nalert(a === this.a); // `true`\n  \nvar aKey = 'a';\nalert(window[aKey]); // accès indirect avec les propriétés dynamiques de résolution d'identifiant => `\"test\"`\n```\n\nL'objet global ne possède que des déclarations de variables et de fonctions mais pas de paramètres formels :\n\n\n\n### L'objet des variables dans un contexte de fonction\n\nEn ce qui concerne les contextes d'exécution des fonctions, où l'objet des variables est inaccessible directement, il existe une équivalence à l'objet global qui est l'_objet d'activation (dont la forme abrégée sera `AO` pour « activation object »)_.\n\n*Pseudo-code*\n\n```js\nVO(functionContext) === AO\n```\n\nUn _objet d'activation_ est créé en entrant dans le contexte de la fonction et initialisé avec la propriété `arguments` dont la valeur est l'_objet des arguments (dont la forme abrégée sera `ArgO` pour « arguments object »)_ :\n\n*Pseudo-code*\n\n```js\nactiveFunctionContext = {\n    AO: {\n        <...>, // données du contexte `VD`, `FD` et `FP`\n        arguments: <ArgO>\n    }\n}\n```\n\nL'objet des arguments est une propriété de l'objet d'activation. Il contient les propriétés suivantes :\n\n- `callee` — la référence à la fonction courante,\n- `length` — la quantité d'arguments réellement passés,\n- `[properties-indexes]` — des nombres (convertis en chaîne de caractère) dont les valeurs sont les mêmes que celles des paramètres formels (de gauche à droite dans la liste des paramètres). La taille de `[properties-indexes]` est celle de `arguments.length`. Les valeurs de `[properties-indexes]` (arguments réellement passés) de l'objet des arguments et celle des paramètres formels (paramètres définies)  sont _partagées_.\n\nExemple :\n\n*Code JavaScript*\n\n```js\nfunction foo(x, y, z) {\n  \n  // quantité de paramètres définis : x, y et z\n  alert(foo.length); // `3`\n \n  // quantité d'arguments réellement passés : seulement x et y\n  alert(arguments.length); // `2`\n \n  // référence de la fonction à elle-même\n  alert(arguments.callee === foo); // `true`\n  \n  // paramètres partagés\n\n  alert(x === arguments[0]); // `true`\n  alert(x); // 10\n  \n  arguments[0] = 20;\n  alert(x); // `20`\n  \n  x = 30;\n  alert(arguments[0]); // `30`\n  \n  // cependant, pour l'argument non passé z,\n  // la property-index de l'objet\n  // des arguments n'est pas partagée\n  \n  z = 40;\n  alert(arguments[2]); // `undefined`\n  \n  arguments[2] = 50;\n  alert(z); // `40`\n  \n}\n  \nfoo(10, 20);\n```\n\nEn ce qui concerne le dernier cas, dans les anciennes versions de V8 (Google Chrome) il y avait un bug — où les paramètres `z` et `arguments[2]` étaient aussi partagés.\n\n> En ES5 le concept d'objet d'activation est également remplacé par l'unique model des _environnements lexicaux_.\n\n\n\n\n\n## Phases de traitement du code des contextes d'exécution\n\nAprès quelque mise au point, nous avons enfin atteint le sujet principal de cet article. Le traitement du code des contextes d'exécution est divisé en deux phases :\n\n1. Entrée dans le contexte d'exécution,\n2. Exécution du code.\n\nLes modifications de l'objet des variables sont intimement liées à ces deux phases.\n\nNotons que le traitement de ces deux phases est le _comportement général_ pour toutes les déclinaisons de contexte d'exécution (c-à-d que c'est la même chose pour le contexte global et les contextes de fonctions).\n\n\n\n### Entrée dans le contexte d'exécution\n\nEn entrant dans le contexte d'exécution (mais _avant_ l'exécution du code), l'objet des variables est rempli avec les propriétés suivantes (elles ont déjà été décrite au début) :\n\n- pour chaque paramètre formel d'une fonction (dans le cas d'un contexte d'exécution de fonction uniquement)\n   - une propriété de l'objet des variables avec le nom et la valeur du paramètre formel est créé,\n   - et pour les arguments non passés une propriété de l'objet des variables avec le nom et la valeur `undefined` est créé,\n- pour chaque déclaration de fonction\n   - une propriété de l'objet des variables avec le nom et la valeur de l'objet fonction est créer (si l'objet des variables contient déjà une propriété avec ce nom, sa valeur est _remplacée_),\n- pour chaque déclaration de variable\n   - une propriété de l'objet des variables avec le nom et la valeur `undefined` est créé. Si le nom de la variable est le même que celui d'un paramètre formel ou qu'une déclaration de fonction cela _n'affecte pas_ la propriété existante.\n\nVoyons cela avec l'exemple suivant :\n\n*Code JavaScript*\n\n```js\nfunction test(a, b) {\n    var c = 10;\n    function d() {}\n    var e = function _e() {};\n    (function x() {});\n}\n  \ntest(10); // appel\n```\n\nEn _entrant_ dans le contexte de la fonction `test` avec le paramètre `10`, l'objet d'activation est le suivant :\n\n*Pseudo-code*\n\n```js\nAO(<test>) = {\n    a: 10,\n    b: undefined,\n    c: undefined,\n    d: <référence à la FD `d`>\n    e: undefined\n}\n```\n\nNotons que cette objet d'activation ne contient pas la fonction `x`. Cela est du au fait que `x` n'est pas une déclaration de fonction mais une _expression de fonction (dont la forme abrégée sera `FE` pour « function expression »)_. Les expressions de fonction n'affecte pas l'objet des variables.\n\nCependant la fonction `_e` est également une expression de fonction, mais comme nous le verrons plus bas, parce qu'elle est assignée à la variable `e`, elle devient accessible via le paramètre `e` de l'objet des variables. La différence entre une déclaration de fonction et une expression de fonction sera vu plus en détail dans le [chapitre approprié](https://blog.lesieur.name/les-fonctions/).\n\nEt maintenant attaquons nous à la seconde phase du traitement du code d'un contexte d'exécution — la phase d'_exécution du code_.\n\n\n\n### Exécution du code\n\nÀ ce stade un objet d'activation (ou l'objet global) est déjà rempli de ses propriétés (cependant, elles n'ont pas toutes leurs vrais valeurs car la plupart on encore la valeur `undefined`).\n\nConsidérez que tous les exemples fonctionnent pareil pour un objet d'activation ou l'objet global. Durant cette phase d'exécution, les valeurs sont alors modifiées comme suit :\n\n*Pseudo-code*\n\n```js\nAO['c'] = 10\nAO['e'] = <réference à la `FE` \"_e\">\n```\n\nRappelons encore que l'expression de fonction `_e` est encore en mémoire _seulement parce qu'elle a été sauvée dans la déclaration de variable `e`. Mais l'expression de fonction `x` n'est pas dans l'objet d'activation. Si nous essayons d'appeler la fonction `x` _avant_ ou _même après_ sa définition, nous auront l'erreur `\"x\" n'est pas définie`. Les fonctions d'expression qui ne sont pas sauvées dans des variables ne peuvent être appelés qu'immédiatement ou à l'intérieur d'elles-même de manière récursive.\n\nVoici un autre exemple classique :\n\n*Code JavaScript*\n\n```js\nalert(x); // `function x() {}`\n \nvar x = 10;\nalert(x); // `10`\n \nx = 20;\n \nfunction x() {}\n \nalert(x); // `20`\n```\n\nPourquoi dans la première alerte `x` est une fonction qui est accessible _avant_ sa déclaration ? Pourquoi ce n'est pas `10` ou `20` ? Parce que, selon les règles, l'objet des variables est rempli avec les déclarations de fonction en entrant dans le contexte. Pendant cette phase d'entrée dans le contexte il y a aussi une déclaration de variable `x`. Mais comme mentionné plus haut, cette étape est réalisée _après_ les déclarations de fonction et les paramètres formels et cette phase _n'affecte pas les propriétés existantes de même nom_ que ce soit pour les déclarations de fonction ou les paramètres formels. Donc en entrant dans le contexte l'objet des variables est rempli ainsi :\n\n*Pseudo-code*\n\n```js\nVO = {}\n  \nVO['x'] = <réference à la `FD` `x`>\n  \n// `var x = 10;` trouvée\n// si la fonction `x` n'avait pas déjà été définie \n// et bien `x` aurait été `undefined`, mais dans notre cas\n// la déclaration de variable n'affecte pas\n// la valeur de la fonction avec le même nom\n  \nVO['x'] = <la valeur n'ai pas affectée, toujours la `FD`>\n```\n\nEt ensuite, en entrant dans la phase d'exécution, l'objet des variables est modifié ainsi :\n\n*Pseudo-code*\n\n```js\nVO['x'] = 10\nVO['x'] = 20\n```\n\nc'est ce que nous pouvons voir dans la deuxième et troisième alerte.\n\nDans l'exemple ci-dessous nous voyons de nouveau que les variables sont mises dans l'objet des variables pendant la phase d'entrée dans le contexte (ainsi la structure `else` n'est jamais exécutée, mais, la variable `b` existe dans l'objet des variables) :\n\n*Code JavaScript*\n\n```js\nif (true) {\n    var a = 1;\n} else {\n    var b = 2;\n}\n \nalert(a); // `1`\nalert(b); // `undefined`, mais pas « erreur : `b` n'est pas définie »\n```\n\n\n\n\n\n## À propos des variables\n\nOn voit souvent dans différents articles (et même livres) sur le JavaScript l'affirmation suivante : « il est possible de déclarer une variable globale en utilisant le mot-clé `var` (dans le contexte globale) et sans le mot-clé `var` (depuis n'importe quel contexte) ». Ce n'est pas le cas. Soyez assuré de cela :\n\n_Les variables se déclarent **uniquement** avec le mot-clé `var`._\n\nEt des assignations comme ci-dessous :\n\n*Code JavaScript*\n\n```js\na = 10;\n```\n\ncréer simplement une nouvelle _propriété_ dans l'objet global mais _pas une variable_ . « Pas une variable » mais pas dans le sens qu'elle ne pourra pas être changée lors de la phase d'exécution (on pourra y accéder car `VO(globalContext) === GO`) mais « pas une variable » dans le sens qu'elle n'est pas dans l'objet des variables lors de la phase d'entrée.\n\nRegardons cet exemple pour tester la différence :\n\n*Code JavaScript*\n\n```js\nalert(a); // `undefined`\nalert(b); // « erreur, `b` n'est pas définie »\n \nb = 10;\nvar a = 20;\n```\n\nLa différence vient de l'objet des variables et des phases où il est modifié (phase d'_entrée dans le contexte_ et phase d'_exécution de code_) :\n\nPour l'entrée dans le contexte :\n\n*Pseudo-code*\n\n```js\nVO = {\n    a: undefined\n}\n```\n\nNous voyons qu'il n'existe aucune variable `b`. `b` n'apparaîtra que lors de la phase d'exécution du code (et dans notre cas `b` n'apparaîtra pas car il va y avoir une erreur).\n\nChangeons le code :\n\n*Code JavaScript*\n\n```js\nalert(a); // `undefined`, nous savons pourquoi\n \nb = 10;\nalert(b); // `10`, créée lors de l'exécution du code\n \nvar a = 20;\nalert(a); // `20`, modifiée lors de l'exécution du code\n```\n\nVoici le point important en ce qui concerne les variables. Les variables, par opposition aux simples propriétés, ont un attribut `{DontDelete}`, ce qui signifie qu'il est impossible de les supprimer avec l'opérateur `delete` :\n\n*Code JavaScript*\n\n```js\na = 10;\nalert(window.a); // `10`\n \nalert(delete a); // `true`\n \nalert(window.a); // `undefined`\n \nvar b = 20;\nalert(window.b); // `20`\n \nalert(delete b); // `false`\n \nalert(window.b); // toujours `20`\n```\n\n> Notons qu'en ES5 `{DontDelete}` a été renommé en `[[Configurable]]` et peut être manuellement gérer via l'utilisation de la méthode `Object.defineProperty`.\n\nCependant il y a un contexte d'exécution ou cette règle n'a pas d'effet. C'est le contexte de `eval` : l'attribut `{DontDelete}` n'est pas appliqué pour les variables :\n\n*Code JavaScript*\n\n```js\neval('var a = 10;');\nalert(window.a); // `10`\n \nalert(delete a); // `true`\n \nalert(window.a); // `undefined`\n```\n\nSi en essayant votre code dans une console JavaScript vous pouvez supprimer une variable, c'est que cette console utilise `eval` pour évaluer votre code.\n\n\n\n\n\n## Fonctionnalité des moteurs : la propriété `__parent__`\n\nComme nous l'avons déjà mentionné, conformément au standard, accéder directement à l'objet d'activation est impossible. Cependant, dans plusieurs moteurs comme SpiderMonkey ou Rhino (Netscape ou Mozilla Firefox) les fonctions ont une propriété spéciale `__parent__` qui est une référence à l'objet d'activation (ou à l'objet global) dans lequel ces fonctions ont été créées.\n\nExemple (SpiderMonkey et Rhino) :\n\n*Code JavaScript*\n\n```js\nvar GO = this;\nvar a = 10;\n  \nfunction foo() {}\n  \nalert(foo.__parent__); // `GO`\n  \nvar VO = foo.__parent__;\n  \nalert(VO.a); // `10`\nalert(VO === GO); // `true`\n```\n\nDans l'exemple ci-dessus nous voyons que `foo` est créée dans le contexte global et sa propriété `__parent__` est ajoutée à l'objet des variables du contexte global, c-à-d à l'objet global.\n\nCependant obtenir l'objet d'activation dans SpiderMonkey de la même manière n'est pas possible : cela dépendra de la version, mais `__parent__` pour des fonctions dans des fonctions retournera `null` ou l'objet global.\n\nDans Rhino, l'accès à l'objet d'activation est permis et disponible de cette manière :\n\nExemple (Rhino) :\n\n*Code JavaScript*\n\n```js\nvar GO = this;\nvar x = 10;\n  \n(function foo() {\n  \n    var y = 20;\n  \n    // l'objet d'activation du contexte `foo`\n    var AO = (function () {}).__parent__;\n  \n    print(AO.y); // 20\n  \n    // __parent__ de l'objet d'activation\n    // courant est déjà l'objet global,\n    // c-à-d qu'une chaîne spéciale d'objet des variables est formée,\n    // on la nomme : chaîne des portées\n    print(AO.__parent__ === GO); // `true`\n    \n    print(AO.__parent__.x); // `10`\n  \n})();\n```\n\n## Conclusion ##\n\nDans cet article nous avons vu plus en détail l'étude des objets relatifs aux contextes d'exécution. J'espère que celui-ci a été utile et a clarifié divers aspects et ambiguïtés présentes avant. Les prochains chapitres seront dévoués à [la résolution des identifiants](https://blog.lesieur.name/la-valeur-de-this/), [aux chaînes des portées](https://blog.lesieur.name/la-chaine-des-portees/) et, par conséquence, [aux fermetures](https://blog.lesieur.name/les-fermetures/) en JavaScript.\n\n> <div style=\"float: left;\">[<< Chapitre 1](https://blog.lesieur.name/les-contextes-d-execution/)</div><div style=\"text-align: right\">[Chapitre 3 >>](https://blog.lesieur.name/la-valeur-de-this/)</div>\n\n**Références**\n\nSection correspondante de la spécification ECMA-262-3 :\n\n- [10.1.3 – Variable Instantiation](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [10.1.5 – Global Object](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [10.1.6 – Activation Object](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [10.1.8 – Arguments Object](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf).\n\nCe texte est une libre ré-écriture française de l’excellent billet [Тонкости ECMA-262-3. Часть 2. Объект переменных.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-2-variable-object/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).", "dates" : { "published" : { "$date" : 1490631300000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "ES3, Chap. 2 — L'objet des variables en JavaScript", "urn" : "l-objet-des-variables" }
{ "__v" : 0, "_id" : { "$oid" : "58dcb6417924c16f049756ae" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "58d68584389fd824fd7cf278" }, { "$oid" : "5310456355dfd5f7698d48ca" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48cd" } ], "content" : "Ce billet fait partie de la collection _ES3 dans le détail_ et en constitue le Chapitre 3.\n\n<figure>\n    <a href=\"media/images/upload/what-is-this.jpg\"><img class=\"openable\" src=\"media/images/upload/what-is-this-mini.png\" alt=\"Jack Skellington cherche la valeur de `this`\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\"></a>\n    <figcaption>Jack Skellington cherche la valeur de `this`</figcaption>\n</figure>\n\nDans cet article nous allons discuter d'une propriété supplémentaire liée aux contextes d'exécution : le mot-clé `this`.\n\n\n\n\n\n## Introduction\n\nBeaucoup de développeur associe le mot-clé `this` à ce qu'il est dans la programmation orientée objet, à savoir, une référence à un objet nouvellement créé par un constructeur. En JavaScript ce concept existe aussi, cependant il ne se limite pas uniquement à la référence d'un objet instancié.\n\nComme la pratique le montre, ce sujet est assez difficile et trouver quelle est la valeur de `this` à travers les différents contextes d'exécution est bien souvent problématique.\n\nVoyons plus en détail toutes les possibilités offertes par le mot-clé `this` en JavaScript.\n\n\n\n\n\n## Définitions\n\n`this` est une propriété du _contexte d'exécution_. C'est un objet spécial du contexte dans lequel le code est exécuté.\n\n*Pseudo-code*\n\n```js\nactiveExecutionContext = {\n    VO: {\n        <...>\n    },\n    this: <objet dédiée ou GO>\n}\n```\n\nIl y a l'_objet des variables (dont la forme abrégée sera `VO` pour « variable object »)_ dont nous avons discuté dans [le chapitre précédent](https://blog.lesieur.name/l-objet-des-variables/).\n\nQuand à `this`, il est directement lié aux [déclinaisons de code exécutable](https://blog.lesieur.name/les-contextes-d-execution/) des contextes. Cette valeur est déterminée pendant la phase d'_entrée dans le contexte_ et est _immuable_ pendant que le code du contexte est exécuté.\n\nExaminons les différents cas en détail.\n\n\n\n\n\n## La valeur de `this` dans le code global\n\nIci tout est assez simple. Dans le code global, la valeur `this` est _toujours_ l'_objet global (dont la forme abrégée sera `GO` pour « global object »)_ lui-même. Et donc, il est possible d'y faire référence indirectement :\n\n*Code JavaScript*\n\n```js\n// Définition explicite d'une propriété de `this`\nthis.a = 10; // === (GO.a = 10)\nconsole.log(a); // `10`\n \n// Définition implicite via l'affection d'une propriété de l'objet global\nb = 20;\nconsole.log(this.b); // `20`\n \n// Définition implicite via la déclaration d'une variable\n// car l'objet des variables du contexte global est l'objet global lui-même\nvar c = 30;\nconsole.log(this.c); // `30`\n```\n\n\n\n\n\n## La valeur de `this` dans le code des fonctions\n\nLes choses sont plus intéressantes quand `this` est utilisé à l'intérieur d'une fonction. Ce cas est le plus compliqué et est la cause de beaucoup de problèmes.\n\nLa première (et surement la plus importante) fonctionnalité du mot-clé `this` dans cette déclinaison de code est qu'ici elle _n'est pas statiquement liée_ à la fonction.\n\nComme mentionné plus haut, la valeur de `this` est déterminée pendant la phase d'entrée dans le contexte et dans le cas d'une fonction, cette valeur peut être _complètement différente à chaque fois_.\n\nCependant, pendant la phase d'exécution du code, la valeur de `this` est _immuable_, c-à-d qu'il n'est pas possible de lui affecter une nouvelle valeur car _ce n'est pas une variable_ (par opposition au langage de programmation _Python_ par exemple et son objet `self` explicitement défini et pouvant être redéfini à souhait pendant la phase d'exécution) :\n\n*Code JavaScript*\n\n```js\nvar foo = {x: 10};\n \nvar bar = {\n    x: 20,\n    test: function () {\n \n        console.log(this === bar); // `true`\n        console.log(this.x); // `20`\n     \n        this = foo; // « erreur : cette valeur ne peut être changée »\n  \n        console.log(this.x); // s'il n'y avait pas eu d'erreur, cette valeur aurait pu être `10` et non `20`\n \n    }\n \n};\n \n// pendant la phase d'entrée dans le contexte la valeur de `this`\n// est déterminée comme se référent à `bar` ; pourquoi ?\n// nous en discuterons plus en détail plus bas\n \nbar.test(); // `true`, `20`\n \nfoo.test = bar.test;\n \n// cependant juste après, la valeur de `this` se réfère\n// à `foo`, même si nous appelons la même fonction\n \nfoo.test(); // `false`, `10`\n```\n\nAlors qu'est-ce qui fait varier la valeur de `this` dans le code d'une fonction ? Il y a plusieurs facteurs.\n\nEn premier lieu, dans une fonction appelée de manière standard, `this` est fourni par l'_appelant (« caller »)_ qui active le code du contexte, c-à-d _le contexte parent qui appel la fonction_. El la valeur de `this` est déterminée par _la forme de l'expression appelante_ (en d'autres mots, par la forme _syntaxique_ avec laquelle la fonction est appelée).\n\nIl est nécessaire de comprendre et de se souvenir que c'est un point _important_ afin de déterminer la valeur de `this` dans chaque contexte sans problèmes. _La forme de l'expression appelante_ c-à-d la manière dont la fonction est appelée, influence la valeur de `this` dans le contexte appelé _et rien d'autre_.\n\nAinsi l'affirmation de différents articles (et même livres) sur le JavaScript disant « La valeur `this` dépend de la manière dont la fonction est définie c-à-d que si c'est une fonction global, `this` se réfère à l'objet global, et si cette fonction est la méthode d'un objet, la valeur de `this` est toujours cet objet » est erronée. Nous allons voir que même une fonction globale peut être activée avec _différentes formes d'expression appelante_ qui influencent d'autant la valeur de `this` :\n\n*Code JavaScript*\n\n```js\nfunction foo() {\n    console.log(this);\n}\n \nfoo(); // `GO`\n \nconsole.log(foo === foo.prototype.constructor); // `true`\n \n// mais en exécutant notre fonction sous une forme d'expression appelante différente,\n// pour la même fonction, la valeur de `this` est différente\n \nfoo.prototype.constructor(); // vaut le prototype de la fonction soit `foo.prototype`.\n```\n\nIl est aussi possible d'appeler une fonction définie en tant que méthode d'un objet, mais que la valeur de `this` ne fasse pas référence à cet objet :\n\n*Code JavaScript*\n\n```js\nvar foo = {\n    bar: function () {\n        console.log(this);\n        console.log(this === foo);\n    }\n};\n \nfoo.bar(); // `foo`, `true`\n \nvar exampleFunc = foo.bar;\n \nconsole.log(exampleFunc === foo.bar); // `true`\n \n// cependant une fois encore sous une nouvelle forme d'expression appelante\n// à partir de la même fonction, nous avons une valeur de `this` différente\n \nexampleFunc(); // `GO`, `false`\n```\n\nEt donc, encore une fois, comment la forme de l'expression appelante influence la valeur de `this` ? \n\nAfin d'y répondre, il faut bien comprendre comment est déterminé la valeur de `this` et pour cela, il est nécessaire de voir plus en détail un type interne du JavaScript — le type `Reference`.\n\n\n\n### Le type `Reference`\n\nEn utilisant du pseudo-code une valeur de type `Reference` peut être représentée comme un objet avec deux propriétés : _la base_ (c-à-d l'objet auquel appartient la propriété) et _le nom de la propriété_ dans cette base :\n\n*Pseudo-code*\n\n```js\nvalueOfReferenceType = {\n    base: <objet de la propriété>,\n    propertyName: <nom de la propriété>\n}\n```\n\n> Notons que depuis ES5 une référence contient également une propriété nommée `strict` — qui est une valeur indiquant si la référence doit être résolue en mode strict.\n\n> *Code JavaScript*\n\n> ```js\n'use strict';\n \n> // Accès à `foo`.\nfoo;\n```\n\n> *Pseudo-code*\n\n> ```js\n// Référence pour `foo`.\nfooReference = {\n    base: GO,\n    propertyName: 'foo',\n    strict: true,\n}\n```\n\nLa valeur d'un type `Reference` peut _seulement être de deux sortes_ :\n\n1. Récupérée à partir d'un identifiant,\n2. Récupérée à partir d'un accesseur de propriété.\n\n#### Les identifiants\n\nLes identifiant sont pris en charge par le processus de résolution d'identifiant qui sera vu plus en détail dans le chapitre sur [la chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/). Mais ici, nous allons juste voir que ce que retourne cet algorithme de résolution est toujours une valeur de type `Reference` (qui est un élément important pour trouver la valeur de `this`).\n\nLes identifiants sont des nom de variables, des noms de fonctions, des nom de paramètres et des noms de propriétés inaccessibles de l'objet global. Par exemple, en ce qui concerne les valeurs des identifiants suivant :\n\n*Code JavaScript*\n\n```js\nvar foo = 10;\nfunction bar() {};\n```\n\nun résultat intermédiaires des opérations de résolution, correspondant au type `Reference` serait le suivant :\n\n*Pseudo-code*\n\n```js\nfooReference = {\n    base: GO,\n    propertyName: 'foo'\n}\n \nbarReference = {\n    base: GO,\n    propertyName: 'bar'\n}\n```\n\nEt pour obtenir la _valeur réel_ d'un objet depuis sa valeur de type `Reference` il y a une méthode interne `GetValue` qui peut-être décrite en pseudo-code comme suit :\n\n*Pseudo-code*\n\n```js\nfunction GetValue(value) {\n \n    // Quand on ne demande pas la valeur d'un type Reference\n    if (Type(value) != Reference) {\n        return value;\n    }\n \n    // Obtenir ce sur quoi pointe la référence\n    base = GetBase(value);\n \n    // Vérifier qu'elle ne pointe pas dans le vide\n    if (base === null) {\n       throw new ReferenceError;\n    }\n \n    // Obtenir cette valeur\n    return base.[[Get]](GetPropertyName(value));\n \n}\n```\n\nil y a une méthode interne `[[Get]]` qui retourne _la valeur réelle_ de la propriété d'un objet, incluant au préalable l'analyse de l'héritage de cette valeur vis à vis de la chaîne des prototypes :\n\n*Pseudo-code*\n\n```js\nGetValue(fooReference) // `10`\nGetValue(barReference) // `function bar() {}`\n```\n\n#### Les accesseurs de propriété\n\nLes accesseurs de propriété utilise aussi ce mécanisme : il y en a deux déclinaisons : la _notation point (« dot »)_ (quand la propriété a un identifiant correcte et connu à l'avance), ou la _notation crochet droit (« bracket »)_ :\n\n*Code JavaScript*\n\n```js\nvar foo = {\n    bar: function baz() {}\n}\n\n// accesseurs\nfoo.bar();\nfoo['bar']();\n```\n\nDont un retour de calcul intermédiaire de type `Reference` est :\n\n*Pseudo-code*\n\n```js\nfooBarReference = {\n    base: foo,\n    propertyName: 'bar'\n}\n \nGetValue(fooBarReference) // `function baz() {}`\n```\n\n#### Détermination de `this`\n\nDonc reposons la question une dernière fois : de quelle manière la valeur de type `Reference` est liée à la valeur `this` du contexte de la fonction ? C'est parti pour la révélation principal de cet article.\n\nLa règle générale de la détermination de la valeur de `this` dans un contexte de fonction est la suivante :\n\nLa valeur de `this` dans un contexte de fonction est fournie par _l'appelant et déterminé en fonction de la forme de l'expression appelante_ (la manière dont la fonction est syntaxiquement appelée).\n\nSi sur la partie à gauche des parenthèses appelante `( ... )`, il y a une valeur de type `Reference` alors la valeur de `this` associée est celle contenu dans _la base_ de cette valeur de type `Reference`.\n\n_Dans tous les autres cas_ (c-à-d avec _n'importe quel autre_ valeur qui n'est pas un type `Reference`), la valeur de `this` est toujours mise à `null`. Mais comme il n'y a pas de sens à ce que la valeur de `this` soit `null`, cette valeur est implicitement remplacée par _l'objet global_.\n\n> Notons qu'en mode strict en ES5, la valeur de `this` n'est pas associée à l'objet global mais est mise à `undefined`.\n\nMontrons un exemple :\n\n*Code JavaScript*\n\n```js\nfunction foo() {\n    return this;\n}\n \nfoo(); // `this` vaut `GO`\n```\n\nNous voyons que dans la partie gauche des parenthèses appelantes il y a une valeur de type `Reference` (car _foo_ est un identifiant) :\n\n*Pseudo-code*\n\n```js\nfooReference = {\n    base: GO,\n    propertyName: 'foo'\n}\n```\n\nDonc, la valeur de `this` est définie comme étant celle de la base de la valeur du type `Reference`, c-à-d l'objet global.\n\nVoyons que cela est similaire avec un accesseur de propriété :\n\n*Code JavaScript*\n\n```js\nvar foo = {\n    bar: function baz() {\n        return this;\n    }\n};\n \nfoo.bar(); // `this` vaut `foo`\n```\n\nNous avons de nouveau une valeur de type `Reference` avec pour base l'objet `foo` qui va donc être utilisé comme valeur de `this` lors de la phase d'activation (l'entrée dans le contexte) :\n\n*Pseudo-code*\n\n```js\nfooBarReference = {\n    base: foo,\n    propertyName: 'bar'\n}\n```\n\nCependant, activer _la même fonction_ avec _une autre forme d'expression appelante_, nous montre que l'on a une autre valeur de `this` :\n\n*Code JavaScript*\n\n```js\nvar test = foo.bar;\ntest(); // `this` vaut `GO`\n```\n\ncar `test` étant un identifiant, il produit une autre valeur de type `Reference`, utilisé comme base (l'objet global) et donc pour la valeur `this` :\n\n*Pseudo-code*\n\n```js\ntestReference = {\n    base: GO,\n    propertyName: 'test'\n}\n```\n\nMaintenant nous pouvons exactement dire pourquoi la même fonction activée sous _différente forme d'expression appelante_ a différente valeur de `this` — la réponse est qu'il y a une valeur intermédiaire de type `Reference` différente :\n\n_Cas des identifiants_\n\n*Code JavaScript*\n\n```js\nfunction foo() {\n    console.log(this);\n}\n \nfoo(); // `GO`\n```\n\ncar\n\n*Pseudo-code*\n\n```js\nfooReference = {\n    base: GO,\n    propertyName: 'foo'\n}\n```\n\n_Cas des accesseurs de propriété_\n\n*Code JavaScript*\n\n```js\nconsole.log(foo === foo.prototype.constructor); // true\n \n// autre forme d'expression appelante\n \nfoo.prototype.constructor(); // `foo.prototype`\n```\n\ncar\n\n*Pseudo-code*\n\n```js\nfooPrototypeConstructorReference = {\n    base: foo.prototype,\n    propertyName: 'constructor'\n}\n```\n\nVoici encore un autre exemple classique avec une détermination dynamique de la valeur de `this` en fonction de la forme de l'expression appelante :\n\n*Code JavaScript*\n\n```js\nfunction foo() {\n    console.log(this.bar);\n}\n \nvar x = { bar: 10 };\nvar y = { bar: 20 };\n \nx.test = foo;\ny.test = foo;\n \nx.test(); // `10`\ny.test(); // `20`\n```\n\n\n\n### Appel de fonction et type sans `Reference`\n\nNous avons noté plus haut que dans le cas ou la partie gauche des parenthèses appelantes est une valeur qui _n'est pas_ de type `Reference` (mais de _n'importe quel autre_ type), la valeur `this` est automatiquement mise à `null` et, par conséquence, remplacée par l'_objet global_.\n\nImaginons un exemple avec une tel expression :\n\n*Code JavaScript*\n\n```js\n(function () {\n    console.log(this); // `null` => `GO`\n})();\n```\n\nDans ce cas, nous avons une fonction de type `Object` (d'instance `Function`) mais pas un type `Reference` (il n'y a aucun identifiant ou accesseur de propriété à résoudre) et donc la valeur de `this` est finalement remplacée par celle de l'objet global.\n\nVoici un exemple plus complexe :\n\n*Code JavaScript*\n\n```js\nvar foo = {\n    bar: function () {\n        console.log(this);\n    }\n};\n \nfoo.bar(); // Premier cas => `foo`\n(foo.bar)(); // Deuxième cas\n(foo.bar = foo.bar)(); // Troisième cas\n(false || foo.bar)(); // Quatrième cas\n(foo.bar, foo.bar)(); // Cinquième cas\n```\n\nNous avons un _accesseur de propriété_ dont la valeur intermédiaire devrait normalement être une valeur de type `Reference` nous fournissant en base l'objet `foo` mais qui pourtant dans certains cas nous donne pour `this` une base valant `GO`.\n\nLe point ici c'est que les trois dernier appels (qui on bien une partie à gauche des parenthèses appelantes) _après l'application de certaine opérations_ ne retourne pas une valeur de type `Reference`.\n\n- Avec le premier cas tout est clair, il y a sans l'ombre d'un doute un type `Reference` qui est résolu, et donc par conséquence, la valeur de `this` est la base de cette référence. C-à-d `foo`.\n\n- Dans le deuxième cas, il y a un _opérateur de groupement_ qui _n'applique pas_, comme nous l'avons vu plus haut, la méthode pour aller chercher la valeur réel d'un objet depuis une valeur de type `Reference`, c-à-d qui n'applique pas `GetValue`. Sachant cela, après l'évaluation de l'opérateur de groupement qui dans ce cas retourne simplement `foo.bar`, nous obtenons de nouveau une expression à gauche dont la valeur sera de type `Reference` et dont la base sera pour `this` l'objet `foo`.\n\n- Dans le troisième cas, l'opération dans l'opérateur de groupement ce fait avec l'_opérateur d'affectation_, à la différence d'une opération réalisée uniquement avec un opérateur de groupement, l'_opérateur d'affectation_ appel la méthode `GetValue`. La conséquence est que cela nous ramène une fois l'expression complètement évaluée une fonction de type `Object` (mais pas une valeur de type `Reference`). Dans ce cas `this` vaut `null` et, par conséquence, vaut l'_objet global_.\n\n- De la même manière pour les quatrième et cinquième exemples, l'_opérateur virgule_ et l'_opérateur d'expression logique OR_ font appel à la méthode interne `GetValue`. Ils perdent leurs valeurs de type `Reference` pour obtenir retourner une valeur de type `Object` (une fonction). Donc `this` finit par valoir l'_objet global_.\n\n\n\n### Le type `Reference` et la valeur `null` de `this`\n\nNous avons vu qu'il y a des cas où l'appel de l'expression se situant sur la partie gauche des parenthèses retourne bien une valeur intermédiaire de type `Reference` mais ou cependant la valeur de `this` est à `null` et donc remplacée par l'_objet global_. C'est ce qui arrive quand la base de la valeur du type `Reference` est un _objet d'activation (dont la forme abrégée sera `AO` pour « activation object »)_.\n\nNous pouvons mettre en évidence cela dans un exemple avec une fonction interne à une fonction parente appelante. Comme nous l'avons vu dans le [deuxième chapitre](https://blog.lesieur.name/l-objet-des-variables/) ; les variables locales, les fonctions internes et les paramètres formels sont stockés dans l'_objet d'activation_ ce qui donne :\n\n*Code JavaScript*\n\n```js\nfunction foo() {\n    function bar() {\n        console.log(this);\n    }\n    bar(); // Comme la base de `bar` est `AO(foo)`, `this` est remplacé par `GO`\n}\n```\n\nL'objet d'activation retourne toujours une valeur de `this` équivalente à `null` (c-à-d que le pseudo-code `AO(foo)` est équivalent à `null`). Ici encore nous en revenons à la description précédente indiquant que la valeur de `this` dans le cas où elle est `null` est l'_objet global_.\n\nUne exception demeure cependant avec une fonction qui serait appelée dans la structure de contrôle `with` dans le cas ou `with` contiendrait un nom de propriété de fonction. La structure de contrôle `with` ajoute ses objets en amont de la [chaîne de portées](https://blog.lesieur.name/la-chaine-des-portees/) c-à-d _avant_ l'objet d'activation. Par conséquent, la base de la valeur de type `Reference` (par un identifiant ou un accesseur de propriété) n'est pas l'objet d'activation mais l'objet de la structure de contrôle `with`. Au passage, cela n'est pas vrai uniquement pour des fonctions internes mais également aux fonctions globales car l'objet `with` _masque_ les objets les plus hauts (objet global ou objet d'activation) dans la chaîne des portées :\n\n*Code JavaScript*\n\n```js\nvar x = 10;\n \nwith ({\n \n    foo: function () {\n        console.log(this.x);\n    },\n    x: 20\n \n}) {\n \n    foo(); // 20\n \n}\n```\n\ncar\n\n*Pseudo-code*\n\n```js\nfooReference = {\n    base: __withObject,\n    propertyName: 'foo'\n}\n```\n\nUne situation similaire intervient en appelant une fonction qui serait le premier argument de la structure de contrôle `catch` : dans ce cas, l'objet `catch` est aussi ajouté _en amont_ de la chaîne des portées c-à-d _avant_ l'objet d'activation ou l'objet global. Cependant, ce comportement est reconnu comme un bug dans ECMA-262-3 car la nouvelle version du standard ECMA-262-5 rectifie cela. C-à-d que la valeur de `this` pour un objet d'activation doit être équivalent à l'objet global et non plus à l'objet `catch` :\n\n*Code JavaScript*\n\n```js\ntry {\n    throw function () {\n        console.log(this);\n    };\n} catch (e) {\n    e(); // `__catchObject` en ES3, `GO` dans la version ES5\n}\n```\n\nc-à-d en ES3\n\n*Pseudo-code*\n\n```js\neReference = {\n    base: __catchObject,\n    propertyName: 'e'\n}\n```\n \nmais en ES5\n\n*Pseudo-code*\n\n```js\neReference = {\n    base: GO,\n    propertyName: 'e'\n}\n```\n\nOn a également la même situation avec un appel récursif d'[une expression de fonction nommée](https://blog.lesieur.name/les-fonctions/) (plus de détail à propos des fonction seront données dans le [chapitre 5](https://blog.lesieur.name/les-fonctions/)). Au premier appel de la fonction, la base de la valeur intermédiaire de type `Reference` est l'objet d'activation parent (soit l'objet global), mais dans les appels récursifs — la base devrait être un objet spécial stockant le nom optionnel de l'expressions de fonction. Cependant, dans ce cas, la valeur de `this` associée est toujours l'objet global :\n\n*Code JavaScript*\n\n```js\n(function foo(bar) {\n \n    console.log(this);\n \n    !bar && foo(1); // « devrait » être un objet spécial, mais est toujours l'objet global\n \n})(); // `GO`\n```\n\n\n\n### La valeur de `this` dans une fonction appelée en tant que constructeur\n\nIl y a un cas de plus en rapport avec la valeur de `this` dans un contexte de fonction — on le nomme appel de fonction en tant que constructeur :\n\n*Code JavaScript*\n\n```js\nfunction A() {\n    console.log(this); // objet nouvellement créé plus bas et nommé `a`\n    this.x = 10;\n}\n \nvar a = new A();\nconsole.log(a.x); // `10`\n```\n\nDans ce cas, l'opérateur `new` appel la méthode interne `[[Construct]]` de la fonction `A` qui va appeler à son tour la méthode interne `[[Call]]` après chaque création d'un nouvel objet pour fournir une nouvelle valeur de `this` pour chacun d'eux.\n\n\n\n### Manuellement affecter la valeur de `this` à l'appel d'une fonction.\n\nIl y a deux méthodes définies dans `Function.prototype` (et donc accessible par toutes les fonctions), permettant de spécifier la valeur de `this` manuellement lors de l'appel d'une fonction. Ces méthodes sont `apply` et `call`.\n\nChacune d'entre elles accepte en premier argument la valeur que va prendre `this` dans le contexte créer lors de l'appel. La différence entre ces deux méthodes est vraiment minime. Pour `apply` le second argument est obligatoirement un objet sous forme de tableau (ou un objet s'en rapprochant comme la propriété `arguments` de l'objet d'activation) dont chaque élément dans l'ordre sera associé à chaque paramètre de la fonction de gauche à droite. Pour `call` la méthode accepte n'importe quels arguments. Le seul paramètre obligatoire pour ses deux méthodes est le premier, c-à-d la valeur que prendra `this`.\n\nExemple :\n\n*Code JavaScript*\n\n```js\nvar b = 10;\n \nfunction a(c) {\n    console.log(this.b);\n    console.log(c);\n}\n \na(20); // `this === GO`, `this.b === 10` et `c === 20`\n \na.call({ b: 20 }, 30); // `this === { b: 20 }`, `this.b === 20` et `c === 30`\na.apply({ b: 30 }, [40]) // `this === { b: 30 }`, `this.b === 30` et `c === 40`\n```\n\n\n\n\n\n## Conclusion\n\nDans cet article nous avons discuté des fonctionnalités du mot-clé `this` en JavaScript (qui est vraiment _une fonctionnalité_ par comparaison au C++ ou au Java). Il est tant d'éclaircir un point plusieurs fois mentionné dans cet article : [la chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/).\n\n> <div style=\"float: left;\">[<< Chapitre 2](https://blog.lesieur.name/la-valeur-de-this/)</div><div style=\"text-align: right\">[Chapitre 4 >>](https://blog.lesieur.name/la-chaine-des-portees/)</div>\n\n**Références**\n\nSection correspondante de la spécification ECMA-262-3 :\n\n- [10.1.7 – This](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [11.1.1 – The this keyword](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [11.2.2 – The new operator](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [11.2.3 – Function calls](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf).\n\nCe texte est une libre ré-écriture française de l’excellent billet [Тонкости ECMA-262-3. Часть 3. This.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-3-this/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).", "dates" : { "published" : { "$date" : 1490859540000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "ES3, Chap 3. — La valeur de this en JavaScript", "urn" : "la-valeur-de-this" }
{ "__v" : 0, "_id" : { "$oid" : "58de49be7924c16f049756af" }, "cache" : { "comment" : { "number" : 0 } }, "categories" : [ { "$oid" : "58d68584389fd824fd7cf278" }, { "$oid" : "5310456355dfd5f7698d48ca" }, { "$oid" : "5310456355dfd5f7698d48b8" }, { "$oid" : "5310456355dfd5f7698d48cd" } ], "content" : "Ce billet fait partie de la collection _ES3 dans le détail_ et en constitue le Chapitre 4.\n\nCe chapitre est dédié, encore une fois, à un mécanisme lié aux contextes d'exécution : j'ai nommé la _chaîne des portées_.\n\n\n\n\n## Introduction\n\nComme nous l'avons vu dans [le deuxième chapitre](https://blog.lesieur.name/l-objet-des-variables/), les données d'un [contexte d'exécution](https://blog.lesieur.name/les-contextes-d-execution/) (variables, déclarations de fonctions et paramètres formels) sont stockés dans une propriété de l'_objet des variables (dont la forme abrégée sera `VO` pour « variable object »)_.\n\nNous avons également vu qu'un objet des variables est créé à chaque entrée dans un contexte d'exécution avec des valeurs initiales et que ces valeurs sont mises à jour pendant la phase d'exécution.\n\nVoyons à présent ce qu'il en est pour la chaîne des portées.\n\n\n\n\n\n## Définition\n\nLa chaîne des portées est intimement liée aux fonctions internes.\n\nComme nous le savons, il est permis en JavaScript de créer des fonctions à l'intérieur d'autres fonctions et il est même éventuellement permis de faire retourner cette fonction interne par la fonction principale.\n\n*Code JavaScript*\n\n```js\nvar x = 10;\n \nfunction foo() {\n   \n    var y = 20;\n   \n    function bar() {\n        alert(x + y);\n    }\n   \n    return bar;\n \n}\n \nfoo()(); // `30`\n```\n\nNous savons également que _chaque contexte d'exécution a son propre objet des variables_.\n\n- pour le contexte global c'est l'_objet global (dont la forme abrégée sera `GO` pour « global object »)_ lui-même et \n- pour les contextes de fonctions c'est un _objet d'activation (dont la forme abrégée sera `AO` pour « activation object »)_.\n\nEt bien la chaîne des portées est très exactement _la liste de tous les objets des variables parents_ pour un contexte donné. C-à-d, dans l'exemple précédent, que la chaîne des portées du contexte de `bar` inclue `VO(<bar> functionContext)`, `VO(<foo> functionContext)` et `VO(globalContext)` (ou écrit autrement : `AO(<bar>)`, `AO(<foo>)` et `GO`).\n\nExaminons cela plus en détail.\n\nLa _chaîne des portées (dont la forme abrégée sera `Scope` pour « scope chain »)_ est liée à la _chaîne des objets des variables_ d'un contexte et est utilisée pour trouver en amont une variable, une fonction ou un paramètre lors de la _résolution d'identifiant_.\n\nLa chaîne des portées d'un contexte de fonction est créée lors de l'_appel_ de celle-ci et est une propriété de l'_objet d'activation_. La chaîne des portées est résolue grâce à la propriété `[[Scope]]` appartenant à la fonction elle-même. Nous discuterons plus en détail de cette propriété interne [[Scope]] plus bas.\n\nConcernant la chaîne des portées, elle peut-être décrite de la manière suivante avec du pseudo-code :\n\n*Pseudo-code*\n\n```js\nactiveFunctionContext = {\n    AO: {\n        <...>, // données du contexte `VD`, `FD` et `FP`,\n        arguments: <ArgO>\n    },\n    this: <thisValue>,\n    Scope: [ // chaîne des portées\n      // liste de tous les objets des variables\n      // pour une résolution d'identifiant en amont\n    ] \n}\n```\n\nou `Scope` est par définition\n\n*Pseudo-code*\n\n```js\nScope = AO + [[Scope]]\n```\n\nPour notre exemple, nous pouvons représenter `Scope` et `[[Scope]]` comme un tableau standard en JavaScript :\n\n*Pseudo-code*\n\n```js\nScope = [VO1, VO2, ..., VOn] // chaîne des portées\n```\n\nUne vue alternative de la structure serait de représenter cela comme une chaîne d'objet hiérarchique avec une référence à l'objet des variables parent pour chaque maillons de la chaîne. C'est le même concept utilisant la fonctionnalité `__parent__` implémentée dans certain moteur JavaScript que nous avons vu dans le [chapitre 2](https://blog.lesieur.name/l-objet-des-variables/) dédié à l'objet des variables :\n\n*Pseudo-code*\n\n```js\nVO1 = { __parent__: null, <autres propriétés comme VD/FD/FP/Arg0...> } // -->\nVO2 = { __parent__: VO1, <autres propriétés comme VD/FD/FP/Arg0...> } // -->\n// etc... -->\nVOn = { __parent__: VOn-1, <autres propriétés comme VD/FD/FP/Arg0...> }\n```\n\nMais la représentation de la chaîne des portées sous forme de tableau étant la plus pratique, nous utiliserons cette représentation. C'est d'ailleurs l'abstraction qu'en fait la spécification elle-même (voir [10.1.4](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf)) : « une chaîne de portées est une _liste_ d'objets » indépendamment de ce qui sera fait au niveau de l'implémentation. Cette implémentation pourrait plutôt utiliser pour la fonctionnalité l'approche hiérarchique de `__parent__`. Pour en revenir à notre article, le tableau est donc un bon candidat pour représenter ce concept de _liste_.\n\nLa combinaison `AO + [[Scope]]` ainsi que le processus de _résolution d'identifiant_, dont nous allons parler plus loin, sont liés au cycle de vie des fonctions.\n\n\n\n\n\n## Cycle de vie des fonctions\n\nLe cycle de vie d'une fonction est divisé en une phase de _création de la fonction_ et une phase d'_activation de la fonction_ (appel de la fonction). Voyons cela plus en détail.\n\n### Création de la fonction\n\nComme nous le savons, les _déclarations de fonctions (dont la forme abrégée sera `FD` pour « function declaration »)_ sont mises dans les objets des variables (objet global ou objet d'activation) lors de la phase d'entrée dans le contexte. Voyons dans l'exemple ci-dessous une variable et une déclaration de fonction dans le contexte global (où l'objet des variables est l'objet global lui-même — pas d'objet d'activation) :\n\n*Code JavaScript*\n\n```js\nvar x = 10;\n  \nfunction foo() {\n  var y = 20;\n  alert(x + y);\n}\n  \nfoo(); // `30`\n```\n\nLors de l'activation (l'appel) de la fonction `foo`, nous voyons le résultat `30`. Il y a une fonctionnalité très importante qui se cache là dessous.\n\nLa variable `y` est définie dans la fonction `foo` (cela signifie qu'elle est inclue dans l'objet d'activation du contexte de `foo`), mais la variable `x` n'est pas définie dans `foo` et donc n'est pas ajoutée dans `AO(<foo>)`. À première vue, la variable `x` n'existe pas du tout dans la fonction `foo`, mais comme nous allons le voir plus bas, seulement « à première vue ». Nous voyons dans l'objet d'activation du contexte de `foo` uniquement la propriété `y` :\n\n*Pseudo-code*\n\n```js\nAO(<foo>) = {\n    y: undefined // à l'entrée puis `20` lors de l'exécution\n}\n```\n\nComment la fonction `foo` a t-elle accès à la variable `x` ? La logique voudrait que cette fonction ait accès aux objets des variables des contextes plus bas dans la pile. C'est exactement le cas, et ce mécanisme est implémenté en utilisant la propriété interne `[[Scope]]` des fonctions.\n\n`[[Scope]]` est une chaîne hiérarchique contenant tous les objets des variables parents qui sont avant dans la pile des contextes d'exécution et cette chaîne est ajoutée dans la fonction à sa _création_.\n\nNotons ce point important : `[[Scope]]` est ajoutée lors de la _création_ de manière statique une seule fois jusqu'à ce que celle-ci soit détruite. Une fonction peut _ne jamais être appelée_ (activée), mais la propriété `[[Scope]]` est _déjà écrite et stockée_ dans la fonction.\n\nPrenons maintenant un moment pour considérer notre propriété `[[Scope]]` qui contrairement à la propriété `Scope` (la chaîne des portées) est une propriété inaccessible de la fonction elle-même et non du contexte :\n\n*Pseudo-code*\n\n```js\nfoo.[[Scope]] = [\n    VO(globalContext) // === GO\n]\n```\n\nPar la suite, lors de l'appel de la fonction, nous entrons dans le contexte d'exécution de celle-ci. Alors l'_objet d'activation_ est créé puis `this` et `Scope` (la chaîne des portées) sont déterminés. Voyons ça plus en détail.\n\n\n\n### Activation de la fonction\n\nComme dit dans la définition, lors de la phase d'entrée dans le contexte, après la création de l'objet d'activation (c-à-d l'objet des variables), la propriété `Scope` du contexte d'exécution (qui est la chaîne des portées pour trouver en amont les variables) est définie comme suit :\n\n*Pseudo-code*\n\n```js\nScope = AO + [[Scope]]\n```\n\nOn voit ici que l'objet d'activation est le _premier_ élément du tableau de `Scope`, c-à-d qu'il est ajouté en amont de la chaîne des portées :\n\n*Pseudo-code*\n\n```js\nScope = [AO].concat([[Scope]])\n```\n\nCette fonctionnalité est très importante pour la _résolution d'identifiant_.\n\nLa _résolution d'identifiant_ est un processus qui détermine à quel objet des variables, dans la chaîne des portées, une variable (ou une déclaration de fonction) appartient.\n\nEn retour de cet algorithme nous avons toujours une valeur de type `Reference` dont la _base_ est l'objet des variables correspondant (ou `null` si la variable n'est pas trouvée) et ou le _nom de propriété_ est le nom de l'identifiant trouvé. Le type `Reference` est discuté plus en détail dans le [chapitre 3](https://blog.lesieur.name/la-valeur-de-this/).\n\nLe processus de résolution d'identifiant inclut une vérification en amont des propriétés correspondantes au nom de la variable, c-à-d qu'il y a une examination consécutive de chaque objet des variables à travers la chaîne des portées en commençant par le contexte du sommet de la pile en descendant jusqu'au plus profond (en commençant donc par `AO` puis en continuant dans `[[Scope]]`).\n\nAinsi, les variables locales du contexte d'exécution on une plus haute priorité que les variables en provenance des contextes d'exécution parents. Dans le cas où deux variables de même nom (mais de contexte différent) existe, c'est la première valeur trouvée (celle la plus haute dans la pile) qui est utilisée pour la résolution.\n\nCompliquons un peu l'exemple précédent et ajoutons de nouveaux niveaux de fonctions internes :\n\n*Code JavaScript*\n\n```js\nvar x = 10;\n  \nfunction foo() {\n  \n    var y = 20;\n  \n    function bar() {\n        var z = 30;\n        alert(x +  y + z);\n    }\n  \n    bar();\n}\n  \nfoo(); // `60`\n```\n\nPour cet exemple voici ci-dessous les _objets des variables_ (_objet global_ et _objets d'activation_) associés ainsi que les propriétés `[[Scope]]` des fonctions et leurs _chaînes des portées_ des contextes : \n\nL'_objet des variables_ du contexte global est :\n\n*Pseudo-code*\n\n```js\nVO(globalContext) === GO = {\n    x: 10\n    foo: <référence à la `FD`>\n}\n```\n\nLors de la création de `foo`, la propriété `[[Scope]]` de `foo` est :\n\n*Pseudo-code*\n\n```js\nfoo.[[Scope]] = [\n    GO\n]\n```\n\nLors de l'appel de la fonction `foo`, l'_objet d'activation_ du contexte de `foo` est :\n\n*Pseudo-code*\n\n```js\nVO(<foo> functionContext) === AO(<foo>) = {\n    y: 20,\n    bar: <référence à la `FD`>\n}\n```\n\nEt la _chaîne des portées_ du contexte de `foo` est :\n\n*Pseudo-code*\n\n```js\nScope(<foo> functionContext) = AO(<foo>) + foo.[[Scope]]\n```\n\nc-à-d\n\n*Pseudo-code*\n\n```js\nScope(<foo> functionContext) = [\n    AO(<foo>),\n    GO\n]\n```\n\nLors de la création de la fonction interne `bar`, la propriété `[[Scope]]` de `bar` est :\n\n*Pseudo-code*\n\n```js\nbar.[[Scope]] = [\n    AO(<foo>),\n    GO\n]\n```\n\nLors de l'appel de la fonction `bar`, l'_objet d'activation_ du contexte de `bar` est :\n\n*Pseudo-code*\n\n```js\nVO(<bar> functionContext) === AO(<bar>) = {\n    z: 30\n}\n```\n\nEt la _chaîne des portées_ du contexte de `bar` est :\n\n*Pseudo-code*\n\n```js\nScope(<bar> functionContext) = AO(<bar>) + bar.[[Scope]]\n```\n\nc-à-d\n\n*Pseudo-code*\n\n```js\nScope(<bar> functionContext) = [\n    AO(<bar>),\n    AO(<foo>),\n    GO\n]\n```\n\nEt les résolutions d'identifiants pour les noms `x`, `y` et `z` ce font comme suit :\n\n*Schéma*\n\n```js\n`x`\n └─ AO(<bar>) // pas trouvé\n    └─ AO(<foo>) // pas trouvé\n       └─ GO // `10` trouvé\n```\n\n*Pseudo-code*\n\n```js\n`y`\n └─ AO(<bar>) // pas trouvé\n    └─ AO(<foo>) `20` trouvé\n```\n\n*Pseudo-code*\n\n```js\n`y`\n └─ AO(<bar>) // `30` trouvé\n```\n\n\n\n\n\n## Les fonctionnalités des portées\n\nEntrons maintenant plus en détail dans des fonctionnalités importantes liées aux chaînes des portées et à la propriété `[[Scope]]` des fonctions.\n\n### Fermetures\n\nLes fermetures (« closures ») en JavaScript on un rapport directe avec la propriété `[[Scope]]` des fonctions. Comme nous l'avons déjà vu, `[[Scope]]` est ajoutée lors de la création de la fonction et existe jusqu'à ce qu'elle soit détruite. En fait, une _fermeture_ est la _combinaison entre le code d'une fonction et sa propriété `[[Scope]]`. Ainsi `[[Scope]]` contient l'_environnement lexical_ (les objets des variables des parents) quand sa fonction est _créée_. Les variables venant des contextes d'exécution plus bas dans la pile lors de l'activation (appel) des fonctions vont être cherchées dans la chaîne des portées (statiquement ajoutée lors de la création). \n\nExemple :\n\n*Code JavaScript*\n\n```js\nvar x = 10;\n \nfunction foo() {\n    alert(x);\n}\n \n(function () {\n    var x = 20;\n    foo(); // `10`, mais pas `20`\n})();\n```\n\nNous voyons que la variable `x` est trouvée dans le `[[Scope]]` de la fonction `foo`. Souvenons nous que pour la résolution de variables, nous utilisons la chaîne des portées qui a été créée au moment de la _création_, et qui n'est pas _dynamiquement_ mise à jour lors de l'_appel_ (sinon la valeur `x` aurait été résolue à `20`).\n\nUn autre exemple classique des fermetures :\n\n*Code JavaScript*\n\n```js\nfunction foo() {\n \n    var x = 10;\n    var y = 20;\n \n    return function () {\n        alert([x, y]);\n    };\n \n}\n \nvar x = 30;\n \nvar bar = foo(); // `function () { alert([x, y]); }`\n \nbar(); // `[10, 20]`\n```\n\nEncore une fois nous voyons que la résolution des identifiants dans la chaîne des portées (définie lors de la création) est utilisée — la variable `x` est résolue à `10` mais pas à `30`. De plus, nous voyons clairement que la propriété `[[Scope]]` de la fonction (dans ce cas celui d'une fonction anonyme retournée par la fonction `foo`) continue d'exister _même si le contexte depuis lequel la fonction a été créée est déjà terminé_.\n\nPlus de détails à propos du concept des fermetures dans les implémentations JavaScript seront donnés dans le [chapitre 6](https://blog.lesieur.name/les-fermetures/).\n\n\n\n### `[[Scope]]` des fonctions créées par le constructeur `Function`\n\nÀ la création d'une fonction la propriété interne `[[Scope]]` est ajoutée et via cette propriété nous avons accès aux variables de tous les contextes parents. Cependant, il y a une exception importante à cette règle et elle concerne les fonctions créées via l'objet `Function`.\n\n*Code JavaScript*\n\n```js\nvar x = 10;\n  \nfunction foo() {\n  \n    var y = 20;\n  \n    function barFD() { // déclaration de fonction\n        alert(x);\n        alert(y);\n    }\n  \n    var barFE = function () { // expression de fonction\n        alert(x);\n        alert(y);\n    };\n  \n    var barFn = Function('alert(x); alert(y);');\n  \n    barFD(); // `10`, `20`\n    barFE(); // `10`, `20`\n    barFn(); // `10`, « erreur : `y` n'est pas définie »\n  \n}\n  \nfoo();\n```\n\nComme nous pouvons le voir avec la fonction `barFn`, qui est créée via le constructeur `Function`, `y` n'est pas accessible. Mais cela ne veux pas dire que la fonction `barFn` n'a pas de propriété `[[Scope]]` interne (sinon elle n'aurait pas accès à `x`). Le point ici c'est que la propriété `[[Scope]]` d'une fonction créée via le constructeur `Function` contient _uniquement l'objet global_. Considérez donc que créer une fermeture de contexte parent (sauf pour le contexte global) via `Function` n'est pas possible.\n\n\n\n### Identification en amont en deux dimensions dans la chaîne des portées\n\nIl y a un autre point important pour la résolution d'identifiant en amont via la chaîne des portées. Ce sont les prototypes (s'il y en a) des objets des variables. Voici ce qu'on peut dire sur la nature prototypale du JavaScript : si une propriété n'est pas trouvée directement dans l'objet, la résolution d'identifiant en amont ce fait dans la _chaînes des prototypes_. C-à-d qu'il y a une sorte de vérification en 2 dimensions : (1) à travers la chaîne des portées, (2) et sur chaque portée de la chaîne, à travers la chaîne des prototypes. Nous pouvons observer cet effet si nous définissons une propriété dans `Object.prototype` :\n\n\n*Code JavaScript*\n\n```js\nfunction foo() {\n    alert(x);\n}\n  \nObject.prototype.x = 10;\n  \nfoo(); // `10`\n```\n\nLes objets d'activation n'ont pas de prototype comme nous pouvons le voir dans l'exemple suivant :\n\n*Code JavaScript*\n\n```js\nfunction foo() {\n  \n    var x = 20;\n  \n    function bar() {\n        alert(x);\n    }\n  \n    bar();\n}\n  \nObject.prototype.x = 10;\n  \nfoo(); // `20`\n```\n\nSi l'objet d'activation du contexte de la fonction `bar` avait un prototype, alors la propriété `x` aurait été trouvée dans `Object.prototype` car elle n'est pas trouvée directement dans l'objet d'activation. Par contre, dans le premier exemple au dessus, en traversant la chaîne des portées pour la résolution d'identifiant, nous trouvons `x` car l'objet global (dans beaucoup d'implémentation mais pas dans toutes) hérite bien de l'objet `Object.prototype` et, par conséquent, `x` est résolue à `10`.\n\nUne situation similaire peut être observée dans plusieurs versions de SpiderMonkey (Netscape ou Mozilla Firefox) avec les _expressions de fonctions nommées (dont la forme abrégée sera `NFE` pour « named function expressions »)_, où un objet spécial d'activation qui enregistre le nom optionnel des expressions de fonction nommées hérite de `Object.prototype`. C'est aussi le cas dans des versions de l'implémentation _Blackberry_ ou les objets d'activation héritent de `Object.prototype`. Mais ces fonctionnalités seront vu plus en détail dans le [chapitre 5](https://blog.lesieur.name/les-fonctions/).\n\n\n\n### Chaîne des portées des contextes global et de `eval`\n\nIci il n'y a rien de bien intéressant, mais il est nécessaire de le préciser. Il y a aussi une chaîne des portées pour le contexte global mais elle contient _seulement l'objet global_. Les contextes de `eval` on la même chaîne des portées que le contexte appelant.\n\n*Pseudo-code*\n\n```js\nScope(globalContext) = [\n    GO\n]\n```\n\net\n\n*Pseudo-code*\n\n```js\nScope(evalContext) === Scope(callingContext)\n```\n\n\n\n### Affectation de la chaîne des portées lors de l'exécution du code\n\nEn JavaScript il y a deux instructions qui peuvent modifier la chaîne des portées pendant la phase d'exécution du code. Ce sont les structures de contrôle `with` et `catch`. Tous les deux ajoutent en amont de la chaîne des portées l'objet nécessaire à la résolution des identifiants apparaissant à l'intérieur de ces instructions. C-à-d que si l'un de ces deux cas de figure intervient, la chaîne des portées est augmentée ainsi :\n\n*Pseudo-code*\n\n```js\nScope = __withObject + VO + [[Scope]]\n```\n\nou\n\n*Pseudo-code*\n\n```js\nScope = __catchObject + VO + [[Scope]]\n```\n\nLa structure de contrôle `with`, dans ce cas, ajoute l'objet qui est en paramètre (et les propriétés de cet objet deviennent accessibles sans préfixe) :\n\n*Code JavaScript*\n\n```js\nvar foo = { x: 10, y: 20 };\n  \nwith (foo) {\n    alert(x); // `10`\n    alert(y); // `20`\n}\n```\n\nc-à-d\n\n*Pseudo-code*\n\n```js\nScope = foo + VO + [[Scope]]\n```\n\nMontrons une autre fois comment la résolution d'identifiant s'effectue dans l'objet ajouté par la structure de contrôle `with` en amont de la chaîne des portées :\n\n*Code JavaScript*\n\n```js\nvar x = 10, y = 10;\n  \nwith ({ x: 20 }) {\n  \n    var x = 30, y = 30;\n  \n    alert(x); // `30`\n    alert(y); // `30`\n}\n  \nalert(x); // `10`\nalert(y); // `30`\n```\n\nQu'est-ce qu'il c'est passé ici ? Lors de la phase d'entrée dans le contexte, les identifiants `x` et `y` sont ajoutés dans l'objet des variables. Plus tard, elle sont déjà présente lors de la phase d'exécution du code, et les modifications suivantes sont faites :\n\n1. `x = 10`, `y = 10`,\n2. l'objet `{ x: 20 }` est ajouté en amont de la chaîne des portées,\n3. la rencontre du mot-clé `var` dans `with` ne fait rien car toutes les variables ont été évaluée lors de la phase d'entrée dans le contexte,\n4. il n'y a que la modification de la valeur de `x` qui intervient, et `x` sera trouvée maintenant dans l'objet ajouté en amont de la chaîne des portées à l'étape 2. La valeur de `x` était `20` et devient `30`,\n5. il y a aussi une modification de `y` qui est résolue depuis l'objet des variables initial et donc, qui de `10` devient `30`,\n6. quand la structure de contrôle `with` a finie d'être exécutée, son objet spécial est retiré de la chaîne des portées (et la valeur modifiée `x` est supprimée avec cet objet). C-à-d que la structure initiale de la chaîne des portées est restaurée à son état initial d'avant l'augmentation de `with`,\n7. et comme nous pouvons le voir dans les deux dernières alertes : la valeur de `x` de l'objet des variables courant reste le même et la valeur de `y` est maintenant égal à `30` tel qu'elle a été changée dans la structure de contrôle `with`.\n\nC'est la même chose avec la structure de contrôle `catch` qui, dans le but d'avoir accès au paramètre d'exception, créé un objet de portées intermédiaire avec une unique propriété — le nom du paramètre d’exception. Cet objet est placé en amont de la chaîne des portées. Ce qui donne\n\n*Code JavaScript*\n\n```js\ntry {\n    /* ... */\n} catch (ex) {\n    alert(ex);\n}\n```\n\nla modification de chaîne des portées suivante :\n\n*Pseudo-code*\n\n```js\ncatchObject = {\n    ex: <objet de l'exeption>\n}\n  \nScope = catchObject + VO + [[Scope]]\n```\n\nQuand le travail de la structure de contrôle `catch` est finie, la chaîne des portées est aussi restaurée à son état premier.\n\n\n\n\n\n## Conclusion\n\nÀ ce niveau, nous avons vu tous les concepts généraux concernant les contextes d'exécution et les détails associés. Nous allons maintenant entrer dans une analyse détaillée des fonctions comme leurs types (déclaration de fonction ou expression de fonction) et les _fermetures_.\n\n> <div style=\"float: left;\">[<< Chapitre 3](https://blog.lesieur.name/la-valeur-de-this/)</div><div style=\"text-align: right\">[Chapitre 5 >>](https://blog.lesieur.name/les-fonctions/)</div>\n\n**Références**\n\nSection correspondante de la spécification ECMA-262-3 :\n\n- [8.6.2 – [[Scope]]](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [10.1.4 – Scope Chain and Identifier Resolution](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n\nCe texte est une libre adaptation française de l’excellent billet [Тонкости ECMA-262-3. Часть 4. Цепь областей видимости.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-4-scope-chain/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).", "dates" : { "published" : { "$date" : 1490962860000 }, "updated" : [] }, "others" : { "markdown" : true, "published" : true }, "script" : "", "stylesheet" : "", "title" : "ES3, Chap 4. — La chaîne des portées en JavaScript", "urn" : "la-chaine-des-portees" }
